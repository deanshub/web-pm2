/******/ (function (modules) {
  // webpackBootstrap
  /******/ // install a JSONP callback for chunk loading
  /******/ var parentJsonpFunction = window['webpackJsonp'];
  /******/ window['webpackJsonp'] = function webpackJsonpCallback(
    chunkIds,
    moreModules,
  ) {
    /******/ // add "moreModules" to the modules object,
    /******/ // then flag all "chunkIds" as loaded and fire callback
    /******/ var moduleId,
      chunkId,
      i = 0,
      callbacks = [];
    /******/ for (; i < chunkIds.length; i++) {
      /******/ chunkId = chunkIds[i];
      /******/ if (installedChunks[chunkId])
        /******/ callbacks.push.apply(callbacks, installedChunks[chunkId]);
      /******/ installedChunks[chunkId] = 0;
      /******/
    }
    /******/ for (moduleId in moreModules) {
      /******/ modules[moduleId] = moreModules[moduleId];
      /******/
    }
    /******/ if (parentJsonpFunction)
      parentJsonpFunction(chunkIds, moreModules);
    /******/ while (callbacks.length)
      /******/ callbacks.shift().call(null, __webpack_require__);
    /******/ if (moreModules[0]) {
      /******/ installedModules[0] = 0;
      /******/ return __webpack_require__(0);
      /******/
    }
    /******/
  }; // The module cache

  /******/ /******/ var installedModules = {}; // object to store loaded and loading chunks // "0" means "already loaded" // Array means "loading", array contains callbacks

  /******/ /******/ /******/ /******/ var installedChunks = {
    /******/ 2: 0,
    /******/
  }; // The require function

  /******/ /******/ function __webpack_require__(moduleId) {
    /******/ // Check if module is in cache
    /******/ if (installedModules[moduleId])
      /******/ return installedModules[moduleId].exports; // Create a new module (and put it into the cache)

    /******/ /******/ var module = (installedModules[moduleId] = {
      /******/ exports: {},
      /******/ id: moduleId,
      /******/ loaded: false,
      /******/
    }); // Execute the module function

    /******/ /******/ modules[moduleId].call(
      module.exports,
      module,
      module.exports,
      __webpack_require__,
    ); // Flag the module as loaded

    /******/ /******/ module.loaded = true; // Return the exports of the module

    /******/ /******/ return module.exports;
    /******/
  } // This file contains only the entry chunk. // The chunk loading function for additional chunks

  /******/ /******/ /******/ __webpack_require__.e = function requireEnsure(
    chunkId,
    callback,
  ) {
    /******/ // "0" is the signal for "already loaded"
    /******/ if (installedChunks[chunkId] === 0)
      /******/ return callback.call(null, __webpack_require__); // an array means "currently loading".

    /******/ /******/ if (installedChunks[chunkId] !== undefined) {
      /******/ installedChunks[chunkId].push(callback);
      /******/
    } else {
      /******/ // start chunk loading
      /******/ installedChunks[chunkId] = [callback];
      /******/ var head = document.getElementsByTagName('head')[0];
      /******/ var script = document.createElement('script');
      /******/ script.type = 'text/javascript';
      /******/ script.charset = 'utf-8';
      /******/ script.async = true;

      /******/ script.src = __webpack_require__.p + '' + chunkId + '.bundle.js';
      /******/ head.appendChild(script);
      /******/
    }
    /******/
  }; // expose the modules object (__webpack_modules__)

  /******/ /******/ __webpack_require__.m = modules; // expose the module cache

  /******/ /******/ __webpack_require__.c = installedModules; // __webpack_public_path__

  /******/ /******/ __webpack_require__.p = ''; // Load entry module and return exports

  /******/ /******/ return __webpack_require__(0);
  /******/
})(
  /************************************************************************/
  /******/ [
    /* 0 */
    /***/ function (module, exports, __webpack_require__) {
      __webpack_require__(3);
      __webpack_require__(130);
      __webpack_require__(102);
      __webpack_require__(1);
      __webpack_require__(97);
      __webpack_require__(530);
      __webpack_require__(109);
      __webpack_require__(529);
      __webpack_require__(536);
      module.exports = __webpack_require__(816);

      /***/
    },
    /* 1 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.createMemoryHistory = exports.hashHistory = exports.browserHistory = exports.applyRouterMiddleware = exports.formatPattern = exports.useRouterHistory = exports.match = exports.routerShape = exports.locationShape = exports.PropTypes = exports.RoutingContext = exports.RouterContext = exports.createRoutes = exports.useRoutes = exports.RouteContext = exports.Lifecycle = exports.History = exports.Route = exports.Redirect = exports.IndexRoute = exports.IndexRedirect = exports.withRouter = exports.IndexLink = exports.Link = exports.Router = undefined;

      var _RouteUtils = __webpack_require__(2);

      Object.defineProperty(exports, 'createRoutes', {
        enumerable: true,
        get: function get() {
          return _RouteUtils.createRoutes;
        },
      });

      var _PropTypes2 = __webpack_require__(36);

      Object.defineProperty(exports, 'locationShape', {
        enumerable: true,
        get: function get() {
          return _PropTypes2.locationShape;
        },
      });
      Object.defineProperty(exports, 'routerShape', {
        enumerable: true,
        get: function get() {
          return _PropTypes2.routerShape;
        },
      });

      var _PatternUtils = __webpack_require__(41);

      Object.defineProperty(exports, 'formatPattern', {
        enumerable: true,
        get: function get() {
          return _PatternUtils.formatPattern;
        },
      });

      var _Router2 = __webpack_require__(43);

      var _Router3 = _interopRequireDefault(_Router2);

      var _Link2 = __webpack_require__(74);

      var _Link3 = _interopRequireDefault(_Link2);

      var _IndexLink2 = __webpack_require__(75);

      var _IndexLink3 = _interopRequireDefault(_IndexLink2);

      var _withRouter2 = __webpack_require__(76);

      var _withRouter3 = _interopRequireDefault(_withRouter2);

      var _IndexRedirect2 = __webpack_require__(78);

      var _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);

      var _IndexRoute2 = __webpack_require__(80);

      var _IndexRoute3 = _interopRequireDefault(_IndexRoute2);

      var _Redirect2 = __webpack_require__(79);

      var _Redirect3 = _interopRequireDefault(_Redirect2);

      var _Route2 = __webpack_require__(81);

      var _Route3 = _interopRequireDefault(_Route2);

      var _History2 = __webpack_require__(82);

      var _History3 = _interopRequireDefault(_History2);

      var _Lifecycle2 = __webpack_require__(83);

      var _Lifecycle3 = _interopRequireDefault(_Lifecycle2);

      var _RouteContext2 = __webpack_require__(84);

      var _RouteContext3 = _interopRequireDefault(_RouteContext2);

      var _useRoutes2 = __webpack_require__(85);

      var _useRoutes3 = _interopRequireDefault(_useRoutes2);

      var _RouterContext2 = __webpack_require__(71);

      var _RouterContext3 = _interopRequireDefault(_RouterContext2);

      var _RoutingContext2 = __webpack_require__(86);

      var _RoutingContext3 = _interopRequireDefault(_RoutingContext2);

      var _PropTypes3 = _interopRequireDefault(_PropTypes2);

      var _match2 = __webpack_require__(87);

      var _match3 = _interopRequireDefault(_match2);

      var _useRouterHistory2 = __webpack_require__(91);

      var _useRouterHistory3 = _interopRequireDefault(_useRouterHistory2);

      var _applyRouterMiddleware2 = __webpack_require__(92);

      var _applyRouterMiddleware3 = _interopRequireDefault(
        _applyRouterMiddleware2,
      );

      var _browserHistory2 = __webpack_require__(93);

      var _browserHistory3 = _interopRequireDefault(_browserHistory2);

      var _hashHistory2 = __webpack_require__(96);

      var _hashHistory3 = _interopRequireDefault(_hashHistory2);

      var _createMemoryHistory2 = __webpack_require__(88);

      var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.Router = _Router3.default; /* components */

      exports.Link = _Link3.default;
      exports.IndexLink = _IndexLink3.default;
      exports.withRouter = _withRouter3.default;

      /* components (configuration) */

      exports.IndexRedirect = _IndexRedirect3.default;
      exports.IndexRoute = _IndexRoute3.default;
      exports.Redirect = _Redirect3.default;
      exports.Route = _Route3.default;

      /* mixins */

      exports.History = _History3.default;
      exports.Lifecycle = _Lifecycle3.default;
      exports.RouteContext = _RouteContext3.default;

      /* utils */

      exports.useRoutes = _useRoutes3.default;
      exports.RouterContext = _RouterContext3.default;
      exports.RoutingContext = _RoutingContext3.default;
      exports.PropTypes = _PropTypes3.default;
      exports.match = _match3.default;
      exports.useRouterHistory = _useRouterHistory3.default;
      exports.applyRouterMiddleware = _applyRouterMiddleware3.default;

      /* histories */

      exports.browserHistory = _browserHistory3.default;
      exports.hashHistory = _hashHistory3.default;
      exports.createMemoryHistory = _createMemoryHistory3.default;

      /***/
    },
    /* 2 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      exports.isReactChildren = isReactChildren;
      exports.createRouteFromReactElement = createRouteFromReactElement;
      exports.createRoutesFromReactChildren = createRoutesFromReactChildren;
      exports.createRoutes = createRoutes;

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function isValidChild(object) {
        return object == null || _react2.default.isValidElement(object);
      }

      function isReactChildren(object) {
        return (
          isValidChild(object) ||
          (Array.isArray(object) && object.every(isValidChild))
        );
      }

      function createRoute(defaultProps, props) {
        return _extends({}, defaultProps, props);
      }

      function createRouteFromReactElement(element) {
        var type = element.type;
        var route = createRoute(type.defaultProps, element.props);

        if (route.children) {
          var childRoutes = createRoutesFromReactChildren(
            route.children,
            route,
          );

          if (childRoutes.length) route.childRoutes = childRoutes;

          delete route.children;
        }

        return route;
      }

      /**
       * Creates and returns a routes object from the given ReactChildren. JSX
       * provides a convenient way to visualize how routes in the hierarchy are
       * nested.
       *
       *   import { Route, createRoutesFromReactChildren } from 'react-router'
       *
       *   const routes = createRoutesFromReactChildren(
       *     <Route component={App}>
       *       <Route path="home" component={Dashboard}/>
       *       <Route path="news" component={NewsFeed}/>
       *     </Route>
       *   )
       *
       * Note: This method is automatically used when you provide <Route> children
       * to a <Router> component.
       */
      function createRoutesFromReactChildren(children, parentRoute) {
        var routes = [];

        _react2.default.Children.forEach(children, function (element) {
          if (_react2.default.isValidElement(element)) {
            // Component classes may have a static create* method.
            if (element.type.createRouteFromReactElement) {
              var route = element.type.createRouteFromReactElement(
                element,
                parentRoute,
              );

              if (route) routes.push(route);
            } else {
              routes.push(createRouteFromReactElement(element));
            }
          }
        });

        return routes;
      }

      /**
       * Creates and returns an array of routes from the given object which
       * may be a JSX route, a plain object route, or an array of either.
       */
      function createRoutes(routes) {
        if (isReactChildren(routes)) {
          routes = createRoutesFromReactChildren(routes);
        } else if (routes && !Array.isArray(routes)) {
          routes = [routes];
        }

        return routes;
      }

      /***/
    },
    /* 3 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      module.exports = __webpack_require__(4);

      /***/
    },
    /* 4 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule React
       */

      'use strict';

      var _assign = __webpack_require__(5);

      var ReactChildren = __webpack_require__(6);
      var ReactComponent = __webpack_require__(18);
      var ReactPureComponent = __webpack_require__(21);
      var ReactClass = __webpack_require__(22);
      var ReactDOMFactories = __webpack_require__(27);
      var ReactElement = __webpack_require__(10);
      var ReactPropTypes = __webpack_require__(33);
      var ReactVersion = __webpack_require__(34);

      var onlyChild = __webpack_require__(35);
      var warning = __webpack_require__(12);

      var createElement = ReactElement.createElement;
      var createFactory = ReactElement.createFactory;
      var cloneElement = ReactElement.cloneElement;

      if (true) {
        var ReactElementValidator = __webpack_require__(28);
        createElement = ReactElementValidator.createElement;
        createFactory = ReactElementValidator.createFactory;
        cloneElement = ReactElementValidator.cloneElement;
      }

      var __spread = _assign;

      if (true) {
        var warned = false;
        __spread = function () {
          true
            ? warning(
                warned,
                'React.__spread is deprecated and should not be used. Use ' +
                  'Object.assign directly or another helper function with similar ' +
                  'semantics. You may be seeing this warning due to your compiler. ' +
                  'See https://fb.me/react-spread-deprecation for more details.',
              )
            : void 0;
          warned = true;
          return _assign.apply(null, arguments);
        };
      }

      var React = {
        // Modern

        Children: {
          map: ReactChildren.map,
          forEach: ReactChildren.forEach,
          count: ReactChildren.count,
          toArray: ReactChildren.toArray,
          only: onlyChild,
        },

        Component: ReactComponent,
        PureComponent: ReactPureComponent,

        createElement: createElement,
        cloneElement: cloneElement,
        isValidElement: ReactElement.isValidElement,

        // Classic

        PropTypes: ReactPropTypes,
        createClass: ReactClass.createClass,
        createFactory: createFactory,
        createMixin: function (mixin) {
          // Currently a noop. Will be used to validate and trace mixins.
          return mixin;
        },

        // This looks DOM specific but these are actually isomorphic helpers
        // since they are just generating DOM strings.
        DOM: ReactDOMFactories,

        version: ReactVersion,

        // Deprecated hook for JSX spread, don't use this for anything.
        __spread: __spread,
      };

      module.exports = React;

      /***/
    },
    /* 5 */
    /***/ function (module, exports) {
      'use strict';
      /* eslint-disable no-unused-vars */
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      var propIsEnumerable = Object.prototype.propertyIsEnumerable;

      function toObject(val) {
        if (val === null || val === undefined) {
          throw new TypeError(
            'Object.assign cannot be called with null or undefined',
          );
        }

        return Object(val);
      }

      function shouldUseNative() {
        try {
          if (!Object.assign) {
            return false;
          }

          // Detect buggy property enumeration order in older V8 versions.

          // https://bugs.chromium.org/p/v8/issues/detail?id=4118
          var test1 = new String('abc'); // eslint-disable-line
          test1[5] = 'de';
          if (Object.getOwnPropertyNames(test1)[0] === '5') {
            return false;
          }

          // https://bugs.chromium.org/p/v8/issues/detail?id=3056
          var test2 = {};
          for (var i = 0; i < 10; i++) {
            test2['_' + String.fromCharCode(i)] = i;
          }
          var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
            return test2[n];
          });
          if (order2.join('') !== '0123456789') {
            return false;
          }

          // https://bugs.chromium.org/p/v8/issues/detail?id=3056
          var test3 = {};
          'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
            test3[letter] = letter;
          });
          if (
            Object.keys(Object.assign({}, test3)).join('') !==
            'abcdefghijklmnopqrst'
          ) {
            return false;
          }

          return true;
        } catch (e) {
          // We don't expect any of the above to throw, but better to be safe.
          return false;
        }
      }

      module.exports = shouldUseNative()
        ? Object.assign
        : function (target, source) {
            var from;
            var to = toObject(target);
            var symbols;

            for (var s = 1; s < arguments.length; s++) {
              from = Object(arguments[s]);

              for (var key in from) {
                if (hasOwnProperty.call(from, key)) {
                  to[key] = from[key];
                }
              }

              if (Object.getOwnPropertySymbols) {
                symbols = Object.getOwnPropertySymbols(from);
                for (var i = 0; i < symbols.length; i++) {
                  if (propIsEnumerable.call(from, symbols[i])) {
                    to[symbols[i]] = from[symbols[i]];
                  }
                }
              }
            }

            return to;
          };

      /***/
    },
    /* 6 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactChildren
       */

      'use strict';

      var PooledClass = __webpack_require__(7);
      var ReactElement = __webpack_require__(10);

      var emptyFunction = __webpack_require__(13);
      var traverseAllChildren = __webpack_require__(15);

      var twoArgumentPooler = PooledClass.twoArgumentPooler;
      var fourArgumentPooler = PooledClass.fourArgumentPooler;

      var userProvidedKeyEscapeRegex = /\/+/g;
      function escapeUserProvidedKey(text) {
        return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
      }

      /**
       * PooledClass representing the bookkeeping associated with performing a child
       * traversal. Allows avoiding binding callbacks.
       *
       * @constructor ForEachBookKeeping
       * @param {!function} forEachFunction Function to perform traversal with.
       * @param {?*} forEachContext Context to perform context with.
       */
      function ForEachBookKeeping(forEachFunction, forEachContext) {
        this.func = forEachFunction;
        this.context = forEachContext;
        this.count = 0;
      }
      ForEachBookKeeping.prototype.destructor = function () {
        this.func = null;
        this.context = null;
        this.count = 0;
      };
      PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

      function forEachSingleChild(bookKeeping, child, name) {
        var func = bookKeeping.func;
        var context = bookKeeping.context;

        func.call(context, child, bookKeeping.count++);
      }

      /**
       * Iterates through children that are typically specified as `props.children`.
       *
       * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
       *
       * The provided forEachFunc(child, index) will be called for each
       * leaf child.
       *
       * @param {?*} children Children tree container.
       * @param {function(*, int)} forEachFunc
       * @param {*} forEachContext Context for forEachContext.
       */
      function forEachChildren(children, forEachFunc, forEachContext) {
        if (children == null) {
          return children;
        }
        var traverseContext = ForEachBookKeeping.getPooled(
          forEachFunc,
          forEachContext,
        );
        traverseAllChildren(children, forEachSingleChild, traverseContext);
        ForEachBookKeeping.release(traverseContext);
      }

      /**
       * PooledClass representing the bookkeeping associated with performing a child
       * mapping. Allows avoiding binding callbacks.
       *
       * @constructor MapBookKeeping
       * @param {!*} mapResult Object containing the ordered map of results.
       * @param {!function} mapFunction Function to perform mapping with.
       * @param {?*} mapContext Context to perform mapping with.
       */
      function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
        this.result = mapResult;
        this.keyPrefix = keyPrefix;
        this.func = mapFunction;
        this.context = mapContext;
        this.count = 0;
      }
      MapBookKeeping.prototype.destructor = function () {
        this.result = null;
        this.keyPrefix = null;
        this.func = null;
        this.context = null;
        this.count = 0;
      };
      PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

      function mapSingleChildIntoContext(bookKeeping, child, childKey) {
        var result = bookKeeping.result;
        var keyPrefix = bookKeeping.keyPrefix;
        var func = bookKeeping.func;
        var context = bookKeeping.context;

        var mappedChild = func.call(context, child, bookKeeping.count++);
        if (Array.isArray(mappedChild)) {
          mapIntoWithKeyPrefixInternal(
            mappedChild,
            result,
            childKey,
            emptyFunction.thatReturnsArgument,
          );
        } else if (mappedChild != null) {
          if (ReactElement.isValidElement(mappedChild)) {
            mappedChild = ReactElement.cloneAndReplaceKey(
              mappedChild,
              // Keep both the (mapped) and old keys if they differ, just as
              // traverseAllChildren used to do for objects as children
              keyPrefix +
                (mappedChild.key && (!child || child.key !== mappedChild.key)
                  ? escapeUserProvidedKey(mappedChild.key) + '/'
                  : '') +
                childKey,
            );
          }
          result.push(mappedChild);
        }
      }

      function mapIntoWithKeyPrefixInternal(
        children,
        array,
        prefix,
        func,
        context,
      ) {
        var escapedPrefix = '';
        if (prefix != null) {
          escapedPrefix = escapeUserProvidedKey(prefix) + '/';
        }
        var traverseContext = MapBookKeeping.getPooled(
          array,
          escapedPrefix,
          func,
          context,
        );
        traverseAllChildren(
          children,
          mapSingleChildIntoContext,
          traverseContext,
        );
        MapBookKeeping.release(traverseContext);
      }

      /**
       * Maps children that are typically specified as `props.children`.
       *
       * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
       *
       * The provided mapFunction(child, key, index) will be called for each
       * leaf child.
       *
       * @param {?*} children Children tree container.
       * @param {function(*, int)} func The map function.
       * @param {*} context Context for mapFunction.
       * @return {object} Object containing the ordered map of results.
       */
      function mapChildren(children, func, context) {
        if (children == null) {
          return children;
        }
        var result = [];
        mapIntoWithKeyPrefixInternal(children, result, null, func, context);
        return result;
      }

      function forEachSingleChildDummy(traverseContext, child, name) {
        return null;
      }

      /**
       * Count the number of children that are typically specified as
       * `props.children`.
       *
       * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
       *
       * @param {?*} children Children tree container.
       * @return {number} The number of children.
       */
      function countChildren(children, context) {
        return traverseAllChildren(children, forEachSingleChildDummy, null);
      }

      /**
       * Flatten a children object (typically specified as `props.children`) and
       * return an array with appropriately re-keyed children.
       *
       * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
       */
      function toArray(children) {
        var result = [];
        mapIntoWithKeyPrefixInternal(
          children,
          result,
          null,
          emptyFunction.thatReturnsArgument,
        );
        return result;
      }

      var ReactChildren = {
        forEach: forEachChildren,
        map: mapChildren,
        mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
        count: countChildren,
        toArray: toArray,
      };

      module.exports = ReactChildren;

      /***/
    },
    /* 7 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule PooledClass
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var invariant = __webpack_require__(9);

      /**
       * Static poolers. Several custom versions for each potential number of
       * arguments. A completely generic pooler is easy to implement, but would
       * require accessing the `arguments` object. In each of these, `this` refers to
       * the Class itself, not an instance. If any others are needed, simply add them
       * here, or in their own files.
       */
      var oneArgumentPooler = function (copyFieldsFrom) {
        var Klass = this;
        if (Klass.instancePool.length) {
          var instance = Klass.instancePool.pop();
          Klass.call(instance, copyFieldsFrom);
          return instance;
        } else {
          return new Klass(copyFieldsFrom);
        }
      };

      var twoArgumentPooler = function (a1, a2) {
        var Klass = this;
        if (Klass.instancePool.length) {
          var instance = Klass.instancePool.pop();
          Klass.call(instance, a1, a2);
          return instance;
        } else {
          return new Klass(a1, a2);
        }
      };

      var threeArgumentPooler = function (a1, a2, a3) {
        var Klass = this;
        if (Klass.instancePool.length) {
          var instance = Klass.instancePool.pop();
          Klass.call(instance, a1, a2, a3);
          return instance;
        } else {
          return new Klass(a1, a2, a3);
        }
      };

      var fourArgumentPooler = function (a1, a2, a3, a4) {
        var Klass = this;
        if (Klass.instancePool.length) {
          var instance = Klass.instancePool.pop();
          Klass.call(instance, a1, a2, a3, a4);
          return instance;
        } else {
          return new Klass(a1, a2, a3, a4);
        }
      };

      var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
        var Klass = this;
        if (Klass.instancePool.length) {
          var instance = Klass.instancePool.pop();
          Klass.call(instance, a1, a2, a3, a4, a5);
          return instance;
        } else {
          return new Klass(a1, a2, a3, a4, a5);
        }
      };

      var standardReleaser = function (instance) {
        var Klass = this;
        !(instance instanceof Klass)
          ? true
            ? invariant(
                false,
                'Trying to release an instance into a pool of a different type.',
              )
            : _prodInvariant('25')
          : void 0;
        instance.destructor();
        if (Klass.instancePool.length < Klass.poolSize) {
          Klass.instancePool.push(instance);
        }
      };

      var DEFAULT_POOL_SIZE = 10;
      var DEFAULT_POOLER = oneArgumentPooler;

      /**
       * Augments `CopyConstructor` to be a poolable class, augmenting only the class
       * itself (statically) not adding any prototypical fields. Any CopyConstructor
       * you give this may have a `poolSize` property, and will look for a
       * prototypical `destructor` on instances.
       *
       * @param {Function} CopyConstructor Constructor that can be used to reset.
       * @param {Function} pooler Customizable pooler.
       */
      var addPoolingTo = function (CopyConstructor, pooler) {
        var NewKlass = CopyConstructor;
        NewKlass.instancePool = [];
        NewKlass.getPooled = pooler || DEFAULT_POOLER;
        if (!NewKlass.poolSize) {
          NewKlass.poolSize = DEFAULT_POOL_SIZE;
        }
        NewKlass.release = standardReleaser;
        return NewKlass;
      };

      var PooledClass = {
        addPoolingTo: addPoolingTo,
        oneArgumentPooler: oneArgumentPooler,
        twoArgumentPooler: twoArgumentPooler,
        threeArgumentPooler: threeArgumentPooler,
        fourArgumentPooler: fourArgumentPooler,
        fiveArgumentPooler: fiveArgumentPooler,
      };

      module.exports = PooledClass;

      /***/
    },
    /* 8 */
    /***/ function (module, exports) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule reactProdInvariant
       *
       */
      'use strict';

      /**
       * WARNING: DO NOT manually require this module.
       * This is a replacement for `invariant(...)` used by the error code system
       * and will _only_ be required by the corresponding babel pass.
       * It always throws.
       */

      function reactProdInvariant(code) {
        var argCount = arguments.length - 1;

        var message =
          'Minified React error #' +
          code +
          '; visit ' +
          'http://facebook.github.io/react/docs/error-decoder.html?invariant=' +
          code;

        for (var argIdx = 0; argIdx < argCount; argIdx++) {
          message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
        }

        message +=
          ' for the full message or use the non-minified dev environment' +
          ' for full errors and additional helpful warnings.';

        var error = new Error(message);
        error.name = 'Invariant Violation';
        error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

        throw error;
      }

      module.exports = reactProdInvariant;

      /***/
    },
    /* 9 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      'use strict';

      /**
       * Use invariant() to assert state which your program assumes to be true.
       *
       * Provide sprintf-style format (only %s is supported) and arguments
       * to provide information about what broke and what you were
       * expecting.
       *
       * The invariant message will be stripped in production, but the invariant
       * will remain to ensure logic does not differ in production.
       */

      function invariant(condition, format, a, b, c, d, e, f) {
        if (true) {
          if (format === undefined) {
            throw new Error('invariant requires an error message argument');
          }
        }

        if (!condition) {
          var error;
          if (format === undefined) {
            error = new Error(
              'Minified exception occurred; use the non-minified dev environment ' +
                'for the full error message and additional helpful warnings.',
            );
          } else {
            var args = [a, b, c, d, e, f];
            var argIndex = 0;
            error = new Error(
              format.replace(/%s/g, function () {
                return args[argIndex++];
              }),
            );
            error.name = 'Invariant Violation';
          }

          error.framesToPop = 1; // we don't care about invariant's own frame
          throw error;
        }
      }

      module.exports = invariant;

      /***/
    },
    /* 10 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2014-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactElement
       */

      'use strict';

      var _assign = __webpack_require__(5);

      var ReactCurrentOwner = __webpack_require__(11);

      var warning = __webpack_require__(12);
      var canDefineProperty = __webpack_require__(14);
      var hasOwnProperty = Object.prototype.hasOwnProperty;

      // The Symbol used to tag the ReactElement type. If there is no native Symbol
      // nor polyfill, then a plain number is used for performance.
      var REACT_ELEMENT_TYPE =
        (typeof Symbol === 'function' &&
          Symbol['for'] &&
          Symbol['for']('react.element')) ||
        0xeac7;

      var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true,
      };

      var specialPropKeyWarningShown, specialPropRefWarningShown;

      function hasValidRef(config) {
        if (true) {
          if (hasOwnProperty.call(config, 'ref')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
            if (getter && getter.isReactWarning) {
              return false;
            }
          }
        }
        return config.ref !== undefined;
      }

      function hasValidKey(config) {
        if (true) {
          if (hasOwnProperty.call(config, 'key')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
            if (getter && getter.isReactWarning) {
              return false;
            }
          }
        }
        return config.key !== undefined;
      }

      function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function () {
          if (!specialPropKeyWarningShown) {
            specialPropKeyWarningShown = true;
            true
              ? warning(
                  false,
                  '%s: `key` is not a prop. Trying to access it will result ' +
                    'in `undefined` being returned. If you need to access the same ' +
                    'value within the child component, you should pass it as a different ' +
                    'prop. (https://fb.me/react-special-props)',
                  displayName,
                )
              : void 0;
          }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, 'key', {
          get: warnAboutAccessingKey,
          configurable: true,
        });
      }

      function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function () {
          if (!specialPropRefWarningShown) {
            specialPropRefWarningShown = true;
            true
              ? warning(
                  false,
                  '%s: `ref` is not a prop. Trying to access it will result ' +
                    'in `undefined` being returned. If you need to access the same ' +
                    'value within the child component, you should pass it as a different ' +
                    'prop. (https://fb.me/react-special-props)',
                  displayName,
                )
              : void 0;
          }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, 'ref', {
          get: warnAboutAccessingRef,
          configurable: true,
        });
      }

      /**
       * Factory method to create a new React element. This no longer adheres to
       * the class pattern, so do not use new to call it. Also, no instanceof check
       * will work. Instead test $$typeof field against Symbol.for('react.element') to check
       * if something is a React Element.
       *
       * @param {*} type
       * @param {*} key
       * @param {string|object} ref
       * @param {*} self A *temporary* helper to detect places where `this` is
       * different from the `owner` when React.createElement is called, so that we
       * can warn. We want to get rid of owner and replace string `ref`s with arrow
       * functions, and as long as `this` and owner are the same, there will be no
       * change in behavior.
       * @param {*} source An annotation object (added by a transpiler or otherwise)
       * indicating filename, line number, and/or other information.
       * @param {*} owner
       * @param {*} props
       * @internal
       */
      var ReactElement = function (type, key, ref, self, source, owner, props) {
        var element = {
          // This tag allow us to uniquely identify this as a React Element
          $$typeof: REACT_ELEMENT_TYPE,

          // Built-in properties that belong on the element
          type: type,
          key: key,
          ref: ref,
          props: props,

          // Record the component responsible for creating this element.
          _owner: owner,
        };

        if (true) {
          // The validation flag is currently mutative. We put it on
          // an external backing store so that we can freeze the whole object.
          // This can be replaced with a WeakMap once they are implemented in
          // commonly used development environments.
          element._store = {};
          var shadowChildren = Array.isArray(props.children)
            ? props.children.slice(0)
            : props.children;

          // To make comparing ReactElements easier for testing purposes, we make
          // the validation flag non-enumerable (where possible, which should
          // include every environment we run tests in), so the test framework
          // ignores it.
          if (canDefineProperty) {
            Object.defineProperty(element._store, 'validated', {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false,
            });
            // self and source are DEV only properties.
            Object.defineProperty(element, '_self', {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self,
            });
            Object.defineProperty(element, '_shadowChildren', {
              configurable: false,
              enumerable: false,
              writable: false,
              value: shadowChildren,
            });
            // Two elements created in two different places should be considered
            // equal for testing purposes and therefore we hide it from enumeration.
            Object.defineProperty(element, '_source', {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source,
            });
          } else {
            element._store.validated = false;
            element._self = self;
            element._shadowChildren = shadowChildren;
            element._source = source;
          }
          if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
          }
        }

        return element;
      };

      /**
       * Create and return a new ReactElement of the given type.
       * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
       */
      ReactElement.createElement = function (type, config, children) {
        var propName;

        // Reserved names are extracted
        var props = {};

        var key = null;
        var ref = null;
        var self = null;
        var source = null;

        if (config != null) {
          if (hasValidRef(config)) {
            ref = config.ref;
          }
          if (hasValidKey(config)) {
            key = '' + config.key;
          }

          self = config.__self === undefined ? null : config.__self;
          source = config.__source === undefined ? null : config.__source;
          // Remaining properties are added to a new props object
          for (propName in config) {
            if (
              hasOwnProperty.call(config, propName) &&
              !RESERVED_PROPS.hasOwnProperty(propName)
            ) {
              props[propName] = config[propName];
            }
          }
        }

        // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) {
          props.children = children;
        } else if (childrenLength > 1) {
          var childArray = Array(childrenLength);
          for (var i = 0; i < childrenLength; i++) {
            childArray[i] = arguments[i + 2];
          }
          props.children = childArray;
        }

        // Resolve default props
        if (type && type.defaultProps) {
          var defaultProps = type.defaultProps;
          for (propName in defaultProps) {
            if (props[propName] === undefined) {
              props[propName] = defaultProps[propName];
            }
          }
        }
        if (true) {
          if (key || ref) {
            if (
              typeof props.$$typeof === 'undefined' ||
              props.$$typeof !== REACT_ELEMENT_TYPE
            ) {
              var displayName =
                typeof type === 'function'
                  ? type.displayName || type.name || 'Unknown'
                  : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
          }
        }
        return ReactElement(
          type,
          key,
          ref,
          self,
          source,
          ReactCurrentOwner.current,
          props,
        );
      };

      /**
       * Return a function that produces ReactElements of a given type.
       * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
       */
      ReactElement.createFactory = function (type) {
        var factory = ReactElement.createElement.bind(null, type);
        // Expose the type on the factory and the prototype so that it can be
        // easily accessed on elements. E.g. `<Foo />.type === Foo`.
        // This should not be named `constructor` since this may not be the function
        // that created the element, and it may not even be a constructor.
        // Legacy hook TODO: Warn if this is accessed
        factory.type = type;
        return factory;
      };

      ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
        var newElement = ReactElement(
          oldElement.type,
          newKey,
          oldElement.ref,
          oldElement._self,
          oldElement._source,
          oldElement._owner,
          oldElement.props,
        );

        return newElement;
      };

      /**
       * Clone and return a new ReactElement using element as the starting point.
       * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
       */
      ReactElement.cloneElement = function (element, config, children) {
        var propName;

        // Original props are copied
        var props = _assign({}, element.props);

        // Reserved names are extracted
        var key = element.key;
        var ref = element.ref;
        // Self is preserved since the owner is preserved.
        var self = element._self;
        // Source is preserved since cloneElement is unlikely to be targeted by a
        // transpiler, and the original source is probably a better indicator of the
        // true owner.
        var source = element._source;

        // Owner will be preserved, unless ref is overridden
        var owner = element._owner;

        if (config != null) {
          if (hasValidRef(config)) {
            // Silently steal the ref from the parent.
            ref = config.ref;
            owner = ReactCurrentOwner.current;
          }
          if (hasValidKey(config)) {
            key = '' + config.key;
          }

          // Remaining properties override existing props
          var defaultProps;
          if (element.type && element.type.defaultProps) {
            defaultProps = element.type.defaultProps;
          }
          for (propName in config) {
            if (
              hasOwnProperty.call(config, propName) &&
              !RESERVED_PROPS.hasOwnProperty(propName)
            ) {
              if (
                config[propName] === undefined &&
                defaultProps !== undefined
              ) {
                // Resolve default props
                props[propName] = defaultProps[propName];
              } else {
                props[propName] = config[propName];
              }
            }
          }
        }

        // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) {
          props.children = children;
        } else if (childrenLength > 1) {
          var childArray = Array(childrenLength);
          for (var i = 0; i < childrenLength; i++) {
            childArray[i] = arguments[i + 2];
          }
          props.children = childArray;
        }

        return ReactElement(element.type, key, ref, self, source, owner, props);
      };

      /**
       * Verifies the object is a ReactElement.
       * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
       * @param {?object} object
       * @return {boolean} True if `object` is a valid component.
       * @final
       */
      ReactElement.isValidElement = function (object) {
        return (
          typeof object === 'object' &&
          object !== null &&
          object.$$typeof === REACT_ELEMENT_TYPE
        );
      };

      ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;

      module.exports = ReactElement;

      /***/
    },
    /* 11 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactCurrentOwner
       */

      'use strict';

      /**
       * Keeps track of the current owner.
       *
       * The current owner is the component who should own any components that are
       * currently being constructed.
       */

      var ReactCurrentOwner = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null,
      };

      module.exports = ReactCurrentOwner;

      /***/
    },
    /* 12 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2014-2015, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      'use strict';

      var emptyFunction = __webpack_require__(13);

      /**
       * Similar to invariant but only logs a warning if the condition is not met.
       * This can be used to log issues in development environments in critical
       * paths. Removing the logging code for production environments will keep the
       * same logic and follow the same code paths.
       */

      var warning = emptyFunction;

      if (true) {
        (function () {
          var printWarning = function printWarning(format) {
            for (
              var _len = arguments.length,
                args = Array(_len > 1 ? _len - 1 : 0),
                _key = 1;
              _key < _len;
              _key++
            ) {
              args[_key - 1] = arguments[_key];
            }

            var argIndex = 0;
            var message =
              'Warning: ' +
              format.replace(/%s/g, function () {
                return args[argIndex++];
              });
            if (typeof console !== 'undefined') {
              console.error(message);
            }
            try {
              // --- Welcome to debugging React ---
              // This error was thrown as a convenience so that you can use this stack
              // to find the callsite that caused this warning to fire.
              throw new Error(message);
            } catch (x) {}
          };

          warning = function warning(condition, format) {
            if (format === undefined) {
              throw new Error(
                '`warning(condition, format, ...args)` requires a warning ' +
                  'message argument',
              );
            }

            if (format.indexOf('Failed Composite propType: ') === 0) {
              return; // Ignore CompositeComponent proptype check.
            }

            if (!condition) {
              for (
                var _len2 = arguments.length,
                  args = Array(_len2 > 2 ? _len2 - 2 : 0),
                  _key2 = 2;
                _key2 < _len2;
                _key2++
              ) {
                args[_key2 - 2] = arguments[_key2];
              }

              printWarning.apply(undefined, [format].concat(args));
            }
          };
        })();
      }

      module.exports = warning;

      /***/
    },
    /* 13 */
    /***/ function (module, exports) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      function makeEmptyFunction(arg) {
        return function () {
          return arg;
        };
      }

      /**
       * This function accepts and discards inputs; it has no side effects. This is
       * primarily useful idiomatically for overridable function endpoints which
       * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
       */
      var emptyFunction = function emptyFunction() {};

      emptyFunction.thatReturns = makeEmptyFunction;
      emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
      emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
      emptyFunction.thatReturnsNull = makeEmptyFunction(null);
      emptyFunction.thatReturnsThis = function () {
        return this;
      };
      emptyFunction.thatReturnsArgument = function (arg) {
        return arg;
      };

      module.exports = emptyFunction;

      /***/
    },
    /* 14 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule canDefineProperty
       */

      'use strict';

      var canDefineProperty = false;
      if (true) {
        try {
          Object.defineProperty({}, 'x', { get: function () {} });
          canDefineProperty = true;
        } catch (x) {
          // IE will fail on defineProperty
        }
      }

      module.exports = canDefineProperty;

      /***/
    },
    /* 15 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule traverseAllChildren
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var ReactCurrentOwner = __webpack_require__(11);
      var ReactElement = __webpack_require__(10);

      var getIteratorFn = __webpack_require__(16);
      var invariant = __webpack_require__(9);
      var KeyEscapeUtils = __webpack_require__(17);
      var warning = __webpack_require__(12);

      var SEPARATOR = '.';
      var SUBSEPARATOR = ':';

      /**
       * TODO: Test that a single child and an array with one item have the same key
       * pattern.
       */

      var didWarnAboutMaps = false;

      /**
       * Generate a key string that identifies a component within a set.
       *
       * @param {*} component A component that could contain a manual key.
       * @param {number} index Index that is used if a manual key is not provided.
       * @return {string}
       */
      function getComponentKey(component, index) {
        // Do some typechecking here since we call this blindly. We want to ensure
        // that we don't block potential future ES APIs.
        if (
          component &&
          typeof component === 'object' &&
          component.key != null
        ) {
          // Explicit key
          return KeyEscapeUtils.escape(component.key);
        }
        // Implicit key determined by the index in the set
        return index.toString(36);
      }

      /**
       * @param {?*} children Children tree container.
       * @param {!string} nameSoFar Name of the key path so far.
       * @param {!function} callback Callback to invoke with each child found.
       * @param {?*} traverseContext Used to pass information throughout the traversal
       * process.
       * @return {!number} The number of children in this subtree.
       */
      function traverseAllChildrenImpl(
        children,
        nameSoFar,
        callback,
        traverseContext,
      ) {
        var type = typeof children;

        if (type === 'undefined' || type === 'boolean') {
          // All of the above are perceived as null.
          children = null;
        }

        if (
          children === null ||
          type === 'string' ||
          type === 'number' ||
          ReactElement.isValidElement(children)
        ) {
          callback(
            traverseContext,
            children,
            // If it's the only child, treat the name as if it was wrapped in an array
            // so that it's consistent if the number of children grows.
            nameSoFar === ''
              ? SEPARATOR + getComponentKey(children, 0)
              : nameSoFar,
          );
          return 1;
        }

        var child;
        var nextName;
        var subtreeCount = 0; // Count of children found in the current subtree.
        var nextNamePrefix =
          nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

        if (Array.isArray(children)) {
          for (var i = 0; i < children.length; i++) {
            child = children[i];
            nextName = nextNamePrefix + getComponentKey(child, i);
            subtreeCount += traverseAllChildrenImpl(
              child,
              nextName,
              callback,
              traverseContext,
            );
          }
        } else {
          var iteratorFn = getIteratorFn(children);
          if (iteratorFn) {
            var iterator = iteratorFn.call(children);
            var step;
            if (iteratorFn !== children.entries) {
              var ii = 0;
              while (!(step = iterator.next()).done) {
                child = step.value;
                nextName = nextNamePrefix + getComponentKey(child, ii++);
                subtreeCount += traverseAllChildrenImpl(
                  child,
                  nextName,
                  callback,
                  traverseContext,
                );
              }
            } else {
              if (true) {
                var mapsAsChildrenAddendum = '';
                if (ReactCurrentOwner.current) {
                  var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
                  if (mapsAsChildrenOwnerName) {
                    mapsAsChildrenAddendum =
                      ' Check the render method of `' +
                      mapsAsChildrenOwnerName +
                      '`.';
                  }
                }
                true
                  ? warning(
                      didWarnAboutMaps,
                      'Using Maps as children is not yet fully supported. It is an ' +
                        'experimental feature that might be removed. Convert it to a ' +
                        'sequence / iterable of keyed ReactElements instead.%s',
                      mapsAsChildrenAddendum,
                    )
                  : void 0;
                didWarnAboutMaps = true;
              }
              // Iterator will provide entry [k,v] tuples rather than values.
              while (!(step = iterator.next()).done) {
                var entry = step.value;
                if (entry) {
                  child = entry[1];
                  nextName =
                    nextNamePrefix +
                    KeyEscapeUtils.escape(entry[0]) +
                    SUBSEPARATOR +
                    getComponentKey(child, 0);
                  subtreeCount += traverseAllChildrenImpl(
                    child,
                    nextName,
                    callback,
                    traverseContext,
                  );
                }
              }
            }
          } else if (type === 'object') {
            var addendum = '';
            if (true) {
              addendum =
                ' If you meant to render a collection of children, use an array ' +
                'instead or wrap the object using createFragment(object) from the ' +
                'React add-ons.';
              if (children._isReactElement) {
                addendum =
                  " It looks like you're using an element created by a different " +
                  'version of React. Make sure to use only one copy of React.';
              }
              if (ReactCurrentOwner.current) {
                var name = ReactCurrentOwner.current.getName();
                if (name) {
                  addendum += ' Check the render method of `' + name + '`.';
                }
              }
            }
            var childrenString = String(children);
            true
              ? true
                ? invariant(
                    false,
                    'Objects are not valid as a React child (found: %s).%s',
                    childrenString === '[object Object]'
                      ? 'object with keys {' +
                          Object.keys(children).join(', ') +
                          '}'
                      : childrenString,
                    addendum,
                  )
                : _prodInvariant(
                    '31',
                    childrenString === '[object Object]'
                      ? 'object with keys {' +
                          Object.keys(children).join(', ') +
                          '}'
                      : childrenString,
                    addendum,
                  )
              : void 0;
          }
        }

        return subtreeCount;
      }

      /**
       * Traverses children that are typically specified as `props.children`, but
       * might also be specified through attributes:
       *
       * - `traverseAllChildren(this.props.children, ...)`
       * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
       *
       * The `traverseContext` is an optional argument that is passed through the
       * entire traversal. It can be used to store accumulations or anything else that
       * the callback might find relevant.
       *
       * @param {?*} children Children tree object.
       * @param {!function} callback To invoke upon traversing each child.
       * @param {?*} traverseContext Context for traversal.
       * @return {!number} The number of children in this subtree.
       */
      function traverseAllChildren(children, callback, traverseContext) {
        if (children == null) {
          return 0;
        }

        return traverseAllChildrenImpl(children, '', callback, traverseContext);
      }

      module.exports = traverseAllChildren;

      /***/
    },
    /* 16 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule getIteratorFn
       *
       */

      'use strict';

      /* global Symbol */

      var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

      /**
       * Returns the iterator method function contained on the iterable object.
       *
       * Be sure to invoke the function with the iterable as context:
       *
       *     var iteratorFn = getIteratorFn(myIterable);
       *     if (iteratorFn) {
       *       var iterator = iteratorFn.call(myIterable);
       *       ...
       *     }
       *
       * @param {?object} maybeIterable
       * @return {?function}
       */
      function getIteratorFn(maybeIterable) {
        var iteratorFn =
          maybeIterable &&
          ((ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
            maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') {
          return iteratorFn;
        }
      }

      module.exports = getIteratorFn;

      /***/
    },
    /* 17 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule KeyEscapeUtils
       *
       */

      'use strict';

      /**
       * Escape and wrap key so it is safe to use as a reactid
       *
       * @param {string} key to be escaped.
       * @return {string} the escaped key.
       */

      function escape(key) {
        var escapeRegex = /[=:]/g;
        var escaperLookup = {
          '=': '=0',
          ':': '=2',
        };
        var escapedString = ('' + key).replace(escapeRegex, function (match) {
          return escaperLookup[match];
        });

        return '$' + escapedString;
      }

      /**
       * Unescape and unwrap key for human-readable display
       *
       * @param {string} key to unescape.
       * @return {string} the unescaped key.
       */
      function unescape(key) {
        var unescapeRegex = /(=0|=2)/g;
        var unescaperLookup = {
          '=0': '=',
          '=2': ':',
        };
        var keySubstring =
          key[0] === '.' && key[1] === '$'
            ? key.substring(2)
            : key.substring(1);

        return ('' + keySubstring).replace(unescapeRegex, function (match) {
          return unescaperLookup[match];
        });
      }

      var KeyEscapeUtils = {
        escape: escape,
        unescape: unescape,
      };

      module.exports = KeyEscapeUtils;

      /***/
    },
    /* 18 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactComponent
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var ReactNoopUpdateQueue = __webpack_require__(19);

      var canDefineProperty = __webpack_require__(14);
      var emptyObject = __webpack_require__(20);
      var invariant = __webpack_require__(9);
      var warning = __webpack_require__(12);

      /**
       * Base class helpers for the updating state of a component.
       */
      function ReactComponent(props, context, updater) {
        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        // We initialize the default updater but the real one gets injected by the
        // renderer.
        this.updater = updater || ReactNoopUpdateQueue;
      }

      ReactComponent.prototype.isReactComponent = {};

      /**
       * Sets a subset of the state. Always use this to mutate
       * state. You should treat `this.state` as immutable.
       *
       * There is no guarantee that `this.state` will be immediately updated, so
       * accessing `this.state` after calling this method may return the old value.
       *
       * There is no guarantee that calls to `setState` will run synchronously,
       * as they may eventually be batched together.  You can provide an optional
       * callback that will be executed when the call to setState is actually
       * completed.
       *
       * When a function is provided to setState, it will be called at some point in
       * the future (not synchronously). It will be called with the up to date
       * component arguments (state, props, context). These values can be different
       * from this.* because your function may be called after receiveProps but before
       * shouldComponentUpdate, and this new state, props, and context will not yet be
       * assigned to this.
       *
       * @param {object|function} partialState Next partial state or function to
       *        produce next partial state to be merged with current state.
       * @param {?function} callback Called after state is updated.
       * @final
       * @protected
       */
      ReactComponent.prototype.setState = function (partialState, callback) {
        !(
          typeof partialState === 'object' ||
          typeof partialState === 'function' ||
          partialState == null
        )
          ? true
            ? invariant(
                false,
                'setState(...): takes an object of state variables to update or a function which returns an object of state variables.',
              )
            : _prodInvariant('85')
          : void 0;
        this.updater.enqueueSetState(this, partialState);
        if (callback) {
          this.updater.enqueueCallback(this, callback, 'setState');
        }
      };

      /**
       * Forces an update. This should only be invoked when it is known with
       * certainty that we are **not** in a DOM transaction.
       *
       * You may want to call this when you know that some deeper aspect of the
       * component's state has changed but `setState` was not called.
       *
       * This will not invoke `shouldComponentUpdate`, but it will invoke
       * `componentWillUpdate` and `componentDidUpdate`.
       *
       * @param {?function} callback Called after update is complete.
       * @final
       * @protected
       */
      ReactComponent.prototype.forceUpdate = function (callback) {
        this.updater.enqueueForceUpdate(this);
        if (callback) {
          this.updater.enqueueCallback(this, callback, 'forceUpdate');
        }
      };

      /**
       * Deprecated APIs. These APIs used to exist on classic React classes but since
       * we would like to deprecate them, we're not going to move them over to this
       * modern base class. Instead, we define a getter that warns if it's accessed.
       */
      if (true) {
        var deprecatedAPIs = {
          isMounted: [
            'isMounted',
            'Instead, make sure to clean up subscriptions and pending requests in ' +
              'componentWillUnmount to prevent memory leaks.',
          ],
          replaceState: [
            'replaceState',
            'Refactor your code to use setState instead (see ' +
              'https://github.com/facebook/react/issues/3236).',
          ],
        };
        var defineDeprecationWarning = function (methodName, info) {
          if (canDefineProperty) {
            Object.defineProperty(ReactComponent.prototype, methodName, {
              get: function () {
                true
                  ? warning(
                      false,
                      '%s(...) is deprecated in plain JavaScript React classes. %s',
                      info[0],
                      info[1],
                    )
                  : void 0;
                return undefined;
              },
            });
          }
        };
        for (var fnName in deprecatedAPIs) {
          if (deprecatedAPIs.hasOwnProperty(fnName)) {
            defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
          }
        }
      }

      module.exports = ReactComponent;

      /***/
    },
    /* 19 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2015-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactNoopUpdateQueue
       */

      'use strict';

      var warning = __webpack_require__(12);

      function warnNoop(publicInstance, callerName) {
        if (true) {
          var constructor = publicInstance.constructor;
          true
            ? warning(
                false,
                '%s(...): Can only update a mounted or mounting component. ' +
                  'This usually means you called %s() on an unmounted component. ' +
                  'This is a no-op. Please check the code for the %s component.',
                callerName,
                callerName,
                (constructor &&
                  (constructor.displayName || constructor.name)) ||
                  'ReactClass',
              )
            : void 0;
        }
      }

      /**
       * This is the abstract API for an update queue.
       */
      var ReactNoopUpdateQueue = {
        /**
         * Checks whether or not this composite component is mounted.
         * @param {ReactClass} publicInstance The instance we want to test.
         * @return {boolean} True if mounted, false otherwise.
         * @protected
         * @final
         */
        isMounted: function (publicInstance) {
          return false;
        },

        /**
         * Enqueue a callback that will be executed after all the pending updates
         * have processed.
         *
         * @param {ReactClass} publicInstance The instance to use as `this` context.
         * @param {?function} callback Called after state is updated.
         * @internal
         */
        enqueueCallback: function (publicInstance, callback) {},

        /**
         * Forces an update. This should only be invoked when it is known with
         * certainty that we are **not** in a DOM transaction.
         *
         * You may want to call this when you know that some deeper aspect of the
         * component's state has changed but `setState` was not called.
         *
         * This will not invoke `shouldComponentUpdate`, but it will invoke
         * `componentWillUpdate` and `componentDidUpdate`.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @internal
         */
        enqueueForceUpdate: function (publicInstance) {
          warnNoop(publicInstance, 'forceUpdate');
        },

        /**
         * Replaces all of the state. Always use this or `setState` to mutate state.
         * You should treat `this.state` as immutable.
         *
         * There is no guarantee that `this.state` will be immediately updated, so
         * accessing `this.state` after calling this method may return the old value.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} completeState Next state.
         * @internal
         */
        enqueueReplaceState: function (publicInstance, completeState) {
          warnNoop(publicInstance, 'replaceState');
        },

        /**
         * Sets a subset of the state. This only exists because _pendingState is
         * internal. This provides a merging strategy that is not available to deep
         * properties which is confusing. TODO: Expose pendingState or don't use it
         * during the merge.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} partialState Next partial state to be merged with state.
         * @internal
         */
        enqueueSetState: function (publicInstance, partialState) {
          warnNoop(publicInstance, 'setState');
        },
      };

      module.exports = ReactNoopUpdateQueue;

      /***/
    },
    /* 20 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      'use strict';

      var emptyObject = {};

      if (true) {
        Object.freeze(emptyObject);
      }

      module.exports = emptyObject;

      /***/
    },
    /* 21 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactPureComponent
       */

      'use strict';

      var _assign = __webpack_require__(5);

      var ReactComponent = __webpack_require__(18);
      var ReactNoopUpdateQueue = __webpack_require__(19);

      var emptyObject = __webpack_require__(20);

      /**
       * Base class helpers for the updating state of a component.
       */
      function ReactPureComponent(props, context, updater) {
        // Duplicated from ReactComponent.
        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        // We initialize the default updater but the real one gets injected by the
        // renderer.
        this.updater = updater || ReactNoopUpdateQueue;
      }

      function ComponentDummy() {}
      ComponentDummy.prototype = ReactComponent.prototype;
      ReactPureComponent.prototype = new ComponentDummy();
      ReactPureComponent.prototype.constructor = ReactPureComponent;
      // Avoid an extra prototype jump for these methods.
      _assign(ReactPureComponent.prototype, ReactComponent.prototype);
      ReactPureComponent.prototype.isPureReactComponent = true;

      module.exports = ReactPureComponent;

      /***/
    },
    /* 22 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactClass
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8),
        _assign = __webpack_require__(5);

      var ReactComponent = __webpack_require__(18);
      var ReactElement = __webpack_require__(10);
      var ReactPropTypeLocations = __webpack_require__(23);
      var ReactPropTypeLocationNames = __webpack_require__(25);
      var ReactNoopUpdateQueue = __webpack_require__(19);

      var emptyObject = __webpack_require__(20);
      var invariant = __webpack_require__(9);
      var keyMirror = __webpack_require__(24);
      var keyOf = __webpack_require__(26);
      var warning = __webpack_require__(12);

      var MIXINS_KEY = keyOf({ mixins: null });

      /**
       * Policies that describe methods in `ReactClassInterface`.
       */
      var SpecPolicy = keyMirror({
        /**
         * These methods may be defined only once by the class specification or mixin.
         */
        DEFINE_ONCE: null,
        /**
         * These methods may be defined by both the class specification and mixins.
         * Subsequent definitions will be chained. These methods must return void.
         */
        DEFINE_MANY: null,
        /**
         * These methods are overriding the base class.
         */
        OVERRIDE_BASE: null,
        /**
         * These methods are similar to DEFINE_MANY, except we assume they return
         * objects. We try to merge the keys of the return values of all the mixed in
         * functions. If there is a key conflict we throw.
         */
        DEFINE_MANY_MERGED: null,
      });

      var injectedMixins = [];

      /**
       * Composite components are higher-level components that compose other composite
       * or host components.
       *
       * To create a new type of `ReactClass`, pass a specification of
       * your new class to `React.createClass`. The only requirement of your class
       * specification is that you implement a `render` method.
       *
       *   var MyComponent = React.createClass({
       *     render: function() {
       *       return <div>Hello World</div>;
       *     }
       *   });
       *
       * The class specification supports a specific protocol of methods that have
       * special meaning (e.g. `render`). See `ReactClassInterface` for
       * more the comprehensive protocol. Any other properties and methods in the
       * class specification will be available on the prototype.
       *
       * @interface ReactClassInterface
       * @internal
       */
      var ReactClassInterface = {
        /**
         * An array of Mixin objects to include when defining your component.
         *
         * @type {array}
         * @optional
         */
        mixins: SpecPolicy.DEFINE_MANY,

        /**
         * An object containing properties and methods that should be defined on
         * the component's constructor instead of its prototype (static methods).
         *
         * @type {object}
         * @optional
         */
        statics: SpecPolicy.DEFINE_MANY,

        /**
         * Definition of prop types for this component.
         *
         * @type {object}
         * @optional
         */
        propTypes: SpecPolicy.DEFINE_MANY,

        /**
         * Definition of context types for this component.
         *
         * @type {object}
         * @optional
         */
        contextTypes: SpecPolicy.DEFINE_MANY,

        /**
         * Definition of context types this component sets for its children.
         *
         * @type {object}
         * @optional
         */
        childContextTypes: SpecPolicy.DEFINE_MANY,

        // ==== Definition methods ====

        /**
         * Invoked when the component is mounted. Values in the mapping will be set on
         * `this.props` if that prop is not specified (i.e. using an `in` check).
         *
         * This method is invoked before `getInitialState` and therefore cannot rely
         * on `this.state` or use `this.setState`.
         *
         * @return {object}
         * @optional
         */
        getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

        /**
         * Invoked once before the component is mounted. The return value will be used
         * as the initial value of `this.state`.
         *
         *   getInitialState: function() {
         *     return {
         *       isOn: false,
         *       fooBaz: new BazFoo()
         *     }
         *   }
         *
         * @return {object}
         * @optional
         */
        getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

        /**
         * @return {object}
         * @optional
         */
        getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

        /**
         * Uses props from `this.props` and state from `this.state` to render the
         * structure of the component.
         *
         * No guarantees are made about when or how often this method is invoked, so
         * it must not have side effects.
         *
         *   render: function() {
         *     var name = this.props.name;
         *     return <div>Hello, {name}!</div>;
         *   }
         *
         * @return {ReactComponent}
         * @nosideeffects
         * @required
         */
        render: SpecPolicy.DEFINE_ONCE,

        // ==== Delegate methods ====

        /**
         * Invoked when the component is initially created and about to be mounted.
         * This may have side effects, but any external subscriptions or data created
         * by this method must be cleaned up in `componentWillUnmount`.
         *
         * @optional
         */
        componentWillMount: SpecPolicy.DEFINE_MANY,

        /**
         * Invoked when the component has been mounted and has a DOM representation.
         * However, there is no guarantee that the DOM node is in the document.
         *
         * Use this as an opportunity to operate on the DOM when the component has
         * been mounted (initialized and rendered) for the first time.
         *
         * @param {DOMElement} rootNode DOM element representing the component.
         * @optional
         */
        componentDidMount: SpecPolicy.DEFINE_MANY,

        /**
         * Invoked before the component receives new props.
         *
         * Use this as an opportunity to react to a prop transition by updating the
         * state using `this.setState`. Current props are accessed via `this.props`.
         *
         *   componentWillReceiveProps: function(nextProps, nextContext) {
         *     this.setState({
         *       likesIncreasing: nextProps.likeCount > this.props.likeCount
         *     });
         *   }
         *
         * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
         * transition may cause a state change, but the opposite is not true. If you
         * need it, you are probably looking for `componentWillUpdate`.
         *
         * @param {object} nextProps
         * @optional
         */
        componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

        /**
         * Invoked while deciding if the component should be updated as a result of
         * receiving new props, state and/or context.
         *
         * Use this as an opportunity to `return false` when you're certain that the
         * transition to the new props/state/context will not require a component
         * update.
         *
         *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
         *     return !equal(nextProps, this.props) ||
         *       !equal(nextState, this.state) ||
         *       !equal(nextContext, this.context);
         *   }
         *
         * @param {object} nextProps
         * @param {?object} nextState
         * @param {?object} nextContext
         * @return {boolean} True if the component should update.
         * @optional
         */
        shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

        /**
         * Invoked when the component is about to update due to a transition from
         * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
         * and `nextContext`.
         *
         * Use this as an opportunity to perform preparation before an update occurs.
         *
         * NOTE: You **cannot** use `this.setState()` in this method.
         *
         * @param {object} nextProps
         * @param {?object} nextState
         * @param {?object} nextContext
         * @param {ReactReconcileTransaction} transaction
         * @optional
         */
        componentWillUpdate: SpecPolicy.DEFINE_MANY,

        /**
         * Invoked when the component's DOM representation has been updated.
         *
         * Use this as an opportunity to operate on the DOM when the component has
         * been updated.
         *
         * @param {object} prevProps
         * @param {?object} prevState
         * @param {?object} prevContext
         * @param {DOMElement} rootNode DOM element representing the component.
         * @optional
         */
        componentDidUpdate: SpecPolicy.DEFINE_MANY,

        /**
         * Invoked when the component is about to be removed from its parent and have
         * its DOM representation destroyed.
         *
         * Use this as an opportunity to deallocate any external resources.
         *
         * NOTE: There is no `componentDidUnmount` since your component will have been
         * destroyed by that point.
         *
         * @optional
         */
        componentWillUnmount: SpecPolicy.DEFINE_MANY,

        // ==== Advanced methods ====

        /**
         * Updates the component's currently mounted DOM representation.
         *
         * By default, this implements React's rendering and reconciliation algorithm.
         * Sophisticated clients may wish to override this.
         *
         * @param {ReactReconcileTransaction} transaction
         * @internal
         * @overridable
         */
        updateComponent: SpecPolicy.OVERRIDE_BASE,
      };

      /**
       * Mapping from class specification keys to special processing functions.
       *
       * Although these are declared like instance properties in the specification
       * when defining classes using `React.createClass`, they are actually static
       * and are accessible on the constructor instead of the prototype. Despite
       * being static, they must be defined outside of the "statics" key under
       * which all other static methods are defined.
       */
      var RESERVED_SPEC_KEYS = {
        displayName: function (Constructor, displayName) {
          Constructor.displayName = displayName;
        },
        mixins: function (Constructor, mixins) {
          if (mixins) {
            for (var i = 0; i < mixins.length; i++) {
              mixSpecIntoComponent(Constructor, mixins[i]);
            }
          }
        },
        childContextTypes: function (Constructor, childContextTypes) {
          if (true) {
            validateTypeDef(
              Constructor,
              childContextTypes,
              ReactPropTypeLocations.childContext,
            );
          }
          Constructor.childContextTypes = _assign(
            {},
            Constructor.childContextTypes,
            childContextTypes,
          );
        },
        contextTypes: function (Constructor, contextTypes) {
          if (true) {
            validateTypeDef(
              Constructor,
              contextTypes,
              ReactPropTypeLocations.context,
            );
          }
          Constructor.contextTypes = _assign(
            {},
            Constructor.contextTypes,
            contextTypes,
          );
        },
        /**
         * Special case getDefaultProps which should move into statics but requires
         * automatic merging.
         */
        getDefaultProps: function (Constructor, getDefaultProps) {
          if (Constructor.getDefaultProps) {
            Constructor.getDefaultProps = createMergedResultFunction(
              Constructor.getDefaultProps,
              getDefaultProps,
            );
          } else {
            Constructor.getDefaultProps = getDefaultProps;
          }
        },
        propTypes: function (Constructor, propTypes) {
          if (true) {
            validateTypeDef(
              Constructor,
              propTypes,
              ReactPropTypeLocations.prop,
            );
          }
          Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
        },
        statics: function (Constructor, statics) {
          mixStaticSpecIntoComponent(Constructor, statics);
        },
        autobind: function () {},
      };

      // noop
      function validateTypeDef(Constructor, typeDef, location) {
        for (var propName in typeDef) {
          if (typeDef.hasOwnProperty(propName)) {
            // use a warning instead of an invariant so components
            // don't show up in prod but only in __DEV__
            true
              ? warning(
                  typeof typeDef[propName] === 'function',
                  '%s: %s type `%s` is invalid; it must be a function, usually from ' +
                    'React.PropTypes.',
                  Constructor.displayName || 'ReactClass',
                  ReactPropTypeLocationNames[location],
                  propName,
                )
              : void 0;
          }
        }
      }

      function validateMethodOverride(isAlreadyDefined, name) {
        var specPolicy = ReactClassInterface.hasOwnProperty(name)
          ? ReactClassInterface[name]
          : null;

        // Disallow overriding of base class methods unless explicitly allowed.
        if (ReactClassMixin.hasOwnProperty(name)) {
          !(specPolicy === SpecPolicy.OVERRIDE_BASE)
            ? true
              ? invariant(
                  false,
                  'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.',
                  name,
                )
              : _prodInvariant('73', name)
            : void 0;
        }

        // Disallow defining methods more than once unless explicitly allowed.
        if (isAlreadyDefined) {
          !(
            specPolicy === SpecPolicy.DEFINE_MANY ||
            specPolicy === SpecPolicy.DEFINE_MANY_MERGED
          )
            ? true
              ? invariant(
                  false,
                  'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.',
                  name,
                )
              : _prodInvariant('74', name)
            : void 0;
        }
      }

      /**
       * Mixin helper which handles policy validation and reserved
       * specification keys when building React classes.
       */
      function mixSpecIntoComponent(Constructor, spec) {
        if (!spec) {
          if (true) {
            var typeofSpec = typeof spec;
            var isMixinValid = typeofSpec === 'object' && spec !== null;

            true
              ? warning(
                  isMixinValid,
                  "%s: You're attempting to include a mixin that is either null " +
                    'or not an object. Check the mixins included by the component, ' +
                    'as well as any mixins they include themselves. ' +
                    'Expected object but got %s.',
                  Constructor.displayName || 'ReactClass',
                  spec === null ? null : typeofSpec,
                )
              : void 0;
          }

          return;
        }

        !(typeof spec !== 'function')
          ? true
            ? invariant(
                false,
                "ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object.",
              )
            : _prodInvariant('75')
          : void 0;
        !!ReactElement.isValidElement(spec)
          ? true
            ? invariant(
                false,
                "ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.",
              )
            : _prodInvariant('76')
          : void 0;

        var proto = Constructor.prototype;
        var autoBindPairs = proto.__reactAutoBindPairs;

        // By handling mixins before any other properties, we ensure the same
        // chaining order is applied to methods with DEFINE_MANY policy, whether
        // mixins are listed before or after these methods in the spec.
        if (spec.hasOwnProperty(MIXINS_KEY)) {
          RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
        }

        for (var name in spec) {
          if (!spec.hasOwnProperty(name)) {
            continue;
          }

          if (name === MIXINS_KEY) {
            // We have already handled mixins in a special case above.
            continue;
          }

          var property = spec[name];
          var isAlreadyDefined = proto.hasOwnProperty(name);
          validateMethodOverride(isAlreadyDefined, name);

          if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
            RESERVED_SPEC_KEYS[name](Constructor, property);
          } else {
            // Setup methods on prototype:
            // The following member methods should not be automatically bound:
            // 1. Expected ReactClass methods (in the "interface").
            // 2. Overridden methods (that were mixed in).
            var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
            var isFunction = typeof property === 'function';
            var shouldAutoBind =
              isFunction &&
              !isReactClassMethod &&
              !isAlreadyDefined &&
              spec.autobind !== false;

            if (shouldAutoBind) {
              autoBindPairs.push(name, property);
              proto[name] = property;
            } else {
              if (isAlreadyDefined) {
                var specPolicy = ReactClassInterface[name];

                // These cases should already be caught by validateMethodOverride.
                !(
                  isReactClassMethod &&
                  (specPolicy === SpecPolicy.DEFINE_MANY_MERGED ||
                    specPolicy === SpecPolicy.DEFINE_MANY)
                )
                  ? true
                    ? invariant(
                        false,
                        'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.',
                        specPolicy,
                        name,
                      )
                    : _prodInvariant('77', specPolicy, name)
                  : void 0;

                // For methods which are defined more than once, call the existing
                // methods before calling the new property, merging if appropriate.
                if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
                  proto[name] = createMergedResultFunction(
                    proto[name],
                    property,
                  );
                } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
                  proto[name] = createChainedFunction(proto[name], property);
                }
              } else {
                proto[name] = property;
                if (true) {
                  // Add verbose displayName to the function, which helps when looking
                  // at profiling tools.
                  if (typeof property === 'function' && spec.displayName) {
                    proto[name].displayName = spec.displayName + '_' + name;
                  }
                }
              }
            }
          }
        }
      }

      function mixStaticSpecIntoComponent(Constructor, statics) {
        if (!statics) {
          return;
        }
        for (var name in statics) {
          var property = statics[name];
          if (!statics.hasOwnProperty(name)) {
            continue;
          }

          var isReserved = name in RESERVED_SPEC_KEYS;
          !!isReserved
            ? true
              ? invariant(
                  false,
                  'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.',
                  name,
                )
              : _prodInvariant('78', name)
            : void 0;

          var isInherited = name in Constructor;
          !!isInherited
            ? true
              ? invariant(
                  false,
                  'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.',
                  name,
                )
              : _prodInvariant('79', name)
            : void 0;
          Constructor[name] = property;
        }
      }

      /**
       * Merge two objects, but throw if both contain the same key.
       *
       * @param {object} one The first object, which is mutated.
       * @param {object} two The second object
       * @return {object} one after it has been mutated to contain everything in two.
       */
      function mergeIntoWithNoDuplicateKeys(one, two) {
        !(one && two && typeof one === 'object' && typeof two === 'object')
          ? true
            ? invariant(
                false,
                'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.',
              )
            : _prodInvariant('80')
          : void 0;

        for (var key in two) {
          if (two.hasOwnProperty(key)) {
            !(one[key] === undefined)
              ? true
                ? invariant(
                    false,
                    'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.',
                    key,
                  )
                : _prodInvariant('81', key)
              : void 0;
            one[key] = two[key];
          }
        }
        return one;
      }

      /**
       * Creates a function that invokes two functions and merges their return values.
       *
       * @param {function} one Function to invoke first.
       * @param {function} two Function to invoke second.
       * @return {function} Function that invokes the two argument functions.
       * @private
       */
      function createMergedResultFunction(one, two) {
        return function mergedResult() {
          var a = one.apply(this, arguments);
          var b = two.apply(this, arguments);
          if (a == null) {
            return b;
          } else if (b == null) {
            return a;
          }
          var c = {};
          mergeIntoWithNoDuplicateKeys(c, a);
          mergeIntoWithNoDuplicateKeys(c, b);
          return c;
        };
      }

      /**
       * Creates a function that invokes two functions and ignores their return vales.
       *
       * @param {function} one Function to invoke first.
       * @param {function} two Function to invoke second.
       * @return {function} Function that invokes the two argument functions.
       * @private
       */
      function createChainedFunction(one, two) {
        return function chainedFunction() {
          one.apply(this, arguments);
          two.apply(this, arguments);
        };
      }

      /**
       * Binds a method to the component.
       *
       * @param {object} component Component whose method is going to be bound.
       * @param {function} method Method to be bound.
       * @return {function} The bound method.
       */
      function bindAutoBindMethod(component, method) {
        var boundMethod = method.bind(component);
        if (true) {
          boundMethod.__reactBoundContext = component;
          boundMethod.__reactBoundMethod = method;
          boundMethod.__reactBoundArguments = null;
          var componentName = component.constructor.displayName;
          var _bind = boundMethod.bind;
          boundMethod.bind = function (newThis) {
            for (
              var _len = arguments.length,
                args = Array(_len > 1 ? _len - 1 : 0),
                _key = 1;
              _key < _len;
              _key++
            ) {
              args[_key - 1] = arguments[_key];
            }

            // User is trying to bind() an autobound method; we effectively will
            // ignore the value of "this" that the user is trying to use, so
            // let's warn.
            if (newThis !== component && newThis !== null) {
              true
                ? warning(
                    false,
                    'bind(): React component methods may only be bound to the ' +
                      'component instance. See %s',
                    componentName,
                  )
                : void 0;
            } else if (!args.length) {
              true
                ? warning(
                    false,
                    'bind(): You are binding a component method to the component. ' +
                      'React does this for you automatically in a high-performance ' +
                      'way, so you can safely remove this call. See %s',
                    componentName,
                  )
                : void 0;
              return boundMethod;
            }
            var reboundMethod = _bind.apply(boundMethod, arguments);
            reboundMethod.__reactBoundContext = component;
            reboundMethod.__reactBoundMethod = method;
            reboundMethod.__reactBoundArguments = args;
            return reboundMethod;
          };
        }
        return boundMethod;
      }

      /**
       * Binds all auto-bound methods in a component.
       *
       * @param {object} component Component whose method is going to be bound.
       */
      function bindAutoBindMethods(component) {
        var pairs = component.__reactAutoBindPairs;
        for (var i = 0; i < pairs.length; i += 2) {
          var autoBindKey = pairs[i];
          var method = pairs[i + 1];
          component[autoBindKey] = bindAutoBindMethod(component, method);
        }
      }

      /**
       * Add more to the ReactClass base class. These are all legacy features and
       * therefore not already part of the modern ReactComponent.
       */
      var ReactClassMixin = {
        /**
         * TODO: This will be deprecated because state should always keep a consistent
         * type signature and the only use case for this, is to avoid that.
         */
        replaceState: function (newState, callback) {
          this.updater.enqueueReplaceState(this, newState);
          if (callback) {
            this.updater.enqueueCallback(this, callback, 'replaceState');
          }
        },

        /**
         * Checks whether or not this composite component is mounted.
         * @return {boolean} True if mounted, false otherwise.
         * @protected
         * @final
         */
        isMounted: function () {
          return this.updater.isMounted(this);
        },
      };

      var ReactClassComponent = function () {};
      _assign(
        ReactClassComponent.prototype,
        ReactComponent.prototype,
        ReactClassMixin,
      );

      /**
       * Module for creating composite components.
       *
       * @class ReactClass
       */
      var ReactClass = {
        /**
         * Creates a composite component class given a class specification.
         * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
         *
         * @param {object} spec Class specification (which must define `render`).
         * @return {function} Component constructor function.
         * @public
         */
        createClass: function (spec) {
          var Constructor = function (props, context, updater) {
            // This constructor gets overridden by mocks. The argument is used
            // by mocks to assert on what gets mounted.

            if (true) {
              true
                ? warning(
                    this instanceof Constructor,
                    'Something is calling a React component directly. Use a factory or ' +
                      'JSX instead. See: https://fb.me/react-legacyfactory',
                  )
                : void 0;
            }

            // Wire up auto-binding
            if (this.__reactAutoBindPairs.length) {
              bindAutoBindMethods(this);
            }

            this.props = props;
            this.context = context;
            this.refs = emptyObject;
            this.updater = updater || ReactNoopUpdateQueue;

            this.state = null;

            // ReactClasses doesn't have constructors. Instead, they use the
            // getInitialState and componentWillMount methods for initialization.

            var initialState = this.getInitialState
              ? this.getInitialState()
              : null;
            if (true) {
              // We allow auto-mocks to proceed as if they're returning null.
              if (
                initialState === undefined &&
                this.getInitialState._isMockFunction
              ) {
                // This is probably bad practice. Consider warning here and
                // deprecating this convenience.
                initialState = null;
              }
            }
            !(typeof initialState === 'object' && !Array.isArray(initialState))
              ? true
                ? invariant(
                    false,
                    '%s.getInitialState(): must return an object or null',
                    Constructor.displayName || 'ReactCompositeComponent',
                  )
                : _prodInvariant(
                    '82',
                    Constructor.displayName || 'ReactCompositeComponent',
                  )
              : void 0;

            this.state = initialState;
          };
          Constructor.prototype = new ReactClassComponent();
          Constructor.prototype.constructor = Constructor;
          Constructor.prototype.__reactAutoBindPairs = [];

          injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

          mixSpecIntoComponent(Constructor, spec);

          // Initialize the defaultProps property after all mixins have been merged.
          if (Constructor.getDefaultProps) {
            Constructor.defaultProps = Constructor.getDefaultProps();
          }

          if (true) {
            // This is a tag to indicate that the use of these method names is ok,
            // since it's used with createClass. If it's not, then it's likely a
            // mistake so we'll warn you to use the static property, property
            // initializer or constructor respectively.
            if (Constructor.getDefaultProps) {
              Constructor.getDefaultProps.isReactClassApproved = {};
            }
            if (Constructor.prototype.getInitialState) {
              Constructor.prototype.getInitialState.isReactClassApproved = {};
            }
          }

          !Constructor.prototype.render
            ? true
              ? invariant(
                  false,
                  'createClass(...): Class specification must implement a `render` method.',
                )
              : _prodInvariant('83')
            : void 0;

          if (true) {
            true
              ? warning(
                  !Constructor.prototype.componentShouldUpdate,
                  '%s has a method called ' +
                    'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
                    'The name is phrased as a question because the function is ' +
                    'expected to return a value.',
                  spec.displayName || 'A component',
                )
              : void 0;
            true
              ? warning(
                  !Constructor.prototype.componentWillRecieveProps,
                  '%s has a method called ' +
                    'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
                  spec.displayName || 'A component',
                )
              : void 0;
          }

          // Reduce time spent doing lookups by setting these on the prototype.
          for (var methodName in ReactClassInterface) {
            if (!Constructor.prototype[methodName]) {
              Constructor.prototype[methodName] = null;
            }
          }

          return Constructor;
        },

        injection: {
          injectMixin: function (mixin) {
            injectedMixins.push(mixin);
          },
        },
      };

      module.exports = ReactClass;

      /***/
    },
    /* 23 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactPropTypeLocations
       */

      'use strict';

      var keyMirror = __webpack_require__(24);

      var ReactPropTypeLocations = keyMirror({
        prop: null,
        context: null,
        childContext: null,
      });

      module.exports = ReactPropTypeLocations;

      /***/
    },
    /* 24 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks static-only
       */

      'use strict';

      var invariant = __webpack_require__(9);

      /**
       * Constructs an enumeration with keys equal to their value.
       *
       * For example:
       *
       *   var COLORS = keyMirror({blue: null, red: null});
       *   var myColor = COLORS.blue;
       *   var isColorValid = !!COLORS[myColor];
       *
       * The last line could not be performed if the values of the generated enum were
       * not equal to their keys.
       *
       *   Input:  {key1: val1, key2: val2}
       *   Output: {key1: key1, key2: key2}
       *
       * @param {object} obj
       * @return {object}
       */
      var keyMirror = function keyMirror(obj) {
        var ret = {};
        var key;
        !(obj instanceof Object && !Array.isArray(obj))
          ? true
            ? invariant(false, 'keyMirror(...): Argument must be an object.')
            : invariant(false)
          : void 0;
        for (key in obj) {
          if (!obj.hasOwnProperty(key)) {
            continue;
          }
          ret[key] = key;
        }
        return ret;
      };

      module.exports = keyMirror;

      /***/
    },
    /* 25 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactPropTypeLocationNames
       */

      'use strict';

      var ReactPropTypeLocationNames = {};

      if (true) {
        ReactPropTypeLocationNames = {
          prop: 'prop',
          context: 'context',
          childContext: 'child context',
        };
      }

      module.exports = ReactPropTypeLocationNames;

      /***/
    },
    /* 26 */
    /***/ function (module, exports) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      /**
       * Allows extraction of a minified key. Let's the build system minify keys
       * without losing the ability to dynamically use key strings as values
       * themselves. Pass in an object with a single key/val pair and it will return
       * you the string key of that single record. Suppose you want to grab the
       * value for a key 'className' inside of an object. Key/val minification may
       * have aliased that key to be 'xa12'. keyOf({className: null}) will return
       * 'xa12' in that case. Resolve keys you want to use once at startup time, then
       * reuse those resolutions.
       */
      var keyOf = function keyOf(oneKeyObj) {
        var key;
        for (key in oneKeyObj) {
          if (!oneKeyObj.hasOwnProperty(key)) {
            continue;
          }
          return key;
        }
        return null;
      };

      module.exports = keyOf;

      /***/
    },
    /* 27 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMFactories
       */

      'use strict';

      var ReactElement = __webpack_require__(10);

      /**
       * Create a factory that creates HTML tag elements.
       *
       * @private
       */
      var createDOMFactory = ReactElement.createFactory;
      if (true) {
        var ReactElementValidator = __webpack_require__(28);
        createDOMFactory = ReactElementValidator.createFactory;
      }

      /**
       * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
       * This is also accessible via `React.DOM`.
       *
       * @public
       */
      var ReactDOMFactories = {
        a: createDOMFactory('a'),
        abbr: createDOMFactory('abbr'),
        address: createDOMFactory('address'),
        area: createDOMFactory('area'),
        article: createDOMFactory('article'),
        aside: createDOMFactory('aside'),
        audio: createDOMFactory('audio'),
        b: createDOMFactory('b'),
        base: createDOMFactory('base'),
        bdi: createDOMFactory('bdi'),
        bdo: createDOMFactory('bdo'),
        big: createDOMFactory('big'),
        blockquote: createDOMFactory('blockquote'),
        body: createDOMFactory('body'),
        br: createDOMFactory('br'),
        button: createDOMFactory('button'),
        canvas: createDOMFactory('canvas'),
        caption: createDOMFactory('caption'),
        cite: createDOMFactory('cite'),
        code: createDOMFactory('code'),
        col: createDOMFactory('col'),
        colgroup: createDOMFactory('colgroup'),
        data: createDOMFactory('data'),
        datalist: createDOMFactory('datalist'),
        dd: createDOMFactory('dd'),
        del: createDOMFactory('del'),
        details: createDOMFactory('details'),
        dfn: createDOMFactory('dfn'),
        dialog: createDOMFactory('dialog'),
        div: createDOMFactory('div'),
        dl: createDOMFactory('dl'),
        dt: createDOMFactory('dt'),
        em: createDOMFactory('em'),
        embed: createDOMFactory('embed'),
        fieldset: createDOMFactory('fieldset'),
        figcaption: createDOMFactory('figcaption'),
        figure: createDOMFactory('figure'),
        footer: createDOMFactory('footer'),
        form: createDOMFactory('form'),
        h1: createDOMFactory('h1'),
        h2: createDOMFactory('h2'),
        h3: createDOMFactory('h3'),
        h4: createDOMFactory('h4'),
        h5: createDOMFactory('h5'),
        h6: createDOMFactory('h6'),
        head: createDOMFactory('head'),
        header: createDOMFactory('header'),
        hgroup: createDOMFactory('hgroup'),
        hr: createDOMFactory('hr'),
        html: createDOMFactory('html'),
        i: createDOMFactory('i'),
        iframe: createDOMFactory('iframe'),
        img: createDOMFactory('img'),
        input: createDOMFactory('input'),
        ins: createDOMFactory('ins'),
        kbd: createDOMFactory('kbd'),
        keygen: createDOMFactory('keygen'),
        label: createDOMFactory('label'),
        legend: createDOMFactory('legend'),
        li: createDOMFactory('li'),
        link: createDOMFactory('link'),
        main: createDOMFactory('main'),
        map: createDOMFactory('map'),
        mark: createDOMFactory('mark'),
        menu: createDOMFactory('menu'),
        menuitem: createDOMFactory('menuitem'),
        meta: createDOMFactory('meta'),
        meter: createDOMFactory('meter'),
        nav: createDOMFactory('nav'),
        noscript: createDOMFactory('noscript'),
        object: createDOMFactory('object'),
        ol: createDOMFactory('ol'),
        optgroup: createDOMFactory('optgroup'),
        option: createDOMFactory('option'),
        output: createDOMFactory('output'),
        p: createDOMFactory('p'),
        param: createDOMFactory('param'),
        picture: createDOMFactory('picture'),
        pre: createDOMFactory('pre'),
        progress: createDOMFactory('progress'),
        q: createDOMFactory('q'),
        rp: createDOMFactory('rp'),
        rt: createDOMFactory('rt'),
        ruby: createDOMFactory('ruby'),
        s: createDOMFactory('s'),
        samp: createDOMFactory('samp'),
        script: createDOMFactory('script'),
        section: createDOMFactory('section'),
        select: createDOMFactory('select'),
        small: createDOMFactory('small'),
        source: createDOMFactory('source'),
        span: createDOMFactory('span'),
        strong: createDOMFactory('strong'),
        style: createDOMFactory('style'),
        sub: createDOMFactory('sub'),
        summary: createDOMFactory('summary'),
        sup: createDOMFactory('sup'),
        table: createDOMFactory('table'),
        tbody: createDOMFactory('tbody'),
        td: createDOMFactory('td'),
        textarea: createDOMFactory('textarea'),
        tfoot: createDOMFactory('tfoot'),
        th: createDOMFactory('th'),
        thead: createDOMFactory('thead'),
        time: createDOMFactory('time'),
        title: createDOMFactory('title'),
        tr: createDOMFactory('tr'),
        track: createDOMFactory('track'),
        u: createDOMFactory('u'),
        ul: createDOMFactory('ul'),
        var: createDOMFactory('var'),
        video: createDOMFactory('video'),
        wbr: createDOMFactory('wbr'),

        // SVG
        circle: createDOMFactory('circle'),
        clipPath: createDOMFactory('clipPath'),
        defs: createDOMFactory('defs'),
        ellipse: createDOMFactory('ellipse'),
        g: createDOMFactory('g'),
        image: createDOMFactory('image'),
        line: createDOMFactory('line'),
        linearGradient: createDOMFactory('linearGradient'),
        mask: createDOMFactory('mask'),
        path: createDOMFactory('path'),
        pattern: createDOMFactory('pattern'),
        polygon: createDOMFactory('polygon'),
        polyline: createDOMFactory('polyline'),
        radialGradient: createDOMFactory('radialGradient'),
        rect: createDOMFactory('rect'),
        stop: createDOMFactory('stop'),
        svg: createDOMFactory('svg'),
        text: createDOMFactory('text'),
        tspan: createDOMFactory('tspan'),
      };

      module.exports = ReactDOMFactories;

      /***/
    },
    /* 28 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2014-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactElementValidator
       */

      /**
       * ReactElementValidator provides a wrapper around a element factory
       * which validates the props passed to the element. This is intended to be
       * used only in DEV and could be replaced by a static type checker for languages
       * that support it.
       */

      'use strict';

      var ReactCurrentOwner = __webpack_require__(11);
      var ReactComponentTreeHook = __webpack_require__(29);
      var ReactElement = __webpack_require__(10);
      var ReactPropTypeLocations = __webpack_require__(23);

      var checkReactTypeSpec = __webpack_require__(30);

      var canDefineProperty = __webpack_require__(14);
      var getIteratorFn = __webpack_require__(16);
      var warning = __webpack_require__(12);

      function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            return ' Check the render method of `' + name + '`.';
          }
        }
        return '';
      }

      /**
       * Warn if there's no key explicitly set on dynamic arrays of children or
       * object keys are not valid. This allows us to keep track of children between
       * updates.
       */
      var ownerHasKeyUseWarning = {};

      function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();

        if (!info) {
          var parentName =
            typeof parentType === 'string'
              ? parentType
              : parentType.displayName || parentType.name;
          if (parentName) {
            info =
              ' Check the top-level render call using <' + parentName + '>.';
          }
        }
        return info;
      }

      /**
       * Warn if the element doesn't have an explicit key assigned to it.
       * This element is in an array. The array could grow and shrink or be
       * reordered. All children that haven't already been validated are required to
       * have a "key" property assigned to it. Error statuses are cached so a warning
       * will only be shown once.
       *
       * @internal
       * @param {ReactElement} element Element that requires a key.
       * @param {*} parentType element's parent's type.
       */
      function validateExplicitKey(element, parentType) {
        if (
          !element._store ||
          element._store.validated ||
          element.key != null
        ) {
          return;
        }
        element._store.validated = true;

        var memoizer =
          ownerHasKeyUseWarning.uniqueKey ||
          (ownerHasKeyUseWarning.uniqueKey = {});

        var currentComponentErrorInfo = getCurrentComponentErrorInfo(
          parentType,
        );
        if (memoizer[currentComponentErrorInfo]) {
          return;
        }
        memoizer[currentComponentErrorInfo] = true;

        // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = '';
        if (
          element &&
          element._owner &&
          element._owner !== ReactCurrentOwner.current
        ) {
          // Give the component that originally created this child.
          childOwner =
            ' It was passed a child from ' + element._owner.getName() + '.';
        }

        true
          ? warning(
              false,
              'Each child in an array or iterator should have a unique "key" prop.' +
                '%s%s See https://fb.me/react-warning-keys for more information.%s',
              currentComponentErrorInfo,
              childOwner,
              ReactComponentTreeHook.getCurrentStackAddendum(element),
            )
          : void 0;
      }

      /**
       * Ensure that every element either is passed in a static location, in an
       * array with an explicit keys property defined, or in an object literal
       * with valid key property.
       *
       * @internal
       * @param {ReactNode} node Statically passed child of any type.
       * @param {*} parentType node's parent's type.
       */
      function validateChildKeys(node, parentType) {
        if (typeof node !== 'object') {
          return;
        }
        if (Array.isArray(node)) {
          for (var i = 0; i < node.length; i++) {
            var child = node[i];
            if (ReactElement.isValidElement(child)) {
              validateExplicitKey(child, parentType);
            }
          }
        } else if (ReactElement.isValidElement(node)) {
          // This element was passed in a valid location.
          if (node._store) {
            node._store.validated = true;
          }
        } else if (node) {
          var iteratorFn = getIteratorFn(node);
          // Entry iterators provide implicit keys.
          if (iteratorFn) {
            if (iteratorFn !== node.entries) {
              var iterator = iteratorFn.call(node);
              var step;
              while (!(step = iterator.next()).done) {
                if (ReactElement.isValidElement(step.value)) {
                  validateExplicitKey(step.value, parentType);
                }
              }
            }
          }
        }
      }

      /**
       * Given an element, validate that its props follow the propTypes definition,
       * provided by the type.
       *
       * @param {ReactElement} element
       */
      function validatePropTypes(element) {
        var componentClass = element.type;
        if (typeof componentClass !== 'function') {
          return;
        }
        var name = componentClass.displayName || componentClass.name;
        if (componentClass.propTypes) {
          checkReactTypeSpec(
            componentClass.propTypes,
            element.props,
            ReactPropTypeLocations.prop,
            name,
            element,
            null,
          );
        }
        if (typeof componentClass.getDefaultProps === 'function') {
          true
            ? warning(
                componentClass.getDefaultProps.isReactClassApproved,
                'getDefaultProps is only used on classic React.createClass ' +
                  'definitions. Use a static property named `defaultProps` instead.',
              )
            : void 0;
        }
      }

      var ReactElementValidator = {
        createElement: function (type, props, children) {
          var validType =
            typeof type === 'string' || typeof type === 'function';
          // We warn in this case but don't throw. We expect the element creation to
          // succeed and there will likely be errors in render.
          if (!validType) {
            true
              ? warning(
                  false,
                  'React.createElement: type should not be null, undefined, boolean, or ' +
                    'number. It should be a string (for DOM elements) or a ReactClass ' +
                    '(for composite components).%s',
                  getDeclarationErrorAddendum(),
                )
              : void 0;
          }

          var element = ReactElement.createElement.apply(this, arguments);

          // The result can be nullish if a mock or a custom function is used.
          // TODO: Drop this when these are no longer allowed as the type argument.
          if (element == null) {
            return element;
          }

          // Skip key warning if the type isn't valid since our key validation logic
          // doesn't expect a non-string/function type and can throw confusing errors.
          // We don't want exception behavior to differ between dev and prod.
          // (Rendering will throw with a helpful message and as soon as the type is
          // fixed, the key warnings will appear.)
          if (validType) {
            for (var i = 2; i < arguments.length; i++) {
              validateChildKeys(arguments[i], type);
            }
          }

          validatePropTypes(element);

          return element;
        },

        createFactory: function (type) {
          var validatedFactory = ReactElementValidator.createElement.bind(
            null,
            type,
          );
          // Legacy hook TODO: Warn if this is accessed
          validatedFactory.type = type;

          if (true) {
            if (canDefineProperty) {
              Object.defineProperty(validatedFactory, 'type', {
                enumerable: false,
                get: function () {
                  true
                    ? warning(
                        false,
                        'Factory.type is deprecated. Access the class directly ' +
                          'before passing it to createFactory.',
                      )
                    : void 0;
                  Object.defineProperty(this, 'type', {
                    value: type,
                  });
                  return type;
                },
              });
            }
          }

          return validatedFactory;
        },

        cloneElement: function (element, props, children) {
          var newElement = ReactElement.cloneElement.apply(this, arguments);
          for (var i = 2; i < arguments.length; i++) {
            validateChildKeys(arguments[i], newElement.type);
          }
          validatePropTypes(newElement);
          return newElement;
        },
      };

      module.exports = ReactElementValidator;

      /***/
    },
    /* 29 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2016-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactComponentTreeHook
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var ReactCurrentOwner = __webpack_require__(11);

      var invariant = __webpack_require__(9);
      var warning = __webpack_require__(12);

      function isNative(fn) {
        // Based on isNative() from Lodash
        var funcToString = Function.prototype.toString;
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var reIsNative = RegExp(
          '^' +
            funcToString
              // Take an example native function source for comparison
              .call(hasOwnProperty)
              // Strip regex characters so we can use it for regex
              .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
              // Remove hasOwnProperty from the template to make it generic
              .replace(
                /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                '$1.*?',
              ) +
            '$',
        );
        try {
          var source = funcToString.call(fn);
          return reIsNative.test(source);
        } catch (err) {
          return false;
        }
      }

      var canUseCollections =
        // Array.from
        typeof Array.from === 'function' &&
        // Map
        typeof Map === 'function' &&
        isNative(Map) &&
        // Map.prototype.keys
        Map.prototype != null &&
        typeof Map.prototype.keys === 'function' &&
        isNative(Map.prototype.keys) &&
        // Set
        typeof Set === 'function' &&
        isNative(Set) &&
        // Set.prototype.keys
        Set.prototype != null &&
        typeof Set.prototype.keys === 'function' &&
        isNative(Set.prototype.keys);

      var itemMap;
      var rootIDSet;

      var itemByKey;
      var rootByKey;

      if (canUseCollections) {
        itemMap = new Map();
        rootIDSet = new Set();
      } else {
        itemByKey = {};
        rootByKey = {};
      }

      var unmountedIDs = [];

      // Use non-numeric keys to prevent V8 performance issues:
      // https://github.com/facebook/react/pull/7232
      function getKeyFromID(id) {
        return '.' + id;
      }
      function getIDFromKey(key) {
        return parseInt(key.substr(1), 10);
      }

      function get(id) {
        if (canUseCollections) {
          return itemMap.get(id);
        } else {
          var key = getKeyFromID(id);
          return itemByKey[key];
        }
      }

      function remove(id) {
        if (canUseCollections) {
          itemMap['delete'](id);
        } else {
          var key = getKeyFromID(id);
          delete itemByKey[key];
        }
      }

      function create(id, element, parentID) {
        var item = {
          element: element,
          parentID: parentID,
          text: null,
          childIDs: [],
          isMounted: false,
          updateCount: 0,
        };

        if (canUseCollections) {
          itemMap.set(id, item);
        } else {
          var key = getKeyFromID(id);
          itemByKey[key] = item;
        }
      }

      function addRoot(id) {
        if (canUseCollections) {
          rootIDSet.add(id);
        } else {
          var key = getKeyFromID(id);
          rootByKey[key] = true;
        }
      }

      function removeRoot(id) {
        if (canUseCollections) {
          rootIDSet['delete'](id);
        } else {
          var key = getKeyFromID(id);
          delete rootByKey[key];
        }
      }

      function getRegisteredIDs() {
        if (canUseCollections) {
          return Array.from(itemMap.keys());
        } else {
          return Object.keys(itemByKey).map(getIDFromKey);
        }
      }

      function getRootIDs() {
        if (canUseCollections) {
          return Array.from(rootIDSet.keys());
        } else {
          return Object.keys(rootByKey).map(getIDFromKey);
        }
      }

      function purgeDeep(id) {
        var item = get(id);
        if (item) {
          var childIDs = item.childIDs;

          remove(id);
          childIDs.forEach(purgeDeep);
        }
      }

      function describeComponentFrame(name, source, ownerName) {
        return (
          '\n    in ' +
          name +
          (source
            ? ' (at ' +
              source.fileName.replace(/^.*[\\\/]/, '') +
              ':' +
              source.lineNumber +
              ')'
            : ownerName
            ? ' (created by ' + ownerName + ')'
            : '')
        );
      }

      function getDisplayName(element) {
        if (element == null) {
          return '#empty';
        } else if (typeof element === 'string' || typeof element === 'number') {
          return '#text';
        } else if (typeof element.type === 'string') {
          return element.type;
        } else {
          return element.type.displayName || element.type.name || 'Unknown';
        }
      }

      function describeID(id) {
        var name = ReactComponentTreeHook.getDisplayName(id);
        var element = ReactComponentTreeHook.getElement(id);
        var ownerID = ReactComponentTreeHook.getOwnerID(id);
        var ownerName;
        if (ownerID) {
          ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
        }
        true
          ? warning(
              element,
              'ReactComponentTreeHook: Missing React element for debugID %s when ' +
                'building stack',
              id,
            )
          : void 0;
        return describeComponentFrame(
          name,
          element && element._source,
          ownerName,
        );
      }

      var ReactComponentTreeHook = {
        onSetChildren: function (id, nextChildIDs) {
          var item = get(id);
          item.childIDs = nextChildIDs;

          for (var i = 0; i < nextChildIDs.length; i++) {
            var nextChildID = nextChildIDs[i];
            var nextChild = get(nextChildID);
            !nextChild
              ? true
                ? invariant(
                    false,
                    'Expected hook events to fire for the child before its parent includes it in onSetChildren().',
                  )
                : _prodInvariant('140')
              : void 0;
            !(
              nextChild.childIDs != null ||
              typeof nextChild.element !== 'object' ||
              nextChild.element == null
            )
              ? true
                ? invariant(
                    false,
                    'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().',
                  )
                : _prodInvariant('141')
              : void 0;
            !nextChild.isMounted
              ? true
                ? invariant(
                    false,
                    'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().',
                  )
                : _prodInvariant('71')
              : void 0;
            if (nextChild.parentID == null) {
              nextChild.parentID = id;
              // TODO: This shouldn't be necessary but mounting a new root during in
              // componentWillMount currently causes not-yet-mounted components to
              // be purged from our tree data so their parent ID is missing.
            }
            !(nextChild.parentID === id)
              ? true
                ? invariant(
                    false,
                    'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).',
                    nextChildID,
                    nextChild.parentID,
                    id,
                  )
                : _prodInvariant('142', nextChildID, nextChild.parentID, id)
              : void 0;
          }
        },
        onBeforeMountComponent: function (id, element, parentID) {
          create(id, element, parentID);
        },
        onBeforeUpdateComponent: function (id, element) {
          var item = get(id);
          if (!item || !item.isMounted) {
            // We may end up here as a result of setState() in componentWillUnmount().
            // In this case, ignore the element.
            return;
          }
          item.element = element;
        },
        onMountComponent: function (id) {
          var item = get(id);
          item.isMounted = true;
          var isRoot = item.parentID === 0;
          if (isRoot) {
            addRoot(id);
          }
        },
        onUpdateComponent: function (id) {
          var item = get(id);
          if (!item || !item.isMounted) {
            // We may end up here as a result of setState() in componentWillUnmount().
            // In this case, ignore the element.
            return;
          }
          item.updateCount++;
        },
        onUnmountComponent: function (id) {
          var item = get(id);
          if (item) {
            // We need to check if it exists.
            // `item` might not exist if it is inside an error boundary, and a sibling
            // error boundary child threw while mounting. Then this instance never
            // got a chance to mount, but it still gets an unmounting event during
            // the error boundary cleanup.
            item.isMounted = false;
            var isRoot = item.parentID === 0;
            if (isRoot) {
              removeRoot(id);
            }
          }
          unmountedIDs.push(id);
        },
        purgeUnmountedComponents: function () {
          if (ReactComponentTreeHook._preventPurging) {
            // Should only be used for testing.
            return;
          }

          for (var i = 0; i < unmountedIDs.length; i++) {
            var id = unmountedIDs[i];
            purgeDeep(id);
          }
          unmountedIDs.length = 0;
        },
        isMounted: function (id) {
          var item = get(id);
          return item ? item.isMounted : false;
        },
        getCurrentStackAddendum: function (topElement) {
          var info = '';
          if (topElement) {
            var type = topElement.type;
            var name =
              typeof type === 'function' ? type.displayName || type.name : type;
            var owner = topElement._owner;
            info += describeComponentFrame(
              name || 'Unknown',
              topElement._source,
              owner && owner.getName(),
            );
          }

          var currentOwner = ReactCurrentOwner.current;
          var id = currentOwner && currentOwner._debugID;

          info += ReactComponentTreeHook.getStackAddendumByID(id);
          return info;
        },
        getStackAddendumByID: function (id) {
          var info = '';
          while (id) {
            info += describeID(id);
            id = ReactComponentTreeHook.getParentID(id);
          }
          return info;
        },
        getChildIDs: function (id) {
          var item = get(id);
          return item ? item.childIDs : [];
        },
        getDisplayName: function (id) {
          var element = ReactComponentTreeHook.getElement(id);
          if (!element) {
            return null;
          }
          return getDisplayName(element);
        },
        getElement: function (id) {
          var item = get(id);
          return item ? item.element : null;
        },
        getOwnerID: function (id) {
          var element = ReactComponentTreeHook.getElement(id);
          if (!element || !element._owner) {
            return null;
          }
          return element._owner._debugID;
        },
        getParentID: function (id) {
          var item = get(id);
          return item ? item.parentID : null;
        },
        getSource: function (id) {
          var item = get(id);
          var element = item ? item.element : null;
          var source = element != null ? element._source : null;
          return source;
        },
        getText: function (id) {
          var element = ReactComponentTreeHook.getElement(id);
          if (typeof element === 'string') {
            return element;
          } else if (typeof element === 'number') {
            return '' + element;
          } else {
            return null;
          }
        },
        getUpdateCount: function (id) {
          var item = get(id);
          return item ? item.updateCount : 0;
        },

        getRegisteredIDs: getRegisteredIDs,

        getRootIDs: getRootIDs,
      };

      module.exports = ReactComponentTreeHook;

      /***/
    },
    /* 30 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         * @providesModule checkReactTypeSpec
         */

        'use strict';

        var _prodInvariant = __webpack_require__(8);

        var ReactPropTypeLocationNames = __webpack_require__(25);
        var ReactPropTypesSecret = __webpack_require__(32);

        var invariant = __webpack_require__(9);
        var warning = __webpack_require__(12);

        var ReactComponentTreeHook;

        if (
          typeof process !== 'undefined' && { NODE_ENV: 'development' } &&
          'development' === 'test'
        ) {
          // Temporary hack.
          // Inline requires don't work well with Jest:
          // https://github.com/facebook/react/issues/7240
          // Remove the inline requires when we don't need them anymore:
          // https://github.com/facebook/react/pull/7178
          ReactComponentTreeHook = __webpack_require__(29);
        }

        var loggedTypeFailures = {};

        /**
         * Assert that the values match with the type specs.
         * Error messages are memorized and will only be shown once.
         *
         * @param {object} typeSpecs Map of name to a ReactPropType
         * @param {object} values Runtime values that need to be type-checked
         * @param {string} location e.g. "prop", "context", "child context"
         * @param {string} componentName Name of the component for error messages.
         * @param {?object} element The React element that is being type-checked
         * @param {?number} debugID The React component instance that is being type-checked
         * @private
         */
        function checkReactTypeSpec(
          typeSpecs,
          values,
          location,
          componentName,
          element,
          debugID,
        ) {
          for (var typeSpecName in typeSpecs) {
            if (typeSpecs.hasOwnProperty(typeSpecName)) {
              var error;
              // Prop type validation may throw. In case they do, we don't want to
              // fail the render phase where it didn't fail before. So we log it.
              // After these have been cleaned up, we'll let them throw.
              try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                !(typeof typeSpecs[typeSpecName] === 'function')
                  ? true
                    ? invariant(
                        false,
                        '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.',
                        componentName || 'React class',
                        ReactPropTypeLocationNames[location],
                        typeSpecName,
                      )
                    : _prodInvariant(
                        '84',
                        componentName || 'React class',
                        ReactPropTypeLocationNames[location],
                        typeSpecName,
                      )
                  : void 0;
                error = typeSpecs[typeSpecName](
                  values,
                  typeSpecName,
                  componentName,
                  location,
                  null,
                  ReactPropTypesSecret,
                );
              } catch (ex) {
                error = ex;
              }
              true
                ? warning(
                    !error || error instanceof Error,
                    '%s: type specification of %s `%s` is invalid; the type checker ' +
                      'function must return `null` or an `Error` but returned a %s. ' +
                      'You may have forgotten to pass an argument to the type checker ' +
                      'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
                      'shape all require an argument).',
                    componentName || 'React class',
                    ReactPropTypeLocationNames[location],
                    typeSpecName,
                    typeof error,
                  )
                : void 0;
              if (
                error instanceof Error &&
                !(error.message in loggedTypeFailures)
              ) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error.message] = true;

                var componentStackInfo = '';

                if (true) {
                  if (!ReactComponentTreeHook) {
                    ReactComponentTreeHook = __webpack_require__(29);
                  }
                  if (debugID !== null) {
                    componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(
                      debugID,
                    );
                  } else if (element !== null) {
                    componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(
                      element,
                    );
                  }
                }

                true
                  ? warning(
                      false,
                      'Failed %s type: %s%s',
                      location,
                      error.message,
                      componentStackInfo,
                    )
                  : void 0;
              }
            }
          }
        }

        module.exports = checkReactTypeSpec;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(31)));

      /***/
    },
    /* 31 */
    /***/ function (module, exports) {
      // shim for using process in browser
      var process = (module.exports = {});

      // cached from whatever global is present so that test runners that stub it
      // don't break things.  But we need to wrap it in a try catch in case it is
      // wrapped in strict mode code which doesn't define any globals.  It's inside a
      // function because try/catches deoptimize in certain engines.

      var cachedSetTimeout;
      var cachedClearTimeout;

      function defaultSetTimout() {
        throw new Error('setTimeout has not been defined');
      }
      function defaultClearTimeout() {
        throw new Error('clearTimeout has not been defined');
      }
      (function () {
        try {
          if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
          } else {
            cachedSetTimeout = defaultSetTimout;
          }
        } catch (e) {
          cachedSetTimeout = defaultSetTimout;
        }
        try {
          if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
          } else {
            cachedClearTimeout = defaultClearTimeout;
          }
        } catch (e) {
          cachedClearTimeout = defaultClearTimeout;
        }
      })();
      function runTimeout(fun) {
        if (cachedSetTimeout === setTimeout) {
          //normal enviroments in sane situations
          return setTimeout(fun, 0);
        }
        // if setTimeout wasn't available but was latter defined
        if (
          (cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) &&
          setTimeout
        ) {
          cachedSetTimeout = setTimeout;
          return setTimeout(fun, 0);
        }
        try {
          // when when somebody has screwed with setTimeout but no I.E. maddness
          return cachedSetTimeout(fun, 0);
        } catch (e) {
          try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
          } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
          }
        }
      }
      function runClearTimeout(marker) {
        if (cachedClearTimeout === clearTimeout) {
          //normal enviroments in sane situations
          return clearTimeout(marker);
        }
        // if clearTimeout wasn't available but was latter defined
        if (
          (cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) &&
          clearTimeout
        ) {
          cachedClearTimeout = clearTimeout;
          return clearTimeout(marker);
        }
        try {
          // when when somebody has screwed with setTimeout but no I.E. maddness
          return cachedClearTimeout(marker);
        } catch (e) {
          try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
          } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
          }
        }
      }
      var queue = [];
      var draining = false;
      var currentQueue;
      var queueIndex = -1;

      function cleanUpNextTick() {
        if (!draining || !currentQueue) {
          return;
        }
        draining = false;
        if (currentQueue.length) {
          queue = currentQueue.concat(queue);
        } else {
          queueIndex = -1;
        }
        if (queue.length) {
          drainQueue();
        }
      }

      function drainQueue() {
        if (draining) {
          return;
        }
        var timeout = runTimeout(cleanUpNextTick);
        draining = true;

        var len = queue.length;
        while (len) {
          currentQueue = queue;
          queue = [];
          while (++queueIndex < len) {
            if (currentQueue) {
              currentQueue[queueIndex].run();
            }
          }
          queueIndex = -1;
          len = queue.length;
        }
        currentQueue = null;
        draining = false;
        runClearTimeout(timeout);
      }

      process.nextTick = function (fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
          for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
          }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
          runTimeout(drainQueue);
        }
      };

      // v8 likes predictible objects
      function Item(fun, array) {
        this.fun = fun;
        this.array = array;
      }
      Item.prototype.run = function () {
        this.fun.apply(null, this.array);
      };
      process.title = 'browser';
      process.browser = true;
      process.env = {};
      process.argv = [];
      process.version = ''; // empty string to avoid regexp issues
      process.versions = {};

      function noop() {}

      process.on = noop;
      process.addListener = noop;
      process.once = noop;
      process.off = noop;
      process.removeListener = noop;
      process.removeAllListeners = noop;
      process.emit = noop;

      process.binding = function (name) {
        throw new Error('process.binding is not supported');
      };

      process.cwd = function () {
        return '/';
      };
      process.chdir = function (dir) {
        throw new Error('process.chdir is not supported');
      };
      process.umask = function () {
        return 0;
      };

      /***/
    },
    /* 32 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactPropTypesSecret
       */

      'use strict';

      var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

      module.exports = ReactPropTypesSecret;

      /***/
    },
    /* 33 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactPropTypes
       */

      'use strict';

      var ReactElement = __webpack_require__(10);
      var ReactPropTypeLocationNames = __webpack_require__(25);
      var ReactPropTypesSecret = __webpack_require__(32);

      var emptyFunction = __webpack_require__(13);
      var getIteratorFn = __webpack_require__(16);
      var warning = __webpack_require__(12);

      /**
       * Collection of methods that allow declaration and validation of props that are
       * supplied to React components. Example usage:
       *
       *   var Props = require('ReactPropTypes');
       *   var MyArticle = React.createClass({
       *     propTypes: {
       *       // An optional string prop named "description".
       *       description: Props.string,
       *
       *       // A required enum prop named "category".
       *       category: Props.oneOf(['News','Photos']).isRequired,
       *
       *       // A prop named "dialog" that requires an instance of Dialog.
       *       dialog: Props.instanceOf(Dialog).isRequired
       *     },
       *     render: function() { ... }
       *   });
       *
       * A more formal specification of how these methods are used:
       *
       *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
       *   decl := ReactPropTypes.{type}(.isRequired)?
       *
       * Each and every declaration produces a function with the same signature. This
       * allows the creation of custom validation functions. For example:
       *
       *  var MyLink = React.createClass({
       *    propTypes: {
       *      // An optional string or URI prop named "href".
       *      href: function(props, propName, componentName) {
       *        var propValue = props[propName];
       *        if (propValue != null && typeof propValue !== 'string' &&
       *            !(propValue instanceof URI)) {
       *          return new Error(
       *            'Expected a string or an URI for ' + propName + ' in ' +
       *            componentName
       *          );
       *        }
       *      }
       *    },
       *    render: function() {...}
       *  });
       *
       * @internal
       */

      var ANONYMOUS = '<<anonymous>>';

      var ReactPropTypes = {
        array: createPrimitiveTypeChecker('array'),
        bool: createPrimitiveTypeChecker('boolean'),
        func: createPrimitiveTypeChecker('function'),
        number: createPrimitiveTypeChecker('number'),
        object: createPrimitiveTypeChecker('object'),
        string: createPrimitiveTypeChecker('string'),
        symbol: createPrimitiveTypeChecker('symbol'),

        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
      };

      /**
       * inlined Object.is polyfill to avoid requiring consumers ship their own
       * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
       */
      /*eslint-disable no-self-compare*/
      function is(x, y) {
        // SameValue algorithm
        if (x === y) {
          // Steps 1-5, 7-10
          // Steps 6.b-6.e: +0 != -0
          return x !== 0 || 1 / x === 1 / y;
        } else {
          // Step 6.a: NaN == NaN
          return x !== x && y !== y;
        }
      }
      /*eslint-enable no-self-compare*/

      /**
       * We use an Error-like object for backward compatibility as people may call
       * PropTypes directly and inspect their output. However we don't use real
       * Errors anymore. We don't inspect their stack anyway, and creating them
       * is prohibitively expensive if they are created too often, such as what
       * happens in oneOfType() for any type before the one that matched.
       */
      function PropTypeError(message) {
        this.message = message;
        this.stack = '';
      }
      // Make `instanceof Error` still work for returned errors.
      PropTypeError.prototype = Error.prototype;

      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
        }
        function checkType(
          isRequired,
          props,
          propName,
          componentName,
          location,
          propFullName,
          secret,
        ) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (true) {
            if (
              secret !== ReactPropTypesSecret &&
              typeof console !== 'undefined'
            ) {
              var cacheKey = componentName + ':' + propName;
              if (!manualPropTypeCallCache[cacheKey]) {
                true
                  ? warning(
                      false,
                      'You are manually calling a React.PropTypes validation ' +
                        'function for the `%s` prop on `%s`. This is deprecated ' +
                        'and will not work in the next major version. You may be ' +
                        'seeing this warning due to a third-party PropTypes library. ' +
                        'See https://fb.me/react-warning-dont-call-proptypes for details.',
                      propFullName,
                      componentName,
                    )
                  : void 0;
                manualPropTypeCallCache[cacheKey] = true;
              }
            }
          }
          if (props[propName] == null) {
            var locationName = ReactPropTypeLocationNames[location];
            if (isRequired) {
              return new PropTypeError(
                'Required ' +
                  locationName +
                  ' `' +
                  propFullName +
                  '` was not specified in ' +
                  ('`' + componentName + '`.'),
              );
            }
            return null;
          } else {
            return validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            );
          }
        }

        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);

        return chainedCheckType;
      }

      function createPrimitiveTypeChecker(expectedType) {
        function validate(
          props,
          propName,
          componentName,
          location,
          propFullName,
          secret,
        ) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var locationName = ReactPropTypeLocationNames[location];
            // `propValue` being instance of, say, date/regexp, pass the 'object'
            // check, but we can offer a more precise error message here rather than
            // 'of type `object`'.
            var preciseType = getPreciseType(propValue);

            return new PropTypeError(
              'Invalid ' +
                locationName +
                ' `' +
                propFullName +
                '` of type ' +
                ('`' +
                  preciseType +
                  '` supplied to `' +
                  componentName +
                  '`, expected ') +
                ('`' + expectedType + '`.'),
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }

      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunction.thatReturns(null));
      }

      function createArrayOfTypeChecker(typeChecker) {
        function validate(
          props,
          propName,
          componentName,
          location,
          propFullName,
        ) {
          if (typeof typeChecker !== 'function') {
            return new PropTypeError(
              'Property `' +
                propFullName +
                '` of component `' +
                componentName +
                '` has invalid PropType notation inside arrayOf.',
            );
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var locationName = ReactPropTypeLocationNames[location];
            var propType = getPropType(propValue);
            return new PropTypeError(
              'Invalid ' +
                locationName +
                ' `' +
                propFullName +
                '` of type ' +
                ('`' +
                  propType +
                  '` supplied to `' +
                  componentName +
                  '`, expected an array.'),
            );
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(
              propValue,
              i,
              componentName,
              location,
              propFullName + '[' + i + ']',
              ReactPropTypesSecret,
            );
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }

      function createElementTypeChecker() {
        function validate(
          props,
          propName,
          componentName,
          location,
          propFullName,
        ) {
          var propValue = props[propName];
          if (!ReactElement.isValidElement(propValue)) {
            var locationName = ReactPropTypeLocationNames[location];
            var propType = getPropType(propValue);
            return new PropTypeError(
              'Invalid ' +
                locationName +
                ' `' +
                propFullName +
                '` of type ' +
                ('`' +
                  propType +
                  '` supplied to `' +
                  componentName +
                  '`, expected a single ReactElement.'),
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }

      function createInstanceTypeChecker(expectedClass) {
        function validate(
          props,
          propName,
          componentName,
          location,
          propFullName,
        ) {
          if (!(props[propName] instanceof expectedClass)) {
            var locationName = ReactPropTypeLocationNames[location];
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError(
              'Invalid ' +
                locationName +
                ' `' +
                propFullName +
                '` of type ' +
                ('`' +
                  actualClassName +
                  '` supplied to `' +
                  componentName +
                  '`, expected ') +
                ('instance of `' + expectedClassName + '`.'),
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }

      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          true
            ? warning(
                false,
                'Invalid argument supplied to oneOf, expected an instance of array.',
              )
            : void 0;
          return emptyFunction.thatReturnsNull;
        }

        function validate(
          props,
          propName,
          componentName,
          location,
          propFullName,
        ) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }

          var locationName = ReactPropTypeLocationNames[location];
          var valuesString = JSON.stringify(expectedValues);
          return new PropTypeError(
            'Invalid ' +
              locationName +
              ' `' +
              propFullName +
              '` of value `' +
              propValue +
              '` ' +
              ('supplied to `' +
                componentName +
                '`, expected one of ' +
                valuesString +
                '.'),
          );
        }
        return createChainableTypeChecker(validate);
      }

      function createObjectOfTypeChecker(typeChecker) {
        function validate(
          props,
          propName,
          componentName,
          location,
          propFullName,
        ) {
          if (typeof typeChecker !== 'function') {
            return new PropTypeError(
              'Property `' +
                propFullName +
                '` of component `' +
                componentName +
                '` has invalid PropType notation inside objectOf.',
            );
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            var locationName = ReactPropTypeLocationNames[location];
            return new PropTypeError(
              'Invalid ' +
                locationName +
                ' `' +
                propFullName +
                '` of type ' +
                ('`' +
                  propType +
                  '` supplied to `' +
                  componentName +
                  '`, expected an object.'),
            );
          }
          for (var key in propValue) {
            if (propValue.hasOwnProperty(key)) {
              var error = typeChecker(
                propValue,
                key,
                componentName,
                location,
                propFullName + '.' + key,
                ReactPropTypesSecret,
              );
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }

      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true
            ? warning(
                false,
                'Invalid argument supplied to oneOfType, expected an instance of array.',
              )
            : void 0;
          return emptyFunction.thatReturnsNull;
        }

        function validate(
          props,
          propName,
          componentName,
          location,
          propFullName,
        ) {
          for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
            var checker = arrayOfTypeCheckers[i];
            if (
              checker(
                props,
                propName,
                componentName,
                location,
                propFullName,
                ReactPropTypesSecret,
              ) == null
            ) {
              return null;
            }
          }

          var locationName = ReactPropTypeLocationNames[location];
          return new PropTypeError(
            'Invalid ' +
              locationName +
              ' `' +
              propFullName +
              '` supplied to ' +
              ('`' + componentName + '`.'),
          );
        }
        return createChainableTypeChecker(validate);
      }

      function createNodeChecker() {
        function validate(
          props,
          propName,
          componentName,
          location,
          propFullName,
        ) {
          if (!isNode(props[propName])) {
            var locationName = ReactPropTypeLocationNames[location];
            return new PropTypeError(
              'Invalid ' +
                locationName +
                ' `' +
                propFullName +
                '` supplied to ' +
                ('`' + componentName + '`, expected a ReactNode.'),
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }

      function createShapeTypeChecker(shapeTypes) {
        function validate(
          props,
          propName,
          componentName,
          location,
          propFullName,
        ) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            var locationName = ReactPropTypeLocationNames[location];
            return new PropTypeError(
              'Invalid ' +
                locationName +
                ' `' +
                propFullName +
                '` of type `' +
                propType +
                '` ' +
                ('supplied to `' + componentName + '`, expected `object`.'),
            );
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (!checker) {
              continue;
            }
            var error = checker(
              propValue,
              key,
              componentName,
              location,
              propFullName + '.' + key,
              ReactPropTypesSecret,
            );
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }

      function isNode(propValue) {
        switch (typeof propValue) {
          case 'number':
          case 'string':
          case 'undefined':
            return true;
          case 'boolean':
            return !propValue;
          case 'object':
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || ReactElement.isValidElement(propValue)) {
              return true;
            }

            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                // Iterator will provide entry [k,v] tuples rather than values.
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }

            return true;
          default:
            return false;
        }
      }

      function isSymbol(propType, propValue) {
        // Native Symbol.
        if (propType === 'symbol') {
          return true;
        }

        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
        if (propValue['@@toStringTag'] === 'Symbol') {
          return true;
        }

        // Fallback for non-spec compliant Symbols which are polyfilled.
        if (typeof Symbol === 'function' && propValue instanceof Symbol) {
          return true;
        }

        return false;
      }

      // Equivalent of `typeof` but with special handling for array and regexp.
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return 'array';
        }
        if (propValue instanceof RegExp) {
          // Old webkits (at least until Android 4.0) return 'function' rather than
          // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
          // passes PropTypes.object.
          return 'object';
        }
        if (isSymbol(propType, propValue)) {
          return 'symbol';
        }
        return propType;
      }

      // This handles more types than `getPropType`. Only used for error messages.
      // See `createPrimitiveTypeChecker`.
      function getPreciseType(propValue) {
        var propType = getPropType(propValue);
        if (propType === 'object') {
          if (propValue instanceof Date) {
            return 'date';
          } else if (propValue instanceof RegExp) {
            return 'regexp';
          }
        }
        return propType;
      }

      // Returns class name of the object, if any.
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }

      module.exports = ReactPropTypes;

      /***/
    },
    /* 34 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactVersion
       */

      'use strict';

      module.exports = '15.3.2';

      /***/
    },
    /* 35 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule onlyChild
       */
      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var ReactElement = __webpack_require__(10);

      var invariant = __webpack_require__(9);

      /**
       * Returns the first child in a collection of children and verifies that there
       * is only one child in the collection.
       *
       * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
       *
       * The current implementation of this function assumes that a single child gets
       * passed without a wrapper, but the purpose of this helper function is to
       * abstract away the particular structure of children.
       *
       * @param {?object} children Child collection structure.
       * @return {ReactElement} The first and only `ReactElement` contained in the
       * structure.
       */
      function onlyChild(children) {
        !ReactElement.isValidElement(children)
          ? true
            ? invariant(
                false,
                'React.Children.only expected to receive a single React element child.',
              )
            : _prodInvariant('143')
          : void 0;
        return children;
      }

      module.exports = onlyChild;

      /***/
    },
    /* 36 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.router = exports.routes = exports.route = exports.components = exports.component = exports.location = exports.history = exports.falsy = exports.locationShape = exports.routerShape = undefined;

      var _react = __webpack_require__(3);

      var _deprecateObjectProperties = __webpack_require__(37);

      var _deprecateObjectProperties2 = _interopRequireDefault(
        _deprecateObjectProperties,
      );

      var _InternalPropTypes = __webpack_require__(40);

      var InternalPropTypes = _interopRequireWildcard(_InternalPropTypes);

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
          return obj;
        } else {
          var newObj = {};
          if (obj != null) {
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key))
                newObj[key] = obj[key];
            }
          }
          newObj.default = obj;
          return newObj;
        }
      }

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var func = _react.PropTypes.func;
      var object = _react.PropTypes.object;
      var shape = _react.PropTypes.shape;
      var string = _react.PropTypes.string;
      var routerShape = (exports.routerShape = shape({
        push: func.isRequired,
        replace: func.isRequired,
        go: func.isRequired,
        goBack: func.isRequired,
        goForward: func.isRequired,
        setRouteLeaveHook: func.isRequired,
        isActive: func.isRequired,
      }));

      var locationShape = (exports.locationShape = shape({
        pathname: string.isRequired,
        search: string.isRequired,
        state: object,
        action: string.isRequired,
        key: string,
      }));

      // Deprecated stuff below:

      var falsy = (exports.falsy = InternalPropTypes.falsy);
      var history = (exports.history = InternalPropTypes.history);
      var location = (exports.location = locationShape);
      var component = (exports.component = InternalPropTypes.component);
      var components = (exports.components = InternalPropTypes.components);
      var route = (exports.route = InternalPropTypes.route);
      var routes = (exports.routes = InternalPropTypes.routes);
      var router = (exports.router = routerShape);

      if (true) {
        (function () {
          var deprecatePropType = function deprecatePropType(
            propType,
            message,
          ) {
            return function () {
              true ? (0, _routerWarning2.default)(false, message) : void 0;
              return propType.apply(undefined, arguments);
            };
          };

          var deprecateInternalPropType = function deprecateInternalPropType(
            propType,
          ) {
            return deprecatePropType(
              propType,
              'This prop type is not intended for external use, and was previously exported by mistake. These internal prop types are deprecated for external use, and will be removed in a later version.',
            );
          };

          var deprecateRenamedPropType = function deprecateRenamedPropType(
            propType,
            name,
          ) {
            return deprecatePropType(
              propType,
              'The `' +
                name +
                '` prop type is now exported as `' +
                name +
                'Shape` to avoid name conflicts. This export is deprecated and will be removed in a later version.',
            );
          };

          exports.falsy = falsy = deprecateInternalPropType(falsy);
          exports.history = history = deprecateInternalPropType(history);
          exports.component = component = deprecateInternalPropType(component);
          exports.components = components = deprecateInternalPropType(
            components,
          );
          exports.route = route = deprecateInternalPropType(route);
          exports.routes = routes = deprecateInternalPropType(routes);

          exports.location = location = deprecateRenamedPropType(
            location,
            'location',
          );
          exports.router = router = deprecateRenamedPropType(router, 'router');
        })();
      }

      var defaultExport = {
        falsy: falsy,
        history: history,
        location: location,
        component: component,
        components: components,
        route: route,
        // For some reason, routes was never here.
        router: router,
      };

      if (true) {
        defaultExport = (0, _deprecateObjectProperties2.default)(
          defaultExport,
          'The default export from `react-router/lib/PropTypes` is deprecated. Please use the named exports instead.',
        );
      }

      exports.default = defaultExport;

      /***/
    },
    /* 37 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.canUseMembrane = undefined;

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var canUseMembrane = (exports.canUseMembrane = false);

      // No-op by default.
      var deprecateObjectProperties = function deprecateObjectProperties(
        object,
      ) {
        return object;
      };

      if (true) {
        try {
          if (
            Object.defineProperty({}, 'x', {
              get: function get() {
                return true;
              },
            }).x
          ) {
            exports.canUseMembrane = canUseMembrane = true;
          }
          /* eslint-disable no-empty */
        } catch (e) {}
        /* eslint-enable no-empty */

        if (canUseMembrane) {
          deprecateObjectProperties = function deprecateObjectProperties(
            object,
            message,
          ) {
            // Wrap the deprecated object in a membrane to warn on property access.
            var membrane = {};

            var _loop = function _loop(prop) {
              if (!Object.prototype.hasOwnProperty.call(object, prop)) {
                return 'continue';
              }

              if (typeof object[prop] === 'function') {
                // Can't use fat arrow here because of use of arguments below.
                membrane[prop] = function () {
                  true ? (0, _routerWarning2.default)(false, message) : void 0;
                  return object[prop].apply(object, arguments);
                };
                return 'continue';
              }

              // These properties are non-enumerable to prevent React dev tools from
              // seeing them and causing spurious warnings when accessing them. In
              // principle this could be done with a proxy, but support for the
              // ownKeys trap on proxies is not universal, even among browsers that
              // otherwise support proxies.
              Object.defineProperty(membrane, prop, {
                get: function get() {
                  true ? (0, _routerWarning2.default)(false, message) : void 0;
                  return object[prop];
                },
              });
            };

            for (var prop in object) {
              var _ret = _loop(prop);

              if (_ret === 'continue') continue;
            }

            return membrane;
          };
        }
      }

      exports.default = deprecateObjectProperties;

      /***/
    },
    /* 38 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.default = routerWarning;
      exports._resetWarned = _resetWarned;

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var warned = {};

      function routerWarning(falseToWarn, message) {
        // Only issue deprecation warnings once.
        if (message.indexOf('deprecated') !== -1) {
          if (warned[message]) {
            return;
          }

          warned[message] = true;
        }

        message = '[react-router] ' + message;

        for (
          var _len = arguments.length,
            args = Array(_len > 2 ? _len - 2 : 0),
            _key = 2;
          _key < _len;
          _key++
        ) {
          args[_key - 2] = arguments[_key];
        }

        _warning2.default.apply(undefined, [falseToWarn, message].concat(args));
      }

      function _resetWarned() {
        warned = {};
      }

      /***/
    },
    /* 39 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2014-2015, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       */

      'use strict';

      /**
       * Similar to invariant but only logs a warning if the condition is not met.
       * This can be used to log issues in development environments in critical
       * paths. Removing the logging code for production environments will keep the
       * same logic and follow the same code paths.
       */

      var warning = function () {};

      if (true) {
        warning = function (condition, format, args) {
          var len = arguments.length;
          args = new Array(len > 2 ? len - 2 : 0);
          for (var key = 2; key < len; key++) {
            args[key - 2] = arguments[key];
          }
          if (format === undefined) {
            throw new Error(
              '`warning(condition, format, ...args)` requires a warning ' +
                'message argument',
            );
          }

          if (format.length < 10 || /^[s\W]*$/.test(format)) {
            throw new Error(
              'The warning format should be able to uniquely identify this ' +
                'warning. Please, use a more descriptive format than: ' +
                format,
            );
          }

          if (!condition) {
            var argIndex = 0;
            var message =
              'Warning: ' +
              format.replace(/%s/g, function () {
                return args[argIndex++];
              });
            if (typeof console !== 'undefined') {
              console.error(message);
            }
            try {
              // This error was thrown as a convenience so that you can use this stack
              // to find the callsite that caused this warning to fire.
              throw new Error(message);
            } catch (x) {}
          }
        };
      }

      module.exports = warning;

      /***/
    },
    /* 40 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.routes = exports.route = exports.components = exports.component = exports.history = undefined;
      exports.falsy = falsy;

      var _react = __webpack_require__(3);

      var func = _react.PropTypes.func;
      var object = _react.PropTypes.object;
      var arrayOf = _react.PropTypes.arrayOf;
      var oneOfType = _react.PropTypes.oneOfType;
      var element = _react.PropTypes.element;
      var shape = _react.PropTypes.shape;
      var string = _react.PropTypes.string;
      function falsy(props, propName, componentName) {
        if (props[propName])
          return new Error(
            '<' + componentName + '> should not have a "' + propName + '" prop',
          );
      }

      var history = (exports.history = shape({
        listen: func.isRequired,
        push: func.isRequired,
        replace: func.isRequired,
        go: func.isRequired,
        goBack: func.isRequired,
        goForward: func.isRequired,
      }));

      var component = (exports.component = oneOfType([func, string]));
      var components = (exports.components = oneOfType([component, object]));
      var route = (exports.route = oneOfType([object, element]));
      var routes = (exports.routes = oneOfType([route, arrayOf(route)]));

      /***/
    },
    /* 41 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.compilePattern = compilePattern;
      exports.matchPattern = matchPattern;
      exports.getParamNames = getParamNames;
      exports.getParams = getParams;
      exports.formatPattern = formatPattern;

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function escapeRegExp(string) {
        return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
      }

      function _compilePattern(pattern) {
        var regexpSource = '';
        var paramNames = [];
        var tokens = [];

        var match = void 0,
          lastIndex = 0,
          matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\*\*|\*|\(|\)/g;
        while ((match = matcher.exec(pattern))) {
          if (match.index !== lastIndex) {
            tokens.push(pattern.slice(lastIndex, match.index));
            regexpSource += escapeRegExp(pattern.slice(lastIndex, match.index));
          }

          if (match[1]) {
            regexpSource += '([^/]+)';
            paramNames.push(match[1]);
          } else if (match[0] === '**') {
            regexpSource += '(.*)';
            paramNames.push('splat');
          } else if (match[0] === '*') {
            regexpSource += '(.*?)';
            paramNames.push('splat');
          } else if (match[0] === '(') {
            regexpSource += '(?:';
          } else if (match[0] === ')') {
            regexpSource += ')?';
          }

          tokens.push(match[0]);

          lastIndex = matcher.lastIndex;
        }

        if (lastIndex !== pattern.length) {
          tokens.push(pattern.slice(lastIndex, pattern.length));
          regexpSource += escapeRegExp(
            pattern.slice(lastIndex, pattern.length),
          );
        }

        return {
          pattern: pattern,
          regexpSource: regexpSource,
          paramNames: paramNames,
          tokens: tokens,
        };
      }

      var CompiledPatternsCache = Object.create(null);

      function compilePattern(pattern) {
        if (!CompiledPatternsCache[pattern])
          CompiledPatternsCache[pattern] = _compilePattern(pattern);

        return CompiledPatternsCache[pattern];
      }

      /**
       * Attempts to match a pattern on the given pathname. Patterns may use
       * the following special characters:
       *
       * - :paramName     Matches a URL segment up to the next /, ?, or #. The
       *                  captured string is considered a "param"
       * - ()             Wraps a segment of the URL that is optional
       * - *              Consumes (non-greedy) all characters up to the next
       *                  character in the pattern, or to the end of the URL if
       *                  there is none
       * - **             Consumes (greedy) all characters up to the next character
       *                  in the pattern, or to the end of the URL if there is none
       *
       *  The function calls callback(error, matched) when finished.
       * The return value is an object with the following properties:
       *
       * - remainingPathname
       * - paramNames
       * - paramValues
       */
      function matchPattern(pattern, pathname) {
        // Ensure pattern starts with leading slash for consistency with pathname.
        if (pattern.charAt(0) !== '/') {
          pattern = '/' + pattern;
        }

        var _compilePattern2 = compilePattern(pattern);

        var regexpSource = _compilePattern2.regexpSource;
        var paramNames = _compilePattern2.paramNames;
        var tokens = _compilePattern2.tokens;

        if (pattern.charAt(pattern.length - 1) !== '/') {
          regexpSource += '/?'; // Allow optional path separator at end.
        }

        // Special-case patterns like '*' for catch-all routes.
        if (tokens[tokens.length - 1] === '*') {
          regexpSource += '$';
        }

        var match = pathname.match(new RegExp('^' + regexpSource, 'i'));
        if (match == null) {
          return null;
        }

        var matchedPath = match[0];
        var remainingPathname = pathname.substr(matchedPath.length);

        if (remainingPathname) {
          // Require that the match ends at a path separator, if we didn't match
          // the full path, so any remaining pathname is a new path segment.
          if (matchedPath.charAt(matchedPath.length - 1) !== '/') {
            return null;
          }

          // If there is a remaining pathname, treat the path separator as part of
          // the remaining pathname for properly continuing the match.
          remainingPathname = '/' + remainingPathname;
        }

        return {
          remainingPathname: remainingPathname,
          paramNames: paramNames,
          paramValues: match.slice(1).map(function (v) {
            return v && decodeURIComponent(v);
          }),
        };
      }

      function getParamNames(pattern) {
        return compilePattern(pattern).paramNames;
      }

      function getParams(pattern, pathname) {
        var match = matchPattern(pattern, pathname);
        if (!match) {
          return null;
        }

        var paramNames = match.paramNames;
        var paramValues = match.paramValues;

        var params = {};

        paramNames.forEach(function (paramName, index) {
          params[paramName] = paramValues[index];
        });

        return params;
      }

      /**
       * Returns a version of the given pattern with params interpolated. Throws
       * if there is a dynamic segment of the pattern for which there is no param.
       */
      function formatPattern(pattern, params) {
        params = params || {};

        var _compilePattern3 = compilePattern(pattern);

        var tokens = _compilePattern3.tokens;

        var parenCount = 0,
          pathname = '',
          splatIndex = 0;

        var token = void 0,
          paramName = void 0,
          paramValue = void 0;
        for (var i = 0, len = tokens.length; i < len; ++i) {
          token = tokens[i];

          if (token === '*' || token === '**') {
            paramValue = Array.isArray(params.splat)
              ? params.splat[splatIndex++]
              : params.splat;

            !(paramValue != null || parenCount > 0)
              ? true
                ? (0, _invariant2.default)(
                    false,
                    'Missing splat #%s for path "%s"',
                    splatIndex,
                    pattern,
                  )
                : (0, _invariant2.default)(false)
              : void 0;

            if (paramValue != null) pathname += encodeURI(paramValue);
          } else if (token === '(') {
            parenCount += 1;
          } else if (token === ')') {
            parenCount -= 1;
          } else if (token.charAt(0) === ':') {
            paramName = token.substring(1);
            paramValue = params[paramName];

            !(paramValue != null || parenCount > 0)
              ? true
                ? (0, _invariant2.default)(
                    false,
                    'Missing "%s" parameter for path "%s"',
                    paramName,
                    pattern,
                  )
                : (0, _invariant2.default)(false)
              : void 0;

            if (paramValue != null) pathname += encodeURIComponent(paramValue);
          } else {
            pathname += token;
          }
        }

        return pathname.replace(/\/+/g, '/');
      }

      /***/
    },
    /* 42 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-2015, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       */

      'use strict';

      /**
       * Use invariant() to assert state which your program assumes to be true.
       *
       * Provide sprintf-style format (only %s is supported) and arguments
       * to provide information about what broke and what you were
       * expecting.
       *
       * The invariant message will be stripped in production, but the invariant
       * will remain to ensure logic does not differ in production.
       */

      var invariant = function (condition, format, a, b, c, d, e, f) {
        if (true) {
          if (format === undefined) {
            throw new Error('invariant requires an error message argument');
          }
        }

        if (!condition) {
          var error;
          if (format === undefined) {
            error = new Error(
              'Minified exception occurred; use the non-minified dev environment ' +
                'for the full error message and additional helpful warnings.',
            );
          } else {
            var args = [a, b, c, d, e, f];
            var argIndex = 0;
            error = new Error(
              format.replace(/%s/g, function () {
                return args[argIndex++];
              }),
            );
            error.name = 'Invariant Violation';
          }

          error.framesToPop = 1; // we don't care about invariant's own frame
          throw error;
        }
      };

      module.exports = invariant;

      /***/
    },
    /* 43 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createHashHistory = __webpack_require__(44);

      var _createHashHistory2 = _interopRequireDefault(_createHashHistory);

      var _useQueries = __webpack_require__(60);

      var _useQueries2 = _interopRequireDefault(_useQueries);

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _createTransitionManager = __webpack_require__(63);

      var _createTransitionManager2 = _interopRequireDefault(
        _createTransitionManager,
      );

      var _InternalPropTypes = __webpack_require__(40);

      var _RouterContext = __webpack_require__(71);

      var _RouterContext2 = _interopRequireDefault(_RouterContext);

      var _RouteUtils = __webpack_require__(2);

      var _RouterUtils = __webpack_require__(73);

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function isDeprecatedHistory(history) {
        return !history || !history.__v2_compatible__;
      }

      /* istanbul ignore next: sanity check */
      function isUnsupportedHistory(history) {
        // v3 histories expose getCurrentLocation, but aren't currently supported.
        return history && history.getCurrentLocation;
      }

      var _React$PropTypes = _react2.default.PropTypes;
      var func = _React$PropTypes.func;
      var object = _React$PropTypes.object;

      /**
       * A <Router> is a high-level API for automatically setting up
       * a router that renders a <RouterContext> with all the props
       * it needs each time the URL changes.
       */

      var Router = _react2.default.createClass({
        displayName: 'Router',

        propTypes: {
          history: object,
          children: _InternalPropTypes.routes,
          routes: _InternalPropTypes.routes, // alias for children
          render: func,
          createElement: func,
          onError: func,
          onUpdate: func,

          // Deprecated:
          parseQueryString: func,
          stringifyQuery: func,

          // PRIVATE: For client-side rehydration of server match.
          matchContext: object,
        },

        getDefaultProps: function getDefaultProps() {
          return {
            render: function render(props) {
              return _react2.default.createElement(
                _RouterContext2.default,
                props,
              );
            },
          };
        },
        getInitialState: function getInitialState() {
          return {
            location: null,
            routes: null,
            params: null,
            components: null,
          };
        },
        handleError: function handleError(error) {
          if (this.props.onError) {
            this.props.onError.call(this, error);
          } else {
            // Throw errors by default so we don't silently swallow them!
            throw error; // This error probably occurred in getChildRoutes or getComponents.
          }
        },
        componentWillMount: function componentWillMount() {
          var _this = this;

          var _props = this.props;
          var parseQueryString = _props.parseQueryString;
          var stringifyQuery = _props.stringifyQuery;

          true
            ? (0, _routerWarning2.default)(
                !(parseQueryString || stringifyQuery),
                '`parseQueryString` and `stringifyQuery` are deprecated. Please create a custom history. http://tiny.cc/router-customquerystring',
              )
            : void 0;

          var _createRouterObjects = this.createRouterObjects();

          var history = _createRouterObjects.history;
          var transitionManager = _createRouterObjects.transitionManager;
          var router = _createRouterObjects.router;

          this._unlisten = transitionManager.listen(function (error, state) {
            if (error) {
              _this.handleError(error);
            } else {
              _this.setState(state, _this.props.onUpdate);
            }
          });

          this.history = history;
          this.router = router;
        },
        createRouterObjects: function createRouterObjects() {
          var matchContext = this.props.matchContext;

          if (matchContext) {
            return matchContext;
          }

          var history = this.props.history;
          var _props2 = this.props;
          var routes = _props2.routes;
          var children = _props2.children;

          !!isUnsupportedHistory(history)
            ? true
              ? (0, _invariant2.default)(
                  false,
                  'You have provided a history object created with history v3.x. ' +
                    'This version of React Router is not compatible with v3 history ' +
                    'objects. Please use history v2.x instead.',
                )
              : (0, _invariant2.default)(false)
            : void 0;

          if (isDeprecatedHistory(history)) {
            history = this.wrapDeprecatedHistory(history);
          }

          var transitionManager = (0, _createTransitionManager2.default)(
            history,
            (0, _RouteUtils.createRoutes)(routes || children),
          );
          var router = (0, _RouterUtils.createRouterObject)(
            history,
            transitionManager,
          );
          var routingHistory = (0, _RouterUtils.createRoutingHistory)(
            history,
            transitionManager,
          );

          return {
            history: routingHistory,
            transitionManager: transitionManager,
            router: router,
          };
        },
        wrapDeprecatedHistory: function wrapDeprecatedHistory(history) {
          var _props3 = this.props;
          var parseQueryString = _props3.parseQueryString;
          var stringifyQuery = _props3.stringifyQuery;

          var createHistory = void 0;
          if (history) {
            true
              ? (0, _routerWarning2.default)(
                  false,
                  'It appears you have provided a deprecated history object to `<Router/>`, please use a history provided by ' +
                    "React Router with `import { browserHistory } from 'react-router'` or `import { hashHistory } from 'react-router'`. " +
                    'If you are using a custom history please create it with `useRouterHistory`, see http://tiny.cc/router-usinghistory for details.',
                )
              : void 0;
            createHistory = function createHistory() {
              return history;
            };
          } else {
            true
              ? (0, _routerWarning2.default)(
                  false,
                  '`Router` no longer defaults the history prop to hash history. Please use the `hashHistory` singleton instead. http://tiny.cc/router-defaulthistory',
                )
              : void 0;
            createHistory = _createHashHistory2.default;
          }

          return (0, _useQueries2.default)(createHistory)({
            parseQueryString: parseQueryString,
            stringifyQuery: stringifyQuery,
          });
        },

        /* istanbul ignore next: sanity check */
        componentWillReceiveProps: function componentWillReceiveProps(
          nextProps,
        ) {
          true
            ? (0, _routerWarning2.default)(
                nextProps.history === this.props.history,
                'You cannot change <Router history>; it will be ignored',
              )
            : void 0;

          true
            ? (0, _routerWarning2.default)(
                (nextProps.routes || nextProps.children) ===
                  (this.props.routes || this.props.children),
                'You cannot change <Router routes>; it will be ignored',
              )
            : void 0;
        },
        componentWillUnmount: function componentWillUnmount() {
          if (this._unlisten) this._unlisten();
        },
        render: function render() {
          var _state = this.state;
          var location = _state.location;
          var routes = _state.routes;
          var params = _state.params;
          var components = _state.components;
          var _props4 = this.props;
          var createElement = _props4.createElement;
          var render = _props4.render;

          var props = _objectWithoutProperties(_props4, [
            'createElement',
            'render',
          ]);

          if (location == null) return null; // Async match

          // Only forward non-Router-specific props to routing context, as those are
          // the only ones that might be custom routing context props.
          Object.keys(Router.propTypes).forEach(function (propType) {
            return delete props[propType];
          });

          return render(
            _extends({}, props, {
              history: this.history,
              router: this.router,
              location: location,
              routes: routes,
              params: params,
              components: components,
              createElement: createElement,
            }),
          );
        },
      });

      exports.default = Router;
      module.exports = exports['default'];

      /***/
    },
    /* 44 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _warning = __webpack_require__(45);

      var _warning2 = _interopRequireDefault(_warning);

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      var _Actions = __webpack_require__(46);

      var _PathUtils = __webpack_require__(47);

      var _ExecutionEnvironment = __webpack_require__(48);

      var _DOMUtils = __webpack_require__(49);

      var _DOMStateStorage = __webpack_require__(50);

      var _createDOMHistory = __webpack_require__(51);

      var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);

      function isAbsolutePath(path) {
        return typeof path === 'string' && path.charAt(0) === '/';
      }

      function ensureSlash() {
        var path = _DOMUtils.getHashPath();

        if (isAbsolutePath(path)) return true;

        _DOMUtils.replaceHashPath('/' + path);

        return false;
      }

      function addQueryStringValueToPath(path, key, value) {
        return (
          path + (path.indexOf('?') === -1 ? '?' : '&') + (key + '=' + value)
        );
      }

      function stripQueryStringValueFromPath(path, key) {
        return path.replace(new RegExp('[?&]?' + key + '=[a-zA-Z0-9]+'), '');
      }

      function getQueryStringValueFromPath(path, key) {
        var match = path.match(new RegExp('\\?.*?\\b' + key + '=(.+?)\\b'));
        return match && match[1];
      }

      var DefaultQueryKey = '_k';

      function createHashHistory() {
        var options =
          arguments.length <= 0 || arguments[0] === undefined
            ? {}
            : arguments[0];

        !_ExecutionEnvironment.canUseDOM
          ? true
            ? _invariant2['default'](false, 'Hash history needs a DOM')
            : _invariant2['default'](false)
          : undefined;

        var queryKey = options.queryKey;

        if (queryKey === undefined || !!queryKey)
          queryKey = typeof queryKey === 'string' ? queryKey : DefaultQueryKey;

        function getCurrentLocation() {
          var path = _DOMUtils.getHashPath();

          var key = undefined,
            state = undefined;
          if (queryKey) {
            key = getQueryStringValueFromPath(path, queryKey);
            path = stripQueryStringValueFromPath(path, queryKey);

            if (key) {
              state = _DOMStateStorage.readState(key);
            } else {
              state = null;
              key = history.createKey();
              _DOMUtils.replaceHashPath(
                addQueryStringValueToPath(path, queryKey, key),
              );
            }
          } else {
            key = state = null;
          }

          var location = _PathUtils.parsePath(path);

          return history.createLocation(
            _extends({}, location, { state: state }),
            undefined,
            key,
          );
        }

        function startHashChangeListener(_ref) {
          var transitionTo = _ref.transitionTo;

          function hashChangeListener() {
            if (!ensureSlash()) return; // Always make sure hashes are preceeded with a /.

            transitionTo(getCurrentLocation());
          }

          ensureSlash();
          _DOMUtils.addEventListener(window, 'hashchange', hashChangeListener);

          return function () {
            _DOMUtils.removeEventListener(
              window,
              'hashchange',
              hashChangeListener,
            );
          };
        }

        function finishTransition(location) {
          var basename = location.basename;
          var pathname = location.pathname;
          var search = location.search;
          var state = location.state;
          var action = location.action;
          var key = location.key;

          if (action === _Actions.POP) return; // Nothing to do.

          var path = (basename || '') + pathname + search;

          if (queryKey) {
            path = addQueryStringValueToPath(path, queryKey, key);
            _DOMStateStorage.saveState(key, state);
          } else {
            // Drop key and state.
            location.key = location.state = null;
          }

          var currentHash = _DOMUtils.getHashPath();

          if (action === _Actions.PUSH) {
            if (currentHash !== path) {
              window.location.hash = path;
            } else {
              true
                ? _warning2['default'](
                    false,
                    'You cannot PUSH the same path using hash history',
                  )
                : undefined;
            }
          } else if (currentHash !== path) {
            // REPLACE
            _DOMUtils.replaceHashPath(path);
          }
        }

        var history = _createDOMHistory2['default'](
          _extends({}, options, {
            getCurrentLocation: getCurrentLocation,
            finishTransition: finishTransition,
            saveState: _DOMStateStorage.saveState,
          }),
        );

        var listenerCount = 0,
          stopHashChangeListener = undefined;

        function listenBefore(listener) {
          if (++listenerCount === 1)
            stopHashChangeListener = startHashChangeListener(history);

          var unlisten = history.listenBefore(listener);

          return function () {
            unlisten();

            if (--listenerCount === 0) stopHashChangeListener();
          };
        }

        function listen(listener) {
          if (++listenerCount === 1)
            stopHashChangeListener = startHashChangeListener(history);

          var unlisten = history.listen(listener);

          return function () {
            unlisten();

            if (--listenerCount === 0) stopHashChangeListener();
          };
        }

        function push(location) {
          true
            ? _warning2['default'](
                queryKey || location.state == null,
                'You cannot use state without a queryKey it will be dropped',
              )
            : undefined;

          history.push(location);
        }

        function replace(location) {
          true
            ? _warning2['default'](
                queryKey || location.state == null,
                'You cannot use state without a queryKey it will be dropped',
              )
            : undefined;

          history.replace(location);
        }

        var goIsSupportedWithoutReload = _DOMUtils.supportsGoWithoutReloadUsingHash();

        function go(n) {
          true
            ? _warning2['default'](
                goIsSupportedWithoutReload,
                'Hash history go(n) causes a full page reload in this browser',
              )
            : undefined;

          history.go(n);
        }

        function createHref(path) {
          return '#' + history.createHref(path);
        }

        // deprecated
        function registerTransitionHook(hook) {
          if (++listenerCount === 1)
            stopHashChangeListener = startHashChangeListener(history);

          history.registerTransitionHook(hook);
        }

        // deprecated
        function unregisterTransitionHook(hook) {
          history.unregisterTransitionHook(hook);

          if (--listenerCount === 0) stopHashChangeListener();
        }

        // deprecated
        function pushState(state, path) {
          true
            ? _warning2['default'](
                queryKey || state == null,
                'You cannot use state without a queryKey it will be dropped',
              )
            : undefined;

          history.pushState(state, path);
        }

        // deprecated
        function replaceState(state, path) {
          true
            ? _warning2['default'](
                queryKey || state == null,
                'You cannot use state without a queryKey it will be dropped',
              )
            : undefined;

          history.replaceState(state, path);
        }

        return _extends({}, history, {
          listenBefore: listenBefore,
          listen: listen,
          push: push,
          replace: replace,
          go: go,
          createHref: createHref,

          registerTransitionHook: registerTransitionHook, // deprecated - warning is in createHistory
          unregisterTransitionHook: unregisterTransitionHook, // deprecated - warning is in createHistory
          pushState: pushState, // deprecated - warning is in createHistory
          replaceState: replaceState, // deprecated - warning is in createHistory
        });
      }

      exports['default'] = createHashHistory;
      module.exports = exports['default'];

      /***/
    },
    /* 45 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2014-2015, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       */

      'use strict';

      /**
       * Similar to invariant but only logs a warning if the condition is not met.
       * This can be used to log issues in development environments in critical
       * paths. Removing the logging code for production environments will keep the
       * same logic and follow the same code paths.
       */

      var warning = function () {};

      if (true) {
        warning = function (condition, format, args) {
          var len = arguments.length;
          args = new Array(len > 2 ? len - 2 : 0);
          for (var key = 2; key < len; key++) {
            args[key - 2] = arguments[key];
          }
          if (format === undefined) {
            throw new Error(
              '`warning(condition, format, ...args)` requires a warning ' +
                'message argument',
            );
          }

          if (format.length < 10 || /^[s\W]*$/.test(format)) {
            throw new Error(
              'The warning format should be able to uniquely identify this ' +
                'warning. Please, use a more descriptive format than: ' +
                format,
            );
          }

          if (!condition) {
            var argIndex = 0;
            var message =
              'Warning: ' +
              format.replace(/%s/g, function () {
                return args[argIndex++];
              });
            if (typeof console !== 'undefined') {
              console.error(message);
            }
            try {
              // This error was thrown as a convenience so that you can use this stack
              // to find the callsite that caused this warning to fire.
              throw new Error(message);
            } catch (x) {}
          }
        };
      }

      module.exports = warning;

      /***/
    },
    /* 46 */
    /***/ function (module, exports) {
      /**
       * Indicates that navigation was caused by a call to history.push.
       */
      'use strict';

      exports.__esModule = true;
      var PUSH = 'PUSH';

      exports.PUSH = PUSH;
      /**
       * Indicates that navigation was caused by a call to history.replace.
       */
      var REPLACE = 'REPLACE';

      exports.REPLACE = REPLACE;
      /**
       * Indicates that navigation was caused by some other action such
       * as using a browser's back/forward buttons and/or manually manipulating
       * the URL in a browser's location bar. This is the default.
       *
       * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate
       * for more information.
       */
      var POP = 'POP';

      exports.POP = POP;
      exports['default'] = {
        PUSH: PUSH,
        REPLACE: REPLACE,
        POP: POP,
      };

      /***/
    },
    /* 47 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.extractPath = extractPath;
      exports.parsePath = parsePath;

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _warning = __webpack_require__(45);

      var _warning2 = _interopRequireDefault(_warning);

      function extractPath(string) {
        var match = string.match(/^https?:\/\/[^\/]*/);

        if (match == null) return string;

        return string.substring(match[0].length);
      }

      function parsePath(path) {
        var pathname = extractPath(path);
        var search = '';
        var hash = '';

        true
          ? _warning2['default'](
              path === pathname,
              'A path must be pathname + search + hash only, not a fully qualified URL like "%s"',
              path,
            )
          : undefined;

        var hashIndex = pathname.indexOf('#');
        if (hashIndex !== -1) {
          hash = pathname.substring(hashIndex);
          pathname = pathname.substring(0, hashIndex);
        }

        var searchIndex = pathname.indexOf('?');
        if (searchIndex !== -1) {
          search = pathname.substring(searchIndex);
          pathname = pathname.substring(0, searchIndex);
        }

        if (pathname === '') pathname = '/';

        return {
          pathname: pathname,
          search: search,
          hash: hash,
        };
      }

      /***/
    },
    /* 48 */
    /***/ function (module, exports) {
      'use strict';

      exports.__esModule = true;
      var canUseDOM = !!(
        typeof window !== 'undefined' &&
        window.document &&
        window.document.createElement
      );
      exports.canUseDOM = canUseDOM;

      /***/
    },
    /* 49 */
    /***/ function (module, exports) {
      'use strict';

      exports.__esModule = true;
      exports.addEventListener = addEventListener;
      exports.removeEventListener = removeEventListener;
      exports.getHashPath = getHashPath;
      exports.replaceHashPath = replaceHashPath;
      exports.getWindowPath = getWindowPath;
      exports.go = go;
      exports.getUserConfirmation = getUserConfirmation;
      exports.supportsHistory = supportsHistory;
      exports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;

      function addEventListener(node, event, listener) {
        if (node.addEventListener) {
          node.addEventListener(event, listener, false);
        } else {
          node.attachEvent('on' + event, listener);
        }
      }

      function removeEventListener(node, event, listener) {
        if (node.removeEventListener) {
          node.removeEventListener(event, listener, false);
        } else {
          node.detachEvent('on' + event, listener);
        }
      }

      function getHashPath() {
        // We can't use window.location.hash here because it's not
        // consistent across browsers - Firefox will pre-decode it!
        return window.location.href.split('#')[1] || '';
      }

      function replaceHashPath(path) {
        window.location.replace(
          window.location.pathname + window.location.search + '#' + path,
        );
      }

      function getWindowPath() {
        return (
          window.location.pathname +
          window.location.search +
          window.location.hash
        );
      }

      function go(n) {
        if (n) window.history.go(n);
      }

      function getUserConfirmation(message, callback) {
        callback(window.confirm(message));
      }

      /**
       * Returns true if the HTML5 history API is supported. Taken from Modernizr.
       *
       * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
       * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
       * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586
       */

      function supportsHistory() {
        var ua = navigator.userAgent;
        if (
          (ua.indexOf('Android 2.') !== -1 ||
            ua.indexOf('Android 4.0') !== -1) &&
          ua.indexOf('Mobile Safari') !== -1 &&
          ua.indexOf('Chrome') === -1 &&
          ua.indexOf('Windows Phone') === -1
        ) {
          return false;
        }
        return window.history && 'pushState' in window.history;
      }

      /**
       * Returns false if using go(n) with hash history causes a full page reload.
       */

      function supportsGoWithoutReloadUsingHash() {
        var ua = navigator.userAgent;
        return ua.indexOf('Firefox') === -1;
      }

      /***/
    },
    /* 50 */
    /***/ function (module, exports, __webpack_require__) {
      /*eslint-disable no-empty */
      'use strict';

      exports.__esModule = true;
      exports.saveState = saveState;
      exports.readState = readState;

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _warning = __webpack_require__(45);

      var _warning2 = _interopRequireDefault(_warning);

      var KeyPrefix = '@@History/';
      var QuotaExceededErrors = ['QuotaExceededError', 'QUOTA_EXCEEDED_ERR'];

      var SecurityError = 'SecurityError';

      function createKey(key) {
        return KeyPrefix + key;
      }

      function saveState(key, state) {
        try {
          if (state == null) {
            window.sessionStorage.removeItem(createKey(key));
          } else {
            window.sessionStorage.setItem(
              createKey(key),
              JSON.stringify(state),
            );
          }
        } catch (error) {
          if (error.name === SecurityError) {
            // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
            // attempt to access window.sessionStorage.
            true
              ? _warning2['default'](
                  false,
                  '[history] Unable to save state; sessionStorage is not available due to security settings',
                )
              : undefined;

            return;
          }

          if (
            QuotaExceededErrors.indexOf(error.name) >= 0 &&
            window.sessionStorage.length === 0
          ) {
            // Safari "private mode" throws QuotaExceededError.
            true
              ? _warning2['default'](
                  false,
                  '[history] Unable to save state; sessionStorage is not available in Safari private mode',
                )
              : undefined;

            return;
          }

          throw error;
        }
      }

      function readState(key) {
        var json = undefined;
        try {
          json = window.sessionStorage.getItem(createKey(key));
        } catch (error) {
          if (error.name === SecurityError) {
            // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
            // attempt to access window.sessionStorage.
            true
              ? _warning2['default'](
                  false,
                  '[history] Unable to read state; sessionStorage is not available due to security settings',
                )
              : undefined;

            return null;
          }
        }

        if (json) {
          try {
            return JSON.parse(json);
          } catch (error) {
            // Ignore invalid JSON.
          }
        }

        return null;
      }

      /***/
    },
    /* 51 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      var _ExecutionEnvironment = __webpack_require__(48);

      var _DOMUtils = __webpack_require__(49);

      var _createHistory = __webpack_require__(52);

      var _createHistory2 = _interopRequireDefault(_createHistory);

      function createDOMHistory(options) {
        var history = _createHistory2['default'](
          _extends(
            {
              getUserConfirmation: _DOMUtils.getUserConfirmation,
            },
            options,
            {
              go: _DOMUtils.go,
            },
          ),
        );

        function listen(listener) {
          !_ExecutionEnvironment.canUseDOM
            ? true
              ? _invariant2['default'](false, 'DOM history needs a DOM')
              : _invariant2['default'](false)
            : undefined;

          return history.listen(listener);
        }

        return _extends({}, history, {
          listen: listen,
        });
      }

      exports['default'] = createDOMHistory;
      module.exports = exports['default'];

      /***/
    },
    /* 52 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _warning = __webpack_require__(45);

      var _warning2 = _interopRequireDefault(_warning);

      var _deepEqual = __webpack_require__(53);

      var _deepEqual2 = _interopRequireDefault(_deepEqual);

      var _PathUtils = __webpack_require__(47);

      var _AsyncUtils = __webpack_require__(56);

      var _Actions = __webpack_require__(46);

      var _createLocation2 = __webpack_require__(57);

      var _createLocation3 = _interopRequireDefault(_createLocation2);

      var _runTransitionHook = __webpack_require__(58);

      var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

      var _deprecate = __webpack_require__(59);

      var _deprecate2 = _interopRequireDefault(_deprecate);

      function createRandomKey(length) {
        return Math.random().toString(36).substr(2, length);
      }

      function locationsAreEqual(a, b) {
        return (
          a.pathname === b.pathname &&
          a.search === b.search &&
          //a.action === b.action && // Different action !== location change.
          a.key === b.key &&
          _deepEqual2['default'](a.state, b.state)
        );
      }

      var DefaultKeyLength = 6;

      function createHistory() {
        var options =
          arguments.length <= 0 || arguments[0] === undefined
            ? {}
            : arguments[0];
        var getCurrentLocation = options.getCurrentLocation;
        var finishTransition = options.finishTransition;
        var saveState = options.saveState;
        var go = options.go;
        var getUserConfirmation = options.getUserConfirmation;
        var keyLength = options.keyLength;

        if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;

        var transitionHooks = [];

        function listenBefore(hook) {
          transitionHooks.push(hook);

          return function () {
            transitionHooks = transitionHooks.filter(function (item) {
              return item !== hook;
            });
          };
        }

        var allKeys = [];
        var changeListeners = [];
        var location = undefined;

        function getCurrent() {
          if (pendingLocation && pendingLocation.action === _Actions.POP) {
            return allKeys.indexOf(pendingLocation.key);
          } else if (location) {
            return allKeys.indexOf(location.key);
          } else {
            return -1;
          }
        }

        function updateLocation(newLocation) {
          var current = getCurrent();

          location = newLocation;

          if (location.action === _Actions.PUSH) {
            allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);
          } else if (location.action === _Actions.REPLACE) {
            allKeys[current] = location.key;
          }

          changeListeners.forEach(function (listener) {
            listener(location);
          });
        }

        function listen(listener) {
          changeListeners.push(listener);

          if (location) {
            listener(location);
          } else {
            var _location = getCurrentLocation();
            allKeys = [_location.key];
            updateLocation(_location);
          }

          return function () {
            changeListeners = changeListeners.filter(function (item) {
              return item !== listener;
            });
          };
        }

        function confirmTransitionTo(location, callback) {
          _AsyncUtils.loopAsync(
            transitionHooks.length,
            function (index, next, done) {
              _runTransitionHook2['default'](
                transitionHooks[index],
                location,
                function (result) {
                  if (result != null) {
                    done(result);
                  } else {
                    next();
                  }
                },
              );
            },
            function (message) {
              if (getUserConfirmation && typeof message === 'string') {
                getUserConfirmation(message, function (ok) {
                  callback(ok !== false);
                });
              } else {
                callback(message !== false);
              }
            },
          );
        }

        var pendingLocation = undefined;

        function transitionTo(nextLocation) {
          if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.

          pendingLocation = nextLocation;

          confirmTransitionTo(nextLocation, function (ok) {
            if (pendingLocation !== nextLocation) return; // Transition was interrupted.

            if (ok) {
              // treat PUSH to current path like REPLACE to be consistent with browsers
              if (nextLocation.action === _Actions.PUSH) {
                var prevPath = createPath(location);
                var nextPath = createPath(nextLocation);

                if (
                  nextPath === prevPath &&
                  _deepEqual2['default'](location.state, nextLocation.state)
                )
                  nextLocation.action = _Actions.REPLACE;
              }

              if (finishTransition(nextLocation) !== false)
                updateLocation(nextLocation);
            } else if (location && nextLocation.action === _Actions.POP) {
              var prevIndex = allKeys.indexOf(location.key);
              var nextIndex = allKeys.indexOf(nextLocation.key);

              if (prevIndex !== -1 && nextIndex !== -1)
                go(prevIndex - nextIndex); // Restore the URL.
            }
          });
        }

        function push(location) {
          transitionTo(createLocation(location, _Actions.PUSH, createKey()));
        }

        function replace(location) {
          transitionTo(createLocation(location, _Actions.REPLACE, createKey()));
        }

        function goBack() {
          go(-1);
        }

        function goForward() {
          go(1);
        }

        function createKey() {
          return createRandomKey(keyLength);
        }

        function createPath(location) {
          if (location == null || typeof location === 'string') return location;

          var pathname = location.pathname;
          var search = location.search;
          var hash = location.hash;

          var result = pathname;

          if (search) result += search;

          if (hash) result += hash;

          return result;
        }

        function createHref(location) {
          return createPath(location);
        }

        function createLocation(location, action) {
          var key =
            arguments.length <= 2 || arguments[2] === undefined
              ? createKey()
              : arguments[2];

          if (typeof action === 'object') {
            true
              ? _warning2['default'](
                  false,
                  'The state (2nd) argument to history.createLocation is deprecated; use a ' +
                    'location descriptor instead',
                )
              : undefined;

            if (typeof location === 'string')
              location = _PathUtils.parsePath(location);

            location = _extends({}, location, { state: action });

            action = key;
            key = arguments[3] || createKey();
          }

          return _createLocation3['default'](location, action, key);
        }

        // deprecated
        function setState(state) {
          if (location) {
            updateLocationState(location, state);
            updateLocation(location);
          } else {
            updateLocationState(getCurrentLocation(), state);
          }
        }

        function updateLocationState(location, state) {
          location.state = _extends({}, location.state, state);
          saveState(location.key, location.state);
        }

        // deprecated
        function registerTransitionHook(hook) {
          if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);
        }

        // deprecated
        function unregisterTransitionHook(hook) {
          transitionHooks = transitionHooks.filter(function (item) {
            return item !== hook;
          });
        }

        // deprecated
        function pushState(state, path) {
          if (typeof path === 'string') path = _PathUtils.parsePath(path);

          push(_extends({ state: state }, path));
        }

        // deprecated
        function replaceState(state, path) {
          if (typeof path === 'string') path = _PathUtils.parsePath(path);

          replace(_extends({ state: state }, path));
        }

        return {
          listenBefore: listenBefore,
          listen: listen,
          transitionTo: transitionTo,
          push: push,
          replace: replace,
          go: go,
          goBack: goBack,
          goForward: goForward,
          createKey: createKey,
          createPath: createPath,
          createHref: createHref,
          createLocation: createLocation,

          setState: _deprecate2['default'](
            setState,
            'setState is deprecated; use location.key to save state instead',
          ),
          registerTransitionHook: _deprecate2['default'](
            registerTransitionHook,
            'registerTransitionHook is deprecated; use listenBefore instead',
          ),
          unregisterTransitionHook: _deprecate2['default'](
            unregisterTransitionHook,
            'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead',
          ),
          pushState: _deprecate2['default'](
            pushState,
            'pushState is deprecated; use push instead',
          ),
          replaceState: _deprecate2['default'](
            replaceState,
            'replaceState is deprecated; use replace instead',
          ),
        };
      }

      exports['default'] = createHistory;
      module.exports = exports['default'];

      /***/
    },
    /* 53 */
    /***/ function (module, exports, __webpack_require__) {
      var pSlice = Array.prototype.slice;
      var objectKeys = __webpack_require__(54);
      var isArguments = __webpack_require__(55);

      var deepEqual = (module.exports = function (actual, expected, opts) {
        if (!opts) opts = {};
        // 7.1. All identical values are equivalent, as determined by ===.
        if (actual === expected) {
          return true;
        } else if (actual instanceof Date && expected instanceof Date) {
          return actual.getTime() === expected.getTime();

          // 7.3. Other pairs that do not both pass typeof value == 'object',
          // equivalence is determined by ==.
        } else if (
          !actual ||
          !expected ||
          (typeof actual != 'object' && typeof expected != 'object')
        ) {
          return opts.strict ? actual === expected : actual == expected;

          // 7.4. For all other Object pairs, including Array objects, equivalence is
          // determined by having the same number of owned properties (as verified
          // with Object.prototype.hasOwnProperty.call), the same set of keys
          // (although not necessarily the same order), equivalent values for every
          // corresponding key, and an identical 'prototype' property. Note: this
          // accounts for both named and indexed properties on Arrays.
        } else {
          return objEquiv(actual, expected, opts);
        }
      });

      function isUndefinedOrNull(value) {
        return value === null || value === undefined;
      }

      function isBuffer(x) {
        if (!x || typeof x !== 'object' || typeof x.length !== 'number')
          return false;
        if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
          return false;
        }
        if (x.length > 0 && typeof x[0] !== 'number') return false;
        return true;
      }

      function objEquiv(a, b, opts) {
        var i, key;
        if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) return false;
        // an identical 'prototype' property.
        if (a.prototype !== b.prototype) return false;
        //~~~I've managed to break Object.keys through screwy arguments passing.
        //   Converting to array solves the problem.
        if (isArguments(a)) {
          if (!isArguments(b)) {
            return false;
          }
          a = pSlice.call(a);
          b = pSlice.call(b);
          return deepEqual(a, b, opts);
        }
        if (isBuffer(a)) {
          if (!isBuffer(b)) {
            return false;
          }
          if (a.length !== b.length) return false;
          for (i = 0; i < a.length; i++) {
            if (a[i] !== b[i]) return false;
          }
          return true;
        }
        try {
          var ka = objectKeys(a),
            kb = objectKeys(b);
        } catch (e) {
          //happens when one is a string literal and the other isn't
          return false;
        }
        // having the same number of owned properties (keys incorporates
        // hasOwnProperty)
        if (ka.length != kb.length) return false;
        //the same set of keys (although not necessarily the same order),
        ka.sort();
        kb.sort();
        //~~~cheap key test
        for (i = ka.length - 1; i >= 0; i--) {
          if (ka[i] != kb[i]) return false;
        }
        //equivalent values for every corresponding key, and
        //~~~possibly expensive deep test
        for (i = ka.length - 1; i >= 0; i--) {
          key = ka[i];
          if (!deepEqual(a[key], b[key], opts)) return false;
        }
        return typeof a === typeof b;
      }

      /***/
    },
    /* 54 */
    /***/ function (module, exports) {
      exports = module.exports =
        typeof Object.keys === 'function' ? Object.keys : shim;

      exports.shim = shim;
      function shim(obj) {
        var keys = [];
        for (var key in obj) keys.push(key);
        return keys;
      }

      /***/
    },
    /* 55 */
    /***/ function (module, exports) {
      var supportsArgumentsClass =
        (function () {
          return Object.prototype.toString.call(arguments);
        })() == '[object Arguments]';

      exports = module.exports = supportsArgumentsClass
        ? supported
        : unsupported;

      exports.supported = supported;
      function supported(object) {
        return Object.prototype.toString.call(object) == '[object Arguments]';
      }

      exports.unsupported = unsupported;
      function unsupported(object) {
        return (
          (object &&
            typeof object == 'object' &&
            typeof object.length == 'number' &&
            Object.prototype.hasOwnProperty.call(object, 'callee') &&
            !Object.prototype.propertyIsEnumerable.call(object, 'callee')) ||
          false
        );
      }

      /***/
    },
    /* 56 */
    /***/ function (module, exports) {
      'use strict';

      exports.__esModule = true;
      var _slice = Array.prototype.slice;
      exports.loopAsync = loopAsync;

      function loopAsync(turns, work, callback) {
        var currentTurn = 0,
          isDone = false;
        var sync = false,
          hasNext = false,
          doneArgs = undefined;

        function done() {
          isDone = true;
          if (sync) {
            // Iterate instead of recursing if possible.
            doneArgs = [].concat(_slice.call(arguments));
            return;
          }

          callback.apply(this, arguments);
        }

        function next() {
          if (isDone) {
            return;
          }

          hasNext = true;
          if (sync) {
            // Iterate instead of recursing if possible.
            return;
          }

          sync = true;

          while (!isDone && currentTurn < turns && hasNext) {
            hasNext = false;
            work.call(this, currentTurn++, next, done);
          }

          sync = false;

          if (isDone) {
            // This means the loop finished synchronously.
            callback.apply(this, doneArgs);
            return;
          }

          if (currentTurn >= turns && hasNext) {
            isDone = true;
            callback();
          }
        }

        next();
      }

      /***/
    },
    /* 57 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _warning = __webpack_require__(45);

      var _warning2 = _interopRequireDefault(_warning);

      var _Actions = __webpack_require__(46);

      var _PathUtils = __webpack_require__(47);

      function createLocation() {
        var location =
          arguments.length <= 0 || arguments[0] === undefined
            ? '/'
            : arguments[0];
        var action =
          arguments.length <= 1 || arguments[1] === undefined
            ? _Actions.POP
            : arguments[1];
        var key =
          arguments.length <= 2 || arguments[2] === undefined
            ? null
            : arguments[2];

        var _fourthArg =
          arguments.length <= 3 || arguments[3] === undefined
            ? null
            : arguments[3];

        if (typeof location === 'string')
          location = _PathUtils.parsePath(location);

        if (typeof action === 'object') {
          true
            ? _warning2['default'](
                false,
                'The state (2nd) argument to createLocation is deprecated; use a ' +
                  'location descriptor instead',
              )
            : undefined;

          location = _extends({}, location, { state: action });

          action = key || _Actions.POP;
          key = _fourthArg;
        }

        var pathname = location.pathname || '/';
        var search = location.search || '';
        var hash = location.hash || '';
        var state = location.state || null;

        return {
          pathname: pathname,
          search: search,
          hash: hash,
          state: state,
          action: action,
          key: key,
        };
      }

      exports['default'] = createLocation;
      module.exports = exports['default'];

      /***/
    },
    /* 58 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _warning = __webpack_require__(45);

      var _warning2 = _interopRequireDefault(_warning);

      function runTransitionHook(hook, location, callback) {
        var result = hook(location, callback);

        if (hook.length < 2) {
          // Assume the hook runs synchronously and automatically
          // call the callback with the return value.
          callback(result);
        } else {
          true
            ? _warning2['default'](
                result === undefined,
                'You should not "return" in a transition hook with a callback argument; call the callback instead',
              )
            : undefined;
        }
      }

      exports['default'] = runTransitionHook;
      module.exports = exports['default'];

      /***/
    },
    /* 59 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _warning = __webpack_require__(45);

      var _warning2 = _interopRequireDefault(_warning);

      function deprecate(fn, message) {
        return function () {
          true
            ? _warning2['default'](false, '[history] ' + message)
            : undefined;
          return fn.apply(this, arguments);
        };
      }

      exports['default'] = deprecate;
      module.exports = exports['default'];

      /***/
    },
    /* 60 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _warning = __webpack_require__(45);

      var _warning2 = _interopRequireDefault(_warning);

      var _queryString = __webpack_require__(61);

      var _runTransitionHook = __webpack_require__(58);

      var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

      var _PathUtils = __webpack_require__(47);

      var _deprecate = __webpack_require__(59);

      var _deprecate2 = _interopRequireDefault(_deprecate);

      var SEARCH_BASE_KEY = '$searchBase';

      function defaultStringifyQuery(query) {
        return _queryString.stringify(query).replace(/%20/g, '+');
      }

      var defaultParseQueryString = _queryString.parse;

      function isNestedObject(object) {
        for (var p in object) {
          if (
            Object.prototype.hasOwnProperty.call(object, p) &&
            typeof object[p] === 'object' &&
            !Array.isArray(object[p]) &&
            object[p] !== null
          )
            return true;
        }
        return false;
      }

      /**
       * Returns a new createHistory function that may be used to create
       * history objects that know how to handle URL queries.
       */
      function useQueries(createHistory) {
        return function () {
          var options =
            arguments.length <= 0 || arguments[0] === undefined
              ? {}
              : arguments[0];

          var history = createHistory(options);

          var stringifyQuery = options.stringifyQuery;
          var parseQueryString = options.parseQueryString;

          if (typeof stringifyQuery !== 'function')
            stringifyQuery = defaultStringifyQuery;

          if (typeof parseQueryString !== 'function')
            parseQueryString = defaultParseQueryString;

          function addQuery(location) {
            if (location.query == null) {
              var search = location.search;

              location.query = parseQueryString(search.substring(1));
              location[SEARCH_BASE_KEY] = { search: search, searchBase: '' };
            }

            // TODO: Instead of all the book-keeping here, this should just strip the
            // stringified query from the search.

            return location;
          }

          function appendQuery(location, query) {
            var _extends2;

            var searchBaseSpec = location[SEARCH_BASE_KEY];
            var queryString = query ? stringifyQuery(query) : '';
            if (!searchBaseSpec && !queryString) {
              return location;
            }

            true
              ? _warning2['default'](
                  stringifyQuery !== defaultStringifyQuery ||
                    !isNestedObject(query),
                  'useQueries does not stringify nested query objects by default; ' +
                    'use a custom stringifyQuery function',
                )
              : undefined;

            if (typeof location === 'string')
              location = _PathUtils.parsePath(location);

            var searchBase = undefined;
            if (searchBaseSpec && location.search === searchBaseSpec.search) {
              searchBase = searchBaseSpec.searchBase;
            } else {
              searchBase = location.search || '';
            }

            var search = searchBase;
            if (queryString) {
              search += (search ? '&' : '?') + queryString;
            }

            return _extends(
              {},
              location,
              ((_extends2 = {
                search: search,
              }),
              (_extends2[SEARCH_BASE_KEY] = {
                search: search,
                searchBase: searchBase,
              }),
              _extends2),
            );
          }

          // Override all read methods with query-aware versions.
          function listenBefore(hook) {
            return history.listenBefore(function (location, callback) {
              _runTransitionHook2['default'](
                hook,
                addQuery(location),
                callback,
              );
            });
          }

          function listen(listener) {
            return history.listen(function (location) {
              listener(addQuery(location));
            });
          }

          // Override all write methods with query-aware versions.
          function push(location) {
            history.push(appendQuery(location, location.query));
          }

          function replace(location) {
            history.replace(appendQuery(location, location.query));
          }

          function createPath(location, query) {
            true
              ? _warning2['default'](
                  !query,
                  'the query argument to createPath is deprecated; use a location descriptor instead',
                )
              : undefined;

            return history.createPath(
              appendQuery(location, query || location.query),
            );
          }

          function createHref(location, query) {
            true
              ? _warning2['default'](
                  !query,
                  'the query argument to createHref is deprecated; use a location descriptor instead',
                )
              : undefined;

            return history.createHref(
              appendQuery(location, query || location.query),
            );
          }

          function createLocation(location) {
            for (
              var _len = arguments.length,
                args = Array(_len > 1 ? _len - 1 : 0),
                _key = 1;
              _key < _len;
              _key++
            ) {
              args[_key - 1] = arguments[_key];
            }

            var fullLocation = history.createLocation.apply(
              history,
              [appendQuery(location, location.query)].concat(args),
            );
            if (location.query) {
              fullLocation.query = location.query;
            }
            return addQuery(fullLocation);
          }

          // deprecated
          function pushState(state, path, query) {
            if (typeof path === 'string') path = _PathUtils.parsePath(path);

            push(_extends({ state: state }, path, { query: query }));
          }

          // deprecated
          function replaceState(state, path, query) {
            if (typeof path === 'string') path = _PathUtils.parsePath(path);

            replace(_extends({ state: state }, path, { query: query }));
          }

          return _extends({}, history, {
            listenBefore: listenBefore,
            listen: listen,
            push: push,
            replace: replace,
            createPath: createPath,
            createHref: createHref,
            createLocation: createLocation,

            pushState: _deprecate2['default'](
              pushState,
              'pushState is deprecated; use push instead',
            ),
            replaceState: _deprecate2['default'](
              replaceState,
              'replaceState is deprecated; use replace instead',
            ),
          });
        };
      }

      exports['default'] = useQueries;
      module.exports = exports['default'];

      /***/
    },
    /* 61 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';
      var strictUriEncode = __webpack_require__(62);

      exports.extract = function (str) {
        return str.split('?')[1] || '';
      };

      exports.parse = function (str) {
        if (typeof str !== 'string') {
          return {};
        }

        str = str.trim().replace(/^(\?|#|&)/, '');

        if (!str) {
          return {};
        }

        return str.split('&').reduce(function (ret, param) {
          var parts = param.replace(/\+/g, ' ').split('=');
          // Firefox (pre 40) decodes `%3D` to `=`
          // https://github.com/sindresorhus/query-string/pull/37
          var key = parts.shift();
          var val = parts.length > 0 ? parts.join('=') : undefined;

          key = decodeURIComponent(key);

          // missing `=` should be `null`:
          // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
          val = val === undefined ? null : decodeURIComponent(val);

          if (!ret.hasOwnProperty(key)) {
            ret[key] = val;
          } else if (Array.isArray(ret[key])) {
            ret[key].push(val);
          } else {
            ret[key] = [ret[key], val];
          }

          return ret;
        }, {});
      };

      exports.stringify = function (obj) {
        return obj
          ? Object.keys(obj)
              .sort()
              .map(function (key) {
                var val = obj[key];

                if (val === undefined) {
                  return '';
                }

                if (val === null) {
                  return key;
                }

                if (Array.isArray(val)) {
                  return val
                    .slice()
                    .sort()
                    .map(function (val2) {
                      return strictUriEncode(key) + '=' + strictUriEncode(val2);
                    })
                    .join('&');
                }

                return strictUriEncode(key) + '=' + strictUriEncode(val);
              })
              .filter(function (x) {
                return x.length > 0;
              })
              .join('&')
          : '';
      };

      /***/
    },
    /* 62 */
    /***/ function (module, exports) {
      'use strict';
      module.exports = function (str) {
        return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
          return '%' + c.charCodeAt(0).toString(16).toUpperCase();
        });
      };

      /***/
    },
    /* 63 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      exports.default = createTransitionManager;

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      var _computeChangedRoutes2 = __webpack_require__(64);

      var _computeChangedRoutes3 = _interopRequireDefault(
        _computeChangedRoutes2,
      );

      var _TransitionUtils = __webpack_require__(65);

      var _isActive2 = __webpack_require__(67);

      var _isActive3 = _interopRequireDefault(_isActive2);

      var _getComponents = __webpack_require__(68);

      var _getComponents2 = _interopRequireDefault(_getComponents);

      var _matchRoutes = __webpack_require__(70);

      var _matchRoutes2 = _interopRequireDefault(_matchRoutes);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function hasAnyProperties(object) {
        for (var p in object) {
          if (Object.prototype.hasOwnProperty.call(object, p)) return true;
        }
        return false;
      }

      function createTransitionManager(history, routes) {
        var state = {};

        // Signature should be (location, indexOnly), but needs to support (path,
        // query, indexOnly)
        function isActive(location) {
          var indexOnlyOrDeprecatedQuery =
            arguments.length <= 1 || arguments[1] === undefined
              ? false
              : arguments[1];
          var deprecatedIndexOnly =
            arguments.length <= 2 || arguments[2] === undefined
              ? null
              : arguments[2];

          var indexOnly = void 0;
          if (
            (indexOnlyOrDeprecatedQuery &&
              indexOnlyOrDeprecatedQuery !== true) ||
            deprecatedIndexOnly !== null
          ) {
            true
              ? (0, _routerWarning2.default)(
                  false,
                  '`isActive(pathname, query, indexOnly) is deprecated; use `isActive(location, indexOnly)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated',
                )
              : void 0;
            location = {
              pathname: location,
              query: indexOnlyOrDeprecatedQuery,
            };
            indexOnly = deprecatedIndexOnly || false;
          } else {
            location = history.createLocation(location);
            indexOnly = indexOnlyOrDeprecatedQuery;
          }

          return (0, _isActive3.default)(
            location,
            indexOnly,
            state.location,
            state.routes,
            state.params,
          );
        }

        var partialNextState = void 0;

        function match(location, callback) {
          if (partialNextState && partialNextState.location === location) {
            // Continue from where we left off.
            finishMatch(partialNextState, callback);
          } else {
            (0, _matchRoutes2.default)(routes, location, function (
              error,
              nextState,
            ) {
              if (error) {
                callback(error);
              } else if (nextState) {
                finishMatch(
                  _extends({}, nextState, { location: location }),
                  callback,
                );
              } else {
                callback();
              }
            });
          }
        }

        function finishMatch(nextState, callback) {
          var _computeChangedRoutes = (0, _computeChangedRoutes3.default)(
            state,
            nextState,
          );

          var leaveRoutes = _computeChangedRoutes.leaveRoutes;
          var changeRoutes = _computeChangedRoutes.changeRoutes;
          var enterRoutes = _computeChangedRoutes.enterRoutes;

          (0, _TransitionUtils.runLeaveHooks)(leaveRoutes, state);

          // Tear down confirmation hooks for left routes
          leaveRoutes
            .filter(function (route) {
              return enterRoutes.indexOf(route) === -1;
            })
            .forEach(removeListenBeforeHooksForRoute);

          // change and enter hooks are run in series
          (0, _TransitionUtils.runChangeHooks)(
            changeRoutes,
            state,
            nextState,
            function (error, redirectInfo) {
              if (error || redirectInfo)
                return handleErrorOrRedirect(error, redirectInfo);

              (0, _TransitionUtils.runEnterHooks)(
                enterRoutes,
                nextState,
                finishEnterHooks,
              );
            },
          );

          function finishEnterHooks(error, redirectInfo) {
            if (error || redirectInfo)
              return handleErrorOrRedirect(error, redirectInfo);

            // TODO: Fetch components after state is updated.
            (0, _getComponents2.default)(nextState, function (
              error,
              components,
            ) {
              if (error) {
                callback(error);
              } else {
                // TODO: Make match a pure function and have some other API
                // for "match and update state".
                callback(
                  null,
                  null,
                  (state = _extends({}, nextState, { components: components })),
                );
              }
            });
          }

          function handleErrorOrRedirect(error, redirectInfo) {
            if (error) callback(error);
            else callback(null, redirectInfo);
          }
        }

        var RouteGuid = 1;

        function getRouteID(route) {
          var create =
            arguments.length <= 1 || arguments[1] === undefined
              ? true
              : arguments[1];

          return route.__id__ || (create && (route.__id__ = RouteGuid++));
        }

        var RouteHooks = Object.create(null);

        function getRouteHooksForRoutes(routes) {
          return routes.reduce(function (hooks, route) {
            hooks.push.apply(hooks, RouteHooks[getRouteID(route)]);
            return hooks;
          }, []);
        }

        function transitionHook(location, callback) {
          (0, _matchRoutes2.default)(routes, location, function (
            error,
            nextState,
          ) {
            if (nextState == null) {
              // TODO: We didn't actually match anything, but hang
              // onto error/nextState so we don't have to matchRoutes
              // again in the listen callback.
              callback();
              return;
            }

            // Cache some state here so we don't have to
            // matchRoutes() again in the listen callback.
            partialNextState = _extends({}, nextState, { location: location });

            var hooks = getRouteHooksForRoutes(
              (0, _computeChangedRoutes3.default)(state, partialNextState)
                .leaveRoutes,
            );

            var result = void 0;
            for (
              var i = 0, len = hooks.length;
              result == null && i < len;
              ++i
            ) {
              // Passing the location arg here indicates to
              // the user that this is a transition hook.
              result = hooks[i](location);
            }

            callback(result);
          });
        }

        /* istanbul ignore next: untestable with Karma */
        function beforeUnloadHook() {
          // Synchronously check to see if any route hooks want
          // to prevent the current window/tab from closing.
          if (state.routes) {
            var hooks = getRouteHooksForRoutes(state.routes);

            var message = void 0;
            for (
              var i = 0, len = hooks.length;
              typeof message !== 'string' && i < len;
              ++i
            ) {
              // Passing no args indicates to the user that this is a
              // beforeunload hook. We don't know the next location.
              message = hooks[i]();
            }

            return message;
          }
        }

        var unlistenBefore = void 0,
          unlistenBeforeUnload = void 0;

        function removeListenBeforeHooksForRoute(route) {
          var routeID = getRouteID(route, false);
          if (!routeID) {
            return;
          }

          delete RouteHooks[routeID];

          if (!hasAnyProperties(RouteHooks)) {
            // teardown transition & beforeunload hooks
            if (unlistenBefore) {
              unlistenBefore();
              unlistenBefore = null;
            }

            if (unlistenBeforeUnload) {
              unlistenBeforeUnload();
              unlistenBeforeUnload = null;
            }
          }
        }

        /**
         * Registers the given hook function to run before leaving the given route.
         *
         * During a normal transition, the hook function receives the next location
         * as its only argument and can return either a prompt message (string) to show the user,
         * to make sure they want to leave the page; or `false`, to prevent the transition.
         * Any other return value will have no effect.
         *
         * During the beforeunload event (in browsers) the hook receives no arguments.
         * In this case it must return a prompt message to prevent the transition.
         *
         * Returns a function that may be used to unbind the listener.
         */
        function listenBeforeLeavingRoute(route, hook) {
          // TODO: Warn if they register for a route that isn't currently
          // active. They're probably doing something wrong, like re-creating
          // route objects on every location change.
          var routeID = getRouteID(route);
          var hooks = RouteHooks[routeID];

          if (!hooks) {
            var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);

            RouteHooks[routeID] = [hook];

            if (thereWereNoRouteHooks) {
              // setup transition & beforeunload hooks
              unlistenBefore = history.listenBefore(transitionHook);

              if (history.listenBeforeUnload)
                unlistenBeforeUnload = history.listenBeforeUnload(
                  beforeUnloadHook,
                );
            }
          } else {
            if (hooks.indexOf(hook) === -1) {
              true
                ? (0, _routerWarning2.default)(
                    false,
                    'adding multiple leave hooks for the same route is deprecated; manage multiple confirmations in your own code instead',
                  )
                : void 0;

              hooks.push(hook);
            }
          }

          return function () {
            var hooks = RouteHooks[routeID];

            if (hooks) {
              var newHooks = hooks.filter(function (item) {
                return item !== hook;
              });

              if (newHooks.length === 0) {
                removeListenBeforeHooksForRoute(route);
              } else {
                RouteHooks[routeID] = newHooks;
              }
            }
          };
        }

        /**
         * This is the API for stateful environments. As the location
         * changes, we update state and call the listener. We can also
         * gracefully handle errors and redirects.
         */
        function listen(listener) {
          // TODO: Only use a single history listener. Otherwise we'll
          // end up with multiple concurrent calls to match.
          return history.listen(function (location) {
            if (state.location === location) {
              listener(null, state);
            } else {
              match(location, function (error, redirectLocation, nextState) {
                if (error) {
                  listener(error);
                } else if (redirectLocation) {
                  history.replace(redirectLocation);
                } else if (nextState) {
                  listener(null, nextState);
                } else {
                  true
                    ? (0, _routerWarning2.default)(
                        false,
                        'Location "%s" did not match any routes',
                        location.pathname + location.search + location.hash,
                      )
                    : void 0;
                }
              });
            }
          });
        }

        return {
          isActive: isActive,
          match: match,
          listenBeforeLeavingRoute: listenBeforeLeavingRoute,
          listen: listen,
        };
      }

      //export default useRoutes

      module.exports = exports['default'];

      /***/
    },
    /* 64 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _PatternUtils = __webpack_require__(41);

      function routeParamsChanged(route, prevState, nextState) {
        if (!route.path) return false;

        var paramNames = (0, _PatternUtils.getParamNames)(route.path);

        return paramNames.some(function (paramName) {
          return prevState.params[paramName] !== nextState.params[paramName];
        });
      }

      /**
       * Returns an object of { leaveRoutes, changeRoutes, enterRoutes } determined by
       * the change from prevState to nextState. We leave routes if either
       * 1) they are not in the next state or 2) they are in the next state
       * but their params have changed (i.e. /users/123 => /users/456).
       *
       * leaveRoutes are ordered starting at the leaf route of the tree
       * we're leaving up to the common parent route. enterRoutes are ordered
       * from the top of the tree we're entering down to the leaf route.
       *
       * changeRoutes are any routes that didn't leave or enter during
       * the transition.
       */
      function computeChangedRoutes(prevState, nextState) {
        var prevRoutes = prevState && prevState.routes;
        var nextRoutes = nextState.routes;

        var leaveRoutes = void 0,
          changeRoutes = void 0,
          enterRoutes = void 0;
        if (prevRoutes) {
          (function () {
            var parentIsLeaving = false;
            leaveRoutes = prevRoutes.filter(function (route) {
              if (parentIsLeaving) {
                return true;
              } else {
                var isLeaving =
                  nextRoutes.indexOf(route) === -1 ||
                  routeParamsChanged(route, prevState, nextState);
                if (isLeaving) parentIsLeaving = true;
                return isLeaving;
              }
            });

            // onLeave hooks start at the leaf route.
            leaveRoutes.reverse();

            enterRoutes = [];
            changeRoutes = [];

            nextRoutes.forEach(function (route) {
              var isNew = prevRoutes.indexOf(route) === -1;
              var paramsChanged = leaveRoutes.indexOf(route) !== -1;

              if (isNew || paramsChanged) enterRoutes.push(route);
              else changeRoutes.push(route);
            });
          })();
        } else {
          leaveRoutes = [];
          changeRoutes = [];
          enterRoutes = nextRoutes;
        }

        return {
          leaveRoutes: leaveRoutes,
          changeRoutes: changeRoutes,
          enterRoutes: enterRoutes,
        };
      }

      exports.default = computeChangedRoutes;
      module.exports = exports['default'];

      /***/
    },
    /* 65 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.runEnterHooks = runEnterHooks;
      exports.runChangeHooks = runChangeHooks;
      exports.runLeaveHooks = runLeaveHooks;

      var _AsyncUtils = __webpack_require__(66);

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function createTransitionHook(hook, route, asyncArity) {
        return function () {
          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          hook.apply(route, args);

          if (hook.length < asyncArity) {
            var callback = args[args.length - 1];
            // Assume hook executes synchronously and
            // automatically call the callback.
            callback();
          }
        };
      }

      function getEnterHooks(routes) {
        return routes.reduce(function (hooks, route) {
          if (route.onEnter)
            hooks.push(createTransitionHook(route.onEnter, route, 3));

          return hooks;
        }, []);
      }

      function getChangeHooks(routes) {
        return routes.reduce(function (hooks, route) {
          if (route.onChange)
            hooks.push(createTransitionHook(route.onChange, route, 4));
          return hooks;
        }, []);
      }

      function runTransitionHooks(length, iter, callback) {
        if (!length) {
          callback();
          return;
        }

        var redirectInfo = void 0;
        function replace(location, deprecatedPathname, deprecatedQuery) {
          if (deprecatedPathname) {
            true
              ? (0, _routerWarning2.default)(
                  false,
                  '`replaceState(state, pathname, query) is deprecated; use `replace(location)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated',
                )
              : void 0;
            redirectInfo = {
              pathname: deprecatedPathname,
              query: deprecatedQuery,
              state: location,
            };

            return;
          }

          redirectInfo = location;
        }

        (0, _AsyncUtils.loopAsync)(
          length,
          function (index, next, done) {
            iter(index, replace, function (error) {
              if (error || redirectInfo) {
                done(error, redirectInfo); // No need to continue.
              } else {
                next();
              }
            });
          },
          callback,
        );
      }

      /**
       * Runs all onEnter hooks in the given array of routes in order
       * with onEnter(nextState, replace, callback) and calls
       * callback(error, redirectInfo) when finished. The first hook
       * to use replace short-circuits the loop.
       *
       * If a hook needs to run asynchronously, it may use the callback
       * function. However, doing so will cause the transition to pause,
       * which could lead to a non-responsive UI if the hook is slow.
       */
      function runEnterHooks(routes, nextState, callback) {
        var hooks = getEnterHooks(routes);
        return runTransitionHooks(
          hooks.length,
          function (index, replace, next) {
            hooks[index](nextState, replace, next);
          },
          callback,
        );
      }

      /**
       * Runs all onChange hooks in the given array of routes in order
       * with onChange(prevState, nextState, replace, callback) and calls
       * callback(error, redirectInfo) when finished. The first hook
       * to use replace short-circuits the loop.
       *
       * If a hook needs to run asynchronously, it may use the callback
       * function. However, doing so will cause the transition to pause,
       * which could lead to a non-responsive UI if the hook is slow.
       */
      function runChangeHooks(routes, state, nextState, callback) {
        var hooks = getChangeHooks(routes);
        return runTransitionHooks(
          hooks.length,
          function (index, replace, next) {
            hooks[index](state, nextState, replace, next);
          },
          callback,
        );
      }

      /**
       * Runs all onLeave hooks in the given array of routes in order.
       */
      function runLeaveHooks(routes, prevState) {
        for (var i = 0, len = routes.length; i < len; ++i) {
          if (routes[i].onLeave) routes[i].onLeave.call(routes[i], prevState);
        }
      }

      /***/
    },
    /* 66 */
    /***/ function (module, exports) {
      'use strict';

      exports.__esModule = true;
      exports.loopAsync = loopAsync;
      exports.mapAsync = mapAsync;
      function loopAsync(turns, work, callback) {
        var currentTurn = 0,
          isDone = false;
        var sync = false,
          hasNext = false,
          doneArgs = void 0;

        function done() {
          isDone = true;
          if (sync) {
            // Iterate instead of recursing if possible.
            doneArgs = [].concat(Array.prototype.slice.call(arguments));
            return;
          }

          callback.apply(this, arguments);
        }

        function next() {
          if (isDone) {
            return;
          }

          hasNext = true;
          if (sync) {
            // Iterate instead of recursing if possible.
            return;
          }

          sync = true;

          while (!isDone && currentTurn < turns && hasNext) {
            hasNext = false;
            work.call(this, currentTurn++, next, done);
          }

          sync = false;

          if (isDone) {
            // This means the loop finished synchronously.
            callback.apply(this, doneArgs);
            return;
          }

          if (currentTurn >= turns && hasNext) {
            isDone = true;
            callback();
          }
        }

        next();
      }

      function mapAsync(array, work, callback) {
        var length = array.length;
        var values = [];

        if (length === 0) return callback(null, values);

        var isDone = false,
          doneCount = 0;

        function done(index, error, value) {
          if (isDone) return;

          if (error) {
            isDone = true;
            callback(error);
          } else {
            values[index] = value;

            isDone = ++doneCount === length;

            if (isDone) callback(null, values);
          }
        }

        array.forEach(function (item, index) {
          work(item, index, function (error, value) {
            done(index, error, value);
          });
        });
      }

      /***/
    },
    /* 67 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function (obj) {
              return typeof obj;
            }
          : function (obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol
                ? 'symbol'
                : typeof obj;
            };

      exports.default = isActive;

      var _PatternUtils = __webpack_require__(41);

      function deepEqual(a, b) {
        if (a == b) return true;

        if (a == null || b == null) return false;

        if (Array.isArray(a)) {
          return (
            Array.isArray(b) &&
            a.length === b.length &&
            a.every(function (item, index) {
              return deepEqual(item, b[index]);
            })
          );
        }

        if (
          (typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object'
        ) {
          for (var p in a) {
            if (!Object.prototype.hasOwnProperty.call(a, p)) {
              continue;
            }

            if (a[p] === undefined) {
              if (b[p] !== undefined) {
                return false;
              }
            } else if (!Object.prototype.hasOwnProperty.call(b, p)) {
              return false;
            } else if (!deepEqual(a[p], b[p])) {
              return false;
            }
          }

          return true;
        }

        return String(a) === String(b);
      }

      /**
       * Returns true if the current pathname matches the supplied one, net of
       * leading and trailing slash normalization. This is sufficient for an
       * indexOnly route match.
       */
      function pathIsActive(pathname, currentPathname) {
        // Normalize leading slash for consistency. Leading slash on pathname has
        // already been normalized in isActive. See caveat there.
        if (currentPathname.charAt(0) !== '/') {
          currentPathname = '/' + currentPathname;
        }

        // Normalize the end of both path names too. Maybe `/foo/` shouldn't show
        // `/foo` as active, but in this case, we would already have failed the
        // match.
        if (pathname.charAt(pathname.length - 1) !== '/') {
          pathname += '/';
        }
        if (currentPathname.charAt(currentPathname.length - 1) !== '/') {
          currentPathname += '/';
        }

        return currentPathname === pathname;
      }

      /**
       * Returns true if the given pathname matches the active routes and params.
       */
      function routeIsActive(pathname, routes, params) {
        var remainingPathname = pathname,
          paramNames = [],
          paramValues = [];

        // for...of would work here but it's probably slower post-transpilation.
        for (var i = 0, len = routes.length; i < len; ++i) {
          var route = routes[i];
          var pattern = route.path || '';

          if (pattern.charAt(0) === '/') {
            remainingPathname = pathname;
            paramNames = [];
            paramValues = [];
          }

          if (remainingPathname !== null && pattern) {
            var matched = (0, _PatternUtils.matchPattern)(
              pattern,
              remainingPathname,
            );
            if (matched) {
              remainingPathname = matched.remainingPathname;
              paramNames = [].concat(paramNames, matched.paramNames);
              paramValues = [].concat(paramValues, matched.paramValues);
            } else {
              remainingPathname = null;
            }

            if (remainingPathname === '') {
              // We have an exact match on the route. Just check that all the params
              // match.
              // FIXME: This doesn't work on repeated params.
              return paramNames.every(function (paramName, index) {
                return String(paramValues[index]) === String(params[paramName]);
              });
            }
          }
        }

        return false;
      }

      /**
       * Returns true if all key/value pairs in the given query are
       * currently active.
       */
      function queryIsActive(query, activeQuery) {
        if (activeQuery == null) return query == null;

        if (query == null) return true;

        return deepEqual(query, activeQuery);
      }

      /**
       * Returns true if a <Link> to the given pathname/query combination is
       * currently active.
       */
      function isActive(_ref, indexOnly, currentLocation, routes, params) {
        var pathname = _ref.pathname;
        var query = _ref.query;

        if (currentLocation == null) return false;

        // TODO: This is a bit ugly. It keeps around support for treating pathnames
        // without preceding slashes as absolute paths, but possibly also works
        // around the same quirks with basenames as in matchRoutes.
        if (pathname.charAt(0) !== '/') {
          pathname = '/' + pathname;
        }

        if (!pathIsActive(pathname, currentLocation.pathname)) {
          // The path check is necessary and sufficient for indexOnly, but otherwise
          // we still need to check the routes.
          if (indexOnly || !routeIsActive(pathname, routes, params)) {
            return false;
          }
        }

        return queryIsActive(query, currentLocation.query);
      }
      module.exports = exports['default'];

      /***/
    },
    /* 68 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _AsyncUtils = __webpack_require__(66);

      var _makeStateWithLocation = __webpack_require__(69);

      var _makeStateWithLocation2 = _interopRequireDefault(
        _makeStateWithLocation,
      );

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function getComponentsForRoute(nextState, route, callback) {
        if (route.component || route.components) {
          callback(null, route.component || route.components);
          return;
        }

        var getComponent = route.getComponent || route.getComponents;
        if (!getComponent) {
          callback();
          return;
        }

        var location = nextState.location;

        var nextStateWithLocation = (0, _makeStateWithLocation2.default)(
          nextState,
          location,
        );

        getComponent.call(route, nextStateWithLocation, callback);
      }

      /**
       * Asynchronously fetches all components needed for the given router
       * state and calls callback(error, components) when finished.
       *
       * Note: This operation may finish synchronously if no routes have an
       * asynchronous getComponents method.
       */
      function getComponents(nextState, callback) {
        (0, _AsyncUtils.mapAsync)(
          nextState.routes,
          function (route, index, callback) {
            getComponentsForRoute(nextState, route, callback);
          },
          callback,
        );
      }

      exports.default = getComponents;
      module.exports = exports['default'];

      /***/
    },
    /* 69 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      exports.default = makeStateWithLocation;

      var _deprecateObjectProperties = __webpack_require__(37);

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function makeStateWithLocation(state, location) {
        if (
          'development' !== 'production' &&
          _deprecateObjectProperties.canUseMembrane
        ) {
          var stateWithLocation = _extends({}, state);

          // I don't use deprecateObjectProperties here because I want to keep the
          // same code path between development and production, in that we just
          // assign extra properties to the copy of the state object in both cases.

          var _loop = function _loop(prop) {
            if (!Object.prototype.hasOwnProperty.call(location, prop)) {
              return 'continue';
            }

            Object.defineProperty(stateWithLocation, prop, {
              get: function get() {
                true
                  ? (0, _routerWarning2.default)(
                      false,
                      'Accessing location properties directly from the first argument to `getComponent`, `getComponents`, `getChildRoutes`, and `getIndexRoute` is deprecated. That argument is now the router state (`nextState` or `partialNextState`) rather than the location. To access the location, use `nextState.location` or `partialNextState.location`.',
                    )
                  : void 0;
                return location[prop];
              },
            });
          };

          for (var prop in location) {
            var _ret = _loop(prop);

            if (_ret === 'continue') continue;
          }

          return stateWithLocation;
        }

        return _extends({}, state, location);
      }
      module.exports = exports['default'];

      /***/
    },
    /* 70 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function (obj) {
              return typeof obj;
            }
          : function (obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol
                ? 'symbol'
                : typeof obj;
            };

      exports.default = matchRoutes;

      var _AsyncUtils = __webpack_require__(66);

      var _makeStateWithLocation = __webpack_require__(69);

      var _makeStateWithLocation2 = _interopRequireDefault(
        _makeStateWithLocation,
      );

      var _PatternUtils = __webpack_require__(41);

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      var _RouteUtils = __webpack_require__(2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function getChildRoutes(
        route,
        location,
        paramNames,
        paramValues,
        callback,
      ) {
        if (route.childRoutes) {
          return [null, route.childRoutes];
        }
        if (!route.getChildRoutes) {
          return [];
        }

        var sync = true,
          result = void 0;

        var partialNextState = {
          location: location,
          params: createParams(paramNames, paramValues),
        };

        var partialNextStateWithLocation = (0, _makeStateWithLocation2.default)(
          partialNextState,
          location,
        );

        route.getChildRoutes(partialNextStateWithLocation, function (
          error,
          childRoutes,
        ) {
          childRoutes = !error && (0, _RouteUtils.createRoutes)(childRoutes);
          if (sync) {
            result = [error, childRoutes];
            return;
          }

          callback(error, childRoutes);
        });

        sync = false;
        return result; // Might be undefined.
      }

      function getIndexRoute(
        route,
        location,
        paramNames,
        paramValues,
        callback,
      ) {
        if (route.indexRoute) {
          callback(null, route.indexRoute);
        } else if (route.getIndexRoute) {
          var partialNextState = {
            location: location,
            params: createParams(paramNames, paramValues),
          };

          var partialNextStateWithLocation = (0,
          _makeStateWithLocation2.default)(partialNextState, location);

          route.getIndexRoute(partialNextStateWithLocation, function (
            error,
            indexRoute,
          ) {
            callback(
              error,
              !error && (0, _RouteUtils.createRoutes)(indexRoute)[0],
            );
          });
        } else if (route.childRoutes) {
          (function () {
            var pathless = route.childRoutes.filter(function (childRoute) {
              return !childRoute.path;
            });

            (0, _AsyncUtils.loopAsync)(
              pathless.length,
              function (index, next, done) {
                getIndexRoute(
                  pathless[index],
                  location,
                  paramNames,
                  paramValues,
                  function (error, indexRoute) {
                    if (error || indexRoute) {
                      var routes = [pathless[index]].concat(
                        Array.isArray(indexRoute) ? indexRoute : [indexRoute],
                      );
                      done(error, routes);
                    } else {
                      next();
                    }
                  },
                );
              },
              function (err, routes) {
                callback(null, routes);
              },
            );
          })();
        } else {
          callback();
        }
      }

      function assignParams(params, paramNames, paramValues) {
        return paramNames.reduce(function (params, paramName, index) {
          var paramValue = paramValues && paramValues[index];

          if (Array.isArray(params[paramName])) {
            params[paramName].push(paramValue);
          } else if (paramName in params) {
            params[paramName] = [params[paramName], paramValue];
          } else {
            params[paramName] = paramValue;
          }

          return params;
        }, params);
      }

      function createParams(paramNames, paramValues) {
        return assignParams({}, paramNames, paramValues);
      }

      function matchRouteDeep(
        route,
        location,
        remainingPathname,
        paramNames,
        paramValues,
        callback,
      ) {
        var pattern = route.path || '';

        if (pattern.charAt(0) === '/') {
          remainingPathname = location.pathname;
          paramNames = [];
          paramValues = [];
        }

        // Only try to match the path if the route actually has a pattern, and if
        // we're not just searching for potential nested absolute paths.
        if (remainingPathname !== null && pattern) {
          try {
            var matched = (0, _PatternUtils.matchPattern)(
              pattern,
              remainingPathname,
            );
            if (matched) {
              remainingPathname = matched.remainingPathname;
              paramNames = [].concat(paramNames, matched.paramNames);
              paramValues = [].concat(paramValues, matched.paramValues);
            } else {
              remainingPathname = null;
            }
          } catch (error) {
            callback(error);
          }

          // By assumption, pattern is non-empty here, which is the prerequisite for
          // actually terminating a match.
          if (remainingPathname === '') {
            var _ret2 = (function () {
              var match = {
                routes: [route],
                params: createParams(paramNames, paramValues),
              };

              getIndexRoute(route, location, paramNames, paramValues, function (
                error,
                indexRoute,
              ) {
                if (error) {
                  callback(error);
                } else {
                  if (Array.isArray(indexRoute)) {
                    var _match$routes;

                    true
                      ? (0, _routerWarning2.default)(
                          indexRoute.every(function (route) {
                            return !route.path;
                          }),
                          'Index routes should not have paths',
                        )
                      : void 0;
                    (_match$routes = match.routes).push.apply(
                      _match$routes,
                      indexRoute,
                    );
                  } else if (indexRoute) {
                    true
                      ? (0, _routerWarning2.default)(
                          !indexRoute.path,
                          'Index routes should not have paths',
                        )
                      : void 0;
                    match.routes.push(indexRoute);
                  }

                  callback(null, match);
                }
              });

              return {
                v: void 0,
              };
            })();

            if (
              (typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) ===
              'object'
            )
              return _ret2.v;
          }
        }

        if (remainingPathname != null || route.childRoutes) {
          // Either a) this route matched at least some of the path or b)
          // we don't have to load this route's children asynchronously. In
          // either case continue checking for matches in the subtree.
          var onChildRoutes = function onChildRoutes(error, childRoutes) {
            if (error) {
              callback(error);
            } else if (childRoutes) {
              // Check the child routes to see if any of them match.
              matchRoutes(
                childRoutes,
                location,
                function (error, match) {
                  if (error) {
                    callback(error);
                  } else if (match) {
                    // A child route matched! Augment the match and pass it up the stack.
                    match.routes.unshift(route);
                    callback(null, match);
                  } else {
                    callback();
                  }
                },
                remainingPathname,
                paramNames,
                paramValues,
              );
            } else {
              callback();
            }
          };

          var result = getChildRoutes(
            route,
            location,
            paramNames,
            paramValues,
            onChildRoutes,
          );
          if (result) {
            onChildRoutes.apply(undefined, result);
          }
        } else {
          callback();
        }
      }

      /**
       * Asynchronously matches the given location to a set of routes and calls
       * callback(error, state) when finished. The state object will have the
       * following properties:
       *
       * - routes       An array of routes that matched, in hierarchical order
       * - params       An object of URL parameters
       *
       * Note: This operation may finish synchronously if no routes have an
       * asynchronous getChildRoutes method.
       */
      function matchRoutes(routes, location, callback, remainingPathname) {
        var paramNames =
          arguments.length <= 4 || arguments[4] === undefined
            ? []
            : arguments[4];
        var paramValues =
          arguments.length <= 5 || arguments[5] === undefined
            ? []
            : arguments[5];

        if (remainingPathname === undefined) {
          // TODO: This is a little bit ugly, but it works around a quirk in history
          // that strips the leading slash from pathnames when using basenames with
          // trailing slashes.
          if (location.pathname.charAt(0) !== '/') {
            location = _extends({}, location, {
              pathname: '/' + location.pathname,
            });
          }
          remainingPathname = location.pathname;
        }

        (0, _AsyncUtils.loopAsync)(
          routes.length,
          function (index, next, done) {
            matchRouteDeep(
              routes[index],
              location,
              remainingPathname,
              paramNames,
              paramValues,
              function (error, match) {
                if (error || match) {
                  done(error, match);
                } else {
                  next();
                }
              },
            );
          },
          callback,
        );
      }
      module.exports = exports['default'];

      /***/
    },
    /* 71 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function (obj) {
              return typeof obj;
            }
          : function (obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol
                ? 'symbol'
                : typeof obj;
            };

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _deprecateObjectProperties = __webpack_require__(37);

      var _deprecateObjectProperties2 = _interopRequireDefault(
        _deprecateObjectProperties,
      );

      var _getRouteParams = __webpack_require__(72);

      var _getRouteParams2 = _interopRequireDefault(_getRouteParams);

      var _RouteUtils = __webpack_require__(2);

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _React$PropTypes = _react2.default.PropTypes;
      var array = _React$PropTypes.array;
      var func = _React$PropTypes.func;
      var object = _React$PropTypes.object;

      /**
       * A <RouterContext> renders the component tree for a given router state
       * and sets the history object and the current location in context.
       */

      var RouterContext = _react2.default.createClass({
        displayName: 'RouterContext',

        propTypes: {
          history: object,
          router: object.isRequired,
          location: object.isRequired,
          routes: array.isRequired,
          params: object.isRequired,
          components: array.isRequired,
          createElement: func.isRequired,
        },

        getDefaultProps: function getDefaultProps() {
          return {
            createElement: _react2.default.createElement,
          };
        },

        childContextTypes: {
          history: object,
          location: object.isRequired,
          router: object.isRequired,
        },

        getChildContext: function getChildContext() {
          var _props = this.props;
          var router = _props.router;
          var history = _props.history;
          var location = _props.location;

          if (!router) {
            true
              ? (0, _routerWarning2.default)(
                  false,
                  '`<RouterContext>` expects a `router` rather than a `history`',
                )
              : void 0;

            router = _extends({}, history, {
              setRouteLeaveHook: history.listenBeforeLeavingRoute,
            });
            delete router.listenBeforeLeavingRoute;
          }

          if (true) {
            location = (0, _deprecateObjectProperties2.default)(
              location,
              "`context.location` is deprecated, please use a route component's `props.location` instead. http://tiny.cc/router-accessinglocation",
            );
          }

          return { history: history, location: location, router: router };
        },
        createElement: function createElement(component, props) {
          return component == null
            ? null
            : this.props.createElement(component, props);
        },
        render: function render() {
          var _this = this;

          var _props2 = this.props;
          var history = _props2.history;
          var location = _props2.location;
          var routes = _props2.routes;
          var params = _props2.params;
          var components = _props2.components;

          var element = null;

          if (components) {
            element = components.reduceRight(function (
              element,
              components,
              index,
            ) {
              if (components == null) return element; // Don't create new children; use the grandchildren.

              var route = routes[index];
              var routeParams = (0, _getRouteParams2.default)(route, params);
              var props = {
                history: history,
                location: location,
                params: params,
                route: route,
                routeParams: routeParams,
                routes: routes,
              };

              if ((0, _RouteUtils.isReactChildren)(element)) {
                props.children = element;
              } else if (element) {
                for (var prop in element) {
                  if (Object.prototype.hasOwnProperty.call(element, prop))
                    props[prop] = element[prop];
                }
              }

              if (
                (typeof components === 'undefined'
                  ? 'undefined'
                  : _typeof(components)) === 'object'
              ) {
                var elements = {};

                for (var key in components) {
                  if (Object.prototype.hasOwnProperty.call(components, key)) {
                    // Pass through the key as a prop to createElement to allow
                    // custom createElement functions to know which named component
                    // they're rendering, for e.g. matching up to fetched data.
                    elements[key] = _this.createElement(
                      components[key],
                      _extends(
                        {
                          key: key,
                        },
                        props,
                      ),
                    );
                  }
                }

                return elements;
              }

              return _this.createElement(components, props);
            },
            element);
          }

          !(
            element === null ||
            element === false ||
            _react2.default.isValidElement(element)
          )
            ? true
              ? (0, _invariant2.default)(
                  false,
                  'The root route must render a single element',
                )
              : (0, _invariant2.default)(false)
            : void 0;

          return element;
        },
      });

      exports.default = RouterContext;
      module.exports = exports['default'];

      /***/
    },
    /* 72 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _PatternUtils = __webpack_require__(41);

      /**
       * Extracts an object of params the given route cares about from
       * the given params object.
       */
      function getRouteParams(route, params) {
        var routeParams = {};

        if (!route.path) return routeParams;

        (0, _PatternUtils.getParamNames)(route.path).forEach(function (p) {
          if (Object.prototype.hasOwnProperty.call(params, p)) {
            routeParams[p] = params[p];
          }
        });

        return routeParams;
      }

      exports.default = getRouteParams;
      module.exports = exports['default'];

      /***/
    },
    /* 73 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      exports.createRouterObject = createRouterObject;
      exports.createRoutingHistory = createRoutingHistory;

      var _deprecateObjectProperties = __webpack_require__(37);

      var _deprecateObjectProperties2 = _interopRequireDefault(
        _deprecateObjectProperties,
      );

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function createRouterObject(history, transitionManager) {
        return _extends({}, history, {
          setRouteLeaveHook: transitionManager.listenBeforeLeavingRoute,
          isActive: transitionManager.isActive,
        });
      }

      // deprecated
      function createRoutingHistory(history, transitionManager) {
        history = _extends({}, history, transitionManager);

        if (true) {
          history = (0, _deprecateObjectProperties2.default)(
            history,
            '`props.history` and `context.history` are deprecated. Please use `context.router`. http://tiny.cc/router-contextchanges',
          );
        }

        return history;
      }

      /***/
    },
    /* 74 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      var _PropTypes = __webpack_require__(36);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      var _React$PropTypes = _react2.default.PropTypes;
      var bool = _React$PropTypes.bool;
      var object = _React$PropTypes.object;
      var string = _React$PropTypes.string;
      var func = _React$PropTypes.func;
      var oneOfType = _React$PropTypes.oneOfType;

      function isLeftClickEvent(event) {
        return event.button === 0;
      }

      function isModifiedEvent(event) {
        return !!(
          event.metaKey ||
          event.altKey ||
          event.ctrlKey ||
          event.shiftKey
        );
      }

      // TODO: De-duplicate against hasAnyProperties in createTransitionManager.
      function isEmptyObject(object) {
        for (var p in object) {
          if (Object.prototype.hasOwnProperty.call(object, p)) return false;
        }
        return true;
      }

      function createLocationDescriptor(to, _ref) {
        var query = _ref.query;
        var hash = _ref.hash;
        var state = _ref.state;

        if (query || hash || state) {
          return { pathname: to, query: query, hash: hash, state: state };
        }

        return to;
      }

      /**
       * A <Link> is used to create an <a> element that links to a route.
       * When that route is active, the link gets the value of its
       * activeClassName prop.
       *
       * For example, assuming you have the following route:
       *
       *   <Route path="/posts/:postID" component={Post} />
       *
       * You could use the following component to link to that route:
       *
       *   <Link to={`/posts/${post.id}`} />
       *
       * Links may pass along location state and/or query string parameters
       * in the state/query props, respectively.
       *
       *   <Link ... query={{ show: true }} state={{ the: 'state' }} />
       */
      var Link = _react2.default.createClass({
        displayName: 'Link',

        contextTypes: {
          router: _PropTypes.routerShape,
        },

        propTypes: {
          to: oneOfType([string, object]),
          query: object,
          hash: string,
          state: object,
          activeStyle: object,
          activeClassName: string,
          onlyActiveOnIndex: bool.isRequired,
          onClick: func,
          target: string,
        },

        getDefaultProps: function getDefaultProps() {
          return {
            onlyActiveOnIndex: false,
            style: {},
          };
        },
        handleClick: function handleClick(event) {
          if (this.props.onClick) this.props.onClick(event);

          if (event.defaultPrevented) return;

          !this.context.router
            ? true
              ? (0, _invariant2.default)(
                  false,
                  '<Link>s rendered outside of a router context cannot navigate.',
                )
              : (0, _invariant2.default)(false)
            : void 0;

          if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;

          // If target prop is set (e.g. to "_blank"), let browser handle link.
          /* istanbul ignore if: untestable with Karma */
          if (this.props.target) return;

          event.preventDefault();

          var _props = this.props;
          var to = _props.to;
          var query = _props.query;
          var hash = _props.hash;
          var state = _props.state;

          var location = createLocationDescriptor(to, {
            query: query,
            hash: hash,
            state: state,
          });

          this.context.router.push(location);
        },
        render: function render() {
          var _props2 = this.props;
          var to = _props2.to;
          var query = _props2.query;
          var hash = _props2.hash;
          var state = _props2.state;
          var activeClassName = _props2.activeClassName;
          var activeStyle = _props2.activeStyle;
          var onlyActiveOnIndex = _props2.onlyActiveOnIndex;

          var props = _objectWithoutProperties(_props2, [
            'to',
            'query',
            'hash',
            'state',
            'activeClassName',
            'activeStyle',
            'onlyActiveOnIndex',
          ]);

          true
            ? (0, _routerWarning2.default)(
                !(query || hash || state),
                'the `query`, `hash`, and `state` props on `<Link>` are deprecated, use `<Link to={{ pathname, query, hash, state }}/>. http://tiny.cc/router-isActivedeprecated',
              )
            : void 0;

          // Ignore if rendered outside the context of router, simplifies unit testing.
          var router = this.context.router;

          if (router) {
            // If user does not specify a `to` prop, return an empty anchor tag.
            if (to == null) {
              return _react2.default.createElement('a', props);
            }

            var location = createLocationDescriptor(to, {
              query: query,
              hash: hash,
              state: state,
            });
            props.href = router.createHref(location);

            if (
              activeClassName ||
              (activeStyle != null && !isEmptyObject(activeStyle))
            ) {
              if (router.isActive(location, onlyActiveOnIndex)) {
                if (activeClassName) {
                  if (props.className) {
                    props.className += ' ' + activeClassName;
                  } else {
                    props.className = activeClassName;
                  }
                }

                if (activeStyle)
                  props.style = _extends({}, props.style, activeStyle);
              }
            }
          }

          return _react2.default.createElement(
            'a',
            _extends({}, props, { onClick: this.handleClick }),
          );
        },
      });

      exports.default = Link;
      module.exports = exports['default'];

      /***/
    },
    /* 75 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _Link = __webpack_require__(74);

      var _Link2 = _interopRequireDefault(_Link);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * An <IndexLink> is used to link to an <IndexRoute>.
       */
      var IndexLink = _react2.default.createClass({
        displayName: 'IndexLink',
        render: function render() {
          return _react2.default.createElement(
            _Link2.default,
            _extends({}, this.props, { onlyActiveOnIndex: true }),
          );
        },
      });

      exports.default = IndexLink;
      module.exports = exports['default'];

      /***/
    },
    /* 76 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      exports.default = withRouter;

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _hoistNonReactStatics = __webpack_require__(77);

      var _hoistNonReactStatics2 = _interopRequireDefault(
        _hoistNonReactStatics,
      );

      var _PropTypes = __webpack_require__(36);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function getDisplayName(WrappedComponent) {
        return (
          WrappedComponent.displayName || WrappedComponent.name || 'Component'
        );
      }

      function withRouter(WrappedComponent, options) {
        var withRef = options && options.withRef;

        var WithRouter = _react2.default.createClass({
          displayName: 'WithRouter',

          contextTypes: { router: _PropTypes.routerShape },
          propTypes: { router: _PropTypes.routerShape },

          getWrappedInstance: function getWrappedInstance() {
            !withRef
              ? true
                ? (0, _invariant2.default)(
                    false,
                    'To access the wrapped instance, you need to specify ' +
                      '`{ withRef: true }` as the second argument of the withRouter() call.',
                  )
                : (0, _invariant2.default)(false)
              : void 0;

            return this.wrappedInstance;
          },
          render: function render() {
            var _this = this;

            var router = this.props.router || this.context.router;
            var props = _extends({}, this.props, { router: router });

            if (withRef) {
              props.ref = function (c) {
                _this.wrappedInstance = c;
              };
            }

            return _react2.default.createElement(WrappedComponent, props);
          },
        });

        WithRouter.displayName =
          'withRouter(' + getDisplayName(WrappedComponent) + ')';
        WithRouter.WrappedComponent = WrappedComponent;

        return (0, _hoistNonReactStatics2.default)(
          WithRouter,
          WrappedComponent,
        );
      }
      module.exports = exports['default'];

      /***/
    },
    /* 77 */
    /***/ function (module, exports) {
      /**
       * Copyright 2015, Yahoo! Inc.
       * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
       */
      'use strict';

      var REACT_STATICS = {
        childContextTypes: true,
        contextTypes: true,
        defaultProps: true,
        displayName: true,
        getDefaultProps: true,
        mixins: true,
        propTypes: true,
        type: true,
      };

      var KNOWN_STATICS = {
        name: true,
        length: true,
        prototype: true,
        caller: true,
        arguments: true,
        arity: true,
      };

      var isGetOwnPropertySymbolsAvailable =
        typeof Object.getOwnPropertySymbols === 'function';

      module.exports = function hoistNonReactStatics(
        targetComponent,
        sourceComponent,
        customStatics,
      ) {
        if (typeof sourceComponent !== 'string') {
          // don't hoist over string (html) components
          var keys = Object.getOwnPropertyNames(sourceComponent);

          /* istanbul ignore else */
          if (isGetOwnPropertySymbolsAvailable) {
            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
          }

          for (var i = 0; i < keys.length; ++i) {
            if (
              !REACT_STATICS[keys[i]] &&
              !KNOWN_STATICS[keys[i]] &&
              (!customStatics || !customStatics[keys[i]])
            ) {
              try {
                targetComponent[keys[i]] = sourceComponent[keys[i]];
              } catch (error) {}
            }
          }
        }

        return targetComponent;
      };

      /***/
    },
    /* 78 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      var _Redirect = __webpack_require__(79);

      var _Redirect2 = _interopRequireDefault(_Redirect);

      var _InternalPropTypes = __webpack_require__(40);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _React$PropTypes = _react2.default.PropTypes;
      var string = _React$PropTypes.string;
      var object = _React$PropTypes.object;

      /**
       * An <IndexRedirect> is used to redirect from an indexRoute.
       */

      var IndexRedirect = _react2.default.createClass({
        displayName: 'IndexRedirect',

        statics: {
          createRouteFromReactElement: function createRouteFromReactElement(
            element,
            parentRoute,
          ) {
            /* istanbul ignore else: sanity check */
            if (parentRoute) {
              parentRoute.indexRoute = _Redirect2.default.createRouteFromReactElement(
                element,
              );
            } else {
              true
                ? (0, _routerWarning2.default)(
                    false,
                    'An <IndexRedirect> does not make sense at the root of your route config',
                  )
                : void 0;
            }
          },
        },

        propTypes: {
          to: string.isRequired,
          query: object,
          state: object,
          onEnter: _InternalPropTypes.falsy,
          children: _InternalPropTypes.falsy,
        },

        /* istanbul ignore next: sanity check */
        render: function render() {
          true
            ? true
              ? (0, _invariant2.default)(
                  false,
                  '<IndexRedirect> elements are for router configuration only and should not be rendered',
                )
              : (0, _invariant2.default)(false)
            : void 0;
        },
      });

      exports.default = IndexRedirect;
      module.exports = exports['default'];

      /***/
    },
    /* 79 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      var _RouteUtils = __webpack_require__(2);

      var _PatternUtils = __webpack_require__(41);

      var _InternalPropTypes = __webpack_require__(40);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _React$PropTypes = _react2.default.PropTypes;
      var string = _React$PropTypes.string;
      var object = _React$PropTypes.object;

      /**
       * A <Redirect> is used to declare another URL path a client should
       * be sent to when they request a given URL.
       *
       * Redirects are placed alongside routes in the route configuration
       * and are traversed in the same manner.
       */

      var Redirect = _react2.default.createClass({
        displayName: 'Redirect',

        statics: {
          createRouteFromReactElement: function createRouteFromReactElement(
            element,
          ) {
            var route = (0, _RouteUtils.createRouteFromReactElement)(element);

            if (route.from) route.path = route.from;

            route.onEnter = function (nextState, replace) {
              var location = nextState.location;
              var params = nextState.params;

              var pathname = void 0;
              if (route.to.charAt(0) === '/') {
                pathname = (0, _PatternUtils.formatPattern)(route.to, params);
              } else if (!route.to) {
                pathname = location.pathname;
              } else {
                var routeIndex = nextState.routes.indexOf(route);
                var parentPattern = Redirect.getRoutePattern(
                  nextState.routes,
                  routeIndex - 1,
                );
                var pattern = parentPattern.replace(/\/*$/, '/') + route.to;
                pathname = (0, _PatternUtils.formatPattern)(pattern, params);
              }

              replace({
                pathname: pathname,
                query: route.query || location.query,
                state: route.state || location.state,
              });
            };

            return route;
          },
          getRoutePattern: function getRoutePattern(routes, routeIndex) {
            var parentPattern = '';

            for (var i = routeIndex; i >= 0; i--) {
              var route = routes[i];
              var pattern = route.path || '';

              parentPattern = pattern.replace(/\/*$/, '/') + parentPattern;

              if (pattern.indexOf('/') === 0) break;
            }

            return '/' + parentPattern;
          },
        },

        propTypes: {
          path: string,
          from: string, // Alias for path
          to: string.isRequired,
          query: object,
          state: object,
          onEnter: _InternalPropTypes.falsy,
          children: _InternalPropTypes.falsy,
        },

        /* istanbul ignore next: sanity check */
        render: function render() {
          true
            ? true
              ? (0, _invariant2.default)(
                  false,
                  '<Redirect> elements are for router configuration only and should not be rendered',
                )
              : (0, _invariant2.default)(false)
            : void 0;
        },
      });

      exports.default = Redirect;
      module.exports = exports['default'];

      /***/
    },
    /* 80 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      var _RouteUtils = __webpack_require__(2);

      var _InternalPropTypes = __webpack_require__(40);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var func = _react2.default.PropTypes.func;

      /**
       * An <IndexRoute> is used to specify its parent's <Route indexRoute> in
       * a JSX route config.
       */

      var IndexRoute = _react2.default.createClass({
        displayName: 'IndexRoute',

        statics: {
          createRouteFromReactElement: function createRouteFromReactElement(
            element,
            parentRoute,
          ) {
            /* istanbul ignore else: sanity check */
            if (parentRoute) {
              parentRoute.indexRoute = (0,
              _RouteUtils.createRouteFromReactElement)(element);
            } else {
              true
                ? (0, _routerWarning2.default)(
                    false,
                    'An <IndexRoute> does not make sense at the root of your route config',
                  )
                : void 0;
            }
          },
        },

        propTypes: {
          path: _InternalPropTypes.falsy,
          component: _InternalPropTypes.component,
          components: _InternalPropTypes.components,
          getComponent: func,
          getComponents: func,
        },

        /* istanbul ignore next: sanity check */
        render: function render() {
          true
            ? true
              ? (0, _invariant2.default)(
                  false,
                  '<IndexRoute> elements are for router configuration only and should not be rendered',
                )
              : (0, _invariant2.default)(false)
            : void 0;
        },
      });

      exports.default = IndexRoute;
      module.exports = exports['default'];

      /***/
    },
    /* 81 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      var _RouteUtils = __webpack_require__(2);

      var _InternalPropTypes = __webpack_require__(40);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _React$PropTypes = _react2.default.PropTypes;
      var string = _React$PropTypes.string;
      var func = _React$PropTypes.func;

      /**
       * A <Route> is used to declare which components are rendered to the
       * page when the URL matches a given pattern.
       *
       * Routes are arranged in a nested tree structure. When a new URL is
       * requested, the tree is searched depth-first to find a route whose
       * path matches the URL.  When one is found, all routes in the tree
       * that lead to it are considered "active" and their components are
       * rendered into the DOM, nested in the same order as in the tree.
       */

      var Route = _react2.default.createClass({
        displayName: 'Route',

        statics: {
          createRouteFromReactElement: _RouteUtils.createRouteFromReactElement,
        },

        propTypes: {
          path: string,
          component: _InternalPropTypes.component,
          components: _InternalPropTypes.components,
          getComponent: func,
          getComponents: func,
        },

        /* istanbul ignore next: sanity check */
        render: function render() {
          true
            ? true
              ? (0, _invariant2.default)(
                  false,
                  '<Route> elements are for router configuration only and should not be rendered',
                )
              : (0, _invariant2.default)(false)
            : void 0;
        },
      });

      exports.default = Route;
      module.exports = exports['default'];

      /***/
    },
    /* 82 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      var _InternalPropTypes = __webpack_require__(40);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * A mixin that adds the "history" instance variable to components.
       */
      var History = {
        contextTypes: {
          history: _InternalPropTypes.history,
        },

        componentWillMount: function componentWillMount() {
          true
            ? (0, _routerWarning2.default)(
                false,
                'the `History` mixin is deprecated, please access `context.router` with your own `contextTypes`. http://tiny.cc/router-historymixin',
              )
            : void 0;
          this.history = this.context.history;
        },
      };

      exports.default = History;
      module.exports = exports['default'];

      /***/
    },
    /* 83 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var object = _react2.default.PropTypes.object;

      /**
       * The Lifecycle mixin adds the routerWillLeave lifecycle method to a
       * component that may be used to cancel a transition or prompt the user
       * for confirmation.
       *
       * On standard transitions, routerWillLeave receives a single argument: the
       * location we're transitioning to. To cancel the transition, return false.
       * To prompt the user for confirmation, return a prompt message (string).
       *
       * During the beforeunload event (assuming you're using the useBeforeUnload
       * history enhancer), routerWillLeave does not receive a location object
       * because it isn't possible for us to know the location we're transitioning
       * to. In this case routerWillLeave must return a prompt message to prevent
       * the user from closing the window/tab.
       */

      var Lifecycle = {
        contextTypes: {
          history: object.isRequired,
          // Nested children receive the route as context, either
          // set by the route component using the RouteContext mixin
          // or by some other ancestor.
          route: object,
        },

        propTypes: {
          // Route components receive the route object as a prop.
          route: object,
        },

        componentDidMount: function componentDidMount() {
          true
            ? (0, _routerWarning2.default)(
                false,
                'the `Lifecycle` mixin is deprecated, please use `context.router.setRouteLeaveHook(route, hook)`. http://tiny.cc/router-lifecyclemixin',
              )
            : void 0;
          !this.routerWillLeave
            ? true
              ? (0, _invariant2.default)(
                  false,
                  'The Lifecycle mixin requires you to define a routerWillLeave method',
                )
              : (0, _invariant2.default)(false)
            : void 0;

          var route = this.props.route || this.context.route;

          !route
            ? true
              ? (0, _invariant2.default)(
                  false,
                  'The Lifecycle mixin must be used on either a) a <Route component> or ' +
                    'b) a descendant of a <Route component> that uses the RouteContext mixin',
                )
              : (0, _invariant2.default)(false)
            : void 0;

          this._unlistenBeforeLeavingRoute = this.context.history.listenBeforeLeavingRoute(
            route,
            this.routerWillLeave,
          );
        },
        componentWillUnmount: function componentWillUnmount() {
          if (this._unlistenBeforeLeavingRoute)
            this._unlistenBeforeLeavingRoute();
        },
      };

      exports.default = Lifecycle;
      module.exports = exports['default'];

      /***/
    },
    /* 84 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var object = _react2.default.PropTypes.object;

      /**
       * The RouteContext mixin provides a convenient way for route
       * components to set the route in context. This is needed for
       * routes that render elements that want to use the Lifecycle
       * mixin to prevent transitions.
       */

      var RouteContext = {
        propTypes: {
          route: object.isRequired,
        },

        childContextTypes: {
          route: object.isRequired,
        },

        getChildContext: function getChildContext() {
          return {
            route: this.props.route,
          };
        },
        componentWillMount: function componentWillMount() {
          true
            ? (0, _routerWarning2.default)(
                false,
                'The `RouteContext` mixin is deprecated. You can provide `this.props.route` on context with your own `contextTypes`. http://tiny.cc/router-routecontextmixin',
              )
            : void 0;
        },
      };

      exports.default = RouteContext;
      module.exports = exports['default'];

      /***/
    },
    /* 85 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _useQueries = __webpack_require__(60);

      var _useQueries2 = _interopRequireDefault(_useQueries);

      var _createTransitionManager = __webpack_require__(63);

      var _createTransitionManager2 = _interopRequireDefault(
        _createTransitionManager,
      );

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      /**
       * Returns a new createHistory function that may be used to create
       * history objects that know about routing.
       *
       * Enhances history objects with the following methods:
       *
       * - listen((error, nextState) => {})
       * - listenBeforeLeavingRoute(route, (nextLocation) => {})
       * - match(location, (error, redirectLocation, nextState) => {})
       * - isActive(pathname, query, indexOnly=false)
       */
      function useRoutes(createHistory) {
        true
          ? (0, _routerWarning2.default)(
              false,
              '`useRoutes` is deprecated. Please use `createTransitionManager` instead.',
            )
          : void 0;

        return function () {
          var _ref =
            arguments.length <= 0 || arguments[0] === undefined
              ? {}
              : arguments[0];

          var routes = _ref.routes;

          var options = _objectWithoutProperties(_ref, ['routes']);

          var history = (0, _useQueries2.default)(createHistory)(options);
          var transitionManager = (0, _createTransitionManager2.default)(
            history,
            routes,
          );
          return _extends({}, history, transitionManager);
        };
      }

      exports.default = useRoutes;
      module.exports = exports['default'];

      /***/
    },
    /* 86 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _RouterContext = __webpack_require__(71);

      var _RouterContext2 = _interopRequireDefault(_RouterContext);

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var RoutingContext = _react2.default.createClass({
        displayName: 'RoutingContext',
        componentWillMount: function componentWillMount() {
          true
            ? (0, _routerWarning2.default)(
                false,
                "`RoutingContext` has been renamed to `RouterContext`. Please use `import { RouterContext } from 'react-router'`. http://tiny.cc/router-routercontext",
              )
            : void 0;
        },
        render: function render() {
          return _react2.default.createElement(
            _RouterContext2.default,
            this.props,
          );
        },
      });

      exports.default = RoutingContext;
      module.exports = exports['default'];

      /***/
    },
    /* 87 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _Actions = __webpack_require__(46);

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      var _createMemoryHistory = __webpack_require__(88);

      var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);

      var _createTransitionManager = __webpack_require__(63);

      var _createTransitionManager2 = _interopRequireDefault(
        _createTransitionManager,
      );

      var _RouteUtils = __webpack_require__(2);

      var _RouterUtils = __webpack_require__(73);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      /**
       * A high-level API to be used for server-side rendering.
       *
       * This function matches a location to a set of routes and calls
       * callback(error, redirectLocation, renderProps) when finished.
       *
       * Note: You probably don't want to use this in a browser unless you're using
       * server-side rendering with async routes.
       */
      function match(_ref, callback) {
        var history = _ref.history;
        var routes = _ref.routes;
        var location = _ref.location;

        var options = _objectWithoutProperties(_ref, [
          'history',
          'routes',
          'location',
        ]);

        !(history || location)
          ? true
            ? (0, _invariant2.default)(
                false,
                'match needs a history or a location',
              )
            : (0, _invariant2.default)(false)
          : void 0;

        history = history
          ? history
          : (0, _createMemoryHistory2.default)(options);
        var transitionManager = (0, _createTransitionManager2.default)(
          history,
          (0, _RouteUtils.createRoutes)(routes),
        );

        var unlisten = void 0;

        if (location) {
          // Allow match({ location: '/the/path', ... })
          location = history.createLocation(location);
        } else {
          // Pick up the location from the history via synchronous history.listen
          // call if needed.
          unlisten = history.listen(function (historyLocation) {
            location = historyLocation;
          });
        }

        var router = (0, _RouterUtils.createRouterObject)(
          history,
          transitionManager,
        );
        history = (0, _RouterUtils.createRoutingHistory)(
          history,
          transitionManager,
        );

        transitionManager.match(location, function (
          error,
          redirectLocation,
          nextState,
        ) {
          callback(
            error,
            redirectLocation &&
              router.createLocation(redirectLocation, _Actions.REPLACE),
            nextState &&
              _extends({}, nextState, {
                history: history,
                router: router,
                matchContext: {
                  history: history,
                  transitionManager: transitionManager,
                  router: router,
                },
              }),
          );

          // Defer removing the listener to here to prevent DOM histories from having
          // to unwind DOM event listeners unnecessarily, in case callback renders a
          // <Router> and attaches another history listener.
          if (unlisten) {
            unlisten();
          }
        });
      }

      exports.default = match;
      module.exports = exports['default'];

      /***/
    },
    /* 88 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.default = createMemoryHistory;

      var _useQueries = __webpack_require__(60);

      var _useQueries2 = _interopRequireDefault(_useQueries);

      var _useBasename = __webpack_require__(89);

      var _useBasename2 = _interopRequireDefault(_useBasename);

      var _createMemoryHistory = __webpack_require__(90);

      var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function createMemoryHistory(options) {
        // signatures and type checking differ between `useRoutes` and
        // `createMemoryHistory`, have to create `memoryHistory` first because
        // `useQueries` doesn't understand the signature
        var memoryHistory = (0, _createMemoryHistory2.default)(options);
        var createHistory = function createHistory() {
          return memoryHistory;
        };
        var history = (0, _useQueries2.default)(
          (0, _useBasename2.default)(createHistory),
        )(options);
        history.__v2_compatible__ = true;
        return history;
      }
      module.exports = exports['default'];

      /***/
    },
    /* 89 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _warning = __webpack_require__(45);

      var _warning2 = _interopRequireDefault(_warning);

      var _ExecutionEnvironment = __webpack_require__(48);

      var _PathUtils = __webpack_require__(47);

      var _runTransitionHook = __webpack_require__(58);

      var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

      var _deprecate = __webpack_require__(59);

      var _deprecate2 = _interopRequireDefault(_deprecate);

      function useBasename(createHistory) {
        return function () {
          var options =
            arguments.length <= 0 || arguments[0] === undefined
              ? {}
              : arguments[0];

          var history = createHistory(options);

          var basename = options.basename;

          var checkedBaseHref = false;

          function checkBaseHref() {
            if (checkedBaseHref) {
              return;
            }

            // Automatically use the value of <base href> in HTML
            // documents as basename if it's not explicitly given.
            if (basename == null && _ExecutionEnvironment.canUseDOM) {
              var base = document.getElementsByTagName('base')[0];
              var baseHref = base && base.getAttribute('href');

              if (baseHref != null) {
                basename = baseHref;

                true
                  ? _warning2['default'](
                      false,
                      'Automatically setting basename using <base href> is deprecated and will ' +
                        'be removed in the next major release. The semantics of <base href> are ' +
                        'subtly different from basename. Please pass the basename explicitly in ' +
                        'the options to createHistory',
                    )
                  : undefined;
              }
            }

            checkedBaseHref = true;
          }

          function addBasename(location) {
            checkBaseHref();

            if (basename && location.basename == null) {
              if (location.pathname.indexOf(basename) === 0) {
                location.pathname = location.pathname.substring(
                  basename.length,
                );
                location.basename = basename;

                if (location.pathname === '') location.pathname = '/';
              } else {
                location.basename = '';
              }
            }

            return location;
          }

          function prependBasename(location) {
            checkBaseHref();

            if (!basename) return location;

            if (typeof location === 'string')
              location = _PathUtils.parsePath(location);

            var pname = location.pathname;
            var normalizedBasename =
              basename.slice(-1) === '/' ? basename : basename + '/';
            var normalizedPathname =
              pname.charAt(0) === '/' ? pname.slice(1) : pname;
            var pathname = normalizedBasename + normalizedPathname;

            return _extends({}, location, {
              pathname: pathname,
            });
          }

          // Override all read methods with basename-aware versions.
          function listenBefore(hook) {
            return history.listenBefore(function (location, callback) {
              _runTransitionHook2['default'](
                hook,
                addBasename(location),
                callback,
              );
            });
          }

          function listen(listener) {
            return history.listen(function (location) {
              listener(addBasename(location));
            });
          }

          // Override all write methods with basename-aware versions.
          function push(location) {
            history.push(prependBasename(location));
          }

          function replace(location) {
            history.replace(prependBasename(location));
          }

          function createPath(location) {
            return history.createPath(prependBasename(location));
          }

          function createHref(location) {
            return history.createHref(prependBasename(location));
          }

          function createLocation(location) {
            for (
              var _len = arguments.length,
                args = Array(_len > 1 ? _len - 1 : 0),
                _key = 1;
              _key < _len;
              _key++
            ) {
              args[_key - 1] = arguments[_key];
            }

            return addBasename(
              history.createLocation.apply(
                history,
                [prependBasename(location)].concat(args),
              ),
            );
          }

          // deprecated
          function pushState(state, path) {
            if (typeof path === 'string') path = _PathUtils.parsePath(path);

            push(_extends({ state: state }, path));
          }

          // deprecated
          function replaceState(state, path) {
            if (typeof path === 'string') path = _PathUtils.parsePath(path);

            replace(_extends({ state: state }, path));
          }

          return _extends({}, history, {
            listenBefore: listenBefore,
            listen: listen,
            push: push,
            replace: replace,
            createPath: createPath,
            createHref: createHref,
            createLocation: createLocation,

            pushState: _deprecate2['default'](
              pushState,
              'pushState is deprecated; use push instead',
            ),
            replaceState: _deprecate2['default'](
              replaceState,
              'replaceState is deprecated; use replace instead',
            ),
          });
        };
      }

      exports['default'] = useBasename;
      module.exports = exports['default'];

      /***/
    },
    /* 90 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _warning = __webpack_require__(45);

      var _warning2 = _interopRequireDefault(_warning);

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      var _PathUtils = __webpack_require__(47);

      var _Actions = __webpack_require__(46);

      var _createHistory = __webpack_require__(52);

      var _createHistory2 = _interopRequireDefault(_createHistory);

      function createStateStorage(entries) {
        return entries
          .filter(function (entry) {
            return entry.state;
          })
          .reduce(function (memo, entry) {
            memo[entry.key] = entry.state;
            return memo;
          }, {});
      }

      function createMemoryHistory() {
        var options =
          arguments.length <= 0 || arguments[0] === undefined
            ? {}
            : arguments[0];

        if (Array.isArray(options)) {
          options = { entries: options };
        } else if (typeof options === 'string') {
          options = { entries: [options] };
        }

        var history = _createHistory2['default'](
          _extends({}, options, {
            getCurrentLocation: getCurrentLocation,
            finishTransition: finishTransition,
            saveState: saveState,
            go: go,
          }),
        );

        var _options = options;
        var entries = _options.entries;
        var current = _options.current;

        if (typeof entries === 'string') {
          entries = [entries];
        } else if (!Array.isArray(entries)) {
          entries = ['/'];
        }

        entries = entries.map(function (entry) {
          var key = history.createKey();

          if (typeof entry === 'string') return { pathname: entry, key: key };

          if (typeof entry === 'object' && entry)
            return _extends({}, entry, { key: key });

          true
            ? true
              ? _invariant2['default'](
                  false,
                  'Unable to create history entry from %s',
                  entry,
                )
              : _invariant2['default'](false)
            : undefined;
        });

        if (current == null) {
          current = entries.length - 1;
        } else {
          !(current >= 0 && current < entries.length)
            ? true
              ? _invariant2['default'](
                  false,
                  'Current index must be >= 0 and < %s, was %s',
                  entries.length,
                  current,
                )
              : _invariant2['default'](false)
            : undefined;
        }

        var storage = createStateStorage(entries);

        function saveState(key, state) {
          storage[key] = state;
        }

        function readState(key) {
          return storage[key];
        }

        function getCurrentLocation() {
          var entry = entries[current];
          var basename = entry.basename;
          var pathname = entry.pathname;
          var search = entry.search;

          var path = (basename || '') + pathname + (search || '');

          var key = undefined,
            state = undefined;
          if (entry.key) {
            key = entry.key;
            state = readState(key);
          } else {
            key = history.createKey();
            state = null;
            entry.key = key;
          }

          var location = _PathUtils.parsePath(path);

          return history.createLocation(
            _extends({}, location, { state: state }),
            undefined,
            key,
          );
        }

        function canGo(n) {
          var index = current + n;
          return index >= 0 && index < entries.length;
        }

        function go(n) {
          if (n) {
            if (!canGo(n)) {
              true
                ? _warning2['default'](
                    false,
                    'Cannot go(%s) there is not enough history',
                    n,
                  )
                : undefined;
              return;
            }

            current += n;

            var currentLocation = getCurrentLocation();

            // change action to POP
            history.transitionTo(
              _extends({}, currentLocation, { action: _Actions.POP }),
            );
          }
        }

        function finishTransition(location) {
          switch (location.action) {
            case _Actions.PUSH:
              current += 1;

              // if we are not on the top of stack
              // remove rest and push new
              if (current < entries.length) entries.splice(current);

              entries.push(location);
              saveState(location.key, location.state);
              break;
            case _Actions.REPLACE:
              entries[current] = location;
              saveState(location.key, location.state);
              break;
          }
        }

        return history;
      }

      exports['default'] = createMemoryHistory;
      module.exports = exports['default'];

      /***/
    },
    /* 91 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.default = useRouterHistory;

      var _useQueries = __webpack_require__(60);

      var _useQueries2 = _interopRequireDefault(_useQueries);

      var _useBasename = __webpack_require__(89);

      var _useBasename2 = _interopRequireDefault(_useBasename);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function useRouterHistory(createHistory) {
        return function (options) {
          var history = (0, _useQueries2.default)(
            (0, _useBasename2.default)(createHistory),
          )(options);
          history.__v2_compatible__ = true;
          return history;
        };
      }
      module.exports = exports['default'];

      /***/
    },
    /* 92 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _RouterContext = __webpack_require__(71);

      var _RouterContext2 = _interopRequireDefault(_RouterContext);

      var _routerWarning = __webpack_require__(38);

      var _routerWarning2 = _interopRequireDefault(_routerWarning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = function () {
        for (
          var _len = arguments.length, middlewares = Array(_len), _key = 0;
          _key < _len;
          _key++
        ) {
          middlewares[_key] = arguments[_key];
        }

        if (true) {
          middlewares.forEach(function (middleware, index) {
            true
              ? (0, _routerWarning2.default)(
                  middleware.renderRouterContext ||
                    middleware.renderRouteComponent,
                  'The middleware specified at index ' +
                    index +
                    ' does not appear to be ' +
                    'a valid React Router middleware.',
                )
              : void 0;
          });
        }

        var withContext = middlewares
          .map(function (middleware) {
            return middleware.renderRouterContext;
          })
          .filter(Boolean);
        var withComponent = middlewares
          .map(function (middleware) {
            return middleware.renderRouteComponent;
          })
          .filter(Boolean);

        var makeCreateElement = function makeCreateElement() {
          var baseCreateElement =
            arguments.length <= 0 || arguments[0] === undefined
              ? _react.createElement
              : arguments[0];
          return function (Component, props) {
            return withComponent.reduceRight(function (
              previous,
              renderRouteComponent,
            ) {
              return renderRouteComponent(previous, props);
            },
            baseCreateElement(Component, props));
          };
        };

        return function (renderProps) {
          return withContext.reduceRight(
            function (previous, renderRouterContext) {
              return renderRouterContext(previous, renderProps);
            },
            _react2.default.createElement(
              _RouterContext2.default,
              _extends({}, renderProps, {
                createElement: makeCreateElement(renderProps.createElement),
              }),
            ),
          );
        };
      };

      module.exports = exports['default'];

      /***/
    },
    /* 93 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _createBrowserHistory = __webpack_require__(94);

      var _createBrowserHistory2 = _interopRequireDefault(
        _createBrowserHistory,
      );

      var _createRouterHistory = __webpack_require__(95);

      var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = (0, _createRouterHistory2.default)(
        _createBrowserHistory2.default,
      );
      module.exports = exports['default'];

      /***/
    },
    /* 94 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      var _Actions = __webpack_require__(46);

      var _PathUtils = __webpack_require__(47);

      var _ExecutionEnvironment = __webpack_require__(48);

      var _DOMUtils = __webpack_require__(49);

      var _DOMStateStorage = __webpack_require__(50);

      var _createDOMHistory = __webpack_require__(51);

      var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);

      /**
       * Creates and returns a history object that uses HTML5's history API
       * (pushState, replaceState, and the popstate event) to manage history.
       * This is the recommended method of managing history in browsers because
       * it provides the cleanest URLs.
       *
       * Note: In browsers that do not support the HTML5 history API full
       * page reloads will be used to preserve URLs.
       */
      function createBrowserHistory() {
        var options =
          arguments.length <= 0 || arguments[0] === undefined
            ? {}
            : arguments[0];

        !_ExecutionEnvironment.canUseDOM
          ? true
            ? _invariant2['default'](false, 'Browser history needs a DOM')
            : _invariant2['default'](false)
          : undefined;

        var forceRefresh = options.forceRefresh;

        var isSupported = _DOMUtils.supportsHistory();
        var useRefresh = !isSupported || forceRefresh;

        function getCurrentLocation(historyState) {
          try {
            historyState = historyState || window.history.state || {};
          } catch (e) {
            historyState = {};
          }

          var path = _DOMUtils.getWindowPath();
          var _historyState = historyState;
          var key = _historyState.key;

          var state = undefined;
          if (key) {
            state = _DOMStateStorage.readState(key);
          } else {
            state = null;
            key = history.createKey();

            if (isSupported)
              window.history.replaceState(
                _extends({}, historyState, { key: key }),
                null,
              );
          }

          var location = _PathUtils.parsePath(path);

          return history.createLocation(
            _extends({}, location, { state: state }),
            undefined,
            key,
          );
        }

        function startPopStateListener(_ref) {
          var transitionTo = _ref.transitionTo;

          function popStateListener(event) {
            if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.

            transitionTo(getCurrentLocation(event.state));
          }

          _DOMUtils.addEventListener(window, 'popstate', popStateListener);

          return function () {
            _DOMUtils.removeEventListener(window, 'popstate', popStateListener);
          };
        }

        function finishTransition(location) {
          var basename = location.basename;
          var pathname = location.pathname;
          var search = location.search;
          var hash = location.hash;
          var state = location.state;
          var action = location.action;
          var key = location.key;

          if (action === _Actions.POP) return; // Nothing to do.

          _DOMStateStorage.saveState(key, state);

          var path = (basename || '') + pathname + search + hash;
          var historyState = {
            key: key,
          };

          if (action === _Actions.PUSH) {
            if (useRefresh) {
              window.location.href = path;
              return false; // Prevent location update.
            } else {
              window.history.pushState(historyState, null, path);
            }
          } else {
            // REPLACE
            if (useRefresh) {
              window.location.replace(path);
              return false; // Prevent location update.
            } else {
              window.history.replaceState(historyState, null, path);
            }
          }
        }

        var history = _createDOMHistory2['default'](
          _extends({}, options, {
            getCurrentLocation: getCurrentLocation,
            finishTransition: finishTransition,
            saveState: _DOMStateStorage.saveState,
          }),
        );

        var listenerCount = 0,
          stopPopStateListener = undefined;

        function listenBefore(listener) {
          if (++listenerCount === 1)
            stopPopStateListener = startPopStateListener(history);

          var unlisten = history.listenBefore(listener);

          return function () {
            unlisten();

            if (--listenerCount === 0) stopPopStateListener();
          };
        }

        function listen(listener) {
          if (++listenerCount === 1)
            stopPopStateListener = startPopStateListener(history);

          var unlisten = history.listen(listener);

          return function () {
            unlisten();

            if (--listenerCount === 0) stopPopStateListener();
          };
        }

        // deprecated
        function registerTransitionHook(hook) {
          if (++listenerCount === 1)
            stopPopStateListener = startPopStateListener(history);

          history.registerTransitionHook(hook);
        }

        // deprecated
        function unregisterTransitionHook(hook) {
          history.unregisterTransitionHook(hook);

          if (--listenerCount === 0) stopPopStateListener();
        }

        return _extends({}, history, {
          listenBefore: listenBefore,
          listen: listen,
          registerTransitionHook: registerTransitionHook,
          unregisterTransitionHook: unregisterTransitionHook,
        });
      }

      exports['default'] = createBrowserHistory;
      module.exports = exports['default'];

      /***/
    },
    /* 95 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      exports.default = function (createHistory) {
        var history = void 0;
        if (canUseDOM)
          history = (0, _useRouterHistory2.default)(createHistory)();
        return history;
      };

      var _useRouterHistory = __webpack_require__(91);

      var _useRouterHistory2 = _interopRequireDefault(_useRouterHistory);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var canUseDOM = !!(
        typeof window !== 'undefined' &&
        window.document &&
        window.document.createElement
      );

      module.exports = exports['default'];

      /***/
    },
    /* 96 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _createHashHistory = __webpack_require__(44);

      var _createHashHistory2 = _interopRequireDefault(_createHashHistory);

      var _createRouterHistory = __webpack_require__(95);

      var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = (0, _createRouterHistory2.default)(
        _createHashHistory2.default,
      );
      module.exports = exports['default'];

      /***/
    },
    /* 97 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.routerMiddleware = exports.routerActions = exports.goForward = exports.goBack = exports.go = exports.replace = exports.push = exports.CALL_HISTORY_METHOD = exports.routerReducer = exports.LOCATION_CHANGE = exports.syncHistoryWithStore = undefined;

      var _reducer = __webpack_require__(98);

      Object.defineProperty(exports, 'LOCATION_CHANGE', {
        enumerable: true,
        get: function get() {
          return _reducer.LOCATION_CHANGE;
        },
      });
      Object.defineProperty(exports, 'routerReducer', {
        enumerable: true,
        get: function get() {
          return _reducer.routerReducer;
        },
      });

      var _actions = __webpack_require__(99);

      Object.defineProperty(exports, 'CALL_HISTORY_METHOD', {
        enumerable: true,
        get: function get() {
          return _actions.CALL_HISTORY_METHOD;
        },
      });
      Object.defineProperty(exports, 'push', {
        enumerable: true,
        get: function get() {
          return _actions.push;
        },
      });
      Object.defineProperty(exports, 'replace', {
        enumerable: true,
        get: function get() {
          return _actions.replace;
        },
      });
      Object.defineProperty(exports, 'go', {
        enumerable: true,
        get: function get() {
          return _actions.go;
        },
      });
      Object.defineProperty(exports, 'goBack', {
        enumerable: true,
        get: function get() {
          return _actions.goBack;
        },
      });
      Object.defineProperty(exports, 'goForward', {
        enumerable: true,
        get: function get() {
          return _actions.goForward;
        },
      });
      Object.defineProperty(exports, 'routerActions', {
        enumerable: true,
        get: function get() {
          return _actions.routerActions;
        },
      });

      var _sync = __webpack_require__(100);

      var _sync2 = _interopRequireDefault(_sync);

      var _middleware = __webpack_require__(101);

      var _middleware2 = _interopRequireDefault(_middleware);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.syncHistoryWithStore = _sync2['default'];
      exports.routerMiddleware = _middleware2['default'];

      /***/
    },
    /* 98 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      exports.routerReducer = routerReducer;
      /**
       * This action type will be dispatched when your history
       * receives a location change.
       */
      var LOCATION_CHANGE = (exports.LOCATION_CHANGE =
        '@@router/LOCATION_CHANGE');

      var initialState = {
        locationBeforeTransitions: null,
      };

      /**
       * This reducer will update the state with the most recent location history
       * has transitioned to. This may not be in sync with the router, particularly
       * if you have asynchronously-loaded routes, so reading from and relying on
       * this state is discouraged.
       */
      function routerReducer() {
        var state =
          arguments.length > 0 && arguments[0] !== undefined
            ? arguments[0]
            : initialState;

        var _ref =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : {},
          type = _ref.type,
          payload = _ref.payload;

        if (type === LOCATION_CHANGE) {
          return _extends({}, state, { locationBeforeTransitions: payload });
        }

        return state;
      }

      /***/
    },
    /* 99 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      /**
       * This action type will be dispatched by the history actions below.
       * If you're writing a middleware to watch for navigation events, be sure to
       * look for actions of this type.
       */
      var CALL_HISTORY_METHOD = (exports.CALL_HISTORY_METHOD =
        '@@router/CALL_HISTORY_METHOD');

      function updateLocation(method) {
        return function () {
          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return {
            type: CALL_HISTORY_METHOD,
            payload: { method: method, args: args },
          };
        };
      }

      /**
       * These actions correspond to the history API.
       * The associated routerMiddleware will capture these events before they get to
       * your reducer and reissue them as the matching function on your history.
       */
      var push = (exports.push = updateLocation('push'));
      var replace = (exports.replace = updateLocation('replace'));
      var go = (exports.go = updateLocation('go'));
      var goBack = (exports.goBack = updateLocation('goBack'));
      var goForward = (exports.goForward = updateLocation('goForward'));

      var routerActions = (exports.routerActions = {
        push: push,
        replace: replace,
        go: go,
        goBack: goBack,
        goForward: goForward,
      });

      /***/
    },
    /* 100 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      exports['default'] = syncHistoryWithStore;

      var _reducer = __webpack_require__(98);

      var defaultSelectLocationState = function defaultSelectLocationState(
        state,
      ) {
        return state.routing;
      };

      /**
       * This function synchronizes your history state with the Redux store.
       * Location changes flow from history to the store. An enhanced history is
       * returned with a listen method that responds to store updates for location.
       *
       * When this history is provided to the router, this means the location data
       * will flow like this:
       * history.push -> store.dispatch -> enhancedHistory.listen -> router
       * This ensures that when the store state changes due to a replay or other
       * event, the router will be updated appropriately and can transition to the
       * correct router state.
       */
      function syncHistoryWithStore(history, store) {
        var _ref =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : {},
          _ref$selectLocationSt = _ref.selectLocationState,
          selectLocationState =
            _ref$selectLocationSt === undefined
              ? defaultSelectLocationState
              : _ref$selectLocationSt,
          _ref$adjustUrlOnRepla = _ref.adjustUrlOnReplay,
          adjustUrlOnReplay =
            _ref$adjustUrlOnRepla === undefined ? true : _ref$adjustUrlOnRepla;

        // Ensure that the reducer is mounted on the store and functioning properly.
        if (typeof selectLocationState(store.getState()) === 'undefined') {
          throw new Error(
            'Expected the routing state to be available either as `state.routing` ' +
              'or as the custom expression you can specify as `selectLocationState` ' +
              'in the `syncHistoryWithStore()` options. ' +
              "Ensure you have added the `routerReducer` to your store's " +
              'reducers via `combineReducers` or whatever method you use to isolate ' +
              'your reducers.',
          );
        }

        var initialLocation = void 0;
        var isTimeTraveling = void 0;
        var unsubscribeFromStore = void 0;
        var unsubscribeFromHistory = void 0;
        var currentLocation = void 0;

        // What does the store say about current location?
        var getLocationInStore = function getLocationInStore(
          useInitialIfEmpty,
        ) {
          var locationState = selectLocationState(store.getState());
          return (
            locationState.locationBeforeTransitions ||
            (useInitialIfEmpty ? initialLocation : undefined)
          );
        };

        // Init initialLocation with potential location in store
        initialLocation = getLocationInStore();

        // If the store is replayed, update the URL in the browser to match.
        if (adjustUrlOnReplay) {
          var handleStoreChange = function handleStoreChange() {
            var locationInStore = getLocationInStore(true);
            if (
              currentLocation === locationInStore ||
              initialLocation === locationInStore
            ) {
              return;
            }

            // Update address bar to reflect store state
            isTimeTraveling = true;
            currentLocation = locationInStore;
            history.transitionTo(
              _extends({}, locationInStore, {
                action: 'PUSH',
              }),
            );
            isTimeTraveling = false;
          };

          unsubscribeFromStore = store.subscribe(handleStoreChange);
          handleStoreChange();
        }

        // Whenever location changes, dispatch an action to get it in the store
        var handleLocationChange = function handleLocationChange(location) {
          // ... unless we just caused that location change
          if (isTimeTraveling) {
            return;
          }

          // Remember where we are
          currentLocation = location;

          // Are we being called for the first time?
          if (!initialLocation) {
            // Remember as a fallback in case state is reset
            initialLocation = location;

            // Respect persisted location, if any
            if (getLocationInStore()) {
              return;
            }
          }

          // Tell the store to update by dispatching an action
          store.dispatch({
            type: _reducer.LOCATION_CHANGE,
            payload: location,
          });
        };
        unsubscribeFromHistory = history.listen(handleLocationChange);

        // support history 3.x
        if (history.getCurrentLocation) {
          handleLocationChange(history.getCurrentLocation());
        }

        // The enhanced history uses store as source of truth
        return _extends({}, history, {
          // The listeners are subscribed to the store instead of history
          listen: function listen(listener) {
            // Copy of last location.
            var lastPublishedLocation = getLocationInStore(true);

            // Keep track of whether we unsubscribed, as Redux store
            // only applies changes in subscriptions on next dispatch
            var unsubscribed = false;
            var unsubscribeFromStore = store.subscribe(function () {
              var currentLocation = getLocationInStore(true);
              if (currentLocation === lastPublishedLocation) {
                return;
              }
              lastPublishedLocation = currentLocation;
              if (!unsubscribed) {
                listener(lastPublishedLocation);
              }
            });

            // History listeners expect a synchronous call. Make the first call to the
            // listener after subscribing to the store, in case the listener causes a
            // location change (e.g. when it redirects)
            listener(lastPublishedLocation);

            // Let user unsubscribe later
            return function () {
              unsubscribed = true;
              unsubscribeFromStore();
            };
          },

          // It also provides a way to destroy internal listeners
          unsubscribe: function unsubscribe() {
            if (adjustUrlOnReplay) {
              unsubscribeFromStore();
            }
            unsubscribeFromHistory();
          },
        });
      }

      /***/
    },
    /* 101 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports['default'] = routerMiddleware;

      var _actions = __webpack_require__(99);

      function _toConsumableArray(arr) {
        if (Array.isArray(arr)) {
          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
            arr2[i] = arr[i];
          }
          return arr2;
        } else {
          return Array.from(arr);
        }
      }

      /**
       * This middleware captures CALL_HISTORY_METHOD actions to redirect to the
       * provided history object. This will prevent these actions from reaching your
       * reducer or any middleware that comes after this one.
       */
      function routerMiddleware(history) {
        return function () {
          return function (next) {
            return function (action) {
              if (action.type !== _actions.CALL_HISTORY_METHOD) {
                return next(action);
              }

              var _action$payload = action.payload,
                method = _action$payload.method,
                args = _action$payload.args;

              history[method].apply(history, _toConsumableArray(args));
            };
          };
        };
      }

      /***/
    },
    /* 102 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.connect = exports.Provider = undefined;

      var _Provider = __webpack_require__(103);

      var _Provider2 = _interopRequireDefault(_Provider);

      var _connect = __webpack_require__(106);

      var _connect2 = _interopRequireDefault(_connect);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.Provider = _Provider2['default'];
      exports.connect = _connect2['default'];

      /***/
    },
    /* 103 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports['default'] = undefined;

      var _react = __webpack_require__(3);

      var _storeShape = __webpack_require__(104);

      var _storeShape2 = _interopRequireDefault(_storeShape);

      var _warning = __webpack_require__(105);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var didWarnAboutReceivingStore = false;
      function warnAboutReceivingStore() {
        if (didWarnAboutReceivingStore) {
          return;
        }
        didWarnAboutReceivingStore = true;

        (0, _warning2['default'])(
          '<Provider> does not support changing `store` on the fly. ' +
            'It is most likely that you see this error because you updated to ' +
            'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' +
            'automatically. See https://github.com/reactjs/react-redux/releases/' +
            'tag/v2.0.0 for the migration instructions.',
        );
      }

      var Provider = (function (_Component) {
        _inherits(Provider, _Component);

        Provider.prototype.getChildContext = function getChildContext() {
          return { store: this.store };
        };

        function Provider(props, context) {
          _classCallCheck(this, Provider);

          var _this = _possibleConstructorReturn(
            this,
            _Component.call(this, props, context),
          );

          _this.store = props.store;
          return _this;
        }

        Provider.prototype.render = function render() {
          var children = this.props.children;

          return _react.Children.only(children);
        };

        return Provider;
      })(_react.Component);

      exports['default'] = Provider;

      if (true) {
        Provider.prototype.componentWillReceiveProps = function (nextProps) {
          var store = this.store;
          var nextStore = nextProps.store;

          if (store !== nextStore) {
            warnAboutReceivingStore();
          }
        };
      }

      Provider.propTypes = {
        store: _storeShape2['default'].isRequired,
        children: _react.PropTypes.element.isRequired,
      };
      Provider.childContextTypes = {
        store: _storeShape2['default'].isRequired,
      };

      /***/
    },
    /* 104 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(3);

      exports['default'] = _react.PropTypes.shape({
        subscribe: _react.PropTypes.func.isRequired,
        dispatch: _react.PropTypes.func.isRequired,
        getState: _react.PropTypes.func.isRequired,
      });

      /***/
    },
    /* 105 */
    /***/ function (module, exports) {
      'use strict';

      exports.__esModule = true;
      exports['default'] = warning;
      /**
       * Prints a warning in the console if it exists.
       *
       * @param {String} message The warning message.
       * @returns {void}
       */
      function warning(message) {
        /* eslint-disable no-console */
        if (
          typeof console !== 'undefined' &&
          typeof console.error === 'function'
        ) {
          console.error(message);
        }
        /* eslint-enable no-console */
        try {
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          throw new Error(message);
          /* eslint-disable no-empty */
        } catch (e) {}
        /* eslint-enable no-empty */
      }

      /***/
    },
    /* 106 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      exports.__esModule = true;
      exports['default'] = connect;

      var _react = __webpack_require__(3);

      var _storeShape = __webpack_require__(104);

      var _storeShape2 = _interopRequireDefault(_storeShape);

      var _shallowEqual = __webpack_require__(107);

      var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

      var _wrapActionCreators = __webpack_require__(108);

      var _wrapActionCreators2 = _interopRequireDefault(_wrapActionCreators);

      var _warning = __webpack_require__(105);

      var _warning2 = _interopRequireDefault(_warning);

      var _isPlainObject = __webpack_require__(111);

      var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

      var _hoistNonReactStatics = __webpack_require__(77);

      var _hoistNonReactStatics2 = _interopRequireDefault(
        _hoistNonReactStatics,
      );

      var _invariant = __webpack_require__(42);

      var _invariant2 = _interopRequireDefault(_invariant);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var defaultMapStateToProps = function defaultMapStateToProps(state) {
        return {};
      }; // eslint-disable-line no-unused-vars
      var defaultMapDispatchToProps = function defaultMapDispatchToProps(
        dispatch,
      ) {
        return { dispatch: dispatch };
      };
      var defaultMergeProps = function defaultMergeProps(
        stateProps,
        dispatchProps,
        parentProps,
      ) {
        return _extends({}, parentProps, stateProps, dispatchProps);
      };

      function getDisplayName(WrappedComponent) {
        return (
          WrappedComponent.displayName || WrappedComponent.name || 'Component'
        );
      }

      var errorObject = { value: null };
      function tryCatch(fn, ctx) {
        try {
          return fn.apply(ctx);
        } catch (e) {
          errorObject.value = e;
          return errorObject;
        }
      }

      // Helps track hot reloading.
      var nextVersion = 0;

      function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
        var options =
          arguments.length <= 3 || arguments[3] === undefined
            ? {}
            : arguments[3];

        var shouldSubscribe = Boolean(mapStateToProps);
        var mapState = mapStateToProps || defaultMapStateToProps;

        var mapDispatch = undefined;
        if (typeof mapDispatchToProps === 'function') {
          mapDispatch = mapDispatchToProps;
        } else if (!mapDispatchToProps) {
          mapDispatch = defaultMapDispatchToProps;
        } else {
          mapDispatch = (0, _wrapActionCreators2['default'])(
            mapDispatchToProps,
          );
        }

        var finalMergeProps = mergeProps || defaultMergeProps;
        var _options$pure = options.pure;
        var pure = _options$pure === undefined ? true : _options$pure;
        var _options$withRef = options.withRef;
        var withRef = _options$withRef === undefined ? false : _options$withRef;

        var checkMergedEquals = pure && finalMergeProps !== defaultMergeProps;

        // Helps track hot reloading.
        var version = nextVersion++;

        return function wrapWithConnect(WrappedComponent) {
          var connectDisplayName =
            'Connect(' + getDisplayName(WrappedComponent) + ')';

          function checkStateShape(props, methodName) {
            if (!(0, _isPlainObject2['default'])(props)) {
              (0, _warning2['default'])(
                methodName +
                  '() in ' +
                  connectDisplayName +
                  ' must return a plain object. ' +
                  ('Instead received ' + props + '.'),
              );
            }
          }

          function computeMergedProps(stateProps, dispatchProps, parentProps) {
            var mergedProps = finalMergeProps(
              stateProps,
              dispatchProps,
              parentProps,
            );
            if (true) {
              checkStateShape(mergedProps, 'mergeProps');
            }
            return mergedProps;
          }

          var Connect = (function (_Component) {
            _inherits(Connect, _Component);

            Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
              return (
                !pure || this.haveOwnPropsChanged || this.hasStoreStateChanged
              );
            };

            function Connect(props, context) {
              _classCallCheck(this, Connect);

              var _this = _possibleConstructorReturn(
                this,
                _Component.call(this, props, context),
              );

              _this.version = version;
              _this.store = props.store || context.store;

              (0, _invariant2['default'])(
                _this.store,
                'Could not find "store" in either the context or ' +
                  ('props of "' + connectDisplayName + '". ') +
                  'Either wrap the root component in a <Provider>, ' +
                  ('or explicitly pass "store" as a prop to "' +
                    connectDisplayName +
                    '".'),
              );

              var storeState = _this.store.getState();
              _this.state = { storeState: storeState };
              _this.clearCache();
              return _this;
            }

            Connect.prototype.computeStateProps = function computeStateProps(
              store,
              props,
            ) {
              if (!this.finalMapStateToProps) {
                return this.configureFinalMapState(store, props);
              }

              var state = store.getState();
              var stateProps = this.doStatePropsDependOnOwnProps
                ? this.finalMapStateToProps(state, props)
                : this.finalMapStateToProps(state);

              if (true) {
                checkStateShape(stateProps, 'mapStateToProps');
              }
              return stateProps;
            };

            Connect.prototype.configureFinalMapState = function configureFinalMapState(
              store,
              props,
            ) {
              var mappedState = mapState(store.getState(), props);
              var isFactory = typeof mappedState === 'function';

              this.finalMapStateToProps = isFactory ? mappedState : mapState;
              this.doStatePropsDependOnOwnProps =
                this.finalMapStateToProps.length !== 1;

              if (isFactory) {
                return this.computeStateProps(store, props);
              }

              if (true) {
                checkStateShape(mappedState, 'mapStateToProps');
              }
              return mappedState;
            };

            Connect.prototype.computeDispatchProps = function computeDispatchProps(
              store,
              props,
            ) {
              if (!this.finalMapDispatchToProps) {
                return this.configureFinalMapDispatch(store, props);
              }

              var dispatch = store.dispatch;

              var dispatchProps = this.doDispatchPropsDependOnOwnProps
                ? this.finalMapDispatchToProps(dispatch, props)
                : this.finalMapDispatchToProps(dispatch);

              if (true) {
                checkStateShape(dispatchProps, 'mapDispatchToProps');
              }
              return dispatchProps;
            };

            Connect.prototype.configureFinalMapDispatch = function configureFinalMapDispatch(
              store,
              props,
            ) {
              var mappedDispatch = mapDispatch(store.dispatch, props);
              var isFactory = typeof mappedDispatch === 'function';

              this.finalMapDispatchToProps = isFactory
                ? mappedDispatch
                : mapDispatch;
              this.doDispatchPropsDependOnOwnProps =
                this.finalMapDispatchToProps.length !== 1;

              if (isFactory) {
                return this.computeDispatchProps(store, props);
              }

              if (true) {
                checkStateShape(mappedDispatch, 'mapDispatchToProps');
              }
              return mappedDispatch;
            };

            Connect.prototype.updateStatePropsIfNeeded = function updateStatePropsIfNeeded() {
              var nextStateProps = this.computeStateProps(
                this.store,
                this.props,
              );
              if (
                this.stateProps &&
                (0, _shallowEqual2['default'])(nextStateProps, this.stateProps)
              ) {
                return false;
              }

              this.stateProps = nextStateProps;
              return true;
            };

            Connect.prototype.updateDispatchPropsIfNeeded = function updateDispatchPropsIfNeeded() {
              var nextDispatchProps = this.computeDispatchProps(
                this.store,
                this.props,
              );
              if (
                this.dispatchProps &&
                (0, _shallowEqual2['default'])(
                  nextDispatchProps,
                  this.dispatchProps,
                )
              ) {
                return false;
              }

              this.dispatchProps = nextDispatchProps;
              return true;
            };

            Connect.prototype.updateMergedPropsIfNeeded = function updateMergedPropsIfNeeded() {
              var nextMergedProps = computeMergedProps(
                this.stateProps,
                this.dispatchProps,
                this.props,
              );
              if (
                this.mergedProps &&
                checkMergedEquals &&
                (0, _shallowEqual2['default'])(
                  nextMergedProps,
                  this.mergedProps,
                )
              ) {
                return false;
              }

              this.mergedProps = nextMergedProps;
              return true;
            };

            Connect.prototype.isSubscribed = function isSubscribed() {
              return typeof this.unsubscribe === 'function';
            };

            Connect.prototype.trySubscribe = function trySubscribe() {
              if (shouldSubscribe && !this.unsubscribe) {
                this.unsubscribe = this.store.subscribe(
                  this.handleChange.bind(this),
                );
                this.handleChange();
              }
            };

            Connect.prototype.tryUnsubscribe = function tryUnsubscribe() {
              if (this.unsubscribe) {
                this.unsubscribe();
                this.unsubscribe = null;
              }
            };

            Connect.prototype.componentDidMount = function componentDidMount() {
              this.trySubscribe();
            };

            Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(
              nextProps,
            ) {
              if (
                !pure ||
                !(0, _shallowEqual2['default'])(nextProps, this.props)
              ) {
                this.haveOwnPropsChanged = true;
              }
            };

            Connect.prototype.componentWillUnmount = function componentWillUnmount() {
              this.tryUnsubscribe();
              this.clearCache();
            };

            Connect.prototype.clearCache = function clearCache() {
              this.dispatchProps = null;
              this.stateProps = null;
              this.mergedProps = null;
              this.haveOwnPropsChanged = true;
              this.hasStoreStateChanged = true;
              this.haveStatePropsBeenPrecalculated = false;
              this.statePropsPrecalculationError = null;
              this.renderedElement = null;
              this.finalMapDispatchToProps = null;
              this.finalMapStateToProps = null;
            };

            Connect.prototype.handleChange = function handleChange() {
              if (!this.unsubscribe) {
                return;
              }

              var storeState = this.store.getState();
              var prevStoreState = this.state.storeState;
              if (pure && prevStoreState === storeState) {
                return;
              }

              if (pure && !this.doStatePropsDependOnOwnProps) {
                var haveStatePropsChanged = tryCatch(
                  this.updateStatePropsIfNeeded,
                  this,
                );
                if (!haveStatePropsChanged) {
                  return;
                }
                if (haveStatePropsChanged === errorObject) {
                  this.statePropsPrecalculationError = errorObject.value;
                }
                this.haveStatePropsBeenPrecalculated = true;
              }

              this.hasStoreStateChanged = true;
              this.setState({ storeState: storeState });
            };

            Connect.prototype.getWrappedInstance = function getWrappedInstance() {
              (0, _invariant2['default'])(
                withRef,
                'To access the wrapped instance, you need to specify ' +
                  '{ withRef: true } as the fourth argument of the connect() call.',
              );

              return this.refs.wrappedInstance;
            };

            Connect.prototype.render = function render() {
              var haveOwnPropsChanged = this.haveOwnPropsChanged;
              var hasStoreStateChanged = this.hasStoreStateChanged;
              var haveStatePropsBeenPrecalculated = this
                .haveStatePropsBeenPrecalculated;
              var statePropsPrecalculationError = this
                .statePropsPrecalculationError;
              var renderedElement = this.renderedElement;

              this.haveOwnPropsChanged = false;
              this.hasStoreStateChanged = false;
              this.haveStatePropsBeenPrecalculated = false;
              this.statePropsPrecalculationError = null;

              if (statePropsPrecalculationError) {
                throw statePropsPrecalculationError;
              }

              var shouldUpdateStateProps = true;
              var shouldUpdateDispatchProps = true;
              if (pure && renderedElement) {
                shouldUpdateStateProps =
                  hasStoreStateChanged ||
                  (haveOwnPropsChanged && this.doStatePropsDependOnOwnProps);
                shouldUpdateDispatchProps =
                  haveOwnPropsChanged && this.doDispatchPropsDependOnOwnProps;
              }

              var haveStatePropsChanged = false;
              var haveDispatchPropsChanged = false;
              if (haveStatePropsBeenPrecalculated) {
                haveStatePropsChanged = true;
              } else if (shouldUpdateStateProps) {
                haveStatePropsChanged = this.updateStatePropsIfNeeded();
              }
              if (shouldUpdateDispatchProps) {
                haveDispatchPropsChanged = this.updateDispatchPropsIfNeeded();
              }

              var haveMergedPropsChanged = true;
              if (
                haveStatePropsChanged ||
                haveDispatchPropsChanged ||
                haveOwnPropsChanged
              ) {
                haveMergedPropsChanged = this.updateMergedPropsIfNeeded();
              } else {
                haveMergedPropsChanged = false;
              }

              if (!haveMergedPropsChanged && renderedElement) {
                return renderedElement;
              }

              if (withRef) {
                this.renderedElement = (0, _react.createElement)(
                  WrappedComponent,
                  _extends({}, this.mergedProps, {
                    ref: 'wrappedInstance',
                  }),
                );
              } else {
                this.renderedElement = (0, _react.createElement)(
                  WrappedComponent,
                  this.mergedProps,
                );
              }

              return this.renderedElement;
            };

            return Connect;
          })(_react.Component);

          Connect.displayName = connectDisplayName;
          Connect.WrappedComponent = WrappedComponent;
          Connect.contextTypes = {
            store: _storeShape2['default'],
          };
          Connect.propTypes = {
            store: _storeShape2['default'],
          };

          if (true) {
            Connect.prototype.componentWillUpdate = function componentWillUpdate() {
              if (this.version === version) {
                return;
              }

              // We are hot reloading!
              this.version = version;
              this.trySubscribe();
              this.clearCache();
            };
          }

          return (0, _hoistNonReactStatics2['default'])(
            Connect,
            WrappedComponent,
          );
        };
      }

      /***/
    },
    /* 107 */
    /***/ function (module, exports) {
      'use strict';

      exports.__esModule = true;
      exports['default'] = shallowEqual;
      function shallowEqual(objA, objB) {
        if (objA === objB) {
          return true;
        }

        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);

        if (keysA.length !== keysB.length) {
          return false;
        }

        // Test for A's keys different from B.
        var hasOwn = Object.prototype.hasOwnProperty;
        for (var i = 0; i < keysA.length; i++) {
          if (
            !hasOwn.call(objB, keysA[i]) ||
            objA[keysA[i]] !== objB[keysA[i]]
          ) {
            return false;
          }
        }

        return true;
      }

      /***/
    },
    /* 108 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports['default'] = wrapActionCreators;

      var _redux = __webpack_require__(109);

      function wrapActionCreators(actionCreators) {
        return function (dispatch) {
          return (0, _redux.bindActionCreators)(actionCreators, dispatch);
        };
      }

      /***/
    },
    /* 109 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;

      var _createStore = __webpack_require__(110);

      var _createStore2 = _interopRequireDefault(_createStore);

      var _combineReducers = __webpack_require__(125);

      var _combineReducers2 = _interopRequireDefault(_combineReducers);

      var _bindActionCreators = __webpack_require__(127);

      var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);

      var _applyMiddleware = __webpack_require__(128);

      var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);

      var _compose = __webpack_require__(129);

      var _compose2 = _interopRequireDefault(_compose);

      var _warning = __webpack_require__(126);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /*
       * This is a dummy function to check if the function name has been altered by minification.
       * If the function has been minified and NODE_ENV !== 'production', warn the user.
       */
      function isCrushed() {}

      if (
        'development' !== 'production' &&
        typeof isCrushed.name === 'string' &&
        isCrushed.name !== 'isCrushed'
      ) {
        (0, _warning2['default'])(
          "You are currently using minified code outside of NODE_ENV === 'production'. " +
            'This means that you are running a slower development build of Redux. ' +
            'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' +
            'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' +
            'to ensure you have the correct code for your production build.',
        );
      }

      exports.createStore = _createStore2['default'];
      exports.combineReducers = _combineReducers2['default'];
      exports.bindActionCreators = _bindActionCreators2['default'];
      exports.applyMiddleware = _applyMiddleware2['default'];
      exports.compose = _compose2['default'];

      /***/
    },
    /* 110 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports.ActionTypes = undefined;
      exports['default'] = createStore;

      var _isPlainObject = __webpack_require__(111);

      var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

      var _symbolObservable = __webpack_require__(121);

      var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * These are private action types reserved by Redux.
       * For any unknown actions, you must return the current state.
       * If the current state is undefined, you must return the initial state.
       * Do not reference these action types directly in your code.
       */
      var ActionTypes = (exports.ActionTypes = {
        INIT: '@@redux/INIT',
      });

      /**
       * Creates a Redux store that holds the state tree.
       * The only way to change the data in the store is to call `dispatch()` on it.
       *
       * There should only be a single store in your app. To specify how different
       * parts of the state tree respond to actions, you may combine several reducers
       * into a single reducer function by using `combineReducers`.
       *
       * @param {Function} reducer A function that returns the next state tree, given
       * the current state tree and the action to handle.
       *
       * @param {any} [preloadedState] The initial state. You may optionally specify it
       * to hydrate the state from the server in universal apps, or to restore a
       * previously serialized user session.
       * If you use `combineReducers` to produce the root reducer function, this must be
       * an object with the same shape as `combineReducers` keys.
       *
       * @param {Function} enhancer The store enhancer. You may optionally specify it
       * to enhance the store with third-party capabilities such as middleware,
       * time travel, persistence, etc. The only store enhancer that ships with Redux
       * is `applyMiddleware()`.
       *
       * @returns {Store} A Redux store that lets you read the state, dispatch actions
       * and subscribe to changes.
       */
      function createStore(reducer, preloadedState, enhancer) {
        var _ref2;

        if (
          typeof preloadedState === 'function' &&
          typeof enhancer === 'undefined'
        ) {
          enhancer = preloadedState;
          preloadedState = undefined;
        }

        if (typeof enhancer !== 'undefined') {
          if (typeof enhancer !== 'function') {
            throw new Error('Expected the enhancer to be a function.');
          }

          return enhancer(createStore)(reducer, preloadedState);
        }

        if (typeof reducer !== 'function') {
          throw new Error('Expected the reducer to be a function.');
        }

        var currentReducer = reducer;
        var currentState = preloadedState;
        var currentListeners = [];
        var nextListeners = currentListeners;
        var isDispatching = false;

        function ensureCanMutateNextListeners() {
          if (nextListeners === currentListeners) {
            nextListeners = currentListeners.slice();
          }
        }

        /**
         * Reads the state tree managed by the store.
         *
         * @returns {any} The current state tree of your application.
         */
        function getState() {
          return currentState;
        }

        /**
         * Adds a change listener. It will be called any time an action is dispatched,
         * and some part of the state tree may potentially have changed. You may then
         * call `getState()` to read the current state tree inside the callback.
         *
         * You may call `dispatch()` from a change listener, with the following
         * caveats:
         *
         * 1. The subscriptions are snapshotted just before every `dispatch()` call.
         * If you subscribe or unsubscribe while the listeners are being invoked, this
         * will not have any effect on the `dispatch()` that is currently in progress.
         * However, the next `dispatch()` call, whether nested or not, will use a more
         * recent snapshot of the subscription list.
         *
         * 2. The listener should not expect to see all state changes, as the state
         * might have been updated multiple times during a nested `dispatch()` before
         * the listener is called. It is, however, guaranteed that all subscribers
         * registered before the `dispatch()` started will be called with the latest
         * state by the time it exits.
         *
         * @param {Function} listener A callback to be invoked on every dispatch.
         * @returns {Function} A function to remove this change listener.
         */
        function subscribe(listener) {
          if (typeof listener !== 'function') {
            throw new Error('Expected listener to be a function.');
          }

          var isSubscribed = true;

          ensureCanMutateNextListeners();
          nextListeners.push(listener);

          return function unsubscribe() {
            if (!isSubscribed) {
              return;
            }

            isSubscribed = false;

            ensureCanMutateNextListeners();
            var index = nextListeners.indexOf(listener);
            nextListeners.splice(index, 1);
          };
        }

        /**
         * Dispatches an action. It is the only way to trigger a state change.
         *
         * The `reducer` function, used to create the store, will be called with the
         * current state tree and the given `action`. Its return value will
         * be considered the **next** state of the tree, and the change listeners
         * will be notified.
         *
         * The base implementation only supports plain object actions. If you want to
         * dispatch a Promise, an Observable, a thunk, or something else, you need to
         * wrap your store creating function into the corresponding middleware. For
         * example, see the documentation for the `redux-thunk` package. Even the
         * middleware will eventually dispatch plain object actions using this method.
         *
         * @param {Object} action A plain object representing “what changed”. It is
         * a good idea to keep actions serializable so you can record and replay user
         * sessions, or use the time travelling `redux-devtools`. An action must have
         * a `type` property which may not be `undefined`. It is a good idea to use
         * string constants for action types.
         *
         * @returns {Object} For convenience, the same action object you dispatched.
         *
         * Note that, if you use a custom middleware, it may wrap `dispatch()` to
         * return something else (for example, a Promise you can await).
         */
        function dispatch(action) {
          if (!(0, _isPlainObject2['default'])(action)) {
            throw new Error(
              'Actions must be plain objects. ' +
                'Use custom middleware for async actions.',
            );
          }

          if (typeof action.type === 'undefined') {
            throw new Error(
              'Actions may not have an undefined "type" property. ' +
                'Have you misspelled a constant?',
            );
          }

          if (isDispatching) {
            throw new Error('Reducers may not dispatch actions.');
          }

          try {
            isDispatching = true;
            currentState = currentReducer(currentState, action);
          } finally {
            isDispatching = false;
          }

          var listeners = (currentListeners = nextListeners);
          for (var i = 0; i < listeners.length; i++) {
            listeners[i]();
          }

          return action;
        }

        /**
         * Replaces the reducer currently used by the store to calculate the state.
         *
         * You might need this if your app implements code splitting and you want to
         * load some of the reducers dynamically. You might also need this if you
         * implement a hot reloading mechanism for Redux.
         *
         * @param {Function} nextReducer The reducer for the store to use instead.
         * @returns {void}
         */
        function replaceReducer(nextReducer) {
          if (typeof nextReducer !== 'function') {
            throw new Error('Expected the nextReducer to be a function.');
          }

          currentReducer = nextReducer;
          dispatch({ type: ActionTypes.INIT });
        }

        /**
         * Interoperability point for observable/reactive libraries.
         * @returns {observable} A minimal observable of state changes.
         * For more information, see the observable proposal:
         * https://github.com/zenparsing/es-observable
         */
        function observable() {
          var _ref;

          var outerSubscribe = subscribe;
          return (
            (_ref = {
              /**
               * The minimal observable subscription method.
               * @param {Object} observer Any object that can be used as an observer.
               * The observer object should have a `next` method.
               * @returns {subscription} An object with an `unsubscribe` method that can
               * be used to unsubscribe the observable from the store, and prevent further
               * emission of values from the observable.
               */
              subscribe: function subscribe(observer) {
                if (typeof observer !== 'object') {
                  throw new TypeError('Expected the observer to be an object.');
                }

                function observeState() {
                  if (observer.next) {
                    observer.next(getState());
                  }
                }

                observeState();
                var unsubscribe = outerSubscribe(observeState);
                return { unsubscribe: unsubscribe };
              },
            }),
            (_ref[_symbolObservable2['default']] = function () {
              return this;
            }),
            _ref
          );
        }

        // When a store is created, an "INIT" action is dispatched so that every
        // reducer returns their initial state. This effectively populates
        // the initial state tree.
        dispatch({ type: ActionTypes.INIT });

        return (
          (_ref2 = {
            dispatch: dispatch,
            subscribe: subscribe,
            getState: getState,
            replaceReducer: replaceReducer,
          }),
          (_ref2[_symbolObservable2['default']] = observable),
          _ref2
        );
      }

      /***/
    },
    /* 111 */
    /***/ function (module, exports, __webpack_require__) {
      var baseGetTag = __webpack_require__(112),
        getPrototype = __webpack_require__(118),
        isObjectLike = __webpack_require__(120);

      /** `Object#toString` result references. */
      var objectTag = '[object Object]';

      /** Used for built-in method references. */
      var funcProto = Function.prototype,
        objectProto = Object.prototype;

      /** Used to resolve the decompiled source of functions. */
      var funcToString = funcProto.toString;

      /** Used to check objects for own properties. */
      var hasOwnProperty = objectProto.hasOwnProperty;

      /** Used to infer the `Object` constructor. */
      var objectCtorString = funcToString.call(Object);

      /**
       * Checks if `value` is a plain object, that is, an object created by the
       * `Object` constructor or one with a `[[Prototype]]` of `null`.
       *
       * @static
       * @memberOf _
       * @since 0.8.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
       * @example
       *
       * function Foo() {
       *   this.a = 1;
       * }
       *
       * _.isPlainObject(new Foo);
       * // => false
       *
       * _.isPlainObject([1, 2, 3]);
       * // => false
       *
       * _.isPlainObject({ 'x': 0, 'y': 0 });
       * // => true
       *
       * _.isPlainObject(Object.create(null));
       * // => true
       */
      function isPlainObject(value) {
        if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
          return false;
        }
        var proto = getPrototype(value);
        if (proto === null) {
          return true;
        }
        var Ctor =
          hasOwnProperty.call(proto, 'constructor') && proto.constructor;
        return (
          typeof Ctor == 'function' &&
          Ctor instanceof Ctor &&
          funcToString.call(Ctor) == objectCtorString
        );
      }

      module.exports = isPlainObject;

      /***/
    },
    /* 112 */
    /***/ function (module, exports, __webpack_require__) {
      var Symbol = __webpack_require__(113),
        getRawTag = __webpack_require__(116),
        objectToString = __webpack_require__(117);

      /** `Object#toString` result references. */
      var nullTag = '[object Null]',
        undefinedTag = '[object Undefined]';

      /** Built-in value references. */
      var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

      /**
       * The base implementation of `getTag` without fallbacks for buggy environments.
       *
       * @private
       * @param {*} value The value to query.
       * @returns {string} Returns the `toStringTag`.
       */
      function baseGetTag(value) {
        if (value == null) {
          return value === undefined ? undefinedTag : nullTag;
        }
        value = Object(value);
        return symToStringTag && symToStringTag in value
          ? getRawTag(value)
          : objectToString(value);
      }

      module.exports = baseGetTag;

      /***/
    },
    /* 113 */
    /***/ function (module, exports, __webpack_require__) {
      var root = __webpack_require__(114);

      /** Built-in value references. */
      var Symbol = root.Symbol;

      module.exports = Symbol;

      /***/
    },
    /* 114 */
    /***/ function (module, exports, __webpack_require__) {
      var freeGlobal = __webpack_require__(115);

      /** Detect free variable `self`. */
      var freeSelf =
        typeof self == 'object' && self && self.Object === Object && self;

      /** Used as a reference to the global object. */
      var root = freeGlobal || freeSelf || Function('return this')();

      module.exports = root;

      /***/
    },
    /* 115 */
    /***/ function (module, exports) {
      /* WEBPACK VAR INJECTION */ (function (global) {
        /** Detect free variable `global` from Node.js. */
        var freeGlobal =
          typeof global == 'object' &&
          global &&
          global.Object === Object &&
          global;

        module.exports = freeGlobal;

        /* WEBPACK VAR INJECTION */
      }.call(
        exports,
        (function () {
          return this;
        })(),
      ));

      /***/
    },
    /* 116 */
    /***/ function (module, exports, __webpack_require__) {
      var Symbol = __webpack_require__(113);

      /** Used for built-in method references. */
      var objectProto = Object.prototype;

      /** Used to check objects for own properties. */
      var hasOwnProperty = objectProto.hasOwnProperty;

      /**
       * Used to resolve the
       * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
       * of values.
       */
      var nativeObjectToString = objectProto.toString;

      /** Built-in value references. */
      var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

      /**
       * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
       *
       * @private
       * @param {*} value The value to query.
       * @returns {string} Returns the raw `toStringTag`.
       */
      function getRawTag(value) {
        var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

        try {
          value[symToStringTag] = undefined;
          var unmasked = true;
        } catch (e) {}

        var result = nativeObjectToString.call(value);
        if (unmasked) {
          if (isOwn) {
            value[symToStringTag] = tag;
          } else {
            delete value[symToStringTag];
          }
        }
        return result;
      }

      module.exports = getRawTag;

      /***/
    },
    /* 117 */
    /***/ function (module, exports) {
      /** Used for built-in method references. */
      var objectProto = Object.prototype;

      /**
       * Used to resolve the
       * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
       * of values.
       */
      var nativeObjectToString = objectProto.toString;

      /**
       * Converts `value` to a string using `Object.prototype.toString`.
       *
       * @private
       * @param {*} value The value to convert.
       * @returns {string} Returns the converted string.
       */
      function objectToString(value) {
        return nativeObjectToString.call(value);
      }

      module.exports = objectToString;

      /***/
    },
    /* 118 */
    /***/ function (module, exports, __webpack_require__) {
      var overArg = __webpack_require__(119);

      /** Built-in value references. */
      var getPrototype = overArg(Object.getPrototypeOf, Object);

      module.exports = getPrototype;

      /***/
    },
    /* 119 */
    /***/ function (module, exports) {
      /**
       * Creates a unary function that invokes `func` with its argument transformed.
       *
       * @private
       * @param {Function} func The function to wrap.
       * @param {Function} transform The argument transform.
       * @returns {Function} Returns the new function.
       */
      function overArg(func, transform) {
        return function (arg) {
          return func(transform(arg));
        };
      }

      module.exports = overArg;

      /***/
    },
    /* 120 */
    /***/ function (module, exports) {
      /**
       * Checks if `value` is object-like. A value is object-like if it's not `null`
       * and has a `typeof` result of "object".
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
       * @example
       *
       * _.isObjectLike({});
       * // => true
       *
       * _.isObjectLike([1, 2, 3]);
       * // => true
       *
       * _.isObjectLike(_.noop);
       * // => false
       *
       * _.isObjectLike(null);
       * // => false
       */
      function isObjectLike(value) {
        return value != null && typeof value == 'object';
      }

      module.exports = isObjectLike;

      /***/
    },
    /* 121 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = __webpack_require__(122);

      /***/
    },
    /* 122 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (global, module) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _ponyfill = __webpack_require__(124);

        var _ponyfill2 = _interopRequireDefault(_ponyfill);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var root; /* global window */

        if (typeof self !== 'undefined') {
          root = self;
        } else if (typeof window !== 'undefined') {
          root = window;
        } else if (typeof global !== 'undefined') {
          root = global;
        } else if (true) {
          root = module;
        } else {
          root = Function('return this')();
        }

        var result = (0, _ponyfill2['default'])(root);
        exports['default'] = result;
        /* WEBPACK VAR INJECTION */
      }.call(
        exports,
        (function () {
          return this;
        })(),
        __webpack_require__(123)(module),
      ));

      /***/
    },
    /* 123 */
    /***/ function (module, exports) {
      module.exports = function (module) {
        if (!module.webpackPolyfill) {
          module.deprecate = function () {};
          module.paths = [];
          // module.parent = undefined by default
          module.children = [];
          module.webpackPolyfill = 1;
        }
        return module;
      };

      /***/
    },
    /* 124 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports['default'] = symbolObservablePonyfill;
      function symbolObservablePonyfill(root) {
        var result;
        var _Symbol = root.Symbol;

        if (typeof _Symbol === 'function') {
          if (_Symbol.observable) {
            result = _Symbol.observable;
          } else {
            result = _Symbol('observable');
            _Symbol.observable = result;
          }
        } else {
          result = '@@observable';
        }

        return result;
      }

      /***/
    },
    /* 125 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      exports['default'] = combineReducers;

      var _createStore = __webpack_require__(110);

      var _isPlainObject = __webpack_require__(111);

      var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

      var _warning = __webpack_require__(126);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function getUndefinedStateErrorMessage(key, action) {
        var actionType = action && action.type;
        var actionName =
          (actionType && '"' + actionType.toString() + '"') || 'an action';

        return (
          'Given action ' +
          actionName +
          ', reducer "' +
          key +
          '" returned undefined. ' +
          'To ignore an action, you must explicitly return the previous state.'
        );
      }

      function getUnexpectedStateShapeWarningMessage(
        inputState,
        reducers,
        action,
        unexpectedKeyCache,
      ) {
        var reducerKeys = Object.keys(reducers);
        var argumentName =
          action && action.type === _createStore.ActionTypes.INIT
            ? 'preloadedState argument passed to createStore'
            : 'previous state received by the reducer';

        if (reducerKeys.length === 0) {
          return (
            'Store does not have a valid reducer. Make sure the argument passed ' +
            'to combineReducers is an object whose values are reducers.'
          );
        }

        if (!(0, _isPlainObject2['default'])(inputState)) {
          return (
            'The ' +
            argumentName +
            ' has unexpected type of "' +
            {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] +
            '". Expected argument to be an object with the following ' +
            ('keys: "' + reducerKeys.join('", "') + '"')
          );
        }

        var unexpectedKeys = Object.keys(inputState).filter(function (key) {
          return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
        });

        unexpectedKeys.forEach(function (key) {
          unexpectedKeyCache[key] = true;
        });

        if (unexpectedKeys.length > 0) {
          return (
            'Unexpected ' +
            (unexpectedKeys.length > 1 ? 'keys' : 'key') +
            ' ' +
            ('"' +
              unexpectedKeys.join('", "') +
              '" found in ' +
              argumentName +
              '. ') +
            'Expected to find one of the known reducer keys instead: ' +
            ('"' +
              reducerKeys.join('", "') +
              '". Unexpected keys will be ignored.')
          );
        }
      }

      function assertReducerSanity(reducers) {
        Object.keys(reducers).forEach(function (key) {
          var reducer = reducers[key];
          var initialState = reducer(undefined, {
            type: _createStore.ActionTypes.INIT,
          });

          if (typeof initialState === 'undefined') {
            throw new Error(
              'Reducer "' +
                key +
                '" returned undefined during initialization. ' +
                'If the state passed to the reducer is undefined, you must ' +
                'explicitly return the initial state. The initial state may ' +
                'not be undefined.',
            );
          }

          var type =
            '@@redux/PROBE_UNKNOWN_ACTION_' +
            Math.random().toString(36).substring(7).split('').join('.');
          if (typeof reducer(undefined, { type: type }) === 'undefined') {
            throw new Error(
              'Reducer "' +
                key +
                '" returned undefined when probed with a random type. ' +
                ("Don't try to handle " +
                  _createStore.ActionTypes.INIT +
                  ' or other actions in "redux/*" ') +
                'namespace. They are considered private. Instead, you must return the ' +
                'current state for any unknown actions, unless it is undefined, ' +
                'in which case you must return the initial state, regardless of the ' +
                'action type. The initial state may not be undefined.',
            );
          }
        });
      }

      /**
       * Turns an object whose values are different reducer functions, into a single
       * reducer function. It will call every child reducer, and gather their results
       * into a single state object, whose keys correspond to the keys of the passed
       * reducer functions.
       *
       * @param {Object} reducers An object whose values correspond to different
       * reducer functions that need to be combined into one. One handy way to obtain
       * it is to use ES6 `import * as reducers` syntax. The reducers may never return
       * undefined for any action. Instead, they should return their initial state
       * if the state passed to them was undefined, and the current state for any
       * unrecognized action.
       *
       * @returns {Function} A reducer function that invokes every reducer inside the
       * passed object, and builds a state object with the same shape.
       */
      function combineReducers(reducers) {
        var reducerKeys = Object.keys(reducers);
        var finalReducers = {};
        for (var i = 0; i < reducerKeys.length; i++) {
          var key = reducerKeys[i];

          if (true) {
            if (typeof reducers[key] === 'undefined') {
              (0, _warning2['default'])(
                'No reducer provided for key "' + key + '"',
              );
            }
          }

          if (typeof reducers[key] === 'function') {
            finalReducers[key] = reducers[key];
          }
        }
        var finalReducerKeys = Object.keys(finalReducers);

        if (true) {
          var unexpectedKeyCache = {};
        }

        var sanityError;
        try {
          assertReducerSanity(finalReducers);
        } catch (e) {
          sanityError = e;
        }

        return function combination() {
          var state =
            arguments.length <= 0 || arguments[0] === undefined
              ? {}
              : arguments[0];
          var action = arguments[1];

          if (sanityError) {
            throw sanityError;
          }

          if (true) {
            var warningMessage = getUnexpectedStateShapeWarningMessage(
              state,
              finalReducers,
              action,
              unexpectedKeyCache,
            );
            if (warningMessage) {
              (0, _warning2['default'])(warningMessage);
            }
          }

          var hasChanged = false;
          var nextState = {};
          for (var i = 0; i < finalReducerKeys.length; i++) {
            var key = finalReducerKeys[i];
            var reducer = finalReducers[key];
            var previousStateForKey = state[key];
            var nextStateForKey = reducer(previousStateForKey, action);
            if (typeof nextStateForKey === 'undefined') {
              var errorMessage = getUndefinedStateErrorMessage(key, action);
              throw new Error(errorMessage);
            }
            nextState[key] = nextStateForKey;
            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
          }
          return hasChanged ? nextState : state;
        };
      }

      /***/
    },
    /* 126 */
    /***/ function (module, exports) {
      'use strict';

      exports.__esModule = true;
      exports['default'] = warning;
      /**
       * Prints a warning in the console if it exists.
       *
       * @param {String} message The warning message.
       * @returns {void}
       */
      function warning(message) {
        /* eslint-disable no-console */
        if (
          typeof console !== 'undefined' &&
          typeof console.error === 'function'
        ) {
          console.error(message);
        }
        /* eslint-enable no-console */
        try {
          // This error was thrown as a convenience so that if you enable
          // "break on all exceptions" in your console,
          // it would pause the execution at this line.
          throw new Error(message);
          /* eslint-disable no-empty */
        } catch (e) {}
        /* eslint-enable no-empty */
      }

      /***/
    },
    /* 127 */
    /***/ function (module, exports) {
      'use strict';

      exports.__esModule = true;
      exports['default'] = bindActionCreators;
      function bindActionCreator(actionCreator, dispatch) {
        return function () {
          return dispatch(actionCreator.apply(undefined, arguments));
        };
      }

      /**
       * Turns an object whose values are action creators, into an object with the
       * same keys, but with every function wrapped into a `dispatch` call so they
       * may be invoked directly. This is just a convenience method, as you can call
       * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
       *
       * For convenience, you can also pass a single function as the first argument,
       * and get a function in return.
       *
       * @param {Function|Object} actionCreators An object whose values are action
       * creator functions. One handy way to obtain it is to use ES6 `import * as`
       * syntax. You may also pass a single function.
       *
       * @param {Function} dispatch The `dispatch` function available on your Redux
       * store.
       *
       * @returns {Function|Object} The object mimicking the original object, but with
       * every action creator wrapped into the `dispatch` call. If you passed a
       * function as `actionCreators`, the return value will also be a single
       * function.
       */
      function bindActionCreators(actionCreators, dispatch) {
        if (typeof actionCreators === 'function') {
          return bindActionCreator(actionCreators, dispatch);
        }

        if (typeof actionCreators !== 'object' || actionCreators === null) {
          throw new Error(
            'bindActionCreators expected an object or a function, instead received ' +
              (actionCreators === null ? 'null' : typeof actionCreators) +
              '. ' +
              'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?',
          );
        }

        var keys = Object.keys(actionCreators);
        var boundActionCreators = {};
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          var actionCreator = actionCreators[key];
          if (typeof actionCreator === 'function') {
            boundActionCreators[key] = bindActionCreator(
              actionCreator,
              dispatch,
            );
          }
        }
        return boundActionCreators;
      }

      /***/
    },
    /* 128 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      exports['default'] = applyMiddleware;

      var _compose = __webpack_require__(129);

      var _compose2 = _interopRequireDefault(_compose);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       * Creates a store enhancer that applies middleware to the dispatch method
       * of the Redux store. This is handy for a variety of tasks, such as expressing
       * asynchronous actions in a concise manner, or logging every action payload.
       *
       * See `redux-thunk` package as an example of the Redux middleware.
       *
       * Because middleware is potentially asynchronous, this should be the first
       * store enhancer in the composition chain.
       *
       * Note that each middleware will be given the `dispatch` and `getState` functions
       * as named arguments.
       *
       * @param {...Function} middlewares The middleware chain to be applied.
       * @returns {Function} A store enhancer applying the middleware.
       */
      function applyMiddleware() {
        for (
          var _len = arguments.length, middlewares = Array(_len), _key = 0;
          _key < _len;
          _key++
        ) {
          middlewares[_key] = arguments[_key];
        }

        return function (createStore) {
          return function (reducer, preloadedState, enhancer) {
            var store = createStore(reducer, preloadedState, enhancer);
            var _dispatch = store.dispatch;
            var chain = [];

            var middlewareAPI = {
              getState: store.getState,
              dispatch: function dispatch(action) {
                return _dispatch(action);
              },
            };
            chain = middlewares.map(function (middleware) {
              return middleware(middlewareAPI);
            });
            _dispatch = _compose2['default'].apply(
              undefined,
              chain,
            )(store.dispatch);

            return _extends({}, store, {
              dispatch: _dispatch,
            });
          };
        };
      }

      /***/
    },
    /* 129 */
    /***/ function (module, exports) {
      'use strict';

      exports.__esModule = true;
      exports['default'] = compose;
      /**
       * Composes single-argument functions from right to left. The rightmost
       * function can take multiple arguments as it provides the signature for
       * the resulting composite function.
       *
       * @param {...Function} funcs The functions to compose.
       * @returns {Function} A function obtained by composing the argument functions
       * from right to left. For example, compose(f, g, h) is identical to doing
       * (...args) => f(g(h(...args))).
       */

      function compose() {
        for (
          var _len = arguments.length, funcs = Array(_len), _key = 0;
          _key < _len;
          _key++
        ) {
          funcs[_key] = arguments[_key];
        }

        if (funcs.length === 0) {
          return function (arg) {
            return arg;
          };
        }

        if (funcs.length === 1) {
          return funcs[0];
        }

        var last = funcs[funcs.length - 1];
        var rest = funcs.slice(0, -1);
        return function () {
          return rest.reduceRight(function (composed, f) {
            return f(composed);
          }, last.apply(undefined, arguments));
        };
      }

      /***/
    },
    /* 130 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      module.exports = __webpack_require__(131);

      /***/
    },
    /* 131 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOM
       */

      /* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

      'use strict';

      var ReactDOMComponentTree = __webpack_require__(132);
      var ReactDefaultInjection = __webpack_require__(135);
      var ReactMount = __webpack_require__(258);
      var ReactReconciler = __webpack_require__(155);
      var ReactUpdates = __webpack_require__(152);
      var ReactVersion = __webpack_require__(34);

      var findDOMNode = __webpack_require__(263);
      var getHostComponentFromComposite = __webpack_require__(264);
      var renderSubtreeIntoContainer = __webpack_require__(265);
      var warning = __webpack_require__(12);

      ReactDefaultInjection.inject();

      var ReactDOM = {
        findDOMNode: findDOMNode,
        render: ReactMount.render,
        unmountComponentAtNode: ReactMount.unmountComponentAtNode,
        version: ReactVersion,

        /* eslint-disable camelcase */
        unstable_batchedUpdates: ReactUpdates.batchedUpdates,
        unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer,
      };

      // Inject the runtime into a devtools global hook regardless of browser.
      // Allows for debugging when the hook is injected on the page.
      /* eslint-enable camelcase */
      if (
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function'
      ) {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
          ComponentTree: {
            getClosestInstanceFromNode:
              ReactDOMComponentTree.getClosestInstanceFromNode,
            getNodeFromInstance: function (inst) {
              // inst is an internal instance (but could be a composite)
              if (inst._renderedComponent) {
                inst = getHostComponentFromComposite(inst);
              }
              if (inst) {
                return ReactDOMComponentTree.getNodeFromInstance(inst);
              } else {
                return null;
              }
            },
          },
          Mount: ReactMount,
          Reconciler: ReactReconciler,
        });
      }

      if (true) {
        var ExecutionEnvironment = __webpack_require__(145);
        if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
          // First check if devtools is not installed
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
            // If we're in Chrome or Firefox, provide a download link if not installed.
            if (
              (navigator.userAgent.indexOf('Chrome') > -1 &&
                navigator.userAgent.indexOf('Edge') === -1) ||
              navigator.userAgent.indexOf('Firefox') > -1
            ) {
              // Firefox does not have the issue with devtools loaded over file://
              var showFileUrlMessage =
                window.location.protocol.indexOf('http') === -1 &&
                navigator.userAgent.indexOf('Firefox') === -1;
              console.debug(
                'Download the React DevTools ' +
                  (showFileUrlMessage
                    ? 'and use an HTTP server (instead of a file: URL) '
                    : '') +
                  'for a better development experience: ' +
                  'https://fb.me/react-devtools',
              );
            }
          }

          var testFunc = function testFn() {};
          true
            ? warning(
                (testFunc.name || testFunc.toString()).indexOf('testFn') !== -1,
                "It looks like you're using a minified copy of the development build " +
                  'of React. When deploying React apps to production, make sure to use ' +
                  'the production build which skips development warnings and is faster. ' +
                  'See https://fb.me/react-minification for more details.',
              )
            : void 0;

          // If we're in IE8, check to see if we are in compatibility mode and provide
          // information on preventing compatibility mode
          var ieCompatibilityMode =
            document.documentMode && document.documentMode < 8;

          true
            ? warning(
                !ieCompatibilityMode,
                'Internet Explorer is running in compatibility mode; please add the ' +
                  'following tag to your HTML to prevent this from happening: ' +
                  '<meta http-equiv="X-UA-Compatible" content="IE=edge" />',
              )
            : void 0;

          var expectedFeatures = [
            // shims
            Array.isArray,
            Array.prototype.every,
            Array.prototype.forEach,
            Array.prototype.indexOf,
            Array.prototype.map,
            Date.now,
            Function.prototype.bind,
            Object.keys,
            String.prototype.split,
            String.prototype.trim,
          ];

          for (var i = 0; i < expectedFeatures.length; i++) {
            if (!expectedFeatures[i]) {
              true
                ? warning(
                    false,
                    'One or more ES5 shims expected by React are not available: ' +
                      'https://fb.me/react-warning-polyfills',
                  )
                : void 0;
              break;
            }
          }
        }
      }

      if (true) {
        var ReactInstrumentation = __webpack_require__(158);
        var ReactDOMUnknownPropertyHook = __webpack_require__(266);
        var ReactDOMNullInputValuePropHook = __webpack_require__(267);

        ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
        ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
      }

      module.exports = ReactDOM;

      /***/
    },
    /* 132 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMComponentTree
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var DOMProperty = __webpack_require__(133);
      var ReactDOMComponentFlags = __webpack_require__(134);

      var invariant = __webpack_require__(9);

      var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
      var Flags = ReactDOMComponentFlags;

      var internalInstanceKey =
        '__reactInternalInstance$' + Math.random().toString(36).slice(2);

      /**
       * Drill down (through composites and empty components) until we get a host or
       * host text component.
       *
       * This is pretty polymorphic but unavoidable with the current structure we have
       * for `_renderedChildren`.
       */
      function getRenderedHostOrTextFromComponent(component) {
        var rendered;
        while ((rendered = component._renderedComponent)) {
          component = rendered;
        }
        return component;
      }

      /**
       * Populate `_hostNode` on the rendered host/text component with the given
       * DOM node. The passed `inst` can be a composite.
       */
      function precacheNode(inst, node) {
        var hostInst = getRenderedHostOrTextFromComponent(inst);
        hostInst._hostNode = node;
        node[internalInstanceKey] = hostInst;
      }

      function uncacheNode(inst) {
        var node = inst._hostNode;
        if (node) {
          delete node[internalInstanceKey];
          inst._hostNode = null;
        }
      }

      /**
       * Populate `_hostNode` on each child of `inst`, assuming that the children
       * match up with the DOM (element) children of `node`.
       *
       * We cache entire levels at once to avoid an n^2 problem where we access the
       * children of a node sequentially and have to walk from the start to our target
       * node every time.
       *
       * Since we update `_renderedChildren` and the actual DOM at (slightly)
       * different times, we could race here and see a newer `_renderedChildren` than
       * the DOM nodes we see. To avoid this, ReactMultiChild calls
       * `prepareToManageChildren` before we change `_renderedChildren`, at which
       * time the container's child nodes are always cached (until it unmounts).
       */
      function precacheChildNodes(inst, node) {
        if (inst._flags & Flags.hasCachedChildNodes) {
          return;
        }
        var children = inst._renderedChildren;
        var childNode = node.firstChild;
        outer: for (var name in children) {
          if (!children.hasOwnProperty(name)) {
            continue;
          }
          var childInst = children[name];
          var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
          if (childID === 0) {
            // We're currently unmounting this child in ReactMultiChild; skip it.
            continue;
          }
          // We assume the child nodes are in the same order as the child instances.
          for (; childNode !== null; childNode = childNode.nextSibling) {
            if (
              (childNode.nodeType === 1 &&
                childNode.getAttribute(ATTR_NAME) === String(childID)) ||
              (childNode.nodeType === 8 &&
                childNode.nodeValue === ' react-text: ' + childID + ' ') ||
              (childNode.nodeType === 8 &&
                childNode.nodeValue === ' react-empty: ' + childID + ' ')
            ) {
              precacheNode(childInst, childNode);
              continue outer;
            }
          }
          // We reached the end of the DOM children without finding an ID match.
          true
            ? true
              ? invariant(false, 'Unable to find element with ID %s.', childID)
              : _prodInvariant('32', childID)
            : void 0;
        }
        inst._flags |= Flags.hasCachedChildNodes;
      }

      /**
       * Given a DOM node, return the closest ReactDOMComponent or
       * ReactDOMTextComponent instance ancestor.
       */
      function getClosestInstanceFromNode(node) {
        if (node[internalInstanceKey]) {
          return node[internalInstanceKey];
        }

        // Walk up the tree until we find an ancestor whose instance we have cached.
        var parents = [];
        while (!node[internalInstanceKey]) {
          parents.push(node);
          if (node.parentNode) {
            node = node.parentNode;
          } else {
            // Top of the tree. This node must not be part of a React tree (or is
            // unmounted, potentially).
            return null;
          }
        }

        var closest;
        var inst;
        for (
          ;
          node && (inst = node[internalInstanceKey]);
          node = parents.pop()
        ) {
          closest = inst;
          if (parents.length) {
            precacheChildNodes(inst, node);
          }
        }

        return closest;
      }

      /**
       * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
       * instance, or null if the node was not rendered by this React.
       */
      function getInstanceFromNode(node) {
        var inst = getClosestInstanceFromNode(node);
        if (inst != null && inst._hostNode === node) {
          return inst;
        } else {
          return null;
        }
      }

      /**
       * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
       * DOM node.
       */
      function getNodeFromInstance(inst) {
        // Without this first invariant, passing a non-DOM-component triggers the next
        // invariant for a missing parent, which is super confusing.
        !(inst._hostNode !== undefined)
          ? true
            ? invariant(false, 'getNodeFromInstance: Invalid argument.')
            : _prodInvariant('33')
          : void 0;

        if (inst._hostNode) {
          return inst._hostNode;
        }

        // Walk up the tree until we find an ancestor whose DOM node we have cached.
        var parents = [];
        while (!inst._hostNode) {
          parents.push(inst);
          !inst._hostParent
            ? true
              ? invariant(
                  false,
                  'React DOM tree root should always have a node reference.',
                )
              : _prodInvariant('34')
            : void 0;
          inst = inst._hostParent;
        }

        // Now parents contains each ancestor that does *not* have a cached native
        // node, and `inst` is the deepest ancestor that does.
        for (; parents.length; inst = parents.pop()) {
          precacheChildNodes(inst, inst._hostNode);
        }

        return inst._hostNode;
      }

      var ReactDOMComponentTree = {
        getClosestInstanceFromNode: getClosestInstanceFromNode,
        getInstanceFromNode: getInstanceFromNode,
        getNodeFromInstance: getNodeFromInstance,
        precacheChildNodes: precacheChildNodes,
        precacheNode: precacheNode,
        uncacheNode: uncacheNode,
      };

      module.exports = ReactDOMComponentTree;

      /***/
    },
    /* 133 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule DOMProperty
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var invariant = __webpack_require__(9);

      function checkMask(value, bitmask) {
        return (value & bitmask) === bitmask;
      }

      var DOMPropertyInjection = {
        /**
         * Mapping from normalized, camelcased property names to a configuration that
         * specifies how the associated DOM property should be accessed or rendered.
         */
        MUST_USE_PROPERTY: 0x1,
        HAS_BOOLEAN_VALUE: 0x4,
        HAS_NUMERIC_VALUE: 0x8,
        HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
        HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

        /**
         * Inject some specialized knowledge about the DOM. This takes a config object
         * with the following properties:
         *
         * isCustomAttribute: function that given an attribute name will return true
         * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
         * attributes where it's impossible to enumerate all of the possible
         * attribute names,
         *
         * Properties: object mapping DOM property name to one of the
         * DOMPropertyInjection constants or null. If your attribute isn't in here,
         * it won't get written to the DOM.
         *
         * DOMAttributeNames: object mapping React attribute name to the DOM
         * attribute name. Attribute names not specified use the **lowercase**
         * normalized name.
         *
         * DOMAttributeNamespaces: object mapping React attribute name to the DOM
         * attribute namespace URL. (Attribute names not specified use no namespace.)
         *
         * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
         * Property names not specified use the normalized name.
         *
         * DOMMutationMethods: Properties that require special mutation methods. If
         * `value` is undefined, the mutation method should unset the property.
         *
         * @param {object} domPropertyConfig the config as described above.
         */
        injectDOMPropertyConfig: function (domPropertyConfig) {
          var Injection = DOMPropertyInjection;
          var Properties = domPropertyConfig.Properties || {};
          var DOMAttributeNamespaces =
            domPropertyConfig.DOMAttributeNamespaces || {};
          var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
          var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
          var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

          if (domPropertyConfig.isCustomAttribute) {
            DOMProperty._isCustomAttributeFunctions.push(
              domPropertyConfig.isCustomAttribute,
            );
          }

          for (var propName in Properties) {
            !!DOMProperty.properties.hasOwnProperty(propName)
              ? true
                ? invariant(
                    false,
                    "injectDOMPropertyConfig(...): You're trying to inject DOM property '%s' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.",
                    propName,
                  )
                : _prodInvariant('48', propName)
              : void 0;

            var lowerCased = propName.toLowerCase();
            var propConfig = Properties[propName];

            var propertyInfo = {
              attributeName: lowerCased,
              attributeNamespace: null,
              propertyName: propName,
              mutationMethod: null,

              mustUseProperty: checkMask(
                propConfig,
                Injection.MUST_USE_PROPERTY,
              ),
              hasBooleanValue: checkMask(
                propConfig,
                Injection.HAS_BOOLEAN_VALUE,
              ),
              hasNumericValue: checkMask(
                propConfig,
                Injection.HAS_NUMERIC_VALUE,
              ),
              hasPositiveNumericValue: checkMask(
                propConfig,
                Injection.HAS_POSITIVE_NUMERIC_VALUE,
              ),
              hasOverloadedBooleanValue: checkMask(
                propConfig,
                Injection.HAS_OVERLOADED_BOOLEAN_VALUE,
              ),
            };
            !(
              propertyInfo.hasBooleanValue +
                propertyInfo.hasNumericValue +
                propertyInfo.hasOverloadedBooleanValue <=
              1
            )
              ? true
                ? invariant(
                    false,
                    'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s',
                    propName,
                  )
                : _prodInvariant('50', propName)
              : void 0;

            if (true) {
              DOMProperty.getPossibleStandardName[lowerCased] = propName;
            }

            if (DOMAttributeNames.hasOwnProperty(propName)) {
              var attributeName = DOMAttributeNames[propName];
              propertyInfo.attributeName = attributeName;
              if (true) {
                DOMProperty.getPossibleStandardName[attributeName] = propName;
              }
            }

            if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
              propertyInfo.attributeNamespace =
                DOMAttributeNamespaces[propName];
            }

            if (DOMPropertyNames.hasOwnProperty(propName)) {
              propertyInfo.propertyName = DOMPropertyNames[propName];
            }

            if (DOMMutationMethods.hasOwnProperty(propName)) {
              propertyInfo.mutationMethod = DOMMutationMethods[propName];
            }

            DOMProperty.properties[propName] = propertyInfo;
          }
        },
      };

      /* eslint-disable max-len */
      var ATTRIBUTE_NAME_START_CHAR =
        ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
      /* eslint-enable max-len */

      /**
       * DOMProperty exports lookup objects that can be used like functions:
       *
       *   > DOMProperty.isValid['id']
       *   true
       *   > DOMProperty.isValid['foobar']
       *   undefined
       *
       * Although this may be confusing, it performs better in general.
       *
       * @see http://jsperf.com/key-exists
       * @see http://jsperf.com/key-missing
       */
      var DOMProperty = {
        ID_ATTRIBUTE_NAME: 'data-reactid',
        ROOT_ATTRIBUTE_NAME: 'data-reactroot',

        ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
        ATTRIBUTE_NAME_CHAR:
          ATTRIBUTE_NAME_START_CHAR +
          '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

        /**
         * Map from property "standard name" to an object with info about how to set
         * the property in the DOM. Each object contains:
         *
         * attributeName:
         *   Used when rendering markup or with `*Attribute()`.
         * attributeNamespace
         * propertyName:
         *   Used on DOM node instances. (This includes properties that mutate due to
         *   external factors.)
         * mutationMethod:
         *   If non-null, used instead of the property or `setAttribute()` after
         *   initial render.
         * mustUseProperty:
         *   Whether the property must be accessed and mutated as an object property.
         * hasBooleanValue:
         *   Whether the property should be removed when set to a falsey value.
         * hasNumericValue:
         *   Whether the property must be numeric or parse as a numeric and should be
         *   removed when set to a falsey value.
         * hasPositiveNumericValue:
         *   Whether the property must be positive numeric or parse as a positive
         *   numeric and should be removed when set to a falsey value.
         * hasOverloadedBooleanValue:
         *   Whether the property can be used as a flag as well as with a value.
         *   Removed when strictly equal to false; present without a value when
         *   strictly equal to true; present with a value otherwise.
         */
        properties: {},

        /**
         * Mapping from lowercase property names to the properly cased version, used
         * to warn in the case of missing properties. Available only in __DEV__.
         * @type {Object}
         */
        getPossibleStandardName: true ? {} : null,

        /**
         * All of the isCustomAttribute() functions that have been injected.
         */
        _isCustomAttributeFunctions: [],

        /**
         * Checks whether a property name is a custom attribute.
         * @method
         */
        isCustomAttribute: function (attributeName) {
          for (
            var i = 0;
            i < DOMProperty._isCustomAttributeFunctions.length;
            i++
          ) {
            var isCustomAttributeFn =
              DOMProperty._isCustomAttributeFunctions[i];
            if (isCustomAttributeFn(attributeName)) {
              return true;
            }
          }
          return false;
        },

        injection: DOMPropertyInjection,
      };

      module.exports = DOMProperty;

      /***/
    },
    /* 134 */
    /***/ function (module, exports) {
      /**
       * Copyright 2015-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMComponentFlags
       */

      'use strict';

      var ReactDOMComponentFlags = {
        hasCachedChildNodes: 1 << 0,
      };

      module.exports = ReactDOMComponentFlags;

      /***/
    },
    /* 135 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDefaultInjection
       */

      'use strict';

      var BeforeInputEventPlugin = __webpack_require__(136);
      var ChangeEventPlugin = __webpack_require__(151);
      var DefaultEventPluginOrder = __webpack_require__(169);
      var EnterLeaveEventPlugin = __webpack_require__(170);
      var HTMLDOMPropertyConfig = __webpack_require__(175);
      var ReactComponentBrowserEnvironment = __webpack_require__(176);
      var ReactDOMComponent = __webpack_require__(190);
      var ReactDOMComponentTree = __webpack_require__(132);
      var ReactDOMEmptyComponent = __webpack_require__(229);
      var ReactDOMTreeTraversal = __webpack_require__(230);
      var ReactDOMTextComponent = __webpack_require__(231);
      var ReactDefaultBatchingStrategy = __webpack_require__(232);
      var ReactEventListener = __webpack_require__(233);
      var ReactInjection = __webpack_require__(236);
      var ReactReconcileTransaction = __webpack_require__(237);
      var SVGDOMPropertyConfig = __webpack_require__(245);
      var SelectEventPlugin = __webpack_require__(246);
      var SimpleEventPlugin = __webpack_require__(247);

      var alreadyInjected = false;

      function inject() {
        if (alreadyInjected) {
          // TODO: This is currently true because these injections are shared between
          // the client and the server package. They should be built independently
          // and not share any injection state. Then this problem will be solved.
          return;
        }
        alreadyInjected = true;

        ReactInjection.EventEmitter.injectReactEventListener(
          ReactEventListener,
        );

        /**
         * Inject modules for resolving DOM hierarchy and plugin ordering.
         */
        ReactInjection.EventPluginHub.injectEventPluginOrder(
          DefaultEventPluginOrder,
        );
        ReactInjection.EventPluginUtils.injectComponentTree(
          ReactDOMComponentTree,
        );
        ReactInjection.EventPluginUtils.injectTreeTraversal(
          ReactDOMTreeTraversal,
        );

        /**
         * Some important event plugins included by default (without having to require
         * them).
         */
        ReactInjection.EventPluginHub.injectEventPluginsByName({
          SimpleEventPlugin: SimpleEventPlugin,
          EnterLeaveEventPlugin: EnterLeaveEventPlugin,
          ChangeEventPlugin: ChangeEventPlugin,
          SelectEventPlugin: SelectEventPlugin,
          BeforeInputEventPlugin: BeforeInputEventPlugin,
        });

        ReactInjection.HostComponent.injectGenericComponentClass(
          ReactDOMComponent,
        );

        ReactInjection.HostComponent.injectTextComponentClass(
          ReactDOMTextComponent,
        );

        ReactInjection.DOMProperty.injectDOMPropertyConfig(
          HTMLDOMPropertyConfig,
        );
        ReactInjection.DOMProperty.injectDOMPropertyConfig(
          SVGDOMPropertyConfig,
        );

        ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (
          instantiate,
        ) {
          return new ReactDOMEmptyComponent(instantiate);
        });

        ReactInjection.Updates.injectReconcileTransaction(
          ReactReconcileTransaction,
        );
        ReactInjection.Updates.injectBatchingStrategy(
          ReactDefaultBatchingStrategy,
        );

        ReactInjection.Component.injectEnvironment(
          ReactComponentBrowserEnvironment,
        );
      }

      module.exports = {
        inject: inject,
      };

      /***/
    },
    /* 136 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule BeforeInputEventPlugin
       */

      'use strict';

      var EventConstants = __webpack_require__(137);
      var EventPropagators = __webpack_require__(138);
      var ExecutionEnvironment = __webpack_require__(145);
      var FallbackCompositionState = __webpack_require__(146);
      var SyntheticCompositionEvent = __webpack_require__(148);
      var SyntheticInputEvent = __webpack_require__(150);

      var keyOf = __webpack_require__(26);

      var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
      var START_KEYCODE = 229;

      var canUseCompositionEvent =
        ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

      var documentMode = null;
      if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
        documentMode = document.documentMode;
      }

      // Webkit offers a very useful `textInput` event that can be used to
      // directly represent `beforeInput`. The IE `textinput` event is not as
      // useful, so we don't use it.
      var canUseTextInputEvent =
        ExecutionEnvironment.canUseDOM &&
        'TextEvent' in window &&
        !documentMode &&
        !isPresto();

      // In IE9+, we have access to composition events, but the data supplied
      // by the native compositionend event may be incorrect. Japanese ideographic
      // spaces, for instance (\u3000) are not recorded correctly.
      var useFallbackCompositionData =
        ExecutionEnvironment.canUseDOM &&
        (!canUseCompositionEvent ||
          (documentMode && documentMode > 8 && documentMode <= 11));

      /**
       * Opera <= 12 includes TextEvent in window, but does not fire
       * text input events. Rely on keypress instead.
       */
      function isPresto() {
        var opera = window.opera;
        return (
          typeof opera === 'object' &&
          typeof opera.version === 'function' &&
          parseInt(opera.version(), 10) <= 12
        );
      }

      var SPACEBAR_CODE = 32;
      var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

      var topLevelTypes = EventConstants.topLevelTypes;

      // Events and their corresponding property names.
      var eventTypes = {
        beforeInput: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onBeforeInput: null }),
            captured: keyOf({ onBeforeInputCapture: null }),
          },
          dependencies: [
            topLevelTypes.topCompositionEnd,
            topLevelTypes.topKeyPress,
            topLevelTypes.topTextInput,
            topLevelTypes.topPaste,
          ],
        },
        compositionEnd: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onCompositionEnd: null }),
            captured: keyOf({ onCompositionEndCapture: null }),
          },
          dependencies: [
            topLevelTypes.topBlur,
            topLevelTypes.topCompositionEnd,
            topLevelTypes.topKeyDown,
            topLevelTypes.topKeyPress,
            topLevelTypes.topKeyUp,
            topLevelTypes.topMouseDown,
          ],
        },
        compositionStart: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onCompositionStart: null }),
            captured: keyOf({ onCompositionStartCapture: null }),
          },
          dependencies: [
            topLevelTypes.topBlur,
            topLevelTypes.topCompositionStart,
            topLevelTypes.topKeyDown,
            topLevelTypes.topKeyPress,
            topLevelTypes.topKeyUp,
            topLevelTypes.topMouseDown,
          ],
        },
        compositionUpdate: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onCompositionUpdate: null }),
            captured: keyOf({ onCompositionUpdateCapture: null }),
          },
          dependencies: [
            topLevelTypes.topBlur,
            topLevelTypes.topCompositionUpdate,
            topLevelTypes.topKeyDown,
            topLevelTypes.topKeyPress,
            topLevelTypes.topKeyUp,
            topLevelTypes.topMouseDown,
          ],
        },
      };

      // Track whether we've ever handled a keypress on the space key.
      var hasSpaceKeypress = false;

      /**
       * Return whether a native keypress event is assumed to be a command.
       * This is required because Firefox fires `keypress` events for key commands
       * (cut, copy, select-all, etc.) even though no character is inserted.
       */
      function isKeypressCommand(nativeEvent) {
        return (
          (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
          // ctrlKey && altKey is equivalent to AltGr, and is not a command.
          !(nativeEvent.ctrlKey && nativeEvent.altKey)
        );
      }

      /**
       * Translate native top level events into event types.
       *
       * @param {string} topLevelType
       * @return {object}
       */
      function getCompositionEventType(topLevelType) {
        switch (topLevelType) {
          case topLevelTypes.topCompositionStart:
            return eventTypes.compositionStart;
          case topLevelTypes.topCompositionEnd:
            return eventTypes.compositionEnd;
          case topLevelTypes.topCompositionUpdate:
            return eventTypes.compositionUpdate;
        }
      }

      /**
       * Does our fallback best-guess model think this event signifies that
       * composition has begun?
       *
       * @param {string} topLevelType
       * @param {object} nativeEvent
       * @return {boolean}
       */
      function isFallbackCompositionStart(topLevelType, nativeEvent) {
        return (
          topLevelType === topLevelTypes.topKeyDown &&
          nativeEvent.keyCode === START_KEYCODE
        );
      }

      /**
       * Does our fallback mode think that this event is the end of composition?
       *
       * @param {string} topLevelType
       * @param {object} nativeEvent
       * @return {boolean}
       */
      function isFallbackCompositionEnd(topLevelType, nativeEvent) {
        switch (topLevelType) {
          case topLevelTypes.topKeyUp:
            // Command keys insert or clear IME input.
            return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
          case topLevelTypes.topKeyDown:
            // Expect IME keyCode on each keydown. If we get any other
            // code we must have exited earlier.
            return nativeEvent.keyCode !== START_KEYCODE;
          case topLevelTypes.topKeyPress:
          case topLevelTypes.topMouseDown:
          case topLevelTypes.topBlur:
            // Events are not possible without cancelling IME.
            return true;
          default:
            return false;
        }
      }

      /**
       * Google Input Tools provides composition data via a CustomEvent,
       * with the `data` property populated in the `detail` object. If this
       * is available on the event object, use it. If not, this is a plain
       * composition event and we have nothing special to extract.
       *
       * @param {object} nativeEvent
       * @return {?string}
       */
      function getDataFromCustomEvent(nativeEvent) {
        var detail = nativeEvent.detail;
        if (typeof detail === 'object' && 'data' in detail) {
          return detail.data;
        }
        return null;
      }

      // Track the current IME composition fallback object, if any.
      var currentComposition = null;

      /**
       * @return {?object} A SyntheticCompositionEvent.
       */
      function extractCompositionEvent(
        topLevelType,
        targetInst,
        nativeEvent,
        nativeEventTarget,
      ) {
        var eventType;
        var fallbackData;

        if (canUseCompositionEvent) {
          eventType = getCompositionEventType(topLevelType);
        } else if (!currentComposition) {
          if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
            eventType = eventTypes.compositionStart;
          }
        } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
          eventType = eventTypes.compositionEnd;
        }

        if (!eventType) {
          return null;
        }

        if (useFallbackCompositionData) {
          // The current composition is stored statically and must not be
          // overwritten while composition continues.
          if (
            !currentComposition &&
            eventType === eventTypes.compositionStart
          ) {
            currentComposition = FallbackCompositionState.getPooled(
              nativeEventTarget,
            );
          } else if (eventType === eventTypes.compositionEnd) {
            if (currentComposition) {
              fallbackData = currentComposition.getData();
            }
          }
        }

        var event = SyntheticCompositionEvent.getPooled(
          eventType,
          targetInst,
          nativeEvent,
          nativeEventTarget,
        );

        if (fallbackData) {
          // Inject data generated from fallback path into the synthetic event.
          // This matches the property of native CompositionEventInterface.
          event.data = fallbackData;
        } else {
          var customData = getDataFromCustomEvent(nativeEvent);
          if (customData !== null) {
            event.data = customData;
          }
        }

        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }

      /**
       * @param {string} topLevelType Record from `EventConstants`.
       * @param {object} nativeEvent Native browser event.
       * @return {?string} The string corresponding to this `beforeInput` event.
       */
      function getNativeBeforeInputChars(topLevelType, nativeEvent) {
        switch (topLevelType) {
          case topLevelTypes.topCompositionEnd:
            return getDataFromCustomEvent(nativeEvent);
          case topLevelTypes.topKeyPress:
            /**
             * If native `textInput` events are available, our goal is to make
             * use of them. However, there is a special case: the spacebar key.
             * In Webkit, preventing default on a spacebar `textInput` event
             * cancels character insertion, but it *also* causes the browser
             * to fall back to its default spacebar behavior of scrolling the
             * page.
             *
             * Tracking at:
             * https://code.google.com/p/chromium/issues/detail?id=355103
             *
             * To avoid this issue, use the keypress event as if no `textInput`
             * event is available.
             */
            var which = nativeEvent.which;
            if (which !== SPACEBAR_CODE) {
              return null;
            }

            hasSpaceKeypress = true;
            return SPACEBAR_CHAR;

          case topLevelTypes.topTextInput:
            // Record the characters to be added to the DOM.
            var chars = nativeEvent.data;

            // If it's a spacebar character, assume that we have already handled
            // it at the keypress level and bail immediately. Android Chrome
            // doesn't give us keycodes, so we need to blacklist it.
            if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
              return null;
            }

            return chars;

          default:
            // For other native event types, do nothing.
            return null;
        }
      }

      /**
       * For browsers that do not provide the `textInput` event, extract the
       * appropriate string to use for SyntheticInputEvent.
       *
       * @param {string} topLevelType Record from `EventConstants`.
       * @param {object} nativeEvent Native browser event.
       * @return {?string} The fallback string for this `beforeInput` event.
       */
      function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
        // If we are currently composing (IME) and using a fallback to do so,
        // try to extract the composed characters from the fallback object.
        // If composition event is available, we extract a string only at
        // compositionevent, otherwise extract it at fallback events.
        if (currentComposition) {
          if (
            topLevelType === topLevelTypes.topCompositionEnd ||
            (!canUseCompositionEvent &&
              isFallbackCompositionEnd(topLevelType, nativeEvent))
          ) {
            var chars = currentComposition.getData();
            FallbackCompositionState.release(currentComposition);
            currentComposition = null;
            return chars;
          }
          return null;
        }

        switch (topLevelType) {
          case topLevelTypes.topPaste:
            // If a paste event occurs after a keypress, throw out the input
            // chars. Paste events should not lead to BeforeInput events.
            return null;
          case topLevelTypes.topKeyPress:
            /**
             * As of v27, Firefox may fire keypress events even when no character
             * will be inserted. A few possibilities:
             *
             * - `which` is `0`. Arrow keys, Esc key, etc.
             *
             * - `which` is the pressed key code, but no char is available.
             *   Ex: 'AltGr + d` in Polish. There is no modified character for
             *   this key combination and no character is inserted into the
             *   document, but FF fires the keypress for char code `100` anyway.
             *   No `input` event will occur.
             *
             * - `which` is the pressed key code, but a command combination is
             *   being used. Ex: `Cmd+C`. No character is inserted, and no
             *   `input` event will occur.
             */
            if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
              return String.fromCharCode(nativeEvent.which);
            }
            return null;
          case topLevelTypes.topCompositionEnd:
            return useFallbackCompositionData ? null : nativeEvent.data;
          default:
            return null;
        }
      }

      /**
       * Extract a SyntheticInputEvent for `beforeInput`, based on either native
       * `textInput` or fallback behavior.
       *
       * @return {?object} A SyntheticInputEvent.
       */
      function extractBeforeInputEvent(
        topLevelType,
        targetInst,
        nativeEvent,
        nativeEventTarget,
      ) {
        var chars;

        if (canUseTextInputEvent) {
          chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
        } else {
          chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
        }

        // If no characters are being inserted, no BeforeInput event should
        // be fired.
        if (!chars) {
          return null;
        }

        var event = SyntheticInputEvent.getPooled(
          eventTypes.beforeInput,
          targetInst,
          nativeEvent,
          nativeEventTarget,
        );

        event.data = chars;
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }

      /**
       * Create an `onBeforeInput` event to match
       * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
       *
       * This event plugin is based on the native `textInput` event
       * available in Chrome, Safari, Opera, and IE. This event fires after
       * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
       *
       * `beforeInput` is spec'd but not implemented in any browsers, and
       * the `input` event does not provide any useful information about what has
       * actually been added, contrary to the spec. Thus, `textInput` is the best
       * available event to identify the characters that have actually been inserted
       * into the target node.
       *
       * This plugin is also responsible for emitting `composition` events, thus
       * allowing us to share composition fallback code for both `beforeInput` and
       * `composition` event types.
       */
      var BeforeInputEventPlugin = {
        eventTypes: eventTypes,

        extractEvents: function (
          topLevelType,
          targetInst,
          nativeEvent,
          nativeEventTarget,
        ) {
          return [
            extractCompositionEvent(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget,
            ),
            extractBeforeInputEvent(
              topLevelType,
              targetInst,
              nativeEvent,
              nativeEventTarget,
            ),
          ];
        },
      };

      module.exports = BeforeInputEventPlugin;

      /***/
    },
    /* 137 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule EventConstants
       */

      'use strict';

      var keyMirror = __webpack_require__(24);

      var PropagationPhases = keyMirror({ bubbled: null, captured: null });

      /**
       * Types of raw signals from the browser caught at the top level.
       */
      var topLevelTypes = keyMirror({
        topAbort: null,
        topAnimationEnd: null,
        topAnimationIteration: null,
        topAnimationStart: null,
        topBlur: null,
        topCanPlay: null,
        topCanPlayThrough: null,
        topChange: null,
        topClick: null,
        topCompositionEnd: null,
        topCompositionStart: null,
        topCompositionUpdate: null,
        topContextMenu: null,
        topCopy: null,
        topCut: null,
        topDoubleClick: null,
        topDrag: null,
        topDragEnd: null,
        topDragEnter: null,
        topDragExit: null,
        topDragLeave: null,
        topDragOver: null,
        topDragStart: null,
        topDrop: null,
        topDurationChange: null,
        topEmptied: null,
        topEncrypted: null,
        topEnded: null,
        topError: null,
        topFocus: null,
        topInput: null,
        topInvalid: null,
        topKeyDown: null,
        topKeyPress: null,
        topKeyUp: null,
        topLoad: null,
        topLoadedData: null,
        topLoadedMetadata: null,
        topLoadStart: null,
        topMouseDown: null,
        topMouseMove: null,
        topMouseOut: null,
        topMouseOver: null,
        topMouseUp: null,
        topPaste: null,
        topPause: null,
        topPlay: null,
        topPlaying: null,
        topProgress: null,
        topRateChange: null,
        topReset: null,
        topScroll: null,
        topSeeked: null,
        topSeeking: null,
        topSelectionChange: null,
        topStalled: null,
        topSubmit: null,
        topSuspend: null,
        topTextInput: null,
        topTimeUpdate: null,
        topTouchCancel: null,
        topTouchEnd: null,
        topTouchMove: null,
        topTouchStart: null,
        topTransitionEnd: null,
        topVolumeChange: null,
        topWaiting: null,
        topWheel: null,
      });

      var EventConstants = {
        topLevelTypes: topLevelTypes,
        PropagationPhases: PropagationPhases,
      };

      module.exports = EventConstants;

      /***/
    },
    /* 138 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule EventPropagators
       */

      'use strict';

      var EventConstants = __webpack_require__(137);
      var EventPluginHub = __webpack_require__(139);
      var EventPluginUtils = __webpack_require__(141);

      var accumulateInto = __webpack_require__(143);
      var forEachAccumulated = __webpack_require__(144);
      var warning = __webpack_require__(12);

      var PropagationPhases = EventConstants.PropagationPhases;
      var getListener = EventPluginHub.getListener;

      /**
       * Some event types have a notion of different registration names for different
       * "phases" of propagation. This finds listeners by a given phase.
       */
      function listenerAtPhase(inst, event, propagationPhase) {
        var registrationName =
          event.dispatchConfig.phasedRegistrationNames[propagationPhase];
        return getListener(inst, registrationName);
      }

      /**
       * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
       * here, allows us to not have to bind or create functions for each event.
       * Mutating the event's members allows us to not have to create a wrapping
       * "dispatch" object that pairs the event with the listener.
       */
      function accumulateDirectionalDispatches(inst, upwards, event) {
        if (true) {
          true ? warning(inst, 'Dispatching inst must not be null') : void 0;
        }
        var phase = upwards
          ? PropagationPhases.bubbled
          : PropagationPhases.captured;
        var listener = listenerAtPhase(inst, event, phase);
        if (listener) {
          event._dispatchListeners = accumulateInto(
            event._dispatchListeners,
            listener,
          );
          event._dispatchInstances = accumulateInto(
            event._dispatchInstances,
            inst,
          );
        }
      }

      /**
       * Collect dispatches (must be entirely collected before dispatching - see unit
       * tests). Lazily allocate the array to conserve memory.  We must loop through
       * each event and perform the traversal for each one. We cannot perform a
       * single traversal for the entire collection of events because each event may
       * have a different target.
       */
      function accumulateTwoPhaseDispatchesSingle(event) {
        if (event && event.dispatchConfig.phasedRegistrationNames) {
          EventPluginUtils.traverseTwoPhase(
            event._targetInst,
            accumulateDirectionalDispatches,
            event,
          );
        }
      }

      /**
       * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
       */
      function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
        if (event && event.dispatchConfig.phasedRegistrationNames) {
          var targetInst = event._targetInst;
          var parentInst = targetInst
            ? EventPluginUtils.getParentInstance(targetInst)
            : null;
          EventPluginUtils.traverseTwoPhase(
            parentInst,
            accumulateDirectionalDispatches,
            event,
          );
        }
      }

      /**
       * Accumulates without regard to direction, does not look for phased
       * registration names. Same as `accumulateDirectDispatchesSingle` but without
       * requiring that the `dispatchMarker` be the same as the dispatched ID.
       */
      function accumulateDispatches(inst, ignoredDirection, event) {
        if (event && event.dispatchConfig.registrationName) {
          var registrationName = event.dispatchConfig.registrationName;
          var listener = getListener(inst, registrationName);
          if (listener) {
            event._dispatchListeners = accumulateInto(
              event._dispatchListeners,
              listener,
            );
            event._dispatchInstances = accumulateInto(
              event._dispatchInstances,
              inst,
            );
          }
        }
      }

      /**
       * Accumulates dispatches on an `SyntheticEvent`, but only for the
       * `dispatchMarker`.
       * @param {SyntheticEvent} event
       */
      function accumulateDirectDispatchesSingle(event) {
        if (event && event.dispatchConfig.registrationName) {
          accumulateDispatches(event._targetInst, null, event);
        }
      }

      function accumulateTwoPhaseDispatches(events) {
        forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
      }

      function accumulateTwoPhaseDispatchesSkipTarget(events) {
        forEachAccumulated(
          events,
          accumulateTwoPhaseDispatchesSingleSkipTarget,
        );
      }

      function accumulateEnterLeaveDispatches(leave, enter, from, to) {
        EventPluginUtils.traverseEnterLeave(
          from,
          to,
          accumulateDispatches,
          leave,
          enter,
        );
      }

      function accumulateDirectDispatches(events) {
        forEachAccumulated(events, accumulateDirectDispatchesSingle);
      }

      /**
       * A small set of propagation patterns, each of which will accept a small amount
       * of information, and generate a set of "dispatch ready event objects" - which
       * are sets of events that have already been annotated with a set of dispatched
       * listener functions/ids. The API is designed this way to discourage these
       * propagation strategies from actually executing the dispatches, since we
       * always want to collect the entire set of dispatches before executing event a
       * single one.
       *
       * @constructor EventPropagators
       */
      var EventPropagators = {
        accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
        accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
        accumulateDirectDispatches: accumulateDirectDispatches,
        accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches,
      };

      module.exports = EventPropagators;

      /***/
    },
    /* 139 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule EventPluginHub
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var EventPluginRegistry = __webpack_require__(140);
      var EventPluginUtils = __webpack_require__(141);
      var ReactErrorUtils = __webpack_require__(142);

      var accumulateInto = __webpack_require__(143);
      var forEachAccumulated = __webpack_require__(144);
      var invariant = __webpack_require__(9);

      /**
       * Internal store for event listeners
       */
      var listenerBank = {};

      /**
       * Internal queue of events that have accumulated their dispatches and are
       * waiting to have their dispatches executed.
       */
      var eventQueue = null;

      /**
       * Dispatches an event and releases it back into the pool, unless persistent.
       *
       * @param {?object} event Synthetic event to be dispatched.
       * @param {boolean} simulated If the event is simulated (changes exn behavior)
       * @private
       */
      var executeDispatchesAndRelease = function (event, simulated) {
        if (event) {
          EventPluginUtils.executeDispatchesInOrder(event, simulated);

          if (!event.isPersistent()) {
            event.constructor.release(event);
          }
        }
      };
      var executeDispatchesAndReleaseSimulated = function (e) {
        return executeDispatchesAndRelease(e, true);
      };
      var executeDispatchesAndReleaseTopLevel = function (e) {
        return executeDispatchesAndRelease(e, false);
      };

      var getDictionaryKey = function (inst) {
        // Prevents V8 performance issue:
        // https://github.com/facebook/react/pull/7232
        return '.' + inst._rootNodeID;
      };

      /**
       * This is a unified interface for event plugins to be installed and configured.
       *
       * Event plugins can implement the following properties:
       *
       *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
       *     Required. When a top-level event is fired, this method is expected to
       *     extract synthetic events that will in turn be queued and dispatched.
       *
       *   `eventTypes` {object}
       *     Optional, plugins that fire events must publish a mapping of registration
       *     names that are used to register listeners. Values of this mapping must
       *     be objects that contain `registrationName` or `phasedRegistrationNames`.
       *
       *   `executeDispatch` {function(object, function, string)}
       *     Optional, allows plugins to override how an event gets dispatched. By
       *     default, the listener is simply invoked.
       *
       * Each plugin that is injected into `EventsPluginHub` is immediately operable.
       *
       * @public
       */
      var EventPluginHub = {
        /**
         * Methods for injecting dependencies.
         */
        injection: {
          /**
           * @param {array} InjectedEventPluginOrder
           * @public
           */
          injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

          /**
           * @param {object} injectedNamesToPlugins Map from names to plugin modules.
           */
          injectEventPluginsByName:
            EventPluginRegistry.injectEventPluginsByName,
        },

        /**
         * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
         *
         * @param {object} inst The instance, which is the source of events.
         * @param {string} registrationName Name of listener (e.g. `onClick`).
         * @param {function} listener The callback to store.
         */
        putListener: function (inst, registrationName, listener) {
          !(typeof listener === 'function')
            ? true
              ? invariant(
                  false,
                  'Expected %s listener to be a function, instead got type %s',
                  registrationName,
                  typeof listener,
                )
              : _prodInvariant('94', registrationName, typeof listener)
            : void 0;

          var key = getDictionaryKey(inst);
          var bankForRegistrationName =
            listenerBank[registrationName] ||
            (listenerBank[registrationName] = {});
          bankForRegistrationName[key] = listener;

          var PluginModule =
            EventPluginRegistry.registrationNameModules[registrationName];
          if (PluginModule && PluginModule.didPutListener) {
            PluginModule.didPutListener(inst, registrationName, listener);
          }
        },

        /**
         * @param {object} inst The instance, which is the source of events.
         * @param {string} registrationName Name of listener (e.g. `onClick`).
         * @return {?function} The stored callback.
         */
        getListener: function (inst, registrationName) {
          var bankForRegistrationName = listenerBank[registrationName];
          var key = getDictionaryKey(inst);
          return bankForRegistrationName && bankForRegistrationName[key];
        },

        /**
         * Deletes a listener from the registration bank.
         *
         * @param {object} inst The instance, which is the source of events.
         * @param {string} registrationName Name of listener (e.g. `onClick`).
         */
        deleteListener: function (inst, registrationName) {
          var PluginModule =
            EventPluginRegistry.registrationNameModules[registrationName];
          if (PluginModule && PluginModule.willDeleteListener) {
            PluginModule.willDeleteListener(inst, registrationName);
          }

          var bankForRegistrationName = listenerBank[registrationName];
          // TODO: This should never be null -- when is it?
          if (bankForRegistrationName) {
            var key = getDictionaryKey(inst);
            delete bankForRegistrationName[key];
          }
        },

        /**
         * Deletes all listeners for the DOM element with the supplied ID.
         *
         * @param {object} inst The instance, which is the source of events.
         */
        deleteAllListeners: function (inst) {
          var key = getDictionaryKey(inst);
          for (var registrationName in listenerBank) {
            if (!listenerBank.hasOwnProperty(registrationName)) {
              continue;
            }

            if (!listenerBank[registrationName][key]) {
              continue;
            }

            var PluginModule =
              EventPluginRegistry.registrationNameModules[registrationName];
            if (PluginModule && PluginModule.willDeleteListener) {
              PluginModule.willDeleteListener(inst, registrationName);
            }

            delete listenerBank[registrationName][key];
          }
        },

        /**
         * Allows registered plugins an opportunity to extract events from top-level
         * native browser events.
         *
         * @return {*} An accumulation of synthetic events.
         * @internal
         */
        extractEvents: function (
          topLevelType,
          targetInst,
          nativeEvent,
          nativeEventTarget,
        ) {
          var events;
          var plugins = EventPluginRegistry.plugins;
          for (var i = 0; i < plugins.length; i++) {
            // Not every plugin in the ordering may be loaded at runtime.
            var possiblePlugin = plugins[i];
            if (possiblePlugin) {
              var extractedEvents = possiblePlugin.extractEvents(
                topLevelType,
                targetInst,
                nativeEvent,
                nativeEventTarget,
              );
              if (extractedEvents) {
                events = accumulateInto(events, extractedEvents);
              }
            }
          }
          return events;
        },

        /**
         * Enqueues a synthetic event that should be dispatched when
         * `processEventQueue` is invoked.
         *
         * @param {*} events An accumulation of synthetic events.
         * @internal
         */
        enqueueEvents: function (events) {
          if (events) {
            eventQueue = accumulateInto(eventQueue, events);
          }
        },

        /**
         * Dispatches all synthetic events on the event queue.
         *
         * @internal
         */
        processEventQueue: function (simulated) {
          // Set `eventQueue` to null before processing it so that we can tell if more
          // events get enqueued while processing.
          var processingEventQueue = eventQueue;
          eventQueue = null;
          if (simulated) {
            forEachAccumulated(
              processingEventQueue,
              executeDispatchesAndReleaseSimulated,
            );
          } else {
            forEachAccumulated(
              processingEventQueue,
              executeDispatchesAndReleaseTopLevel,
            );
          }
          !!eventQueue
            ? true
              ? invariant(
                  false,
                  'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.',
                )
              : _prodInvariant('95')
            : void 0;
          // This would be a good time to rethrow if any of the event handlers threw.
          ReactErrorUtils.rethrowCaughtError();
        },

        /**
         * These are needed for tests only. Do not use!
         */
        __purge: function () {
          listenerBank = {};
        },

        __getListenerBank: function () {
          return listenerBank;
        },
      };

      module.exports = EventPluginHub;

      /***/
    },
    /* 140 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule EventPluginRegistry
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var invariant = __webpack_require__(9);

      /**
       * Injectable ordering of event plugins.
       */
      var EventPluginOrder = null;

      /**
       * Injectable mapping from names to event plugin modules.
       */
      var namesToPlugins = {};

      /**
       * Recomputes the plugin list using the injected plugins and plugin ordering.
       *
       * @private
       */
      function recomputePluginOrdering() {
        if (!EventPluginOrder) {
          // Wait until an `EventPluginOrder` is injected.
          return;
        }
        for (var pluginName in namesToPlugins) {
          var PluginModule = namesToPlugins[pluginName];
          var pluginIndex = EventPluginOrder.indexOf(pluginName);
          !(pluginIndex > -1)
            ? true
              ? invariant(
                  false,
                  'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.',
                  pluginName,
                )
              : _prodInvariant('96', pluginName)
            : void 0;
          if (EventPluginRegistry.plugins[pluginIndex]) {
            continue;
          }
          !PluginModule.extractEvents
            ? true
              ? invariant(
                  false,
                  'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.',
                  pluginName,
                )
              : _prodInvariant('97', pluginName)
            : void 0;
          EventPluginRegistry.plugins[pluginIndex] = PluginModule;
          var publishedEvents = PluginModule.eventTypes;
          for (var eventName in publishedEvents) {
            !publishEventForPlugin(
              publishedEvents[eventName],
              PluginModule,
              eventName,
            )
              ? true
                ? invariant(
                    false,
                    'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
                    eventName,
                    pluginName,
                  )
                : _prodInvariant('98', eventName, pluginName)
              : void 0;
          }
        }
      }

      /**
       * Publishes an event so that it can be dispatched by the supplied plugin.
       *
       * @param {object} dispatchConfig Dispatch configuration for the event.
       * @param {object} PluginModule Plugin publishing the event.
       * @return {boolean} True if the event was successfully published.
       * @private
       */
      function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
        !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)
          ? true
            ? invariant(
                false,
                'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.',
                eventName,
              )
            : _prodInvariant('99', eventName)
          : void 0;
        EventPluginRegistry.eventNameDispatchConfigs[
          eventName
        ] = dispatchConfig;

        var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
        if (phasedRegistrationNames) {
          for (var phaseName in phasedRegistrationNames) {
            if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
              var phasedRegistrationName = phasedRegistrationNames[phaseName];
              publishRegistrationName(
                phasedRegistrationName,
                PluginModule,
                eventName,
              );
            }
          }
          return true;
        } else if (dispatchConfig.registrationName) {
          publishRegistrationName(
            dispatchConfig.registrationName,
            PluginModule,
            eventName,
          );
          return true;
        }
        return false;
      }

      /**
       * Publishes a registration name that is used to identify dispatched events and
       * can be used with `EventPluginHub.putListener` to register listeners.
       *
       * @param {string} registrationName Registration name to add.
       * @param {object} PluginModule Plugin publishing the event.
       * @private
       */
      function publishRegistrationName(
        registrationName,
        PluginModule,
        eventName,
      ) {
        !!EventPluginRegistry.registrationNameModules[registrationName]
          ? true
            ? invariant(
                false,
                'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.',
                registrationName,
              )
            : _prodInvariant('100', registrationName)
          : void 0;
        EventPluginRegistry.registrationNameModules[
          registrationName
        ] = PluginModule;
        EventPluginRegistry.registrationNameDependencies[registrationName] =
          PluginModule.eventTypes[eventName].dependencies;

        if (true) {
          var lowerCasedName = registrationName.toLowerCase();
          EventPluginRegistry.possibleRegistrationNames[
            lowerCasedName
          ] = registrationName;

          if (registrationName === 'onDoubleClick') {
            EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
          }
        }
      }

      /**
       * Registers plugins so that they can extract and dispatch events.
       *
       * @see {EventPluginHub}
       */
      var EventPluginRegistry = {
        /**
         * Ordered list of injected plugins.
         */
        plugins: [],

        /**
         * Mapping from event name to dispatch config
         */
        eventNameDispatchConfigs: {},

        /**
         * Mapping from registration name to plugin module
         */
        registrationNameModules: {},

        /**
         * Mapping from registration name to event name
         */
        registrationNameDependencies: {},

        /**
         * Mapping from lowercase registration names to the properly cased version,
         * used to warn in the case of missing event handlers. Available
         * only in __DEV__.
         * @type {Object}
         */
        possibleRegistrationNames: true ? {} : null,

        /**
         * Injects an ordering of plugins (by plugin name). This allows the ordering
         * to be decoupled from injection of the actual plugins so that ordering is
         * always deterministic regardless of packaging, on-the-fly injection, etc.
         *
         * @param {array} InjectedEventPluginOrder
         * @internal
         * @see {EventPluginHub.injection.injectEventPluginOrder}
         */
        injectEventPluginOrder: function (InjectedEventPluginOrder) {
          !!EventPluginOrder
            ? true
              ? invariant(
                  false,
                  'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.',
                )
              : _prodInvariant('101')
            : void 0;
          // Clone the ordering so it cannot be dynamically mutated.
          EventPluginOrder = Array.prototype.slice.call(
            InjectedEventPluginOrder,
          );
          recomputePluginOrdering();
        },

        /**
         * Injects plugins to be used by `EventPluginHub`. The plugin names must be
         * in the ordering injected by `injectEventPluginOrder`.
         *
         * Plugins can be injected as part of page initialization or on-the-fly.
         *
         * @param {object} injectedNamesToPlugins Map from names to plugin modules.
         * @internal
         * @see {EventPluginHub.injection.injectEventPluginsByName}
         */
        injectEventPluginsByName: function (injectedNamesToPlugins) {
          var isOrderingDirty = false;
          for (var pluginName in injectedNamesToPlugins) {
            if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
              continue;
            }
            var PluginModule = injectedNamesToPlugins[pluginName];
            if (
              !namesToPlugins.hasOwnProperty(pluginName) ||
              namesToPlugins[pluginName] !== PluginModule
            ) {
              !!namesToPlugins[pluginName]
                ? true
                  ? invariant(
                      false,
                      'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.',
                      pluginName,
                    )
                  : _prodInvariant('102', pluginName)
                : void 0;
              namesToPlugins[pluginName] = PluginModule;
              isOrderingDirty = true;
            }
          }
          if (isOrderingDirty) {
            recomputePluginOrdering();
          }
        },

        /**
         * Looks up the plugin for the supplied event.
         *
         * @param {object} event A synthetic event.
         * @return {?object} The plugin that created the supplied event.
         * @internal
         */
        getPluginModuleForEvent: function (event) {
          var dispatchConfig = event.dispatchConfig;
          if (dispatchConfig.registrationName) {
            return (
              EventPluginRegistry.registrationNameModules[
                dispatchConfig.registrationName
              ] || null
            );
          }
          for (var phase in dispatchConfig.phasedRegistrationNames) {
            if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
              continue;
            }
            var PluginModule =
              EventPluginRegistry.registrationNameModules[
                dispatchConfig.phasedRegistrationNames[phase]
              ];
            if (PluginModule) {
              return PluginModule;
            }
          }
          return null;
        },

        /**
         * Exposed for unit testing.
         * @private
         */
        _resetEventPlugins: function () {
          EventPluginOrder = null;
          for (var pluginName in namesToPlugins) {
            if (namesToPlugins.hasOwnProperty(pluginName)) {
              delete namesToPlugins[pluginName];
            }
          }
          EventPluginRegistry.plugins.length = 0;

          var eventNameDispatchConfigs =
            EventPluginRegistry.eventNameDispatchConfigs;
          for (var eventName in eventNameDispatchConfigs) {
            if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
              delete eventNameDispatchConfigs[eventName];
            }
          }

          var registrationNameModules =
            EventPluginRegistry.registrationNameModules;
          for (var registrationName in registrationNameModules) {
            if (registrationNameModules.hasOwnProperty(registrationName)) {
              delete registrationNameModules[registrationName];
            }
          }

          if (true) {
            var possibleRegistrationNames =
              EventPluginRegistry.possibleRegistrationNames;
            for (var lowerCasedName in possibleRegistrationNames) {
              if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
                delete possibleRegistrationNames[lowerCasedName];
              }
            }
          }
        },
      };

      module.exports = EventPluginRegistry;

      /***/
    },
    /* 141 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule EventPluginUtils
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var EventConstants = __webpack_require__(137);
      var ReactErrorUtils = __webpack_require__(142);

      var invariant = __webpack_require__(9);
      var warning = __webpack_require__(12);

      /**
       * Injected dependencies:
       */

      /**
       * - `ComponentTree`: [required] Module that can convert between React instances
       *   and actual node references.
       */
      var ComponentTree;
      var TreeTraversal;
      var injection = {
        injectComponentTree: function (Injected) {
          ComponentTree = Injected;
          if (true) {
            true
              ? warning(
                  Injected &&
                    Injected.getNodeFromInstance &&
                    Injected.getInstanceFromNode,
                  'EventPluginUtils.injection.injectComponentTree(...): Injected ' +
                    'module is missing getNodeFromInstance or getInstanceFromNode.',
                )
              : void 0;
          }
        },
        injectTreeTraversal: function (Injected) {
          TreeTraversal = Injected;
          if (true) {
            true
              ? warning(
                  Injected &&
                    Injected.isAncestor &&
                    Injected.getLowestCommonAncestor,
                  'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' +
                    'module is missing isAncestor or getLowestCommonAncestor.',
                )
              : void 0;
          }
        },
      };

      var topLevelTypes = EventConstants.topLevelTypes;

      function isEndish(topLevelType) {
        return (
          topLevelType === topLevelTypes.topMouseUp ||
          topLevelType === topLevelTypes.topTouchEnd ||
          topLevelType === topLevelTypes.topTouchCancel
        );
      }

      function isMoveish(topLevelType) {
        return (
          topLevelType === topLevelTypes.topMouseMove ||
          topLevelType === topLevelTypes.topTouchMove
        );
      }
      function isStartish(topLevelType) {
        return (
          topLevelType === topLevelTypes.topMouseDown ||
          topLevelType === topLevelTypes.topTouchStart
        );
      }

      var validateEventDispatches;
      if (true) {
        validateEventDispatches = function (event) {
          var dispatchListeners = event._dispatchListeners;
          var dispatchInstances = event._dispatchInstances;

          var listenersIsArr = Array.isArray(dispatchListeners);
          var listenersLen = listenersIsArr
            ? dispatchListeners.length
            : dispatchListeners
            ? 1
            : 0;

          var instancesIsArr = Array.isArray(dispatchInstances);
          var instancesLen = instancesIsArr
            ? dispatchInstances.length
            : dispatchInstances
            ? 1
            : 0;

          true
            ? warning(
                instancesIsArr === listenersIsArr &&
                  instancesLen === listenersLen,
                'EventPluginUtils: Invalid `event`.',
              )
            : void 0;
        };
      }

      /**
       * Dispatch the event to the listener.
       * @param {SyntheticEvent} event SyntheticEvent to handle
       * @param {boolean} simulated If the event is simulated (changes exn behavior)
       * @param {function} listener Application-level callback
       * @param {*} inst Internal component instance
       */
      function executeDispatch(event, simulated, listener, inst) {
        var type = event.type || 'unknown-event';
        event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
        if (simulated) {
          ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
        } else {
          ReactErrorUtils.invokeGuardedCallback(type, listener, event);
        }
        event.currentTarget = null;
      }

      /**
       * Standard/simple iteration through an event's collected dispatches.
       */
      function executeDispatchesInOrder(event, simulated) {
        var dispatchListeners = event._dispatchListeners;
        var dispatchInstances = event._dispatchInstances;
        if (true) {
          validateEventDispatches(event);
        }
        if (Array.isArray(dispatchListeners)) {
          for (var i = 0; i < dispatchListeners.length; i++) {
            if (event.isPropagationStopped()) {
              break;
            }
            // Listeners and Instances are two parallel arrays that are always in sync.
            executeDispatch(
              event,
              simulated,
              dispatchListeners[i],
              dispatchInstances[i],
            );
          }
        } else if (dispatchListeners) {
          executeDispatch(
            event,
            simulated,
            dispatchListeners,
            dispatchInstances,
          );
        }
        event._dispatchListeners = null;
        event._dispatchInstances = null;
      }

      /**
       * Standard/simple iteration through an event's collected dispatches, but stops
       * at the first dispatch execution returning true, and returns that id.
       *
       * @return {?string} id of the first dispatch execution who's listener returns
       * true, or null if no listener returned true.
       */
      function executeDispatchesInOrderStopAtTrueImpl(event) {
        var dispatchListeners = event._dispatchListeners;
        var dispatchInstances = event._dispatchInstances;
        if (true) {
          validateEventDispatches(event);
        }
        if (Array.isArray(dispatchListeners)) {
          for (var i = 0; i < dispatchListeners.length; i++) {
            if (event.isPropagationStopped()) {
              break;
            }
            // Listeners and Instances are two parallel arrays that are always in sync.
            if (dispatchListeners[i](event, dispatchInstances[i])) {
              return dispatchInstances[i];
            }
          }
        } else if (dispatchListeners) {
          if (dispatchListeners(event, dispatchInstances)) {
            return dispatchInstances;
          }
        }
        return null;
      }

      /**
       * @see executeDispatchesInOrderStopAtTrueImpl
       */
      function executeDispatchesInOrderStopAtTrue(event) {
        var ret = executeDispatchesInOrderStopAtTrueImpl(event);
        event._dispatchInstances = null;
        event._dispatchListeners = null;
        return ret;
      }

      /**
       * Execution of a "direct" dispatch - there must be at most one dispatch
       * accumulated on the event or it is considered an error. It doesn't really make
       * sense for an event with multiple dispatches (bubbled) to keep track of the
       * return values at each dispatch execution, but it does tend to make sense when
       * dealing with "direct" dispatches.
       *
       * @return {*} The return value of executing the single dispatch.
       */
      function executeDirectDispatch(event) {
        if (true) {
          validateEventDispatches(event);
        }
        var dispatchListener = event._dispatchListeners;
        var dispatchInstance = event._dispatchInstances;
        !!Array.isArray(dispatchListener)
          ? true
            ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.')
            : _prodInvariant('103')
          : void 0;
        event.currentTarget = dispatchListener
          ? EventPluginUtils.getNodeFromInstance(dispatchInstance)
          : null;
        var res = dispatchListener ? dispatchListener(event) : null;
        event.currentTarget = null;
        event._dispatchListeners = null;
        event._dispatchInstances = null;
        return res;
      }

      /**
       * @param {SyntheticEvent} event
       * @return {boolean} True iff number of dispatches accumulated is greater than 0.
       */
      function hasDispatches(event) {
        return !!event._dispatchListeners;
      }

      /**
       * General utilities that are useful in creating custom Event Plugins.
       */
      var EventPluginUtils = {
        isEndish: isEndish,
        isMoveish: isMoveish,
        isStartish: isStartish,

        executeDirectDispatch: executeDirectDispatch,
        executeDispatchesInOrder: executeDispatchesInOrder,
        executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
        hasDispatches: hasDispatches,

        getInstanceFromNode: function (node) {
          return ComponentTree.getInstanceFromNode(node);
        },
        getNodeFromInstance: function (node) {
          return ComponentTree.getNodeFromInstance(node);
        },
        isAncestor: function (a, b) {
          return TreeTraversal.isAncestor(a, b);
        },
        getLowestCommonAncestor: function (a, b) {
          return TreeTraversal.getLowestCommonAncestor(a, b);
        },
        getParentInstance: function (inst) {
          return TreeTraversal.getParentInstance(inst);
        },
        traverseTwoPhase: function (target, fn, arg) {
          return TreeTraversal.traverseTwoPhase(target, fn, arg);
        },
        traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
          return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
        },

        injection: injection,
      };

      module.exports = EventPluginUtils;

      /***/
    },
    /* 142 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactErrorUtils
       */

      'use strict';

      var caughtError = null;

      /**
       * Call a function while guarding against errors that happens within it.
       *
       * @param {?String} name of the guard to use for logging or debugging
       * @param {Function} func The function to invoke
       * @param {*} a First argument
       * @param {*} b Second argument
       */
      function invokeGuardedCallback(name, func, a, b) {
        try {
          return func(a, b);
        } catch (x) {
          if (caughtError === null) {
            caughtError = x;
          }
          return undefined;
        }
      }

      var ReactErrorUtils = {
        invokeGuardedCallback: invokeGuardedCallback,

        /**
         * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
         * handler are sure to be rethrown by rethrowCaughtError.
         */
        invokeGuardedCallbackWithCatch: invokeGuardedCallback,

        /**
         * During execution of guarded functions we will capture the first error which
         * we will rethrow to be handled by the top level error handler.
         */
        rethrowCaughtError: function () {
          if (caughtError) {
            var error = caughtError;
            caughtError = null;
            throw error;
          }
        },
      };

      if (true) {
        /**
         * To help development we can get better devtools integration by simulating a
         * real browser event.
         */
        if (
          typeof window !== 'undefined' &&
          typeof window.dispatchEvent === 'function' &&
          typeof document !== 'undefined' &&
          typeof document.createEvent === 'function'
        ) {
          var fakeNode = document.createElement('react');
          ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
            var boundFunc = func.bind(null, a, b);
            var evtType = 'react-' + name;
            fakeNode.addEventListener(evtType, boundFunc, false);
            var evt = document.createEvent('Event');
            evt.initEvent(evtType, false, false);
            fakeNode.dispatchEvent(evt);
            fakeNode.removeEventListener(evtType, boundFunc, false);
          };
        }
      }

      module.exports = ReactErrorUtils;

      /***/
    },
    /* 143 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2014-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule accumulateInto
       *
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var invariant = __webpack_require__(9);

      /**
       * Accumulates items that must not be null or undefined into the first one. This
       * is used to conserve memory by avoiding array allocations, and thus sacrifices
       * API cleanness. Since `current` can be null before being passed in and not
       * null after this function, make sure to assign it back to `current`:
       *
       * `a = accumulateInto(a, b);`
       *
       * This API should be sparingly used. Try `accumulate` for something cleaner.
       *
       * @return {*|array<*>} An accumulation of items.
       */

      function accumulateInto(current, next) {
        !(next != null)
          ? true
            ? invariant(
                false,
                'accumulateInto(...): Accumulated items must not be null or undefined.',
              )
            : _prodInvariant('30')
          : void 0;

        if (current == null) {
          return next;
        }

        // Both are not empty. Warning: Never call x.concat(y) when you are not
        // certain that x is an Array (x could be a string with concat method).
        if (Array.isArray(current)) {
          if (Array.isArray(next)) {
            current.push.apply(current, next);
            return current;
          }
          current.push(next);
          return current;
        }

        if (Array.isArray(next)) {
          // A bit too dangerous to mutate `next`.
          return [current].concat(next);
        }

        return [current, next];
      }

      module.exports = accumulateInto;

      /***/
    },
    /* 144 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule forEachAccumulated
       *
       */

      'use strict';

      /**
       * @param {array} arr an "accumulation" of items which is either an Array or
       * a single item. Useful when paired with the `accumulate` module. This is a
       * simple utility that allows us to reason about a collection of items, but
       * handling the case when there is exactly one item (and we do not need to
       * allocate an array).
       */

      function forEachAccumulated(arr, cb, scope) {
        if (Array.isArray(arr)) {
          arr.forEach(cb, scope);
        } else if (arr) {
          cb.call(scope, arr);
        }
      }

      module.exports = forEachAccumulated;

      /***/
    },
    /* 145 */
    /***/ function (module, exports) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      'use strict';

      var canUseDOM = !!(
        typeof window !== 'undefined' &&
        window.document &&
        window.document.createElement
      );

      /**
       * Simple, lightweight module assisting with the detection and context of
       * Worker. Helps avoid circular dependencies and allows code to reason about
       * whether or not they are in a Worker, even if they never include the main
       * `ReactWorker` dependency.
       */
      var ExecutionEnvironment = {
        canUseDOM: canUseDOM,

        canUseWorkers: typeof Worker !== 'undefined',

        canUseEventListeners:
          canUseDOM && !!(window.addEventListener || window.attachEvent),

        canUseViewport: canUseDOM && !!window.screen,

        isInWorker: !canUseDOM, // For now, this is true - might change in the future.
      };

      module.exports = ExecutionEnvironment;

      /***/
    },
    /* 146 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule FallbackCompositionState
       */

      'use strict';

      var _assign = __webpack_require__(5);

      var PooledClass = __webpack_require__(7);

      var getTextContentAccessor = __webpack_require__(147);

      /**
       * This helper class stores information about text content of a target node,
       * allowing comparison of content before and after a given event.
       *
       * Identify the node where selection currently begins, then observe
       * both its text content and its current position in the DOM. Since the
       * browser may natively replace the target node during composition, we can
       * use its position to find its replacement.
       *
       * @param {DOMEventTarget} root
       */
      function FallbackCompositionState(root) {
        this._root = root;
        this._startText = this.getText();
        this._fallbackText = null;
      }

      _assign(FallbackCompositionState.prototype, {
        destructor: function () {
          this._root = null;
          this._startText = null;
          this._fallbackText = null;
        },

        /**
         * Get current text of input.
         *
         * @return {string}
         */
        getText: function () {
          if ('value' in this._root) {
            return this._root.value;
          }
          return this._root[getTextContentAccessor()];
        },

        /**
         * Determine the differing substring between the initially stored
         * text content and the current content.
         *
         * @return {string}
         */
        getData: function () {
          if (this._fallbackText) {
            return this._fallbackText;
          }

          var start;
          var startValue = this._startText;
          var startLength = startValue.length;
          var end;
          var endValue = this.getText();
          var endLength = endValue.length;

          for (start = 0; start < startLength; start++) {
            if (startValue[start] !== endValue[start]) {
              break;
            }
          }

          var minEnd = startLength - start;
          for (end = 1; end <= minEnd; end++) {
            if (startValue[startLength - end] !== endValue[endLength - end]) {
              break;
            }
          }

          var sliceTail = end > 1 ? 1 - end : undefined;
          this._fallbackText = endValue.slice(start, sliceTail);
          return this._fallbackText;
        },
      });

      PooledClass.addPoolingTo(FallbackCompositionState);

      module.exports = FallbackCompositionState;

      /***/
    },
    /* 147 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule getTextContentAccessor
       */

      'use strict';

      var ExecutionEnvironment = __webpack_require__(145);

      var contentKey = null;

      /**
       * Gets the key used to access text content on a DOM node.
       *
       * @return {?string} Key used to access text content.
       * @internal
       */
      function getTextContentAccessor() {
        if (!contentKey && ExecutionEnvironment.canUseDOM) {
          // Prefer textContent to innerText because many browsers support both but
          // SVG <text> elements don't support innerText even when <div> does.
          contentKey =
            'textContent' in document.documentElement
              ? 'textContent'
              : 'innerText';
        }
        return contentKey;
      }

      module.exports = getTextContentAccessor;

      /***/
    },
    /* 148 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SyntheticCompositionEvent
       */

      'use strict';

      var SyntheticEvent = __webpack_require__(149);

      /**
       * @interface Event
       * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
       */
      var CompositionEventInterface = {
        data: null,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticCompositionEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget,
      ) {
        return SyntheticEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget,
        );
      }

      SyntheticEvent.augmentClass(
        SyntheticCompositionEvent,
        CompositionEventInterface,
      );

      module.exports = SyntheticCompositionEvent;

      /***/
    },
    /* 149 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SyntheticEvent
       */

      'use strict';

      var _assign = __webpack_require__(5);

      var PooledClass = __webpack_require__(7);

      var emptyFunction = __webpack_require__(13);
      var warning = __webpack_require__(12);

      var didWarnForAddedNewProperty = false;
      var isProxySupported = typeof Proxy === 'function';

      var shouldBeReleasedProperties = [
        'dispatchConfig',
        '_targetInst',
        'nativeEvent',
        'isDefaultPrevented',
        'isPropagationStopped',
        '_dispatchListeners',
        '_dispatchInstances',
      ];

      /**
       * @interface Event
       * @see http://www.w3.org/TR/DOM-Level-3-Events/
       */
      var EventInterface = {
        type: null,
        target: null,
        // currentTarget is set when dispatching; no use in copying it here
        currentTarget: emptyFunction.thatReturnsNull,
        eventPhase: null,
        bubbles: null,
        cancelable: null,
        timeStamp: function (event) {
          return event.timeStamp || Date.now();
        },
        defaultPrevented: null,
        isTrusted: null,
      };

      /**
       * Synthetic events are dispatched by event plugins, typically in response to a
       * top-level event delegation handler.
       *
       * These systems should generally use pooling to reduce the frequency of garbage
       * collection. The system should check `isPersistent` to determine whether the
       * event should be released into the pool after being dispatched. Users that
       * need a persisted event should invoke `persist`.
       *
       * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
       * normalizing browser quirks. Subclasses do not necessarily have to implement a
       * DOM interface; custom application-specific events can also subclass this.
       *
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {*} targetInst Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @param {DOMEventTarget} nativeEventTarget Target node.
       */
      function SyntheticEvent(
        dispatchConfig,
        targetInst,
        nativeEvent,
        nativeEventTarget,
      ) {
        if (true) {
          // these have a getter/setter for warnings
          delete this.nativeEvent;
          delete this.preventDefault;
          delete this.stopPropagation;
        }

        this.dispatchConfig = dispatchConfig;
        this._targetInst = targetInst;
        this.nativeEvent = nativeEvent;

        var Interface = this.constructor.Interface;
        for (var propName in Interface) {
          if (!Interface.hasOwnProperty(propName)) {
            continue;
          }
          if (true) {
            delete this[propName]; // this has a getter/setter for warnings
          }
          var normalize = Interface[propName];
          if (normalize) {
            this[propName] = normalize(nativeEvent);
          } else {
            if (propName === 'target') {
              this.target = nativeEventTarget;
            } else {
              this[propName] = nativeEvent[propName];
            }
          }
        }

        var defaultPrevented =
          nativeEvent.defaultPrevented != null
            ? nativeEvent.defaultPrevented
            : nativeEvent.returnValue === false;
        if (defaultPrevented) {
          this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
        } else {
          this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
        }
        this.isPropagationStopped = emptyFunction.thatReturnsFalse;
        return this;
      }

      _assign(SyntheticEvent.prototype, {
        preventDefault: function () {
          this.defaultPrevented = true;
          var event = this.nativeEvent;
          if (!event) {
            return;
          }

          if (event.preventDefault) {
            event.preventDefault();
          } else if (typeof event.returnValue !== 'unknown') {
            // eslint-disable-line valid-typeof
            event.returnValue = false;
          }
          this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
        },

        stopPropagation: function () {
          var event = this.nativeEvent;
          if (!event) {
            return;
          }

          if (event.stopPropagation) {
            event.stopPropagation();
          } else if (typeof event.cancelBubble !== 'unknown') {
            // eslint-disable-line valid-typeof
            // The ChangeEventPlugin registers a "propertychange" event for
            // IE. This event does not support bubbling or cancelling, and
            // any references to cancelBubble throw "Member not found".  A
            // typeof check of "unknown" circumvents this issue (and is also
            // IE specific).
            event.cancelBubble = true;
          }

          this.isPropagationStopped = emptyFunction.thatReturnsTrue;
        },

        /**
         * We release all dispatched `SyntheticEvent`s after each event loop, adding
         * them back into the pool. This allows a way to hold onto a reference that
         * won't be added back into the pool.
         */
        persist: function () {
          this.isPersistent = emptyFunction.thatReturnsTrue;
        },

        /**
         * Checks if this event should be released back into the pool.
         *
         * @return {boolean} True if this should not be released, false otherwise.
         */
        isPersistent: emptyFunction.thatReturnsFalse,

        /**
         * `PooledClass` looks for `destructor` on each instance it releases.
         */
        destructor: function () {
          var Interface = this.constructor.Interface;
          for (var propName in Interface) {
            if (true) {
              Object.defineProperty(
                this,
                propName,
                getPooledWarningPropertyDefinition(
                  propName,
                  Interface[propName],
                ),
              );
            } else {
              this[propName] = null;
            }
          }
          for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
            this[shouldBeReleasedProperties[i]] = null;
          }
          if (true) {
            Object.defineProperty(
              this,
              'nativeEvent',
              getPooledWarningPropertyDefinition('nativeEvent', null),
            );
            Object.defineProperty(
              this,
              'preventDefault',
              getPooledWarningPropertyDefinition(
                'preventDefault',
                emptyFunction,
              ),
            );
            Object.defineProperty(
              this,
              'stopPropagation',
              getPooledWarningPropertyDefinition(
                'stopPropagation',
                emptyFunction,
              ),
            );
          }
        },
      });

      SyntheticEvent.Interface = EventInterface;

      if (true) {
        if (isProxySupported) {
          /*eslint-disable no-func-assign */
          SyntheticEvent = new Proxy(SyntheticEvent, {
            construct: function (target, args) {
              return this.apply(target, Object.create(target.prototype), args);
            },
            apply: function (constructor, that, args) {
              return new Proxy(constructor.apply(that, args), {
                set: function (target, prop, value) {
                  if (
                    prop !== 'isPersistent' &&
                    !target.constructor.Interface.hasOwnProperty(prop) &&
                    shouldBeReleasedProperties.indexOf(prop) === -1
                  ) {
                    true
                      ? warning(
                          didWarnForAddedNewProperty || target.isPersistent(),
                          "This synthetic event is reused for performance reasons. If you're " +
                            "seeing this, you're adding a new property in the synthetic event object. " +
                            'The property is never released. See ' +
                            'https://fb.me/react-event-pooling for more information.',
                        )
                      : void 0;
                    didWarnForAddedNewProperty = true;
                  }
                  target[prop] = value;
                  return true;
                },
              });
            },
          });
          /*eslint-enable no-func-assign */
        }
      }
      /**
       * Helper to reduce boilerplate when creating subclasses.
       *
       * @param {function} Class
       * @param {?object} Interface
       */
      SyntheticEvent.augmentClass = function (Class, Interface) {
        var Super = this;

        var E = function () {};
        E.prototype = Super.prototype;
        var prototype = new E();

        _assign(prototype, Class.prototype);
        Class.prototype = prototype;
        Class.prototype.constructor = Class;

        Class.Interface = _assign({}, Super.Interface, Interface);
        Class.augmentClass = Super.augmentClass;

        PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
      };

      PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

      module.exports = SyntheticEvent;

      /**
       * Helper to nullify syntheticEvent instance properties when destructing
       *
       * @param {object} SyntheticEvent
       * @param {String} propName
       * @return {object} defineProperty object
       */
      function getPooledWarningPropertyDefinition(propName, getVal) {
        var isFunction = typeof getVal === 'function';
        return {
          configurable: true,
          set: set,
          get: get,
        };

        function set(val) {
          var action = isFunction
            ? 'setting the method'
            : 'setting the property';
          warn(action, 'This is effectively a no-op');
          return val;
        }

        function get() {
          var action = isFunction
            ? 'accessing the method'
            : 'accessing the property';
          var result = isFunction
            ? 'This is a no-op function'
            : 'This is set to null';
          warn(action, result);
          return getVal;
        }

        function warn(action, result) {
          var warningCondition = false;
          true
            ? warning(
                warningCondition,
                "This synthetic event is reused for performance reasons. If you're seeing this, " +
                  "you're %s `%s` on a released/nullified synthetic event. %s. " +
                  'If you must keep the original synthetic event around, use event.persist(). ' +
                  'See https://fb.me/react-event-pooling for more information.',
                action,
                propName,
                result,
              )
            : void 0;
        }
      }

      /***/
    },
    /* 150 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SyntheticInputEvent
       */

      'use strict';

      var SyntheticEvent = __webpack_require__(149);

      /**
       * @interface Event
       * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
       *      /#events-inputevents
       */
      var InputEventInterface = {
        data: null,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticInputEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget,
      ) {
        return SyntheticEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget,
        );
      }

      SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

      module.exports = SyntheticInputEvent;

      /***/
    },
    /* 151 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ChangeEventPlugin
       */

      'use strict';

      var EventConstants = __webpack_require__(137);
      var EventPluginHub = __webpack_require__(139);
      var EventPropagators = __webpack_require__(138);
      var ExecutionEnvironment = __webpack_require__(145);
      var ReactDOMComponentTree = __webpack_require__(132);
      var ReactUpdates = __webpack_require__(152);
      var SyntheticEvent = __webpack_require__(149);

      var getEventTarget = __webpack_require__(166);
      var isEventSupported = __webpack_require__(167);
      var isTextInputElement = __webpack_require__(168);
      var keyOf = __webpack_require__(26);

      var topLevelTypes = EventConstants.topLevelTypes;

      var eventTypes = {
        change: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onChange: null }),
            captured: keyOf({ onChangeCapture: null }),
          },
          dependencies: [
            topLevelTypes.topBlur,
            topLevelTypes.topChange,
            topLevelTypes.topClick,
            topLevelTypes.topFocus,
            topLevelTypes.topInput,
            topLevelTypes.topKeyDown,
            topLevelTypes.topKeyUp,
            topLevelTypes.topSelectionChange,
          ],
        },
      };

      /**
       * For IE shims
       */
      var activeElement = null;
      var activeElementInst = null;
      var activeElementValue = null;
      var activeElementValueProp = null;

      /**
       * SECTION: handle `change` event
       */
      function shouldUseChangeEvent(elem) {
        var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
        return (
          nodeName === 'select' ||
          (nodeName === 'input' && elem.type === 'file')
        );
      }

      var doesChangeEventBubble = false;
      if (ExecutionEnvironment.canUseDOM) {
        // See `handleChange` comment below
        doesChangeEventBubble =
          isEventSupported('change') &&
          (!document.documentMode || document.documentMode > 8);
      }

      function manualDispatchChangeEvent(nativeEvent) {
        var event = SyntheticEvent.getPooled(
          eventTypes.change,
          activeElementInst,
          nativeEvent,
          getEventTarget(nativeEvent),
        );
        EventPropagators.accumulateTwoPhaseDispatches(event);

        // If change and propertychange bubbled, we'd just bind to it like all the
        // other events and have it go through ReactBrowserEventEmitter. Since it
        // doesn't, we manually listen for the events and so we have to enqueue and
        // process the abstract event manually.
        //
        // Batching is necessary here in order to ensure that all event handlers run
        // before the next rerender (including event handlers attached to ancestor
        // elements instead of directly on the input). Without this, controlled
        // components don't work properly in conjunction with event bubbling because
        // the component is rerendered and the value reverted before all the event
        // handlers can run. See https://github.com/facebook/react/issues/708.
        ReactUpdates.batchedUpdates(runEventInBatch, event);
      }

      function runEventInBatch(event) {
        EventPluginHub.enqueueEvents(event);
        EventPluginHub.processEventQueue(false);
      }

      function startWatchingForChangeEventIE8(target, targetInst) {
        activeElement = target;
        activeElementInst = targetInst;
        activeElement.attachEvent('onchange', manualDispatchChangeEvent);
      }

      function stopWatchingForChangeEventIE8() {
        if (!activeElement) {
          return;
        }
        activeElement.detachEvent('onchange', manualDispatchChangeEvent);
        activeElement = null;
        activeElementInst = null;
      }

      function getTargetInstForChangeEvent(topLevelType, targetInst) {
        if (topLevelType === topLevelTypes.topChange) {
          return targetInst;
        }
      }
      function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
        if (topLevelType === topLevelTypes.topFocus) {
          // stopWatching() should be a noop here but we call it just in case we
          // missed a blur event somehow.
          stopWatchingForChangeEventIE8();
          startWatchingForChangeEventIE8(target, targetInst);
        } else if (topLevelType === topLevelTypes.topBlur) {
          stopWatchingForChangeEventIE8();
        }
      }

      /**
       * SECTION: handle `input` event
       */
      var isInputEventSupported = false;
      if (ExecutionEnvironment.canUseDOM) {
        // IE9 claims to support the input event but fails to trigger it when
        // deleting text, so we ignore its input events.
        // IE10+ fire input events to often, such when a placeholder
        // changes or when an input with a placeholder is focused.
        isInputEventSupported =
          isEventSupported('input') &&
          (!document.documentMode || document.documentMode > 11);
      }

      /**
       * (For IE <=11) Replacement getter/setter for the `value` property that gets
       * set on the active element.
       */
      var newValueProp = {
        get: function () {
          return activeElementValueProp.get.call(this);
        },
        set: function (val) {
          // Cast to a string so we can do equality checks.
          activeElementValue = '' + val;
          activeElementValueProp.set.call(this, val);
        },
      };

      /**
       * (For IE <=11) Starts tracking propertychange events on the passed-in element
       * and override the value property so that we can distinguish user events from
       * value changes in JS.
       */
      function startWatchingForValueChange(target, targetInst) {
        activeElement = target;
        activeElementInst = targetInst;
        activeElementValue = target.value;
        activeElementValueProp = Object.getOwnPropertyDescriptor(
          target.constructor.prototype,
          'value',
        );

        // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
        // on DOM elements
        Object.defineProperty(activeElement, 'value', newValueProp);
        if (activeElement.attachEvent) {
          activeElement.attachEvent('onpropertychange', handlePropertyChange);
        } else {
          activeElement.addEventListener(
            'propertychange',
            handlePropertyChange,
            false,
          );
        }
      }

      /**
       * (For IE <=11) Removes the event listeners from the currently-tracked element,
       * if any exists.
       */
      function stopWatchingForValueChange() {
        if (!activeElement) {
          return;
        }

        // delete restores the original property definition
        delete activeElement.value;

        if (activeElement.detachEvent) {
          activeElement.detachEvent('onpropertychange', handlePropertyChange);
        } else {
          activeElement.removeEventListener(
            'propertychange',
            handlePropertyChange,
            false,
          );
        }

        activeElement = null;
        activeElementInst = null;
        activeElementValue = null;
        activeElementValueProp = null;
      }

      /**
       * (For IE <=11) Handles a propertychange event, sending a `change` event if
       * the value of the active element has changed.
       */
      function handlePropertyChange(nativeEvent) {
        if (nativeEvent.propertyName !== 'value') {
          return;
        }
        var value = nativeEvent.srcElement.value;
        if (value === activeElementValue) {
          return;
        }
        activeElementValue = value;

        manualDispatchChangeEvent(nativeEvent);
      }

      /**
       * If a `change` event should be fired, returns the target's ID.
       */
      function getTargetInstForInputEvent(topLevelType, targetInst) {
        if (topLevelType === topLevelTypes.topInput) {
          // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
          // what we want so fall through here and trigger an abstract event
          return targetInst;
        }
      }

      function handleEventsForInputEventIE(topLevelType, target, targetInst) {
        if (topLevelType === topLevelTypes.topFocus) {
          // In IE8, we can capture almost all .value changes by adding a
          // propertychange handler and looking for events with propertyName
          // equal to 'value'
          // In IE9-11, propertychange fires for most input events but is buggy and
          // doesn't fire when text is deleted, but conveniently, selectionchange
          // appears to fire in all of the remaining cases so we catch those and
          // forward the event if the value has changed
          // In either case, we don't want to call the event handler if the value
          // is changed from JS so we redefine a setter for `.value` that updates
          // our activeElementValue variable, allowing us to ignore those changes
          //
          // stopWatching() should be a noop here but we call it just in case we
          // missed a blur event somehow.
          stopWatchingForValueChange();
          startWatchingForValueChange(target, targetInst);
        } else if (topLevelType === topLevelTypes.topBlur) {
          stopWatchingForValueChange();
        }
      }

      // For IE8 and IE9.
      function getTargetInstForInputEventIE(topLevelType, targetInst) {
        if (
          topLevelType === topLevelTypes.topSelectionChange ||
          topLevelType === topLevelTypes.topKeyUp ||
          topLevelType === topLevelTypes.topKeyDown
        ) {
          // On the selectionchange event, the target is just document which isn't
          // helpful for us so just check activeElement instead.
          //
          // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
          // propertychange on the first input event after setting `value` from a
          // script and fires only keydown, keypress, keyup. Catching keyup usually
          // gets it and catching keydown lets us fire an event for the first
          // keystroke if user does a key repeat (it'll be a little delayed: right
          // before the second keystroke). Other input methods (e.g., paste) seem to
          // fire selectionchange normally.
          if (activeElement && activeElement.value !== activeElementValue) {
            activeElementValue = activeElement.value;
            return activeElementInst;
          }
        }
      }

      /**
       * SECTION: handle `click` event
       */
      function shouldUseClickEvent(elem) {
        // Use the `click` event to detect changes to checkbox and radio inputs.
        // This approach works across all browsers, whereas `change` does not fire
        // until `blur` in IE8.
        return (
          elem.nodeName &&
          elem.nodeName.toLowerCase() === 'input' &&
          (elem.type === 'checkbox' || elem.type === 'radio')
        );
      }

      function getTargetInstForClickEvent(topLevelType, targetInst) {
        if (topLevelType === topLevelTypes.topClick) {
          return targetInst;
        }
      }

      /**
       * This plugin creates an `onChange` event that normalizes change events
       * across form elements. This event fires at a time when it's possible to
       * change the element's value without seeing a flicker.
       *
       * Supported elements are:
       * - input (see `isTextInputElement`)
       * - textarea
       * - select
       */
      var ChangeEventPlugin = {
        eventTypes: eventTypes,

        extractEvents: function (
          topLevelType,
          targetInst,
          nativeEvent,
          nativeEventTarget,
        ) {
          var targetNode = targetInst
            ? ReactDOMComponentTree.getNodeFromInstance(targetInst)
            : window;

          var getTargetInstFunc, handleEventFunc;
          if (shouldUseChangeEvent(targetNode)) {
            if (doesChangeEventBubble) {
              getTargetInstFunc = getTargetInstForChangeEvent;
            } else {
              handleEventFunc = handleEventsForChangeEventIE8;
            }
          } else if (isTextInputElement(targetNode)) {
            if (isInputEventSupported) {
              getTargetInstFunc = getTargetInstForInputEvent;
            } else {
              getTargetInstFunc = getTargetInstForInputEventIE;
              handleEventFunc = handleEventsForInputEventIE;
            }
          } else if (shouldUseClickEvent(targetNode)) {
            getTargetInstFunc = getTargetInstForClickEvent;
          }

          if (getTargetInstFunc) {
            var inst = getTargetInstFunc(topLevelType, targetInst);
            if (inst) {
              var event = SyntheticEvent.getPooled(
                eventTypes.change,
                inst,
                nativeEvent,
                nativeEventTarget,
              );
              event.type = 'change';
              EventPropagators.accumulateTwoPhaseDispatches(event);
              return event;
            }
          }

          if (handleEventFunc) {
            handleEventFunc(topLevelType, targetNode, targetInst);
          }
        },
      };

      module.exports = ChangeEventPlugin;

      /***/
    },
    /* 152 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactUpdates
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8),
        _assign = __webpack_require__(5);

      var CallbackQueue = __webpack_require__(153);
      var PooledClass = __webpack_require__(7);
      var ReactFeatureFlags = __webpack_require__(154);
      var ReactReconciler = __webpack_require__(155);
      var Transaction = __webpack_require__(165);

      var invariant = __webpack_require__(9);

      var dirtyComponents = [];
      var updateBatchNumber = 0;
      var asapCallbackQueue = CallbackQueue.getPooled();
      var asapEnqueued = false;

      var batchingStrategy = null;

      function ensureInjected() {
        !(ReactUpdates.ReactReconcileTransaction && batchingStrategy)
          ? true
            ? invariant(
                false,
                'ReactUpdates: must inject a reconcile transaction class and batching strategy',
              )
            : _prodInvariant('123')
          : void 0;
      }

      var NESTED_UPDATES = {
        initialize: function () {
          this.dirtyComponentsLength = dirtyComponents.length;
        },
        close: function () {
          if (this.dirtyComponentsLength !== dirtyComponents.length) {
            // Additional updates were enqueued by componentDidUpdate handlers or
            // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
            // these new updates so that if A's componentDidUpdate calls setState on
            // B, B will update before the callback A's updater provided when calling
            // setState.
            dirtyComponents.splice(0, this.dirtyComponentsLength);
            flushBatchedUpdates();
          } else {
            dirtyComponents.length = 0;
          }
        },
      };

      var UPDATE_QUEUEING = {
        initialize: function () {
          this.callbackQueue.reset();
        },
        close: function () {
          this.callbackQueue.notifyAll();
        },
      };

      var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

      function ReactUpdatesFlushTransaction() {
        this.reinitializeTransaction();
        this.dirtyComponentsLength = null;
        this.callbackQueue = CallbackQueue.getPooled();
        this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
          /* useCreateElement */ true,
        );
      }

      _assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
        getTransactionWrappers: function () {
          return TRANSACTION_WRAPPERS;
        },

        destructor: function () {
          this.dirtyComponentsLength = null;
          CallbackQueue.release(this.callbackQueue);
          this.callbackQueue = null;
          ReactUpdates.ReactReconcileTransaction.release(
            this.reconcileTransaction,
          );
          this.reconcileTransaction = null;
        },

        perform: function (method, scope, a) {
          // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
          // with this transaction's wrappers around it.
          return Transaction.Mixin.perform.call(
            this,
            this.reconcileTransaction.perform,
            this.reconcileTransaction,
            method,
            scope,
            a,
          );
        },
      });

      PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

      function batchedUpdates(callback, a, b, c, d, e) {
        ensureInjected();
        batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
      }

      /**
       * Array comparator for ReactComponents by mount ordering.
       *
       * @param {ReactComponent} c1 first component you're comparing
       * @param {ReactComponent} c2 second component you're comparing
       * @return {number} Return value usable by Array.prototype.sort().
       */
      function mountOrderComparator(c1, c2) {
        return c1._mountOrder - c2._mountOrder;
      }

      function runBatchedUpdates(transaction) {
        var len = transaction.dirtyComponentsLength;
        !(len === dirtyComponents.length)
          ? true
            ? invariant(
                false,
                "Expected flush transaction's stored dirty-components length (%s) to match dirty-components array length (%s).",
                len,
                dirtyComponents.length,
              )
            : _prodInvariant('124', len, dirtyComponents.length)
          : void 0;

        // Since reconciling a component higher in the owner hierarchy usually (not
        // always -- see shouldComponentUpdate()) will reconcile children, reconcile
        // them before their children by sorting the array.
        dirtyComponents.sort(mountOrderComparator);

        // Any updates enqueued while reconciling must be performed after this entire
        // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
        // C, B could update twice in a single batch if C's render enqueues an update
        // to B (since B would have already updated, we should skip it, and the only
        // way we can know to do so is by checking the batch counter).
        updateBatchNumber++;

        for (var i = 0; i < len; i++) {
          // If a component is unmounted before pending changes apply, it will still
          // be here, but we assume that it has cleared its _pendingCallbacks and
          // that performUpdateIfNecessary is a noop.
          var component = dirtyComponents[i];

          // If performUpdateIfNecessary happens to enqueue any new updates, we
          // shouldn't execute the callbacks until the next render happens, so
          // stash the callbacks first
          var callbacks = component._pendingCallbacks;
          component._pendingCallbacks = null;

          var markerName;
          if (ReactFeatureFlags.logTopLevelRenders) {
            var namedComponent = component;
            // Duck type TopLevelWrapper. This is probably always true.
            if (
              component._currentElement.props ===
              component._renderedComponent._currentElement
            ) {
              namedComponent = component._renderedComponent;
            }
            markerName = 'React update: ' + namedComponent.getName();
            console.time(markerName);
          }

          ReactReconciler.performUpdateIfNecessary(
            component,
            transaction.reconcileTransaction,
            updateBatchNumber,
          );

          if (markerName) {
            console.timeEnd(markerName);
          }

          if (callbacks) {
            for (var j = 0; j < callbacks.length; j++) {
              transaction.callbackQueue.enqueue(
                callbacks[j],
                component.getPublicInstance(),
              );
            }
          }
        }
      }

      var flushBatchedUpdates = function () {
        // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
        // array and perform any updates enqueued by mount-ready handlers (i.e.,
        // componentDidUpdate) but we need to check here too in order to catch
        // updates enqueued by setState callbacks and asap calls.
        while (dirtyComponents.length || asapEnqueued) {
          if (dirtyComponents.length) {
            var transaction = ReactUpdatesFlushTransaction.getPooled();
            transaction.perform(runBatchedUpdates, null, transaction);
            ReactUpdatesFlushTransaction.release(transaction);
          }

          if (asapEnqueued) {
            asapEnqueued = false;
            var queue = asapCallbackQueue;
            asapCallbackQueue = CallbackQueue.getPooled();
            queue.notifyAll();
            CallbackQueue.release(queue);
          }
        }
      };

      /**
       * Mark a component as needing a rerender, adding an optional callback to a
       * list of functions which will be executed once the rerender occurs.
       */
      function enqueueUpdate(component) {
        ensureInjected();

        // Various parts of our code (such as ReactCompositeComponent's
        // _renderValidatedComponent) assume that calls to render aren't nested;
        // verify that that's the case. (This is called by each top-level update
        // function, like setState, forceUpdate, etc.; creation and
        // destruction of top-level components is guarded in ReactMount.)

        if (!batchingStrategy.isBatchingUpdates) {
          batchingStrategy.batchedUpdates(enqueueUpdate, component);
          return;
        }

        dirtyComponents.push(component);
        if (component._updateBatchNumber == null) {
          component._updateBatchNumber = updateBatchNumber + 1;
        }
      }

      /**
       * Enqueue a callback to be run at the end of the current batching cycle. Throws
       * if no updates are currently being performed.
       */
      function asap(callback, context) {
        !batchingStrategy.isBatchingUpdates
          ? true
            ? invariant(
                false,
                "ReactUpdates.asap: Can't enqueue an asap callback in a context whereupdates are not being batched.",
              )
            : _prodInvariant('125')
          : void 0;
        asapCallbackQueue.enqueue(callback, context);
        asapEnqueued = true;
      }

      var ReactUpdatesInjection = {
        injectReconcileTransaction: function (ReconcileTransaction) {
          !ReconcileTransaction
            ? true
              ? invariant(
                  false,
                  'ReactUpdates: must provide a reconcile transaction class',
                )
              : _prodInvariant('126')
            : void 0;
          ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
        },

        injectBatchingStrategy: function (_batchingStrategy) {
          !_batchingStrategy
            ? true
              ? invariant(
                  false,
                  'ReactUpdates: must provide a batching strategy',
                )
              : _prodInvariant('127')
            : void 0;
          !(typeof _batchingStrategy.batchedUpdates === 'function')
            ? true
              ? invariant(
                  false,
                  'ReactUpdates: must provide a batchedUpdates() function',
                )
              : _prodInvariant('128')
            : void 0;
          !(typeof _batchingStrategy.isBatchingUpdates === 'boolean')
            ? true
              ? invariant(
                  false,
                  'ReactUpdates: must provide an isBatchingUpdates boolean attribute',
                )
              : _prodInvariant('129')
            : void 0;
          batchingStrategy = _batchingStrategy;
        },
      };

      var ReactUpdates = {
        /**
         * React references `ReactReconcileTransaction` using this property in order
         * to allow dependency injection.
         *
         * @internal
         */
        ReactReconcileTransaction: null,

        batchedUpdates: batchedUpdates,
        enqueueUpdate: enqueueUpdate,
        flushBatchedUpdates: flushBatchedUpdates,
        injection: ReactUpdatesInjection,
        asap: asap,
      };

      module.exports = ReactUpdates;

      /***/
    },
    /* 153 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule CallbackQueue
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8),
        _assign = __webpack_require__(5);

      var PooledClass = __webpack_require__(7);

      var invariant = __webpack_require__(9);

      /**
       * A specialized pseudo-event module to help keep track of components waiting to
       * be notified when their DOM representations are available for use.
       *
       * This implements `PooledClass`, so you should never need to instantiate this.
       * Instead, use `CallbackQueue.getPooled()`.
       *
       * @class ReactMountReady
       * @implements PooledClass
       * @internal
       */
      function CallbackQueue() {
        this._callbacks = null;
        this._contexts = null;
      }

      _assign(CallbackQueue.prototype, {
        /**
         * Enqueues a callback to be invoked when `notifyAll` is invoked.
         *
         * @param {function} callback Invoked when `notifyAll` is invoked.
         * @param {?object} context Context to call `callback` with.
         * @internal
         */
        enqueue: function (callback, context) {
          this._callbacks = this._callbacks || [];
          this._contexts = this._contexts || [];
          this._callbacks.push(callback);
          this._contexts.push(context);
        },

        /**
         * Invokes all enqueued callbacks and clears the queue. This is invoked after
         * the DOM representation of a component has been created or updated.
         *
         * @internal
         */
        notifyAll: function () {
          var callbacks = this._callbacks;
          var contexts = this._contexts;
          if (callbacks) {
            !(callbacks.length === contexts.length)
              ? true
                ? invariant(
                    false,
                    'Mismatched list of contexts in callback queue',
                  )
                : _prodInvariant('24')
              : void 0;
            this._callbacks = null;
            this._contexts = null;
            for (var i = 0; i < callbacks.length; i++) {
              callbacks[i].call(contexts[i]);
            }
            callbacks.length = 0;
            contexts.length = 0;
          }
        },

        checkpoint: function () {
          return this._callbacks ? this._callbacks.length : 0;
        },

        rollback: function (len) {
          if (this._callbacks) {
            this._callbacks.length = len;
            this._contexts.length = len;
          }
        },

        /**
         * Resets the internal queue.
         *
         * @internal
         */
        reset: function () {
          this._callbacks = null;
          this._contexts = null;
        },

        /**
         * `PooledClass` looks for this.
         */
        destructor: function () {
          this.reset();
        },
      });

      PooledClass.addPoolingTo(CallbackQueue);

      module.exports = CallbackQueue;

      /***/
    },
    /* 154 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactFeatureFlags
       *
       */

      'use strict';

      var ReactFeatureFlags = {
        // When true, call console.time() before and .timeEnd() after each top-level
        // render (both initial renders and updates). Useful when looking at prod-mode
        // timeline profiles in Chrome, for example.
        logTopLevelRenders: false,
      };

      module.exports = ReactFeatureFlags;

      /***/
    },
    /* 155 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactReconciler
       */

      'use strict';

      var ReactRef = __webpack_require__(156);
      var ReactInstrumentation = __webpack_require__(158);

      var warning = __webpack_require__(12);

      /**
       * Helper to call ReactRef.attachRefs with this composite component, split out
       * to avoid allocations in the transaction mount-ready queue.
       */
      function attachRefs() {
        ReactRef.attachRefs(this, this._currentElement);
      }

      var ReactReconciler = {
        /**
         * Initializes the component, renders markup, and registers event listeners.
         *
         * @param {ReactComponent} internalInstance
         * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
         * @param {?object} the containing host component instance
         * @param {?object} info about the host container
         * @return {?string} Rendered markup to be inserted into the DOM.
         * @final
         * @internal
         */
        mountComponent: function (
          internalInstance,
          transaction,
          hostParent,
          hostContainerInfo,
          context,
          parentDebugID, // 0 in production and for roots
        ) {
          if (true) {
            if (internalInstance._debugID !== 0) {
              ReactInstrumentation.debugTool.onBeforeMountComponent(
                internalInstance._debugID,
                internalInstance._currentElement,
                parentDebugID,
              );
            }
          }
          var markup = internalInstance.mountComponent(
            transaction,
            hostParent,
            hostContainerInfo,
            context,
            parentDebugID,
          );
          if (
            internalInstance._currentElement &&
            internalInstance._currentElement.ref != null
          ) {
            transaction
              .getReactMountReady()
              .enqueue(attachRefs, internalInstance);
          }
          if (true) {
            if (internalInstance._debugID !== 0) {
              ReactInstrumentation.debugTool.onMountComponent(
                internalInstance._debugID,
              );
            }
          }
          return markup;
        },

        /**
         * Returns a value that can be passed to
         * ReactComponentEnvironment.replaceNodeWithMarkup.
         */
        getHostNode: function (internalInstance) {
          return internalInstance.getHostNode();
        },

        /**
         * Releases any resources allocated by `mountComponent`.
         *
         * @final
         * @internal
         */
        unmountComponent: function (internalInstance, safely) {
          if (true) {
            if (internalInstance._debugID !== 0) {
              ReactInstrumentation.debugTool.onBeforeUnmountComponent(
                internalInstance._debugID,
              );
            }
          }
          ReactRef.detachRefs(
            internalInstance,
            internalInstance._currentElement,
          );
          internalInstance.unmountComponent(safely);
          if (true) {
            if (internalInstance._debugID !== 0) {
              ReactInstrumentation.debugTool.onUnmountComponent(
                internalInstance._debugID,
              );
            }
          }
        },

        /**
         * Update a component using a new element.
         *
         * @param {ReactComponent} internalInstance
         * @param {ReactElement} nextElement
         * @param {ReactReconcileTransaction} transaction
         * @param {object} context
         * @internal
         */
        receiveComponent: function (
          internalInstance,
          nextElement,
          transaction,
          context,
        ) {
          var prevElement = internalInstance._currentElement;

          if (
            nextElement === prevElement &&
            context === internalInstance._context
          ) {
            // Since elements are immutable after the owner is rendered,
            // we can do a cheap identity compare here to determine if this is a
            // superfluous reconcile. It's possible for state to be mutable but such
            // change should trigger an update of the owner which would recreate
            // the element. We explicitly check for the existence of an owner since
            // it's possible for an element created outside a composite to be
            // deeply mutated and reused.

            // TODO: Bailing out early is just a perf optimization right?
            // TODO: Removing the return statement should affect correctness?
            return;
          }

          if (true) {
            if (internalInstance._debugID !== 0) {
              ReactInstrumentation.debugTool.onBeforeUpdateComponent(
                internalInstance._debugID,
                nextElement,
              );
            }
          }

          var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

          if (refsChanged) {
            ReactRef.detachRefs(internalInstance, prevElement);
          }

          internalInstance.receiveComponent(nextElement, transaction, context);

          if (
            refsChanged &&
            internalInstance._currentElement &&
            internalInstance._currentElement.ref != null
          ) {
            transaction
              .getReactMountReady()
              .enqueue(attachRefs, internalInstance);
          }

          if (true) {
            if (internalInstance._debugID !== 0) {
              ReactInstrumentation.debugTool.onUpdateComponent(
                internalInstance._debugID,
              );
            }
          }
        },

        /**
         * Flush any dirty changes in a component.
         *
         * @param {ReactComponent} internalInstance
         * @param {ReactReconcileTransaction} transaction
         * @internal
         */
        performUpdateIfNecessary: function (
          internalInstance,
          transaction,
          updateBatchNumber,
        ) {
          if (internalInstance._updateBatchNumber !== updateBatchNumber) {
            // The component's enqueued batch number should always be the current
            // batch or the following one.
            true
              ? warning(
                  internalInstance._updateBatchNumber == null ||
                    internalInstance._updateBatchNumber ===
                      updateBatchNumber + 1,
                  'performUpdateIfNecessary: Unexpected batch number (current %s, ' +
                    'pending %s)',
                  updateBatchNumber,
                  internalInstance._updateBatchNumber,
                )
              : void 0;
            return;
          }
          if (true) {
            if (internalInstance._debugID !== 0) {
              ReactInstrumentation.debugTool.onBeforeUpdateComponent(
                internalInstance._debugID,
                internalInstance._currentElement,
              );
            }
          }
          internalInstance.performUpdateIfNecessary(transaction);
          if (true) {
            if (internalInstance._debugID !== 0) {
              ReactInstrumentation.debugTool.onUpdateComponent(
                internalInstance._debugID,
              );
            }
          }
        },
      };

      module.exports = ReactReconciler;

      /***/
    },
    /* 156 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactRef
       */

      'use strict';

      var ReactOwner = __webpack_require__(157);

      var ReactRef = {};

      function attachRef(ref, component, owner) {
        if (typeof ref === 'function') {
          ref(component.getPublicInstance());
        } else {
          // Legacy ref
          ReactOwner.addComponentAsRefTo(component, ref, owner);
        }
      }

      function detachRef(ref, component, owner) {
        if (typeof ref === 'function') {
          ref(null);
        } else {
          // Legacy ref
          ReactOwner.removeComponentAsRefFrom(component, ref, owner);
        }
      }

      ReactRef.attachRefs = function (instance, element) {
        if (element === null || element === false) {
          return;
        }
        var ref = element.ref;
        if (ref != null) {
          attachRef(ref, instance, element._owner);
        }
      };

      ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
        // If either the owner or a `ref` has changed, make sure the newest owner
        // has stored a reference to `this`, and the previous owner (if different)
        // has forgotten the reference to `this`. We use the element instead
        // of the public this.props because the post processing cannot determine
        // a ref. The ref conceptually lives on the element.

        // TODO: Should this even be possible? The owner cannot change because
        // it's forbidden by shouldUpdateReactComponent. The ref can change
        // if you swap the keys of but not the refs. Reconsider where this check
        // is made. It probably belongs where the key checking and
        // instantiateReactComponent is done.

        var prevEmpty = prevElement === null || prevElement === false;
        var nextEmpty = nextElement === null || nextElement === false;

        return (
          // This has a few false positives w/r/t empty components.
          prevEmpty ||
          nextEmpty ||
          nextElement.ref !== prevElement.ref ||
          // If owner changes but we have an unchanged function ref, don't update refs
          (typeof nextElement.ref === 'string' &&
            nextElement._owner !== prevElement._owner)
        );
      };

      ReactRef.detachRefs = function (instance, element) {
        if (element === null || element === false) {
          return;
        }
        var ref = element.ref;
        if (ref != null) {
          detachRef(ref, instance, element._owner);
        }
      };

      module.exports = ReactRef;

      /***/
    },
    /* 157 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactOwner
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var invariant = __webpack_require__(9);

      /**
       * ReactOwners are capable of storing references to owned components.
       *
       * All components are capable of //being// referenced by owner components, but
       * only ReactOwner components are capable of //referencing// owned components.
       * The named reference is known as a "ref".
       *
       * Refs are available when mounted and updated during reconciliation.
       *
       *   var MyComponent = React.createClass({
       *     render: function() {
       *       return (
       *         <div onClick={this.handleClick}>
       *           <CustomComponent ref="custom" />
       *         </div>
       *       );
       *     },
       *     handleClick: function() {
       *       this.refs.custom.handleClick();
       *     },
       *     componentDidMount: function() {
       *       this.refs.custom.initialize();
       *     }
       *   });
       *
       * Refs should rarely be used. When refs are used, they should only be done to
       * control data that is not handled by React's data flow.
       *
       * @class ReactOwner
       */
      var ReactOwner = {
        /**
         * @param {?object} object
         * @return {boolean} True if `object` is a valid owner.
         * @final
         */
        isValidOwner: function (object) {
          return !!(
            object &&
            typeof object.attachRef === 'function' &&
            typeof object.detachRef === 'function'
          );
        },

        /**
         * Adds a component by ref to an owner component.
         *
         * @param {ReactComponent} component Component to reference.
         * @param {string} ref Name by which to refer to the component.
         * @param {ReactOwner} owner Component on which to record the ref.
         * @final
         * @internal
         */
        addComponentAsRefTo: function (component, ref, owner) {
          !ReactOwner.isValidOwner(owner)
            ? true
              ? invariant(
                  false,
                  "addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component's `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).",
                )
              : _prodInvariant('119')
            : void 0;
          owner.attachRef(ref, component);
        },

        /**
         * Removes a component by ref from an owner component.
         *
         * @param {ReactComponent} component Component to dereference.
         * @param {string} ref Name of the ref to remove.
         * @param {ReactOwner} owner Component on which the ref is recorded.
         * @final
         * @internal
         */
        removeComponentAsRefFrom: function (component, ref, owner) {
          !ReactOwner.isValidOwner(owner)
            ? true
              ? invariant(
                  false,
                  "removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component's `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).",
                )
              : _prodInvariant('120')
            : void 0;
          var ownerPublicInstance = owner.getPublicInstance();
          // Check that `component`'s owner is still alive and that `component` is still the current ref
          // because we do not want to detach the ref if another component stole it.
          if (
            ownerPublicInstance &&
            ownerPublicInstance.refs[ref] === component.getPublicInstance()
          ) {
            owner.detachRef(ref);
          }
        },
      };

      module.exports = ReactOwner;

      /***/
    },
    /* 158 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2016-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactInstrumentation
       */

      'use strict';

      var debugTool = null;

      if (true) {
        var ReactDebugTool = __webpack_require__(159);
        debugTool = ReactDebugTool;
      }

      module.exports = { debugTool: debugTool };

      /***/
    },
    /* 159 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2016-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDebugTool
       */

      'use strict';

      var ReactInvalidSetStateWarningHook = __webpack_require__(160);
      var ReactHostOperationHistoryHook = __webpack_require__(161);
      var ReactComponentTreeHook = __webpack_require__(29);
      var ReactChildrenMutationWarningHook = __webpack_require__(162);
      var ExecutionEnvironment = __webpack_require__(145);

      var performanceNow = __webpack_require__(163);
      var warning = __webpack_require__(12);

      var hooks = [];
      var didHookThrowForEvent = {};

      function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
        try {
          fn.call(context, arg1, arg2, arg3, arg4, arg5);
        } catch (e) {
          true
            ? warning(
                didHookThrowForEvent[event],
                'Exception thrown by hook while handling %s: %s',
                event,
                e + '\n' + e.stack,
              )
            : void 0;
          didHookThrowForEvent[event] = true;
        }
      }

      function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
        for (var i = 0; i < hooks.length; i++) {
          var hook = hooks[i];
          var fn = hook[event];
          if (fn) {
            callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
          }
        }
      }

      var isProfiling = false;
      var flushHistory = [];
      var lifeCycleTimerStack = [];
      var currentFlushNesting = 0;
      var currentFlushMeasurements = null;
      var currentFlushStartTime = null;
      var currentTimerDebugID = null;
      var currentTimerStartTime = null;
      var currentTimerNestedFlushDuration = null;
      var currentTimerType = null;

      var lifeCycleTimerHasWarned = false;

      function clearHistory() {
        ReactComponentTreeHook.purgeUnmountedComponents();
        ReactHostOperationHistoryHook.clearHistory();
      }

      function getTreeSnapshot(registeredIDs) {
        return registeredIDs.reduce(function (tree, id) {
          var ownerID = ReactComponentTreeHook.getOwnerID(id);
          var parentID = ReactComponentTreeHook.getParentID(id);
          tree[id] = {
            displayName: ReactComponentTreeHook.getDisplayName(id),
            text: ReactComponentTreeHook.getText(id),
            updateCount: ReactComponentTreeHook.getUpdateCount(id),
            childIDs: ReactComponentTreeHook.getChildIDs(id),
            // Text nodes don't have owners but this is close enough.
            ownerID: ownerID || ReactComponentTreeHook.getOwnerID(parentID),
            parentID: parentID,
          };
          return tree;
        }, {});
      }

      function resetMeasurements() {
        var previousStartTime = currentFlushStartTime;
        var previousMeasurements = currentFlushMeasurements || [];
        var previousOperations = ReactHostOperationHistoryHook.getHistory();

        if (currentFlushNesting === 0) {
          currentFlushStartTime = null;
          currentFlushMeasurements = null;
          clearHistory();
          return;
        }

        if (previousMeasurements.length || previousOperations.length) {
          var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
          flushHistory.push({
            duration: performanceNow() - previousStartTime,
            measurements: previousMeasurements || [],
            operations: previousOperations || [],
            treeSnapshot: getTreeSnapshot(registeredIDs),
          });
        }

        clearHistory();
        currentFlushStartTime = performanceNow();
        currentFlushMeasurements = [];
      }

      function checkDebugID(debugID) {
        var allowRoot =
          arguments.length <= 1 || arguments[1] === undefined
            ? false
            : arguments[1];

        if (allowRoot && debugID === 0) {
          return;
        }
        if (!debugID) {
          true
            ? warning(false, 'ReactDebugTool: debugID may not be empty.')
            : void 0;
        }
      }

      function beginLifeCycleTimer(debugID, timerType) {
        if (currentFlushNesting === 0) {
          return;
        }
        if (currentTimerType && !lifeCycleTimerHasWarned) {
          true
            ? warning(
                false,
                'There is an internal error in the React performance measurement code. ' +
                  'Did not expect %s timer to start while %s timer is still in ' +
                  'progress for %s instance.',
                timerType,
                currentTimerType || 'no',
                debugID === currentTimerDebugID ? 'the same' : 'another',
              )
            : void 0;
          lifeCycleTimerHasWarned = true;
        }
        currentTimerStartTime = performanceNow();
        currentTimerNestedFlushDuration = 0;
        currentTimerDebugID = debugID;
        currentTimerType = timerType;
      }

      function endLifeCycleTimer(debugID, timerType) {
        if (currentFlushNesting === 0) {
          return;
        }
        if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
          true
            ? warning(
                false,
                'There is an internal error in the React performance measurement code. ' +
                  'We did not expect %s timer to stop while %s timer is still in ' +
                  'progress for %s instance. Please report this as a bug in React.',
                timerType,
                currentTimerType || 'no',
                debugID === currentTimerDebugID ? 'the same' : 'another',
              )
            : void 0;
          lifeCycleTimerHasWarned = true;
        }
        if (isProfiling) {
          currentFlushMeasurements.push({
            timerType: timerType,
            instanceID: debugID,
            duration:
              performanceNow() -
              currentTimerStartTime -
              currentTimerNestedFlushDuration,
          });
        }
        currentTimerStartTime = null;
        currentTimerNestedFlushDuration = null;
        currentTimerDebugID = null;
        currentTimerType = null;
      }

      function pauseCurrentLifeCycleTimer() {
        var currentTimer = {
          startTime: currentTimerStartTime,
          nestedFlushStartTime: performanceNow(),
          debugID: currentTimerDebugID,
          timerType: currentTimerType,
        };
        lifeCycleTimerStack.push(currentTimer);
        currentTimerStartTime = null;
        currentTimerNestedFlushDuration = null;
        currentTimerDebugID = null;
        currentTimerType = null;
      }

      function resumeCurrentLifeCycleTimer() {
        var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop();

        var startTime = _lifeCycleTimerStack$.startTime;
        var nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime;
        var debugID = _lifeCycleTimerStack$.debugID;
        var timerType = _lifeCycleTimerStack$.timerType;

        var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
        currentTimerStartTime = startTime;
        currentTimerNestedFlushDuration += nestedFlushDuration;
        currentTimerDebugID = debugID;
        currentTimerType = timerType;
      }

      var ReactDebugTool = {
        addHook: function (hook) {
          hooks.push(hook);
        },
        removeHook: function (hook) {
          for (var i = 0; i < hooks.length; i++) {
            if (hooks[i] === hook) {
              hooks.splice(i, 1);
              i--;
            }
          }
        },
        isProfiling: function () {
          return isProfiling;
        },
        beginProfiling: function () {
          if (isProfiling) {
            return;
          }

          isProfiling = true;
          flushHistory.length = 0;
          resetMeasurements();
          ReactDebugTool.addHook(ReactHostOperationHistoryHook);
        },
        endProfiling: function () {
          if (!isProfiling) {
            return;
          }

          isProfiling = false;
          resetMeasurements();
          ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
        },
        getFlushHistory: function () {
          return flushHistory;
        },
        onBeginFlush: function () {
          currentFlushNesting++;
          resetMeasurements();
          pauseCurrentLifeCycleTimer();
          emitEvent('onBeginFlush');
        },
        onEndFlush: function () {
          resetMeasurements();
          currentFlushNesting--;
          resumeCurrentLifeCycleTimer();
          emitEvent('onEndFlush');
        },
        onBeginLifeCycleTimer: function (debugID, timerType) {
          checkDebugID(debugID);
          emitEvent('onBeginLifeCycleTimer', debugID, timerType);
          beginLifeCycleTimer(debugID, timerType);
        },
        onEndLifeCycleTimer: function (debugID, timerType) {
          checkDebugID(debugID);
          endLifeCycleTimer(debugID, timerType);
          emitEvent('onEndLifeCycleTimer', debugID, timerType);
        },
        onBeginProcessingChildContext: function () {
          emitEvent('onBeginProcessingChildContext');
        },
        onEndProcessingChildContext: function () {
          emitEvent('onEndProcessingChildContext');
        },
        onHostOperation: function (debugID, type, payload) {
          checkDebugID(debugID);
          emitEvent('onHostOperation', debugID, type, payload);
        },
        onSetState: function () {
          emitEvent('onSetState');
        },
        onSetChildren: function (debugID, childDebugIDs) {
          checkDebugID(debugID);
          childDebugIDs.forEach(checkDebugID);
          emitEvent('onSetChildren', debugID, childDebugIDs);
        },
        onBeforeMountComponent: function (debugID, element, parentDebugID) {
          checkDebugID(debugID);
          checkDebugID(parentDebugID, true);
          emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
        },
        onMountComponent: function (debugID) {
          checkDebugID(debugID);
          emitEvent('onMountComponent', debugID);
        },
        onBeforeUpdateComponent: function (debugID, element) {
          checkDebugID(debugID);
          emitEvent('onBeforeUpdateComponent', debugID, element);
        },
        onUpdateComponent: function (debugID) {
          checkDebugID(debugID);
          emitEvent('onUpdateComponent', debugID);
        },
        onBeforeUnmountComponent: function (debugID) {
          checkDebugID(debugID);
          emitEvent('onBeforeUnmountComponent', debugID);
        },
        onUnmountComponent: function (debugID) {
          checkDebugID(debugID);
          emitEvent('onUnmountComponent', debugID);
        },
        onTestEvent: function () {
          emitEvent('onTestEvent');
        },
      };

      // TODO remove these when RN/www gets updated
      ReactDebugTool.addDevtool = ReactDebugTool.addHook;
      ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

      ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
      ReactDebugTool.addHook(ReactComponentTreeHook);
      ReactDebugTool.addHook(ReactChildrenMutationWarningHook);
      var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';
      if (/[?&]react_perf\b/.test(url)) {
        ReactDebugTool.beginProfiling();
      }

      module.exports = ReactDebugTool;

      /***/
    },
    /* 160 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2016-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactInvalidSetStateWarningHook
       */

      'use strict';

      var warning = __webpack_require__(12);

      if (true) {
        var processingChildContext = false;

        var warnInvalidSetState = function () {
          true
            ? warning(
                !processingChildContext,
                'setState(...): Cannot call setState() inside getChildContext()',
              )
            : void 0;
        };
      }

      var ReactInvalidSetStateWarningHook = {
        onBeginProcessingChildContext: function () {
          processingChildContext = true;
        },
        onEndProcessingChildContext: function () {
          processingChildContext = false;
        },
        onSetState: function () {
          warnInvalidSetState();
        },
      };

      module.exports = ReactInvalidSetStateWarningHook;

      /***/
    },
    /* 161 */
    /***/ function (module, exports) {
      /**
       * Copyright 2016-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactHostOperationHistoryHook
       */

      'use strict';

      var history = [];

      var ReactHostOperationHistoryHook = {
        onHostOperation: function (debugID, type, payload) {
          history.push({
            instanceID: debugID,
            type: type,
            payload: payload,
          });
        },
        clearHistory: function () {
          if (ReactHostOperationHistoryHook._preventClearing) {
            // Should only be used for tests.
            return;
          }

          history = [];
        },
        getHistory: function () {
          return history;
        },
      };

      module.exports = ReactHostOperationHistoryHook;

      /***/
    },
    /* 162 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactChildrenMutationWarningHook
       */

      'use strict';

      var ReactComponentTreeHook = __webpack_require__(29);

      var warning = __webpack_require__(12);

      function handleElement(debugID, element) {
        if (element == null) {
          return;
        }
        if (element._shadowChildren === undefined) {
          return;
        }
        if (element._shadowChildren === element.props.children) {
          return;
        }
        var isMutated = false;
        if (Array.isArray(element._shadowChildren)) {
          if (
            element._shadowChildren.length === element.props.children.length
          ) {
            for (var i = 0; i < element._shadowChildren.length; i++) {
              if (element._shadowChildren[i] !== element.props.children[i]) {
                isMutated = true;
              }
            }
          } else {
            isMutated = true;
          }
        }
        if (!Array.isArray(element._shadowChildren) || isMutated) {
          true
            ? warning(
                false,
                "Component's children should not be mutated.%s",
                ReactComponentTreeHook.getStackAddendumByID(debugID),
              )
            : void 0;
        }
      }

      var ReactChildrenMutationWarningHook = {
        onMountComponent: function (debugID) {
          handleElement(debugID, ReactComponentTreeHook.getElement(debugID));
        },
        onUpdateComponent: function (debugID) {
          handleElement(debugID, ReactComponentTreeHook.getElement(debugID));
        },
      };

      module.exports = ReactChildrenMutationWarningHook;

      /***/
    },
    /* 163 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      var performance = __webpack_require__(164);

      var performanceNow;

      /**
       * Detect if we can use `window.performance.now()` and gracefully fallback to
       * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
       * because of Facebook's testing infrastructure.
       */
      if (performance.now) {
        performanceNow = function performanceNow() {
          return performance.now();
        };
      } else {
        performanceNow = function performanceNow() {
          return Date.now();
        };
      }

      module.exports = performanceNow;

      /***/
    },
    /* 164 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      'use strict';

      var ExecutionEnvironment = __webpack_require__(145);

      var performance;

      if (ExecutionEnvironment.canUseDOM) {
        performance =
          window.performance ||
          window.msPerformance ||
          window.webkitPerformance;
      }

      module.exports = performance || {};

      /***/
    },
    /* 165 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule Transaction
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var invariant = __webpack_require__(9);

      /**
       * `Transaction` creates a black box that is able to wrap any method such that
       * certain invariants are maintained before and after the method is invoked
       * (Even if an exception is thrown while invoking the wrapped method). Whoever
       * instantiates a transaction can provide enforcers of the invariants at
       * creation time. The `Transaction` class itself will supply one additional
       * automatic invariant for you - the invariant that any transaction instance
       * should not be run while it is already being run. You would typically create a
       * single instance of a `Transaction` for reuse multiple times, that potentially
       * is used to wrap several different methods. Wrappers are extremely simple -
       * they only require implementing two methods.
       *
       * <pre>
       *                       wrappers (injected at creation time)
       *                                      +        +
       *                                      |        |
       *                    +-----------------|--------|--------------+
       *                    |                 v        |              |
       *                    |      +---------------+   |              |
       *                    |   +--|    wrapper1   |---|----+         |
       *                    |   |  +---------------+   v    |         |
       *                    |   |          +-------------+  |         |
       *                    |   |     +----|   wrapper2  |--------+   |
       *                    |   |     |    +-------------+  |     |   |
       *                    |   |     |                     |     |   |
       *                    |   v     v                     v     v   | wrapper
       *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
       * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
       * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
       *                    | |   | |   |   |         |   |   | |   | |
       *                    | |   | |   |   |         |   |   | |   | |
       *                    | |   | |   |   |         |   |   | |   | |
       *                    | +---+ +---+   +---------+   +---+ +---+ |
       *                    |  initialize                    close    |
       *                    +-----------------------------------------+
       * </pre>
       *
       * Use cases:
       * - Preserving the input selection ranges before/after reconciliation.
       *   Restoring selection even in the event of an unexpected error.
       * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
       *   while guaranteeing that afterwards, the event system is reactivated.
       * - Flushing a queue of collected DOM mutations to the main UI thread after a
       *   reconciliation takes place in a worker thread.
       * - Invoking any collected `componentDidUpdate` callbacks after rendering new
       *   content.
       * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
       *   to preserve the `scrollTop` (an automatic scroll aware DOM).
       * - (Future use case): Layout calculations before and after DOM updates.
       *
       * Transactional plugin API:
       * - A module that has an `initialize` method that returns any precomputation.
       * - and a `close` method that accepts the precomputation. `close` is invoked
       *   when the wrapped process is completed, or has failed.
       *
       * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
       * that implement `initialize` and `close`.
       * @return {Transaction} Single transaction for reuse in thread.
       *
       * @class Transaction
       */
      var Mixin = {
        /**
         * Sets up this instance so that it is prepared for collecting metrics. Does
         * so such that this setup method may be used on an instance that is already
         * initialized, in a way that does not consume additional memory upon reuse.
         * That can be useful if you decide to make your subclass of this mixin a
         * "PooledClass".
         */
        reinitializeTransaction: function () {
          this.transactionWrappers = this.getTransactionWrappers();
          if (this.wrapperInitData) {
            this.wrapperInitData.length = 0;
          } else {
            this.wrapperInitData = [];
          }
          this._isInTransaction = false;
        },

        _isInTransaction: false,

        /**
         * @abstract
         * @return {Array<TransactionWrapper>} Array of transaction wrappers.
         */
        getTransactionWrappers: null,

        isInTransaction: function () {
          return !!this._isInTransaction;
        },

        /**
         * Executes the function within a safety window. Use this for the top level
         * methods that result in large amounts of computation/mutations that would
         * need to be safety checked. The optional arguments helps prevent the need
         * to bind in many cases.
         *
         * @param {function} method Member of scope to call.
         * @param {Object} scope Scope to invoke from.
         * @param {Object?=} a Argument to pass to the method.
         * @param {Object?=} b Argument to pass to the method.
         * @param {Object?=} c Argument to pass to the method.
         * @param {Object?=} d Argument to pass to the method.
         * @param {Object?=} e Argument to pass to the method.
         * @param {Object?=} f Argument to pass to the method.
         *
         * @return {*} Return value from `method`.
         */
        perform: function (method, scope, a, b, c, d, e, f) {
          !!this.isInTransaction()
            ? true
              ? invariant(
                  false,
                  'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.',
                )
              : _prodInvariant('27')
            : void 0;
          var errorThrown;
          var ret;
          try {
            this._isInTransaction = true;
            // Catching errors makes debugging more difficult, so we start with
            // errorThrown set to true before setting it to false after calling
            // close -- if it's still set to true in the finally block, it means
            // one of these calls threw.
            errorThrown = true;
            this.initializeAll(0);
            ret = method.call(scope, a, b, c, d, e, f);
            errorThrown = false;
          } finally {
            try {
              if (errorThrown) {
                // If `method` throws, prefer to show that stack trace over any thrown
                // by invoking `closeAll`.
                try {
                  this.closeAll(0);
                } catch (err) {}
              } else {
                // Since `method` didn't throw, we don't want to silence the exception
                // here.
                this.closeAll(0);
              }
            } finally {
              this._isInTransaction = false;
            }
          }
          return ret;
        },

        initializeAll: function (startIndex) {
          var transactionWrappers = this.transactionWrappers;
          for (var i = startIndex; i < transactionWrappers.length; i++) {
            var wrapper = transactionWrappers[i];
            try {
              // Catching errors makes debugging more difficult, so we start with the
              // OBSERVED_ERROR state before overwriting it with the real return value
              // of initialize -- if it's still set to OBSERVED_ERROR in the finally
              // block, it means wrapper.initialize threw.
              this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
              this.wrapperInitData[i] = wrapper.initialize
                ? wrapper.initialize.call(this)
                : null;
            } finally {
              if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
                // The initializer for wrapper i threw an error; initialize the
                // remaining wrappers but silence any exceptions from them to ensure
                // that the first error is the one to bubble up.
                try {
                  this.initializeAll(i + 1);
                } catch (err) {}
              }
            }
          }
        },

        /**
         * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
         * them the respective return values of `this.transactionWrappers.init[i]`
         * (`close`rs that correspond to initializers that failed will not be
         * invoked).
         */
        closeAll: function (startIndex) {
          !this.isInTransaction()
            ? true
              ? invariant(
                  false,
                  'Transaction.closeAll(): Cannot close transaction when none are open.',
                )
              : _prodInvariant('28')
            : void 0;
          var transactionWrappers = this.transactionWrappers;
          for (var i = startIndex; i < transactionWrappers.length; i++) {
            var wrapper = transactionWrappers[i];
            var initData = this.wrapperInitData[i];
            var errorThrown;
            try {
              // Catching errors makes debugging more difficult, so we start with
              // errorThrown set to true before setting it to false after calling
              // close -- if it's still set to true in the finally block, it means
              // wrapper.close threw.
              errorThrown = true;
              if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
                wrapper.close.call(this, initData);
              }
              errorThrown = false;
            } finally {
              if (errorThrown) {
                // The closer for wrapper i threw an error; close the remaining
                // wrappers but silence any exceptions from them to ensure that the
                // first error is the one to bubble up.
                try {
                  this.closeAll(i + 1);
                } catch (e) {}
              }
            }
          }
          this.wrapperInitData.length = 0;
        },
      };

      var Transaction = {
        Mixin: Mixin,

        /**
         * Token to look for to determine if an error occurred.
         */
        OBSERVED_ERROR: {},
      };

      module.exports = Transaction;

      /***/
    },
    /* 166 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule getEventTarget
       */

      'use strict';

      /**
       * Gets the target node from a native browser event by accounting for
       * inconsistencies in browser DOM APIs.
       *
       * @param {object} nativeEvent Native browser event.
       * @return {DOMEventTarget} Target node.
       */

      function getEventTarget(nativeEvent) {
        var target = nativeEvent.target || nativeEvent.srcElement || window;

        // Normalize SVG <use> element events #4963
        if (target.correspondingUseElement) {
          target = target.correspondingUseElement;
        }

        // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
        // @see http://www.quirksmode.org/js/events_properties.html
        return target.nodeType === 3 ? target.parentNode : target;
      }

      module.exports = getEventTarget;

      /***/
    },
    /* 167 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule isEventSupported
       */

      'use strict';

      var ExecutionEnvironment = __webpack_require__(145);

      var useHasFeature;
      if (ExecutionEnvironment.canUseDOM) {
        useHasFeature =
          document.implementation &&
          document.implementation.hasFeature &&
          // always returns true in newer browsers as per the standard.
          // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
          document.implementation.hasFeature('', '') !== true;
      }

      /**
       * Checks if an event is supported in the current execution environment.
       *
       * NOTE: This will not work correctly for non-generic events such as `change`,
       * `reset`, `load`, `error`, and `select`.
       *
       * Borrows from Modernizr.
       *
       * @param {string} eventNameSuffix Event name, e.g. "click".
       * @param {?boolean} capture Check if the capture phase is supported.
       * @return {boolean} True if the event is supported.
       * @internal
       * @license Modernizr 3.0.0pre (Custom Build) | MIT
       */
      function isEventSupported(eventNameSuffix, capture) {
        if (
          !ExecutionEnvironment.canUseDOM ||
          (capture && !('addEventListener' in document))
        ) {
          return false;
        }

        var eventName = 'on' + eventNameSuffix;
        var isSupported = eventName in document;

        if (!isSupported) {
          var element = document.createElement('div');
          element.setAttribute(eventName, 'return;');
          isSupported = typeof element[eventName] === 'function';
        }

        if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
          // This is the only way to test support for the `wheel` event in IE9+.
          isSupported = document.implementation.hasFeature(
            'Events.wheel',
            '3.0',
          );
        }

        return isSupported;
      }

      module.exports = isEventSupported;

      /***/
    },
    /* 168 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule isTextInputElement
       *
       */

      'use strict';

      /**
       * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
       */

      var supportedInputTypes = {
        color: true,
        date: true,
        datetime: true,
        'datetime-local': true,
        email: true,
        month: true,
        number: true,
        password: true,
        range: true,
        search: true,
        tel: true,
        text: true,
        time: true,
        url: true,
        week: true,
      };

      function isTextInputElement(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

        if (nodeName === 'input') {
          return !!supportedInputTypes[elem.type];
        }

        if (nodeName === 'textarea') {
          return true;
        }

        return false;
      }

      module.exports = isTextInputElement;

      /***/
    },
    /* 169 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule DefaultEventPluginOrder
       */

      'use strict';

      var keyOf = __webpack_require__(26);

      /**
       * Module that is injectable into `EventPluginHub`, that specifies a
       * deterministic ordering of `EventPlugin`s. A convenient way to reason about
       * plugins, without having to package every one of them. This is better than
       * having plugins be ordered in the same order that they are injected because
       * that ordering would be influenced by the packaging order.
       * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
       * preventing default on events is convenient in `SimpleEventPlugin` handlers.
       */
      var DefaultEventPluginOrder = [
        keyOf({ ResponderEventPlugin: null }),
        keyOf({ SimpleEventPlugin: null }),
        keyOf({ TapEventPlugin: null }),
        keyOf({ EnterLeaveEventPlugin: null }),
        keyOf({ ChangeEventPlugin: null }),
        keyOf({ SelectEventPlugin: null }),
        keyOf({ BeforeInputEventPlugin: null }),
      ];

      module.exports = DefaultEventPluginOrder;

      /***/
    },
    /* 170 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule EnterLeaveEventPlugin
       */

      'use strict';

      var EventConstants = __webpack_require__(137);
      var EventPropagators = __webpack_require__(138);
      var ReactDOMComponentTree = __webpack_require__(132);
      var SyntheticMouseEvent = __webpack_require__(171);

      var keyOf = __webpack_require__(26);

      var topLevelTypes = EventConstants.topLevelTypes;

      var eventTypes = {
        mouseEnter: {
          registrationName: keyOf({ onMouseEnter: null }),
          dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver],
        },
        mouseLeave: {
          registrationName: keyOf({ onMouseLeave: null }),
          dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver],
        },
      };

      var EnterLeaveEventPlugin = {
        eventTypes: eventTypes,

        /**
         * For almost every interaction we care about, there will be both a top-level
         * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
         * we do not extract duplicate events. However, moving the mouse into the
         * browser from outside will not fire a `mouseout` event. In this case, we use
         * the `mouseover` top-level event.
         */
        extractEvents: function (
          topLevelType,
          targetInst,
          nativeEvent,
          nativeEventTarget,
        ) {
          if (
            topLevelType === topLevelTypes.topMouseOver &&
            (nativeEvent.relatedTarget || nativeEvent.fromElement)
          ) {
            return null;
          }
          if (
            topLevelType !== topLevelTypes.topMouseOut &&
            topLevelType !== topLevelTypes.topMouseOver
          ) {
            // Must not be a mouse in or mouse out - ignoring.
            return null;
          }

          var win;
          if (nativeEventTarget.window === nativeEventTarget) {
            // `nativeEventTarget` is probably a window object.
            win = nativeEventTarget;
          } else {
            // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
            var doc = nativeEventTarget.ownerDocument;
            if (doc) {
              win = doc.defaultView || doc.parentWindow;
            } else {
              win = window;
            }
          }

          var from;
          var to;
          if (topLevelType === topLevelTypes.topMouseOut) {
            from = targetInst;
            var related = nativeEvent.relatedTarget || nativeEvent.toElement;
            to = related
              ? ReactDOMComponentTree.getClosestInstanceFromNode(related)
              : null;
          } else {
            // Moving to a node from outside the window.
            from = null;
            to = targetInst;
          }

          if (from === to) {
            // Nothing pertains to our managed components.
            return null;
          }

          var fromNode =
            from == null
              ? win
              : ReactDOMComponentTree.getNodeFromInstance(from);
          var toNode =
            to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

          var leave = SyntheticMouseEvent.getPooled(
            eventTypes.mouseLeave,
            from,
            nativeEvent,
            nativeEventTarget,
          );
          leave.type = 'mouseleave';
          leave.target = fromNode;
          leave.relatedTarget = toNode;

          var enter = SyntheticMouseEvent.getPooled(
            eventTypes.mouseEnter,
            to,
            nativeEvent,
            nativeEventTarget,
          );
          enter.type = 'mouseenter';
          enter.target = toNode;
          enter.relatedTarget = fromNode;

          EventPropagators.accumulateEnterLeaveDispatches(
            leave,
            enter,
            from,
            to,
          );

          return [leave, enter];
        },
      };

      module.exports = EnterLeaveEventPlugin;

      /***/
    },
    /* 171 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SyntheticMouseEvent
       */

      'use strict';

      var SyntheticUIEvent = __webpack_require__(172);
      var ViewportMetrics = __webpack_require__(173);

      var getEventModifierState = __webpack_require__(174);

      /**
       * @interface MouseEvent
       * @see http://www.w3.org/TR/DOM-Level-3-Events/
       */
      var MouseEventInterface = {
        screenX: null,
        screenY: null,
        clientX: null,
        clientY: null,
        ctrlKey: null,
        shiftKey: null,
        altKey: null,
        metaKey: null,
        getModifierState: getEventModifierState,
        button: function (event) {
          // Webkit, Firefox, IE9+
          // which:  1 2 3
          // button: 0 1 2 (standard)
          var button = event.button;
          if ('which' in event) {
            return button;
          }
          // IE<9
          // which:  undefined
          // button: 0 0 0
          // button: 1 4 2 (onmouseup)
          return button === 2 ? 2 : button === 4 ? 1 : 0;
        },
        buttons: null,
        relatedTarget: function (event) {
          return (
            event.relatedTarget ||
            (event.fromElement === event.srcElement
              ? event.toElement
              : event.fromElement)
          );
        },
        // "Proprietary" Interface.
        pageX: function (event) {
          return 'pageX' in event
            ? event.pageX
            : event.clientX + ViewportMetrics.currentScrollLeft;
        },
        pageY: function (event) {
          return 'pageY' in event
            ? event.pageY
            : event.clientY + ViewportMetrics.currentScrollTop;
        },
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticMouseEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget,
      ) {
        return SyntheticUIEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget,
        );
      }

      SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

      module.exports = SyntheticMouseEvent;

      /***/
    },
    /* 172 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SyntheticUIEvent
       */

      'use strict';

      var SyntheticEvent = __webpack_require__(149);

      var getEventTarget = __webpack_require__(166);

      /**
       * @interface UIEvent
       * @see http://www.w3.org/TR/DOM-Level-3-Events/
       */
      var UIEventInterface = {
        view: function (event) {
          if (event.view) {
            return event.view;
          }

          var target = getEventTarget(event);
          if (target.window === target) {
            // target is a window object
            return target;
          }

          var doc = target.ownerDocument;
          // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
          if (doc) {
            return doc.defaultView || doc.parentWindow;
          } else {
            return window;
          }
        },
        detail: function (event) {
          return event.detail || 0;
        },
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticEvent}
       */
      function SyntheticUIEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget,
      ) {
        return SyntheticEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget,
        );
      }

      SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

      module.exports = SyntheticUIEvent;

      /***/
    },
    /* 173 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ViewportMetrics
       */

      'use strict';

      var ViewportMetrics = {
        currentScrollLeft: 0,

        currentScrollTop: 0,

        refreshScrollValues: function (scrollPosition) {
          ViewportMetrics.currentScrollLeft = scrollPosition.x;
          ViewportMetrics.currentScrollTop = scrollPosition.y;
        },
      };

      module.exports = ViewportMetrics;

      /***/
    },
    /* 174 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule getEventModifierState
       */

      'use strict';

      /**
       * Translation from modifier key to the associated property in the event.
       * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
       */

      var modifierKeyToProp = {
        Alt: 'altKey',
        Control: 'ctrlKey',
        Meta: 'metaKey',
        Shift: 'shiftKey',
      };

      // IE8 does not implement getModifierState so we simply map it to the only
      // modifier keys exposed by the event itself, does not support Lock-keys.
      // Currently, all major browsers except Chrome seems to support Lock-keys.
      function modifierStateGetter(keyArg) {
        var syntheticEvent = this;
        var nativeEvent = syntheticEvent.nativeEvent;
        if (nativeEvent.getModifierState) {
          return nativeEvent.getModifierState(keyArg);
        }
        var keyProp = modifierKeyToProp[keyArg];
        return keyProp ? !!nativeEvent[keyProp] : false;
      }

      function getEventModifierState(nativeEvent) {
        return modifierStateGetter;
      }

      module.exports = getEventModifierState;

      /***/
    },
    /* 175 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule HTMLDOMPropertyConfig
       */

      'use strict';

      var DOMProperty = __webpack_require__(133);

      var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
      var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
      var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
      var HAS_POSITIVE_NUMERIC_VALUE =
        DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
      var HAS_OVERLOADED_BOOLEAN_VALUE =
        DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

      var HTMLDOMPropertyConfig = {
        isCustomAttribute: RegExp.prototype.test.bind(
          new RegExp(
            '^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$',
          ),
        ),
        Properties: {
          /**
           * Standard Properties
           */
          accept: 0,
          acceptCharset: 0,
          accessKey: 0,
          action: 0,
          allowFullScreen: HAS_BOOLEAN_VALUE,
          allowTransparency: 0,
          alt: 0,
          // specifies target context for links with `preload` type
          as: 0,
          async: HAS_BOOLEAN_VALUE,
          autoComplete: 0,
          // autoFocus is polyfilled/normalized by AutoFocusUtils
          // autoFocus: HAS_BOOLEAN_VALUE,
          autoPlay: HAS_BOOLEAN_VALUE,
          capture: HAS_BOOLEAN_VALUE,
          cellPadding: 0,
          cellSpacing: 0,
          charSet: 0,
          challenge: 0,
          checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
          cite: 0,
          classID: 0,
          className: 0,
          cols: HAS_POSITIVE_NUMERIC_VALUE,
          colSpan: 0,
          content: 0,
          contentEditable: 0,
          contextMenu: 0,
          controls: HAS_BOOLEAN_VALUE,
          coords: 0,
          crossOrigin: 0,
          data: 0, // For `<object />` acts as `src`.
          dateTime: 0,
          default: HAS_BOOLEAN_VALUE,
          defer: HAS_BOOLEAN_VALUE,
          dir: 0,
          disabled: HAS_BOOLEAN_VALUE,
          download: HAS_OVERLOADED_BOOLEAN_VALUE,
          draggable: 0,
          encType: 0,
          form: 0,
          formAction: 0,
          formEncType: 0,
          formMethod: 0,
          formNoValidate: HAS_BOOLEAN_VALUE,
          formTarget: 0,
          frameBorder: 0,
          headers: 0,
          height: 0,
          hidden: HAS_BOOLEAN_VALUE,
          high: 0,
          href: 0,
          hrefLang: 0,
          htmlFor: 0,
          httpEquiv: 0,
          icon: 0,
          id: 0,
          inputMode: 0,
          integrity: 0,
          is: 0,
          keyParams: 0,
          keyType: 0,
          kind: 0,
          label: 0,
          lang: 0,
          list: 0,
          loop: HAS_BOOLEAN_VALUE,
          low: 0,
          manifest: 0,
          marginHeight: 0,
          marginWidth: 0,
          max: 0,
          maxLength: 0,
          media: 0,
          mediaGroup: 0,
          method: 0,
          min: 0,
          minLength: 0,
          // Caution; `option.selected` is not updated if `select.multiple` is
          // disabled with `removeAttribute`.
          multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
          muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
          name: 0,
          nonce: 0,
          noValidate: HAS_BOOLEAN_VALUE,
          open: HAS_BOOLEAN_VALUE,
          optimum: 0,
          pattern: 0,
          placeholder: 0,
          playsInline: HAS_BOOLEAN_VALUE,
          poster: 0,
          preload: 0,
          profile: 0,
          radioGroup: 0,
          readOnly: HAS_BOOLEAN_VALUE,
          referrerPolicy: 0,
          rel: 0,
          required: HAS_BOOLEAN_VALUE,
          reversed: HAS_BOOLEAN_VALUE,
          role: 0,
          rows: HAS_POSITIVE_NUMERIC_VALUE,
          rowSpan: HAS_NUMERIC_VALUE,
          sandbox: 0,
          scope: 0,
          scoped: HAS_BOOLEAN_VALUE,
          scrolling: 0,
          seamless: HAS_BOOLEAN_VALUE,
          selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
          shape: 0,
          size: HAS_POSITIVE_NUMERIC_VALUE,
          sizes: 0,
          span: HAS_POSITIVE_NUMERIC_VALUE,
          spellCheck: 0,
          src: 0,
          srcDoc: 0,
          srcLang: 0,
          srcSet: 0,
          start: HAS_NUMERIC_VALUE,
          step: 0,
          style: 0,
          summary: 0,
          tabIndex: 0,
          target: 0,
          title: 0,
          // Setting .type throws on non-<input> tags
          type: 0,
          useMap: 0,
          value: 0,
          width: 0,
          wmode: 0,
          wrap: 0,

          /**
           * RDFa Properties
           */
          about: 0,
          datatype: 0,
          inlist: 0,
          prefix: 0,
          // property is also supported for OpenGraph in meta tags.
          property: 0,
          resource: 0,
          typeof: 0,
          vocab: 0,

          /**
           * Non-standard Properties
           */
          // autoCapitalize and autoCorrect are supported in Mobile Safari for
          // keyboard hints.
          autoCapitalize: 0,
          autoCorrect: 0,
          // autoSave allows WebKit/Blink to persist values of input fields on page reloads
          autoSave: 0,
          // color is for Safari mask-icon link
          color: 0,
          // itemProp, itemScope, itemType are for
          // Microdata support. See http://schema.org/docs/gs.html
          itemProp: 0,
          itemScope: HAS_BOOLEAN_VALUE,
          itemType: 0,
          // itemID and itemRef are for Microdata support as well but
          // only specified in the WHATWG spec document. See
          // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
          itemID: 0,
          itemRef: 0,
          // results show looking glass icon and recent searches on input
          // search fields in WebKit/Blink
          results: 0,
          // IE-only attribute that specifies security restrictions on an iframe
          // as an alternative to the sandbox attribute on IE<10
          security: 0,
          // IE-only attribute that controls focus behavior
          unselectable: 0,
        },
        DOMAttributeNames: {
          acceptCharset: 'accept-charset',
          className: 'class',
          htmlFor: 'for',
          httpEquiv: 'http-equiv',
        },
        DOMPropertyNames: {},
      };

      module.exports = HTMLDOMPropertyConfig;

      /***/
    },
    /* 176 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactComponentBrowserEnvironment
       */

      'use strict';

      var DOMChildrenOperations = __webpack_require__(177);
      var ReactDOMIDOperations = __webpack_require__(189);

      /**
       * Abstracts away all functionality of the reconciler that requires knowledge of
       * the browser context. TODO: These callers should be refactored to avoid the
       * need for this injection.
       */
      var ReactComponentBrowserEnvironment = {
        processChildrenUpdates:
          ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

        replaceNodeWithMarkup:
          DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,
      };

      module.exports = ReactComponentBrowserEnvironment;

      /***/
    },
    /* 177 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule DOMChildrenOperations
       */

      'use strict';

      var DOMLazyTree = __webpack_require__(178);
      var Danger = __webpack_require__(184);
      var ReactMultiChildUpdateTypes = __webpack_require__(188);
      var ReactDOMComponentTree = __webpack_require__(132);
      var ReactInstrumentation = __webpack_require__(158);

      var createMicrosoftUnsafeLocalFunction = __webpack_require__(181);
      var setInnerHTML = __webpack_require__(180);
      var setTextContent = __webpack_require__(182);

      function getNodeAfter(parentNode, node) {
        // Special case for text components, which return [open, close] comments
        // from getHostNode.
        if (Array.isArray(node)) {
          node = node[1];
        }
        return node ? node.nextSibling : parentNode.firstChild;
      }

      /**
       * Inserts `childNode` as a child of `parentNode` at the `index`.
       *
       * @param {DOMElement} parentNode Parent node in which to insert.
       * @param {DOMElement} childNode Child node to insert.
       * @param {number} index Index at which to insert the child.
       * @internal
       */
      var insertChildAt = createMicrosoftUnsafeLocalFunction(function (
        parentNode,
        childNode,
        referenceNode,
      ) {
        // We rely exclusively on `insertBefore(node, null)` instead of also using
        // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
        // we are careful to use `null`.)
        parentNode.insertBefore(childNode, referenceNode);
      });

      function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
        DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
      }

      function moveChild(parentNode, childNode, referenceNode) {
        if (Array.isArray(childNode)) {
          moveDelimitedText(
            parentNode,
            childNode[0],
            childNode[1],
            referenceNode,
          );
        } else {
          insertChildAt(parentNode, childNode, referenceNode);
        }
      }

      function removeChild(parentNode, childNode) {
        if (Array.isArray(childNode)) {
          var closingComment = childNode[1];
          childNode = childNode[0];
          removeDelimitedText(parentNode, childNode, closingComment);
          parentNode.removeChild(closingComment);
        }
        parentNode.removeChild(childNode);
      }

      function moveDelimitedText(
        parentNode,
        openingComment,
        closingComment,
        referenceNode,
      ) {
        var node = openingComment;
        while (true) {
          var nextNode = node.nextSibling;
          insertChildAt(parentNode, node, referenceNode);
          if (node === closingComment) {
            break;
          }
          node = nextNode;
        }
      }

      function removeDelimitedText(parentNode, startNode, closingComment) {
        while (true) {
          var node = startNode.nextSibling;
          if (node === closingComment) {
            // The closing comment is removed by ReactMultiChild.
            break;
          } else {
            parentNode.removeChild(node);
          }
        }
      }

      function replaceDelimitedText(
        openingComment,
        closingComment,
        stringText,
      ) {
        var parentNode = openingComment.parentNode;
        var nodeAfterComment = openingComment.nextSibling;
        if (nodeAfterComment === closingComment) {
          // There are no text nodes between the opening and closing comments; insert
          // a new one if stringText isn't empty.
          if (stringText) {
            insertChildAt(
              parentNode,
              document.createTextNode(stringText),
              nodeAfterComment,
            );
          }
        } else {
          if (stringText) {
            // Set the text content of the first node after the opening comment, and
            // remove all following nodes up until the closing comment.
            setTextContent(nodeAfterComment, stringText);
            removeDelimitedText(parentNode, nodeAfterComment, closingComment);
          } else {
            removeDelimitedText(parentNode, openingComment, closingComment);
          }
        }

        if (true) {
          ReactInstrumentation.debugTool.onHostOperation(
            ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
            'replace text',
            stringText,
          );
        }
      }

      var dangerouslyReplaceNodeWithMarkup =
        Danger.dangerouslyReplaceNodeWithMarkup;
      if (true) {
        dangerouslyReplaceNodeWithMarkup = function (
          oldChild,
          markup,
          prevInstance,
        ) {
          Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
          if (prevInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onHostOperation(
              prevInstance._debugID,
              'replace with',
              markup.toString(),
            );
          } else {
            var nextInstance = ReactDOMComponentTree.getInstanceFromNode(
              markup.node,
            );
            if (nextInstance._debugID !== 0) {
              ReactInstrumentation.debugTool.onHostOperation(
                nextInstance._debugID,
                'mount',
                markup.toString(),
              );
            }
          }
        };
      }

      /**
       * Operations for updating with DOM children.
       */
      var DOMChildrenOperations = {
        dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

        replaceDelimitedText: replaceDelimitedText,

        /**
         * Updates a component's children by processing a series of updates. The
         * update configurations are each expected to have a `parentNode` property.
         *
         * @param {array<object>} updates List of update configurations.
         * @internal
         */
        processUpdates: function (parentNode, updates) {
          if (true) {
            var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(
              parentNode,
            )._debugID;
          }

          for (var k = 0; k < updates.length; k++) {
            var update = updates[k];
            switch (update.type) {
              case ReactMultiChildUpdateTypes.INSERT_MARKUP:
                insertLazyTreeChildAt(
                  parentNode,
                  update.content,
                  getNodeAfter(parentNode, update.afterNode),
                );
                if (true) {
                  ReactInstrumentation.debugTool.onHostOperation(
                    parentNodeDebugID,
                    'insert child',
                    {
                      toIndex: update.toIndex,
                      content: update.content.toString(),
                    },
                  );
                }
                break;
              case ReactMultiChildUpdateTypes.MOVE_EXISTING:
                moveChild(
                  parentNode,
                  update.fromNode,
                  getNodeAfter(parentNode, update.afterNode),
                );
                if (true) {
                  ReactInstrumentation.debugTool.onHostOperation(
                    parentNodeDebugID,
                    'move child',
                    { fromIndex: update.fromIndex, toIndex: update.toIndex },
                  );
                }
                break;
              case ReactMultiChildUpdateTypes.SET_MARKUP:
                setInnerHTML(parentNode, update.content);
                if (true) {
                  ReactInstrumentation.debugTool.onHostOperation(
                    parentNodeDebugID,
                    'replace children',
                    update.content.toString(),
                  );
                }
                break;
              case ReactMultiChildUpdateTypes.TEXT_CONTENT:
                setTextContent(parentNode, update.content);
                if (true) {
                  ReactInstrumentation.debugTool.onHostOperation(
                    parentNodeDebugID,
                    'replace text',
                    update.content.toString(),
                  );
                }
                break;
              case ReactMultiChildUpdateTypes.REMOVE_NODE:
                removeChild(parentNode, update.fromNode);
                if (true) {
                  ReactInstrumentation.debugTool.onHostOperation(
                    parentNodeDebugID,
                    'remove child',
                    { fromIndex: update.fromIndex },
                  );
                }
                break;
            }
          }
        },
      };

      module.exports = DOMChildrenOperations;

      /***/
    },
    /* 178 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2015-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule DOMLazyTree
       */

      'use strict';

      var DOMNamespaces = __webpack_require__(179);
      var setInnerHTML = __webpack_require__(180);

      var createMicrosoftUnsafeLocalFunction = __webpack_require__(181);
      var setTextContent = __webpack_require__(182);

      var ELEMENT_NODE_TYPE = 1;
      var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

      /**
       * In IE (8-11) and Edge, appending nodes with no children is dramatically
       * faster than appending a full subtree, so we essentially queue up the
       * .appendChild calls here and apply them so each node is added to its parent
       * before any children are added.
       *
       * In other browsers, doing so is slower or neutral compared to the other order
       * (in Firefox, twice as slow) so we only do this inversion in IE.
       *
       * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
       */
      var enableLazy =
        (typeof document !== 'undefined' &&
          typeof document.documentMode === 'number') ||
        (typeof navigator !== 'undefined' &&
          typeof navigator.userAgent === 'string' &&
          /\bEdge\/\d/.test(navigator.userAgent));

      function insertTreeChildren(tree) {
        if (!enableLazy) {
          return;
        }
        var node = tree.node;
        var children = tree.children;
        if (children.length) {
          for (var i = 0; i < children.length; i++) {
            insertTreeBefore(node, children[i], null);
          }
        } else if (tree.html != null) {
          setInnerHTML(node, tree.html);
        } else if (tree.text != null) {
          setTextContent(node, tree.text);
        }
      }

      var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (
        parentNode,
        tree,
        referenceNode,
      ) {
        // DocumentFragments aren't actually part of the DOM after insertion so
        // appending children won't update the DOM. We need to ensure the fragment
        // is properly populated first, breaking out of our lazy approach for just
        // this level. Also, some <object> plugins (like Flash Player) will read
        // <param> nodes immediately upon insertion into the DOM, so <object>
        // must also be populated prior to insertion into the DOM.
        if (
          tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE ||
          (tree.node.nodeType === ELEMENT_NODE_TYPE &&
            tree.node.nodeName.toLowerCase() === 'object' &&
            (tree.node.namespaceURI == null ||
              tree.node.namespaceURI === DOMNamespaces.html))
        ) {
          insertTreeChildren(tree);
          parentNode.insertBefore(tree.node, referenceNode);
        } else {
          parentNode.insertBefore(tree.node, referenceNode);
          insertTreeChildren(tree);
        }
      });

      function replaceChildWithTree(oldNode, newTree) {
        oldNode.parentNode.replaceChild(newTree.node, oldNode);
        insertTreeChildren(newTree);
      }

      function queueChild(parentTree, childTree) {
        if (enableLazy) {
          parentTree.children.push(childTree);
        } else {
          parentTree.node.appendChild(childTree.node);
        }
      }

      function queueHTML(tree, html) {
        if (enableLazy) {
          tree.html = html;
        } else {
          setInnerHTML(tree.node, html);
        }
      }

      function queueText(tree, text) {
        if (enableLazy) {
          tree.text = text;
        } else {
          setTextContent(tree.node, text);
        }
      }

      function toString() {
        return this.node.nodeName;
      }

      function DOMLazyTree(node) {
        return {
          node: node,
          children: [],
          html: null,
          text: null,
          toString: toString,
        };
      }

      DOMLazyTree.insertTreeBefore = insertTreeBefore;
      DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
      DOMLazyTree.queueChild = queueChild;
      DOMLazyTree.queueHTML = queueHTML;
      DOMLazyTree.queueText = queueText;

      module.exports = DOMLazyTree;

      /***/
    },
    /* 179 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule DOMNamespaces
       */

      'use strict';

      var DOMNamespaces = {
        html: 'http://www.w3.org/1999/xhtml',
        mathml: 'http://www.w3.org/1998/Math/MathML',
        svg: 'http://www.w3.org/2000/svg',
      };

      module.exports = DOMNamespaces;

      /***/
    },
    /* 180 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule setInnerHTML
       */

      'use strict';

      var ExecutionEnvironment = __webpack_require__(145);
      var DOMNamespaces = __webpack_require__(179);

      var WHITESPACE_TEST = /^[ \r\n\t\f]/;
      var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

      var createMicrosoftUnsafeLocalFunction = __webpack_require__(181);

      // SVG temp container for IE lacking innerHTML
      var reusableSVGContainer;

      /**
       * Set the innerHTML property of a node, ensuring that whitespace is preserved
       * even in IE8.
       *
       * @param {DOMElement} node
       * @param {string} html
       * @internal
       */
      var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (
        node,
        html,
      ) {
        // IE does not have innerHTML for SVG nodes, so instead we inject the
        // new markup in a temp node and then move the child nodes across into
        // the target node
        if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
          reusableSVGContainer =
            reusableSVGContainer || document.createElement('div');
          reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
          var svgNode = reusableSVGContainer.firstChild;
          while (svgNode.firstChild) {
            node.appendChild(svgNode.firstChild);
          }
        } else {
          node.innerHTML = html;
        }
      });

      if (ExecutionEnvironment.canUseDOM) {
        // IE8: When updating a just created node with innerHTML only leading
        // whitespace is removed. When updating an existing node with innerHTML
        // whitespace in root TextNodes is also collapsed.
        // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

        // Feature detection; only IE8 is known to behave improperly like this.
        var testElement = document.createElement('div');
        testElement.innerHTML = ' ';
        if (testElement.innerHTML === '') {
          setInnerHTML = function (node, html) {
            // Magic theory: IE8 supposedly differentiates between added and updated
            // nodes when processing innerHTML, innerHTML on updated nodes suffers
            // from worse whitespace behavior. Re-adding a node like this triggers
            // the initial and more favorable whitespace behavior.
            // TODO: What to do on a detached node?
            if (node.parentNode) {
              node.parentNode.replaceChild(node, node);
            }

            // We also implement a workaround for non-visible tags disappearing into
            // thin air on IE8, this only happens if there is no visible text
            // in-front of the non-visible tags. Piggyback on the whitespace fix
            // and simply check if any non-visible tags appear in the source.
            if (
              WHITESPACE_TEST.test(html) ||
              (html[0] === '<' && NONVISIBLE_TEST.test(html))
            ) {
              // Recover leading whitespace by temporarily prepending any character.
              // \uFEFF has the potential advantage of being zero-width/invisible.
              // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
              // in hopes that this is preserved even if "\uFEFF" is transformed to
              // the actual Unicode character (by Babel, for example).
              // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
              node.innerHTML = String.fromCharCode(0xfeff) + html;

              // deleteData leaves an empty `TextNode` which offsets the index of all
              // children. Definitely want to avoid this.
              var textNode = node.firstChild;
              if (textNode.data.length === 1) {
                node.removeChild(textNode);
              } else {
                textNode.deleteData(0, 1);
              }
            } else {
              node.innerHTML = html;
            }
          };
        }
        testElement = null;
      }

      module.exports = setInnerHTML;

      /***/
    },
    /* 181 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule createMicrosoftUnsafeLocalFunction
       */

      /* globals MSApp */

      'use strict';

      /**
       * Create a function which has 'unsafe' privileges (required by windows8 apps)
       */

      var createMicrosoftUnsafeLocalFunction = function (func) {
        if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
          return function (arg0, arg1, arg2, arg3) {
            MSApp.execUnsafeLocalFunction(function () {
              return func(arg0, arg1, arg2, arg3);
            });
          };
        } else {
          return func;
        }
      };

      module.exports = createMicrosoftUnsafeLocalFunction;

      /***/
    },
    /* 182 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule setTextContent
       */

      'use strict';

      var ExecutionEnvironment = __webpack_require__(145);
      var escapeTextContentForBrowser = __webpack_require__(183);
      var setInnerHTML = __webpack_require__(180);

      /**
       * Set the textContent property of a node, ensuring that whitespace is preserved
       * even in IE8. innerText is a poor substitute for textContent and, among many
       * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
       * as it should.
       *
       * @param {DOMElement} node
       * @param {string} text
       * @internal
       */
      var setTextContent = function (node, text) {
        if (text) {
          var firstChild = node.firstChild;

          if (
            firstChild &&
            firstChild === node.lastChild &&
            firstChild.nodeType === 3
          ) {
            firstChild.nodeValue = text;
            return;
          }
        }
        node.textContent = text;
      };

      if (ExecutionEnvironment.canUseDOM) {
        if (!('textContent' in document.documentElement)) {
          setTextContent = function (node, text) {
            setInnerHTML(node, escapeTextContentForBrowser(text));
          };
        }
      }

      module.exports = setTextContent;

      /***/
    },
    /* 183 */
    /***/ function (module, exports) {
      /**
       * Copyright 2016-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * Based on the escape-html library, which is used under the MIT License below:
       *
       * Copyright (c) 2012-2013 TJ Holowaychuk
       * Copyright (c) 2015 Andreas Lubbe
       * Copyright (c) 2015 Tiancheng "Timothy" Gu
       *
       * Permission is hereby granted, free of charge, to any person obtaining
       * a copy of this software and associated documentation files (the
       * 'Software'), to deal in the Software without restriction, including
       * without limitation the rights to use, copy, modify, merge, publish,
       * distribute, sublicense, and/or sell copies of the Software, and to
       * permit persons to whom the Software is furnished to do so, subject to
       * the following conditions:
       *
       * The above copyright notice and this permission notice shall be
       * included in all copies or substantial portions of the Software.
       *
       * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
       * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
       * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
       * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
       * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
       * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
       * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
       *
       * @providesModule escapeTextContentForBrowser
       */

      'use strict';

      // code copied and modified from escape-html
      /**
       * Module variables.
       * @private
       */

      var matchHtmlRegExp = /["'&<>]/;

      /**
       * Escape special characters in the given string of html.
       *
       * @param  {string} string The string to escape for inserting into HTML
       * @return {string}
       * @public
       */

      function escapeHtml(string) {
        var str = '' + string;
        var match = matchHtmlRegExp.exec(str);

        if (!match) {
          return str;
        }

        var escape;
        var html = '';
        var index = 0;
        var lastIndex = 0;

        for (index = match.index; index < str.length; index++) {
          switch (str.charCodeAt(index)) {
            case 34:
              // "
              escape = '&quot;';
              break;
            case 38:
              // &
              escape = '&amp;';
              break;
            case 39:
              // '
              escape = '&#x27;'; // modified from escape-html; used to be '&#39'
              break;
            case 60:
              // <
              escape = '&lt;';
              break;
            case 62:
              // >
              escape = '&gt;';
              break;
            default:
              continue;
          }

          if (lastIndex !== index) {
            html += str.substring(lastIndex, index);
          }

          lastIndex = index + 1;
          html += escape;
        }

        return lastIndex !== index
          ? html + str.substring(lastIndex, index)
          : html;
      }
      // end code copied and modified from escape-html

      /**
       * Escapes text to prevent scripting attacks.
       *
       * @param {*} text Text value to escape.
       * @return {string} An escaped string.
       */
      function escapeTextContentForBrowser(text) {
        if (typeof text === 'boolean' || typeof text === 'number') {
          // this shortcircuit helps perf for types that we know will never have
          // special characters, especially given that this function is used often
          // for numeric dom ids.
          return '' + text;
        }
        return escapeHtml(text);
      }

      module.exports = escapeTextContentForBrowser;

      /***/
    },
    /* 184 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule Danger
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var DOMLazyTree = __webpack_require__(178);
      var ExecutionEnvironment = __webpack_require__(145);

      var createNodesFromMarkup = __webpack_require__(185);
      var emptyFunction = __webpack_require__(13);
      var invariant = __webpack_require__(9);

      var Danger = {
        /**
         * Replaces a node with a string of markup at its current position within its
         * parent. The markup must render into a single root node.
         *
         * @param {DOMElement} oldChild Child node to replace.
         * @param {string} markup Markup to render in place of the child node.
         * @internal
         */
        dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
          !ExecutionEnvironment.canUseDOM
            ? true
              ? invariant(
                  false,
                  'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.',
                )
              : _prodInvariant('56')
            : void 0;
          !markup
            ? true
              ? invariant(
                  false,
                  'dangerouslyReplaceNodeWithMarkup(...): Missing markup.',
                )
              : _prodInvariant('57')
            : void 0;
          !(oldChild.nodeName !== 'HTML')
            ? true
              ? invariant(
                  false,
                  'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().',
                )
              : _prodInvariant('58')
            : void 0;

          if (typeof markup === 'string') {
            var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
            oldChild.parentNode.replaceChild(newChild, oldChild);
          } else {
            DOMLazyTree.replaceChildWithTree(oldChild, markup);
          }
        },
      };

      module.exports = Danger;

      /***/
    },
    /* 185 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      /*eslint-disable fb-www/unsafe-html*/

      var ExecutionEnvironment = __webpack_require__(145);

      var createArrayFromMixed = __webpack_require__(186);
      var getMarkupWrap = __webpack_require__(187);
      var invariant = __webpack_require__(9);

      /**
       * Dummy container used to render all markup.
       */
      var dummyNode = ExecutionEnvironment.canUseDOM
        ? document.createElement('div')
        : null;

      /**
       * Pattern used by `getNodeName`.
       */
      var nodeNamePattern = /^\s*<(\w+)/;

      /**
       * Extracts the `nodeName` of the first element in a string of markup.
       *
       * @param {string} markup String of markup.
       * @return {?string} Node name of the supplied markup.
       */
      function getNodeName(markup) {
        var nodeNameMatch = markup.match(nodeNamePattern);
        return nodeNameMatch && nodeNameMatch[1].toLowerCase();
      }

      /**
       * Creates an array containing the nodes rendered from the supplied markup. The
       * optionally supplied `handleScript` function will be invoked once for each
       * <script> element that is rendered. If no `handleScript` function is supplied,
       * an exception is thrown if any <script> elements are rendered.
       *
       * @param {string} markup A string of valid HTML markup.
       * @param {?function} handleScript Invoked once for each rendered <script>.
       * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
       */
      function createNodesFromMarkup(markup, handleScript) {
        var node = dummyNode;
        !!!dummyNode
          ? true
            ? invariant(false, 'createNodesFromMarkup dummy not initialized')
            : invariant(false)
          : void 0;
        var nodeName = getNodeName(markup);

        var wrap = nodeName && getMarkupWrap(nodeName);
        if (wrap) {
          node.innerHTML = wrap[1] + markup + wrap[2];

          var wrapDepth = wrap[0];
          while (wrapDepth--) {
            node = node.lastChild;
          }
        } else {
          node.innerHTML = markup;
        }

        var scripts = node.getElementsByTagName('script');
        if (scripts.length) {
          !handleScript
            ? true
              ? invariant(
                  false,
                  'createNodesFromMarkup(...): Unexpected <script> element rendered.',
                )
              : invariant(false)
            : void 0;
          createArrayFromMixed(scripts).forEach(handleScript);
        }

        var nodes = Array.from(node.childNodes);
        while (node.lastChild) {
          node.removeChild(node.lastChild);
        }
        return nodes;
      }

      module.exports = createNodesFromMarkup;

      /***/
    },
    /* 186 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      var invariant = __webpack_require__(9);

      /**
       * Convert array-like objects to arrays.
       *
       * This API assumes the caller knows the contents of the data type. For less
       * well defined inputs use createArrayFromMixed.
       *
       * @param {object|function|filelist} obj
       * @return {array}
       */
      function toArray(obj) {
        var length = obj.length;

        // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
        // in old versions of Safari).
        !(
          !Array.isArray(obj) &&
          (typeof obj === 'object' || typeof obj === 'function')
        )
          ? true
            ? invariant(false, 'toArray: Array-like object expected')
            : invariant(false)
          : void 0;

        !(typeof length === 'number')
          ? true
            ? invariant(false, 'toArray: Object needs a length property')
            : invariant(false)
          : void 0;

        !(length === 0 || length - 1 in obj)
          ? true
            ? invariant(false, 'toArray: Object should have keys for indices')
            : invariant(false)
          : void 0;

        !(typeof obj.callee !== 'function')
          ? true
            ? invariant(
                false,
                "toArray: Object can't be `arguments`. Use rest params " +
                  '(function(...args) {}) or Array.from() instead.',
              )
            : invariant(false)
          : void 0;

        // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
        // without method will throw during the slice call and skip straight to the
        // fallback.
        if (obj.hasOwnProperty) {
          try {
            return Array.prototype.slice.call(obj);
          } catch (e) {
            // IE < 9 does not support Array#slice on collections objects
          }
        }

        // Fall back to copying key by key. This assumes all keys have a value,
        // so will not preserve sparsely populated inputs.
        var ret = Array(length);
        for (var ii = 0; ii < length; ii++) {
          ret[ii] = obj[ii];
        }
        return ret;
      }

      /**
       * Perform a heuristic test to determine if an object is "array-like".
       *
       *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
       *   Joshu replied: "Mu."
       *
       * This function determines if its argument has "array nature": it returns
       * true if the argument is an actual array, an `arguments' object, or an
       * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
       *
       * It will return false for other array-like objects like Filelist.
       *
       * @param {*} obj
       * @return {boolean}
       */
      function hasArrayNature(obj) {
        return (
          // not null/false
          !!obj &&
          // arrays are objects, NodeLists are functions in Safari
          (typeof obj == 'object' || typeof obj == 'function') &&
          // quacks like an array
          'length' in obj &&
          // not window
          !('setInterval' in obj) &&
          // no DOM node should be considered an array-like
          // a 'select' element has 'length' and 'item' properties on IE8
          typeof obj.nodeType != 'number' &&
          // a real array
          (Array.isArray(obj) ||
            // arguments
            'callee' in obj ||
            // HTMLCollection/NodeList
            'item' in obj)
        );
      }

      /**
       * Ensure that the argument is an array by wrapping it in an array if it is not.
       * Creates a copy of the argument if it is already an array.
       *
       * This is mostly useful idiomatically:
       *
       *   var createArrayFromMixed = require('createArrayFromMixed');
       *
       *   function takesOneOrMoreThings(things) {
       *     things = createArrayFromMixed(things);
       *     ...
       *   }
       *
       * This allows you to treat `things' as an array, but accept scalars in the API.
       *
       * If you need to convert an array-like object, like `arguments`, into an array
       * use toArray instead.
       *
       * @param {*} obj
       * @return {array}
       */
      function createArrayFromMixed(obj) {
        if (!hasArrayNature(obj)) {
          return [obj];
        } else if (Array.isArray(obj)) {
          return obj.slice();
        } else {
          return toArray(obj);
        }
      }

      module.exports = createArrayFromMixed;

      /***/
    },
    /* 187 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      /*eslint-disable fb-www/unsafe-html */

      var ExecutionEnvironment = __webpack_require__(145);

      var invariant = __webpack_require__(9);

      /**
       * Dummy container used to detect which wraps are necessary.
       */
      var dummyNode = ExecutionEnvironment.canUseDOM
        ? document.createElement('div')
        : null;

      /**
       * Some browsers cannot use `innerHTML` to render certain elements standalone,
       * so we wrap them, render the wrapped nodes, then extract the desired node.
       *
       * In IE8, certain elements cannot render alone, so wrap all elements ('*').
       */

      var shouldWrap = {};

      var selectWrap = [1, '<select multiple="true">', '</select>'];
      var tableWrap = [1, '<table>', '</table>'];
      var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

      var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

      var markupWrap = {
        '*': [1, '?<div>', '</div>'],

        area: [1, '<map>', '</map>'],
        col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
        legend: [1, '<fieldset>', '</fieldset>'],
        param: [1, '<object>', '</object>'],
        tr: [2, '<table><tbody>', '</tbody></table>'],

        optgroup: selectWrap,
        option: selectWrap,

        caption: tableWrap,
        colgroup: tableWrap,
        tbody: tableWrap,
        tfoot: tableWrap,
        thead: tableWrap,

        td: trWrap,
        th: trWrap,
      };

      // Initialize the SVG elements since we know they'll always need to be wrapped
      // consistently. If they are created inside a <div> they will be initialized in
      // the wrong namespace (and will not display).
      var svgElements = [
        'circle',
        'clipPath',
        'defs',
        'ellipse',
        'g',
        'image',
        'line',
        'linearGradient',
        'mask',
        'path',
        'pattern',
        'polygon',
        'polyline',
        'radialGradient',
        'rect',
        'stop',
        'text',
        'tspan',
      ];
      svgElements.forEach(function (nodeName) {
        markupWrap[nodeName] = svgWrap;
        shouldWrap[nodeName] = true;
      });

      /**
       * Gets the markup wrap configuration for the supplied `nodeName`.
       *
       * NOTE: This lazily detects which wraps are necessary for the current browser.
       *
       * @param {string} nodeName Lowercase `nodeName`.
       * @return {?array} Markup wrap configuration, if applicable.
       */
      function getMarkupWrap(nodeName) {
        !!!dummyNode
          ? true
            ? invariant(false, 'Markup wrapping node not initialized')
            : invariant(false)
          : void 0;
        if (!markupWrap.hasOwnProperty(nodeName)) {
          nodeName = '*';
        }
        if (!shouldWrap.hasOwnProperty(nodeName)) {
          if (nodeName === '*') {
            dummyNode.innerHTML = '<link />';
          } else {
            dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
          }
          shouldWrap[nodeName] = !dummyNode.firstChild;
        }
        return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
      }

      module.exports = getMarkupWrap;

      /***/
    },
    /* 188 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactMultiChildUpdateTypes
       */

      'use strict';

      var keyMirror = __webpack_require__(24);

      /**
       * When a component's children are updated, a series of update configuration
       * objects are created in order to batch and serialize the required changes.
       *
       * Enumerates all the possible types of update configurations.
       *
       * @internal
       */
      var ReactMultiChildUpdateTypes = keyMirror({
        INSERT_MARKUP: null,
        MOVE_EXISTING: null,
        REMOVE_NODE: null,
        SET_MARKUP: null,
        TEXT_CONTENT: null,
      });

      module.exports = ReactMultiChildUpdateTypes;

      /***/
    },
    /* 189 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMIDOperations
       */

      'use strict';

      var DOMChildrenOperations = __webpack_require__(177);
      var ReactDOMComponentTree = __webpack_require__(132);

      /**
       * Operations used to process updates to DOM nodes.
       */
      var ReactDOMIDOperations = {
        /**
         * Updates a component's children by processing a series of updates.
         *
         * @param {array<object>} updates List of update configurations.
         * @internal
         */
        dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
          var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
          DOMChildrenOperations.processUpdates(node, updates);
        },
      };

      module.exports = ReactDOMIDOperations;

      /***/
    },
    /* 190 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMComponent
       */

      /* global hasOwnProperty:true */

      'use strict';

      var _prodInvariant = __webpack_require__(8),
        _assign = __webpack_require__(5);

      var AutoFocusUtils = __webpack_require__(191);
      var CSSPropertyOperations = __webpack_require__(193);
      var DOMLazyTree = __webpack_require__(178);
      var DOMNamespaces = __webpack_require__(179);
      var DOMProperty = __webpack_require__(133);
      var DOMPropertyOperations = __webpack_require__(201);
      var EventConstants = __webpack_require__(137);
      var EventPluginHub = __webpack_require__(139);
      var EventPluginRegistry = __webpack_require__(140);
      var ReactBrowserEventEmitter = __webpack_require__(203);
      var ReactDOMButton = __webpack_require__(206);
      var ReactDOMComponentFlags = __webpack_require__(134);
      var ReactDOMComponentTree = __webpack_require__(132);
      var ReactDOMInput = __webpack_require__(208);
      var ReactDOMOption = __webpack_require__(210);
      var ReactDOMSelect = __webpack_require__(211);
      var ReactDOMTextarea = __webpack_require__(212);
      var ReactInstrumentation = __webpack_require__(158);
      var ReactMultiChild = __webpack_require__(213);
      var ReactServerRenderingTransaction = __webpack_require__(225);

      var emptyFunction = __webpack_require__(13);
      var escapeTextContentForBrowser = __webpack_require__(183);
      var invariant = __webpack_require__(9);
      var isEventSupported = __webpack_require__(167);
      var keyOf = __webpack_require__(26);
      var shallowEqual = __webpack_require__(220);
      var validateDOMNesting = __webpack_require__(228);
      var warning = __webpack_require__(12);

      var Flags = ReactDOMComponentFlags;
      var deleteListener = EventPluginHub.deleteListener;
      var getNode = ReactDOMComponentTree.getNodeFromInstance;
      var listenTo = ReactBrowserEventEmitter.listenTo;
      var registrationNameModules = EventPluginRegistry.registrationNameModules;

      // For quickly matching children type, to test if can be treated as content.
      var CONTENT_TYPES = { string: true, number: true };

      var STYLE = keyOf({ style: null });
      var HTML = keyOf({ __html: null });
      var RESERVED_PROPS = {
        children: null,
        dangerouslySetInnerHTML: null,
        suppressContentEditableWarning: null,
      };

      // Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
      var DOC_FRAGMENT_TYPE = 11;

      function getDeclarationErrorAddendum(internalInstance) {
        if (internalInstance) {
          var owner = internalInstance._currentElement._owner || null;
          if (owner) {
            var name = owner.getName();
            if (name) {
              return ' This DOM node was rendered by `' + name + '`.';
            }
          }
        }
        return '';
      }

      function friendlyStringify(obj) {
        if (typeof obj === 'object') {
          if (Array.isArray(obj)) {
            return '[' + obj.map(friendlyStringify).join(', ') + ']';
          } else {
            var pairs = [];
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) {
                var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key)
                  ? key
                  : JSON.stringify(key);
                pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
              }
            }
            return '{' + pairs.join(', ') + '}';
          }
        } else if (typeof obj === 'string') {
          return JSON.stringify(obj);
        } else if (typeof obj === 'function') {
          return '[function object]';
        }
        // Differs from JSON.stringify in that undefined because undefined and that
        // inf and nan don't become null
        return String(obj);
      }

      var styleMutationWarning = {};

      function checkAndWarnForMutatedStyle(style1, style2, component) {
        if (style1 == null || style2 == null) {
          return;
        }
        if (shallowEqual(style1, style2)) {
          return;
        }

        var componentName = component._tag;
        var owner = component._currentElement._owner;
        var ownerName;
        if (owner) {
          ownerName = owner.getName();
        }

        var hash = ownerName + '|' + componentName;

        if (styleMutationWarning.hasOwnProperty(hash)) {
          return;
        }

        styleMutationWarning[hash] = true;

        true
          ? warning(
              false,
              '`%s` was passed a style object that has previously been mutated. ' +
                'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' +
                'the `render` %s. Previous style: %s. Mutated style: %s.',
              componentName,
              owner
                ? 'of `' + ownerName + '`'
                : 'using <' + componentName + '>',
              friendlyStringify(style1),
              friendlyStringify(style2),
            )
          : void 0;
      }

      /**
       * @param {object} component
       * @param {?object} props
       */
      function assertValidProps(component, props) {
        if (!props) {
          return;
        }
        // Note the use of `==` which checks for null or undefined.
        if (voidElementTags[component._tag]) {
          !(props.children == null && props.dangerouslySetInnerHTML == null)
            ? true
              ? invariant(
                  false,
                  '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s',
                  component._tag,
                  component._currentElement._owner
                    ? ' Check the render method of ' +
                        component._currentElement._owner.getName() +
                        '.'
                    : '',
                )
              : _prodInvariant(
                  '137',
                  component._tag,
                  component._currentElement._owner
                    ? ' Check the render method of ' +
                        component._currentElement._owner.getName() +
                        '.'
                    : '',
                )
            : void 0;
        }
        if (props.dangerouslySetInnerHTML != null) {
          !(props.children == null)
            ? true
              ? invariant(
                  false,
                  'Can only set one of `children` or `props.dangerouslySetInnerHTML`.',
                )
              : _prodInvariant('60')
            : void 0;
          !(
            typeof props.dangerouslySetInnerHTML === 'object' &&
            HTML in props.dangerouslySetInnerHTML
          )
            ? true
              ? invariant(
                  false,
                  '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.',
                )
              : _prodInvariant('61')
            : void 0;
        }
        if (true) {
          true
            ? warning(
                props.innerHTML == null,
                'Directly setting property `innerHTML` is not permitted. ' +
                  'For more information, lookup documentation on `dangerouslySetInnerHTML`.',
              )
            : void 0;
          true
            ? warning(
                props.suppressContentEditableWarning ||
                  !props.contentEditable ||
                  props.children == null,
                'A component is `contentEditable` and contains `children` managed by ' +
                  'React. It is now your responsibility to guarantee that none of ' +
                  'those nodes are unexpectedly modified or duplicated. This is ' +
                  'probably not intentional.',
              )
            : void 0;
          true
            ? warning(
                props.onFocusIn == null && props.onFocusOut == null,
                'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' +
                  'All React events are normalized to bubble, so onFocusIn and onFocusOut ' +
                  'are not needed/supported by React.',
              )
            : void 0;
        }
        !(props.style == null || typeof props.style === 'object')
          ? true
            ? invariant(
                false,
                "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.%s",
                getDeclarationErrorAddendum(component),
              )
            : _prodInvariant('62', getDeclarationErrorAddendum(component))
          : void 0;
      }

      function enqueuePutListener(
        inst,
        registrationName,
        listener,
        transaction,
      ) {
        if (transaction instanceof ReactServerRenderingTransaction) {
          return;
        }
        if (true) {
          // IE8 has no API for event capturing and the `onScroll` event doesn't
          // bubble.
          true
            ? warning(
                registrationName !== 'onScroll' ||
                  isEventSupported('scroll', true),
                "This browser doesn't support the `onScroll` event",
              )
            : void 0;
        }
        var containerInfo = inst._hostContainerInfo;
        var isDocumentFragment =
          containerInfo._node &&
          containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
        var doc = isDocumentFragment
          ? containerInfo._node
          : containerInfo._ownerDocument;
        listenTo(registrationName, doc);
        transaction.getReactMountReady().enqueue(putListener, {
          inst: inst,
          registrationName: registrationName,
          listener: listener,
        });
      }

      function putListener() {
        var listenerToPut = this;
        EventPluginHub.putListener(
          listenerToPut.inst,
          listenerToPut.registrationName,
          listenerToPut.listener,
        );
      }

      function inputPostMount() {
        var inst = this;
        ReactDOMInput.postMountWrapper(inst);
      }

      function textareaPostMount() {
        var inst = this;
        ReactDOMTextarea.postMountWrapper(inst);
      }

      function optionPostMount() {
        var inst = this;
        ReactDOMOption.postMountWrapper(inst);
      }

      var setAndValidateContentChildDev = emptyFunction;
      if (true) {
        setAndValidateContentChildDev = function (content) {
          var hasExistingContent = this._contentDebugID != null;
          var debugID = this._debugID;
          // This ID represents the inlined child that has no backing instance:
          var contentDebugID = -debugID;

          if (content == null) {
            if (hasExistingContent) {
              ReactInstrumentation.debugTool.onUnmountComponent(
                this._contentDebugID,
              );
            }
            this._contentDebugID = null;
            return;
          }

          validateDOMNesting(null, String(content), this, this._ancestorInfo);
          this._contentDebugID = contentDebugID;
          if (hasExistingContent) {
            ReactInstrumentation.debugTool.onBeforeUpdateComponent(
              contentDebugID,
              content,
            );
            ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
          } else {
            ReactInstrumentation.debugTool.onBeforeMountComponent(
              contentDebugID,
              content,
              debugID,
            );
            ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
            ReactInstrumentation.debugTool.onSetChildren(debugID, [
              contentDebugID,
            ]);
          }
        };
      }

      // There are so many media events, it makes sense to just
      // maintain a list rather than create a `trapBubbledEvent` for each
      var mediaEvents = {
        topAbort: 'abort',
        topCanPlay: 'canplay',
        topCanPlayThrough: 'canplaythrough',
        topDurationChange: 'durationchange',
        topEmptied: 'emptied',
        topEncrypted: 'encrypted',
        topEnded: 'ended',
        topError: 'error',
        topLoadedData: 'loadeddata',
        topLoadedMetadata: 'loadedmetadata',
        topLoadStart: 'loadstart',
        topPause: 'pause',
        topPlay: 'play',
        topPlaying: 'playing',
        topProgress: 'progress',
        topRateChange: 'ratechange',
        topSeeked: 'seeked',
        topSeeking: 'seeking',
        topStalled: 'stalled',
        topSuspend: 'suspend',
        topTimeUpdate: 'timeupdate',
        topVolumeChange: 'volumechange',
        topWaiting: 'waiting',
      };

      function trapBubbledEventsLocal() {
        var inst = this;
        // If a component renders to null or if another component fatals and causes
        // the state of the tree to be corrupted, `node` here can be null.
        !inst._rootNodeID
          ? true
            ? invariant(false, 'Must be mounted to trap events')
            : _prodInvariant('63')
          : void 0;
        var node = getNode(inst);
        !node
          ? true
            ? invariant(
                false,
                'trapBubbledEvent(...): Requires node to be rendered.',
              )
            : _prodInvariant('64')
          : void 0;

        switch (inst._tag) {
          case 'iframe':
          case 'object':
            inst._wrapperState.listeners = [
              ReactBrowserEventEmitter.trapBubbledEvent(
                EventConstants.topLevelTypes.topLoad,
                'load',
                node,
              ),
            ];
            break;
          case 'video':
          case 'audio':
            inst._wrapperState.listeners = [];
            // Create listener for each media event
            for (var event in mediaEvents) {
              if (mediaEvents.hasOwnProperty(event)) {
                inst._wrapperState.listeners.push(
                  ReactBrowserEventEmitter.trapBubbledEvent(
                    EventConstants.topLevelTypes[event],
                    mediaEvents[event],
                    node,
                  ),
                );
              }
            }
            break;
          case 'source':
            inst._wrapperState.listeners = [
              ReactBrowserEventEmitter.trapBubbledEvent(
                EventConstants.topLevelTypes.topError,
                'error',
                node,
              ),
            ];
            break;
          case 'img':
            inst._wrapperState.listeners = [
              ReactBrowserEventEmitter.trapBubbledEvent(
                EventConstants.topLevelTypes.topError,
                'error',
                node,
              ),
              ReactBrowserEventEmitter.trapBubbledEvent(
                EventConstants.topLevelTypes.topLoad,
                'load',
                node,
              ),
            ];
            break;
          case 'form':
            inst._wrapperState.listeners = [
              ReactBrowserEventEmitter.trapBubbledEvent(
                EventConstants.topLevelTypes.topReset,
                'reset',
                node,
              ),
              ReactBrowserEventEmitter.trapBubbledEvent(
                EventConstants.topLevelTypes.topSubmit,
                'submit',
                node,
              ),
            ];
            break;
          case 'input':
          case 'select':
          case 'textarea':
            inst._wrapperState.listeners = [
              ReactBrowserEventEmitter.trapBubbledEvent(
                EventConstants.topLevelTypes.topInvalid,
                'invalid',
                node,
              ),
            ];
            break;
        }
      }

      function postUpdateSelectWrapper() {
        ReactDOMSelect.postUpdateWrapper(this);
      }

      // For HTML, certain tags should omit their close tag. We keep a whitelist for
      // those special-case tags.

      var omittedCloseTags = {
        area: true,
        base: true,
        br: true,
        col: true,
        embed: true,
        hr: true,
        img: true,
        input: true,
        keygen: true,
        link: true,
        meta: true,
        param: true,
        source: true,
        track: true,
        wbr: true,
      };

      // NOTE: menuitem's close tag should be omitted, but that causes problems.
      var newlineEatingTags = {
        listing: true,
        pre: true,
        textarea: true,
      };

      // For HTML, certain tags cannot have children. This has the same purpose as
      // `omittedCloseTags` except that `menuitem` should still have its closing tag.

      var voidElementTags = _assign(
        {
          menuitem: true,
        },
        omittedCloseTags,
      );

      // We accept any tag to be rendered but since this gets injected into arbitrary
      // HTML, we want to make sure that it's a safe tag.
      // http://www.w3.org/TR/REC-xml/#NT-Name

      var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
      var validatedTagCache = {};
      var hasOwnProperty = {}.hasOwnProperty;

      function validateDangerousTag(tag) {
        if (!hasOwnProperty.call(validatedTagCache, tag)) {
          !VALID_TAG_REGEX.test(tag)
            ? true
              ? invariant(false, 'Invalid tag: %s', tag)
              : _prodInvariant('65', tag)
            : void 0;
          validatedTagCache[tag] = true;
        }
      }

      function isCustomComponent(tagName, props) {
        return tagName.indexOf('-') >= 0 || props.is != null;
      }

      var globalIdCounter = 1;

      /**
       * Creates a new React class that is idempotent and capable of containing other
       * React components. It accepts event listeners and DOM properties that are
       * valid according to `DOMProperty`.
       *
       *  - Event listeners: `onClick`, `onMouseDown`, etc.
       *  - DOM properties: `className`, `name`, `title`, etc.
       *
       * The `style` property functions differently from the DOM API. It accepts an
       * object mapping of style properties to values.
       *
       * @constructor ReactDOMComponent
       * @extends ReactMultiChild
       */
      function ReactDOMComponent(element) {
        var tag = element.type;
        validateDangerousTag(tag);
        this._currentElement = element;
        this._tag = tag.toLowerCase();
        this._namespaceURI = null;
        this._renderedChildren = null;
        this._previousStyle = null;
        this._previousStyleCopy = null;
        this._hostNode = null;
        this._hostParent = null;
        this._rootNodeID = 0;
        this._domID = 0;
        this._hostContainerInfo = null;
        this._wrapperState = null;
        this._topLevelWrapper = null;
        this._flags = 0;
        if (true) {
          this._ancestorInfo = null;
          setAndValidateContentChildDev.call(this, null);
        }
      }

      ReactDOMComponent.displayName = 'ReactDOMComponent';

      ReactDOMComponent.Mixin = {
        /**
         * Generates root tag markup then recurses. This method has side effects and
         * is not idempotent.
         *
         * @internal
         * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
         * @param {?ReactDOMComponent} the parent component instance
         * @param {?object} info about the host container
         * @param {object} context
         * @return {string} The computed markup.
         */
        mountComponent: function (
          transaction,
          hostParent,
          hostContainerInfo,
          context,
        ) {
          this._rootNodeID = globalIdCounter++;
          this._domID = hostContainerInfo._idCounter++;
          this._hostParent = hostParent;
          this._hostContainerInfo = hostContainerInfo;

          var props = this._currentElement.props;

          switch (this._tag) {
            case 'audio':
            case 'form':
            case 'iframe':
            case 'img':
            case 'link':
            case 'object':
            case 'source':
            case 'video':
              this._wrapperState = {
                listeners: null,
              };
              transaction
                .getReactMountReady()
                .enqueue(trapBubbledEventsLocal, this);
              break;
            case 'button':
              props = ReactDOMButton.getHostProps(this, props, hostParent);
              break;
            case 'input':
              ReactDOMInput.mountWrapper(this, props, hostParent);
              props = ReactDOMInput.getHostProps(this, props);
              transaction
                .getReactMountReady()
                .enqueue(trapBubbledEventsLocal, this);
              break;
            case 'option':
              ReactDOMOption.mountWrapper(this, props, hostParent);
              props = ReactDOMOption.getHostProps(this, props);
              break;
            case 'select':
              ReactDOMSelect.mountWrapper(this, props, hostParent);
              props = ReactDOMSelect.getHostProps(this, props);
              transaction
                .getReactMountReady()
                .enqueue(trapBubbledEventsLocal, this);
              break;
            case 'textarea':
              ReactDOMTextarea.mountWrapper(this, props, hostParent);
              props = ReactDOMTextarea.getHostProps(this, props);
              transaction
                .getReactMountReady()
                .enqueue(trapBubbledEventsLocal, this);
              break;
          }

          assertValidProps(this, props);

          // We create tags in the namespace of their parent container, except HTML
          // tags get no namespace.
          var namespaceURI;
          var parentTag;
          if (hostParent != null) {
            namespaceURI = hostParent._namespaceURI;
            parentTag = hostParent._tag;
          } else if (hostContainerInfo._tag) {
            namespaceURI = hostContainerInfo._namespaceURI;
            parentTag = hostContainerInfo._tag;
          }
          if (
            namespaceURI == null ||
            (namespaceURI === DOMNamespaces.svg &&
              parentTag === 'foreignobject')
          ) {
            namespaceURI = DOMNamespaces.html;
          }
          if (namespaceURI === DOMNamespaces.html) {
            if (this._tag === 'svg') {
              namespaceURI = DOMNamespaces.svg;
            } else if (this._tag === 'math') {
              namespaceURI = DOMNamespaces.mathml;
            }
          }
          this._namespaceURI = namespaceURI;

          if (true) {
            var parentInfo;
            if (hostParent != null) {
              parentInfo = hostParent._ancestorInfo;
            } else if (hostContainerInfo._tag) {
              parentInfo = hostContainerInfo._ancestorInfo;
            }
            if (parentInfo) {
              // parentInfo should always be present except for the top-level
              // component when server rendering
              validateDOMNesting(this._tag, null, this, parentInfo);
            }
            this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(
              parentInfo,
              this._tag,
              this,
            );
          }

          var mountImage;
          if (transaction.useCreateElement) {
            var ownerDocument = hostContainerInfo._ownerDocument;
            var el;
            if (namespaceURI === DOMNamespaces.html) {
              if (this._tag === 'script') {
                // Create the script via .innerHTML so its "parser-inserted" flag is
                // set to true and it does not execute
                var div = ownerDocument.createElement('div');
                var type = this._currentElement.type;
                div.innerHTML = '<' + type + '></' + type + '>';
                el = div.removeChild(div.firstChild);
              } else if (props.is) {
                el = ownerDocument.createElement(
                  this._currentElement.type,
                  props.is,
                );
              } else {
                // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
                // See discussion in https://github.com/facebook/react/pull/6896
                // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
                el = ownerDocument.createElement(this._currentElement.type);
              }
            } else {
              el = ownerDocument.createElementNS(
                namespaceURI,
                this._currentElement.type,
              );
            }
            ReactDOMComponentTree.precacheNode(this, el);
            this._flags |= Flags.hasCachedChildNodes;
            if (!this._hostParent) {
              DOMPropertyOperations.setAttributeForRoot(el);
            }
            this._updateDOMProperties(null, props, transaction);
            var lazyTree = DOMLazyTree(el);
            this._createInitialChildren(transaction, props, context, lazyTree);
            mountImage = lazyTree;
          } else {
            var tagOpen = this._createOpenTagMarkupAndPutListeners(
              transaction,
              props,
            );
            var tagContent = this._createContentMarkup(
              transaction,
              props,
              context,
            );
            if (!tagContent && omittedCloseTags[this._tag]) {
              mountImage = tagOpen + '/>';
            } else {
              mountImage =
                tagOpen +
                '>' +
                tagContent +
                '</' +
                this._currentElement.type +
                '>';
            }
          }

          switch (this._tag) {
            case 'input':
              transaction.getReactMountReady().enqueue(inputPostMount, this);
              if (props.autoFocus) {
                transaction
                  .getReactMountReady()
                  .enqueue(AutoFocusUtils.focusDOMComponent, this);
              }
              break;
            case 'textarea':
              transaction.getReactMountReady().enqueue(textareaPostMount, this);
              if (props.autoFocus) {
                transaction
                  .getReactMountReady()
                  .enqueue(AutoFocusUtils.focusDOMComponent, this);
              }
              break;
            case 'select':
              if (props.autoFocus) {
                transaction
                  .getReactMountReady()
                  .enqueue(AutoFocusUtils.focusDOMComponent, this);
              }
              break;
            case 'button':
              if (props.autoFocus) {
                transaction
                  .getReactMountReady()
                  .enqueue(AutoFocusUtils.focusDOMComponent, this);
              }
              break;
            case 'option':
              transaction.getReactMountReady().enqueue(optionPostMount, this);
              break;
          }

          return mountImage;
        },

        /**
         * Creates markup for the open tag and all attributes.
         *
         * This method has side effects because events get registered.
         *
         * Iterating over object properties is faster than iterating over arrays.
         * @see http://jsperf.com/obj-vs-arr-iteration
         *
         * @private
         * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
         * @param {object} props
         * @return {string} Markup of opening tag.
         */
        _createOpenTagMarkupAndPutListeners: function (transaction, props) {
          var ret = '<' + this._currentElement.type;

          for (var propKey in props) {
            if (!props.hasOwnProperty(propKey)) {
              continue;
            }
            var propValue = props[propKey];
            if (propValue == null) {
              continue;
            }
            if (registrationNameModules.hasOwnProperty(propKey)) {
              if (propValue) {
                enqueuePutListener(this, propKey, propValue, transaction);
              }
            } else {
              if (propKey === STYLE) {
                if (propValue) {
                  if (true) {
                    // See `_updateDOMProperties`. style block
                    this._previousStyle = propValue;
                  }
                  propValue = this._previousStyleCopy = _assign(
                    {},
                    props.style,
                  );
                }
                propValue = CSSPropertyOperations.createMarkupForStyles(
                  propValue,
                  this,
                );
              }
              var markup = null;
              if (this._tag != null && isCustomComponent(this._tag, props)) {
                if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
                  markup = DOMPropertyOperations.createMarkupForCustomAttribute(
                    propKey,
                    propValue,
                  );
                }
              } else {
                markup = DOMPropertyOperations.createMarkupForProperty(
                  propKey,
                  propValue,
                );
              }
              if (markup) {
                ret += ' ' + markup;
              }
            }
          }

          // For static pages, no need to put React ID and checksum. Saves lots of
          // bytes.
          if (transaction.renderToStaticMarkup) {
            return ret;
          }

          if (!this._hostParent) {
            ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
          }
          ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
          return ret;
        },

        /**
         * Creates markup for the content between the tags.
         *
         * @private
         * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
         * @param {object} props
         * @param {object} context
         * @return {string} Content markup.
         */
        _createContentMarkup: function (transaction, props, context) {
          var ret = '';

          // Intentional use of != to avoid catching zero/false.
          var innerHTML = props.dangerouslySetInnerHTML;
          if (innerHTML != null) {
            if (innerHTML.__html != null) {
              ret = innerHTML.__html;
            }
          } else {
            var contentToUse = CONTENT_TYPES[typeof props.children]
              ? props.children
              : null;
            var childrenToUse = contentToUse != null ? null : props.children;
            if (contentToUse != null) {
              // TODO: Validate that text is allowed as a child of this node
              ret = escapeTextContentForBrowser(contentToUse);
              if (true) {
                setAndValidateContentChildDev.call(this, contentToUse);
              }
            } else if (childrenToUse != null) {
              var mountImages = this.mountChildren(
                childrenToUse,
                transaction,
                context,
              );
              ret = mountImages.join('');
            }
          }
          if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
            // text/html ignores the first character in these tags if it's a newline
            // Prefer to break application/xml over text/html (for now) by adding
            // a newline specifically to get eaten by the parser. (Alternately for
            // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
            // \r is normalized out by HTMLTextAreaElement#value.)
            // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
            // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
            // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
            // See: Parsing of "textarea" "listing" and "pre" elements
            //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
            return '\n' + ret;
          } else {
            return ret;
          }
        },

        _createInitialChildren: function (
          transaction,
          props,
          context,
          lazyTree,
        ) {
          // Intentional use of != to avoid catching zero/false.
          var innerHTML = props.dangerouslySetInnerHTML;
          if (innerHTML != null) {
            if (innerHTML.__html != null) {
              DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
            }
          } else {
            var contentToUse = CONTENT_TYPES[typeof props.children]
              ? props.children
              : null;
            var childrenToUse = contentToUse != null ? null : props.children;
            if (contentToUse != null) {
              // TODO: Validate that text is allowed as a child of this node
              if (true) {
                setAndValidateContentChildDev.call(this, contentToUse);
              }
              DOMLazyTree.queueText(lazyTree, contentToUse);
            } else if (childrenToUse != null) {
              var mountImages = this.mountChildren(
                childrenToUse,
                transaction,
                context,
              );
              for (var i = 0; i < mountImages.length; i++) {
                DOMLazyTree.queueChild(lazyTree, mountImages[i]);
              }
            }
          }
        },

        /**
         * Receives a next element and updates the component.
         *
         * @internal
         * @param {ReactElement} nextElement
         * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
         * @param {object} context
         */
        receiveComponent: function (nextElement, transaction, context) {
          var prevElement = this._currentElement;
          this._currentElement = nextElement;
          this.updateComponent(transaction, prevElement, nextElement, context);
        },

        /**
         * Updates a DOM component after it has already been allocated and
         * attached to the DOM. Reconciles the root DOM node, then recurses.
         *
         * @param {ReactReconcileTransaction} transaction
         * @param {ReactElement} prevElement
         * @param {ReactElement} nextElement
         * @internal
         * @overridable
         */
        updateComponent: function (
          transaction,
          prevElement,
          nextElement,
          context,
        ) {
          var lastProps = prevElement.props;
          var nextProps = this._currentElement.props;

          switch (this._tag) {
            case 'button':
              lastProps = ReactDOMButton.getHostProps(this, lastProps);
              nextProps = ReactDOMButton.getHostProps(this, nextProps);
              break;
            case 'input':
              lastProps = ReactDOMInput.getHostProps(this, lastProps);
              nextProps = ReactDOMInput.getHostProps(this, nextProps);
              break;
            case 'option':
              lastProps = ReactDOMOption.getHostProps(this, lastProps);
              nextProps = ReactDOMOption.getHostProps(this, nextProps);
              break;
            case 'select':
              lastProps = ReactDOMSelect.getHostProps(this, lastProps);
              nextProps = ReactDOMSelect.getHostProps(this, nextProps);
              break;
            case 'textarea':
              lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
              nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
              break;
          }

          assertValidProps(this, nextProps);
          this._updateDOMProperties(lastProps, nextProps, transaction);
          this._updateDOMChildren(lastProps, nextProps, transaction, context);

          switch (this._tag) {
            case 'input':
              // Update the wrapper around inputs *after* updating props. This has to
              // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
              // raise warnings and prevent the new value from being assigned.
              ReactDOMInput.updateWrapper(this);
              break;
            case 'textarea':
              ReactDOMTextarea.updateWrapper(this);
              break;
            case 'select':
              // <select> value update needs to occur after <option> children
              // reconciliation
              transaction
                .getReactMountReady()
                .enqueue(postUpdateSelectWrapper, this);
              break;
          }
        },

        /**
         * Reconciles the properties by detecting differences in property values and
         * updating the DOM as necessary. This function is probably the single most
         * critical path for performance optimization.
         *
         * TODO: Benchmark whether checking for changed values in memory actually
         *       improves performance (especially statically positioned elements).
         * TODO: Benchmark the effects of putting this at the top since 99% of props
         *       do not change for a given reconciliation.
         * TODO: Benchmark areas that can be improved with caching.
         *
         * @private
         * @param {object} lastProps
         * @param {object} nextProps
         * @param {?DOMElement} node
         */
        _updateDOMProperties: function (lastProps, nextProps, transaction) {
          var propKey;
          var styleName;
          var styleUpdates;
          for (propKey in lastProps) {
            if (
              nextProps.hasOwnProperty(propKey) ||
              !lastProps.hasOwnProperty(propKey) ||
              lastProps[propKey] == null
            ) {
              continue;
            }
            if (propKey === STYLE) {
              var lastStyle = this._previousStyleCopy;
              for (styleName in lastStyle) {
                if (lastStyle.hasOwnProperty(styleName)) {
                  styleUpdates = styleUpdates || {};
                  styleUpdates[styleName] = '';
                }
              }
              this._previousStyleCopy = null;
            } else if (registrationNameModules.hasOwnProperty(propKey)) {
              if (lastProps[propKey]) {
                // Only call deleteListener if there was a listener previously or
                // else willDeleteListener gets called when there wasn't actually a
                // listener (e.g., onClick={null})
                deleteListener(this, propKey);
              }
            } else if (isCustomComponent(this._tag, lastProps)) {
              if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
                DOMPropertyOperations.deleteValueForAttribute(
                  getNode(this),
                  propKey,
                );
              }
            } else if (
              DOMProperty.properties[propKey] ||
              DOMProperty.isCustomAttribute(propKey)
            ) {
              DOMPropertyOperations.deleteValueForProperty(
                getNode(this),
                propKey,
              );
            }
          }
          for (propKey in nextProps) {
            var nextProp = nextProps[propKey];
            var lastProp =
              propKey === STYLE
                ? this._previousStyleCopy
                : lastProps != null
                ? lastProps[propKey]
                : undefined;
            if (
              !nextProps.hasOwnProperty(propKey) ||
              nextProp === lastProp ||
              (nextProp == null && lastProp == null)
            ) {
              continue;
            }
            if (propKey === STYLE) {
              if (nextProp) {
                if (true) {
                  checkAndWarnForMutatedStyle(
                    this._previousStyleCopy,
                    this._previousStyle,
                    this,
                  );
                  this._previousStyle = nextProp;
                }
                nextProp = this._previousStyleCopy = _assign({}, nextProp);
              } else {
                this._previousStyleCopy = null;
              }
              if (lastProp) {
                // Unset styles on `lastProp` but not on `nextProp`.
                for (styleName in lastProp) {
                  if (
                    lastProp.hasOwnProperty(styleName) &&
                    (!nextProp || !nextProp.hasOwnProperty(styleName))
                  ) {
                    styleUpdates = styleUpdates || {};
                    styleUpdates[styleName] = '';
                  }
                }
                // Update styles that changed since `lastProp`.
                for (styleName in nextProp) {
                  if (
                    nextProp.hasOwnProperty(styleName) &&
                    lastProp[styleName] !== nextProp[styleName]
                  ) {
                    styleUpdates = styleUpdates || {};
                    styleUpdates[styleName] = nextProp[styleName];
                  }
                }
              } else {
                // Relies on `updateStylesByID` not mutating `styleUpdates`.
                styleUpdates = nextProp;
              }
            } else if (registrationNameModules.hasOwnProperty(propKey)) {
              if (nextProp) {
                enqueuePutListener(this, propKey, nextProp, transaction);
              } else if (lastProp) {
                deleteListener(this, propKey);
              }
            } else if (isCustomComponent(this._tag, nextProps)) {
              if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
                DOMPropertyOperations.setValueForAttribute(
                  getNode(this),
                  propKey,
                  nextProp,
                );
              }
            } else if (
              DOMProperty.properties[propKey] ||
              DOMProperty.isCustomAttribute(propKey)
            ) {
              var node = getNode(this);
              // If we're updating to null or undefined, we should remove the property
              // from the DOM node instead of inadvertently setting to a string. This
              // brings us in line with the same behavior we have on initial render.
              if (nextProp != null) {
                DOMPropertyOperations.setValueForProperty(
                  node,
                  propKey,
                  nextProp,
                );
              } else {
                DOMPropertyOperations.deleteValueForProperty(node, propKey);
              }
            }
          }
          if (styleUpdates) {
            CSSPropertyOperations.setValueForStyles(
              getNode(this),
              styleUpdates,
              this,
            );
          }
        },

        /**
         * Reconciles the children with the various properties that affect the
         * children content.
         *
         * @param {object} lastProps
         * @param {object} nextProps
         * @param {ReactReconcileTransaction} transaction
         * @param {object} context
         */
        _updateDOMChildren: function (
          lastProps,
          nextProps,
          transaction,
          context,
        ) {
          var lastContent = CONTENT_TYPES[typeof lastProps.children]
            ? lastProps.children
            : null;
          var nextContent = CONTENT_TYPES[typeof nextProps.children]
            ? nextProps.children
            : null;

          var lastHtml =
            lastProps.dangerouslySetInnerHTML &&
            lastProps.dangerouslySetInnerHTML.__html;
          var nextHtml =
            nextProps.dangerouslySetInnerHTML &&
            nextProps.dangerouslySetInnerHTML.__html;

          // Note the use of `!=` which checks for null or undefined.
          var lastChildren = lastContent != null ? null : lastProps.children;
          var nextChildren = nextContent != null ? null : nextProps.children;

          // If we're switching from children to content/html or vice versa, remove
          // the old content
          var lastHasContentOrHtml = lastContent != null || lastHtml != null;
          var nextHasContentOrHtml = nextContent != null || nextHtml != null;
          if (lastChildren != null && nextChildren == null) {
            this.updateChildren(null, transaction, context);
          } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
            this.updateTextContent('');
            if (true) {
              ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
            }
          }

          if (nextContent != null) {
            if (lastContent !== nextContent) {
              this.updateTextContent('' + nextContent);
              if (true) {
                setAndValidateContentChildDev.call(this, nextContent);
              }
            }
          } else if (nextHtml != null) {
            if (lastHtml !== nextHtml) {
              this.updateMarkup('' + nextHtml);
            }
            if (true) {
              ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
            }
          } else if (nextChildren != null) {
            if (true) {
              setAndValidateContentChildDev.call(this, null);
            }

            this.updateChildren(nextChildren, transaction, context);
          }
        },

        getHostNode: function () {
          return getNode(this);
        },

        /**
         * Destroys all event registrations for this instance. Does not remove from
         * the DOM. That must be done by the parent.
         *
         * @internal
         */
        unmountComponent: function (safely) {
          switch (this._tag) {
            case 'audio':
            case 'form':
            case 'iframe':
            case 'img':
            case 'link':
            case 'object':
            case 'source':
            case 'video':
              var listeners = this._wrapperState.listeners;
              if (listeners) {
                for (var i = 0; i < listeners.length; i++) {
                  listeners[i].remove();
                }
              }
              break;
            case 'html':
            case 'head':
            case 'body':
              /**
               * Components like <html> <head> and <body> can't be removed or added
               * easily in a cross-browser way, however it's valuable to be able to
               * take advantage of React's reconciliation for styling and <title>
               * management. So we just document it and throw in dangerous cases.
               */
              true
                ? true
                  ? invariant(
                      false,
                      '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.',
                      this._tag,
                    )
                  : _prodInvariant('66', this._tag)
                : void 0;
              break;
          }

          this.unmountChildren(safely);
          ReactDOMComponentTree.uncacheNode(this);
          EventPluginHub.deleteAllListeners(this);
          this._rootNodeID = 0;
          this._domID = 0;
          this._wrapperState = null;

          if (true) {
            setAndValidateContentChildDev.call(this, null);
          }
        },

        getPublicInstance: function () {
          return getNode(this);
        },
      };

      _assign(
        ReactDOMComponent.prototype,
        ReactDOMComponent.Mixin,
        ReactMultiChild.Mixin,
      );

      module.exports = ReactDOMComponent;

      /***/
    },
    /* 191 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule AutoFocusUtils
       */

      'use strict';

      var ReactDOMComponentTree = __webpack_require__(132);

      var focusNode = __webpack_require__(192);

      var AutoFocusUtils = {
        focusDOMComponent: function () {
          focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
        },
      };

      module.exports = AutoFocusUtils;

      /***/
    },
    /* 192 */
    /***/ function (module, exports) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       */

      'use strict';

      /**
       * @param {DOMElement} node input/textarea to focus
       */

      function focusNode(node) {
        // IE8 can throw "Can't move focus to the control because it is invisible,
        // not enabled, or of a type that does not accept the focus." for all kinds of
        // reasons that are too expensive and fragile to test.
        try {
          node.focus();
        } catch (e) {}
      }

      module.exports = focusNode;

      /***/
    },
    /* 193 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule CSSPropertyOperations
       */

      'use strict';

      var CSSProperty = __webpack_require__(194);
      var ExecutionEnvironment = __webpack_require__(145);
      var ReactInstrumentation = __webpack_require__(158);

      var camelizeStyleName = __webpack_require__(195);
      var dangerousStyleValue = __webpack_require__(197);
      var hyphenateStyleName = __webpack_require__(198);
      var memoizeStringOnly = __webpack_require__(200);
      var warning = __webpack_require__(12);

      var processStyleName = memoizeStringOnly(function (styleName) {
        return hyphenateStyleName(styleName);
      });

      var hasShorthandPropertyBug = false;
      var styleFloatAccessor = 'cssFloat';
      if (ExecutionEnvironment.canUseDOM) {
        var tempStyle = document.createElement('div').style;
        try {
          // IE8 throws "Invalid argument." if resetting shorthand style properties.
          tempStyle.font = '';
        } catch (e) {
          hasShorthandPropertyBug = true;
        }
        // IE8 only supports accessing cssFloat (standard) as styleFloat
        if (document.documentElement.style.cssFloat === undefined) {
          styleFloatAccessor = 'styleFloat';
        }
      }

      if (true) {
        // 'msTransform' is correct, but the other prefixes should be capitalized
        var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

        // style values shouldn't contain a semicolon
        var badStyleValueWithSemicolonPattern = /;\s*$/;

        var warnedStyleNames = {};
        var warnedStyleValues = {};
        var warnedForNaNValue = false;

        var warnHyphenatedStyleName = function (name, owner) {
          if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
            return;
          }

          warnedStyleNames[name] = true;
          true
            ? warning(
                false,
                'Unsupported style property %s. Did you mean %s?%s',
                name,
                camelizeStyleName(name),
                checkRenderMessage(owner),
              )
            : void 0;
        };

        var warnBadVendoredStyleName = function (name, owner) {
          if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
            return;
          }

          warnedStyleNames[name] = true;
          true
            ? warning(
                false,
                'Unsupported vendor-prefixed style property %s. Did you mean %s?%s',
                name,
                name.charAt(0).toUpperCase() + name.slice(1),
                checkRenderMessage(owner),
              )
            : void 0;
        };

        var warnStyleValueWithSemicolon = function (name, value, owner) {
          if (
            warnedStyleValues.hasOwnProperty(value) &&
            warnedStyleValues[value]
          ) {
            return;
          }

          warnedStyleValues[value] = true;
          true
            ? warning(
                false,
                "Style property values shouldn't contain a semicolon.%s " +
                  'Try "%s: %s" instead.',
                checkRenderMessage(owner),
                name,
                value.replace(badStyleValueWithSemicolonPattern, ''),
              )
            : void 0;
        };

        var warnStyleValueIsNaN = function (name, value, owner) {
          if (warnedForNaNValue) {
            return;
          }

          warnedForNaNValue = true;
          true
            ? warning(
                false,
                '`NaN` is an invalid value for the `%s` css style property.%s',
                name,
                checkRenderMessage(owner),
              )
            : void 0;
        };

        var checkRenderMessage = function (owner) {
          if (owner) {
            var name = owner.getName();
            if (name) {
              return ' Check the render method of `' + name + '`.';
            }
          }
          return '';
        };

        /**
         * @param {string} name
         * @param {*} value
         * @param {ReactDOMComponent} component
         */
        var warnValidStyle = function (name, value, component) {
          var owner;
          if (component) {
            owner = component._currentElement._owner;
          }
          if (name.indexOf('-') > -1) {
            warnHyphenatedStyleName(name, owner);
          } else if (badVendoredStyleNamePattern.test(name)) {
            warnBadVendoredStyleName(name, owner);
          } else if (badStyleValueWithSemicolonPattern.test(value)) {
            warnStyleValueWithSemicolon(name, value, owner);
          }

          if (typeof value === 'number' && isNaN(value)) {
            warnStyleValueIsNaN(name, value, owner);
          }
        };
      }

      /**
       * Operations for dealing with CSS properties.
       */
      var CSSPropertyOperations = {
        /**
         * Serializes a mapping of style properties for use as inline styles:
         *
         *   > createMarkupForStyles({width: '200px', height: 0})
         *   "width:200px;height:0;"
         *
         * Undefined values are ignored so that declarative programming is easier.
         * The result should be HTML-escaped before insertion into the DOM.
         *
         * @param {object} styles
         * @param {ReactDOMComponent} component
         * @return {?string}
         */
        createMarkupForStyles: function (styles, component) {
          var serialized = '';
          for (var styleName in styles) {
            if (!styles.hasOwnProperty(styleName)) {
              continue;
            }
            var styleValue = styles[styleName];
            if (true) {
              warnValidStyle(styleName, styleValue, component);
            }
            if (styleValue != null) {
              serialized += processStyleName(styleName) + ':';
              serialized +=
                dangerousStyleValue(styleName, styleValue, component) + ';';
            }
          }
          return serialized || null;
        },

        /**
         * Sets the value for multiple styles on a node.  If a value is specified as
         * '' (empty string), the corresponding style property will be unset.
         *
         * @param {DOMElement} node
         * @param {object} styles
         * @param {ReactDOMComponent} component
         */
        setValueForStyles: function (node, styles, component) {
          if (true) {
            ReactInstrumentation.debugTool.onHostOperation(
              component._debugID,
              'update styles',
              styles,
            );
          }

          var style = node.style;
          for (var styleName in styles) {
            if (!styles.hasOwnProperty(styleName)) {
              continue;
            }
            if (true) {
              warnValidStyle(styleName, styles[styleName], component);
            }
            var styleValue = dangerousStyleValue(
              styleName,
              styles[styleName],
              component,
            );
            if (styleName === 'float' || styleName === 'cssFloat') {
              styleName = styleFloatAccessor;
            }
            if (styleValue) {
              style[styleName] = styleValue;
            } else {
              var expansion =
                hasShorthandPropertyBug &&
                CSSProperty.shorthandPropertyExpansions[styleName];
              if (expansion) {
                // Shorthand property that IE8 won't like unsetting, so unset each
                // component to placate it
                for (var individualStyleName in expansion) {
                  style[individualStyleName] = '';
                }
              } else {
                style[styleName] = '';
              }
            }
          }
        },
      };

      module.exports = CSSPropertyOperations;

      /***/
    },
    /* 194 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule CSSProperty
       */

      'use strict';

      /**
       * CSS properties which accept numbers but are not in units of "px".
       */

      var isUnitlessNumber = {
        animationIterationCount: true,
        borderImageOutset: true,
        borderImageSlice: true,
        borderImageWidth: true,
        boxFlex: true,
        boxFlexGroup: true,
        boxOrdinalGroup: true,
        columnCount: true,
        flex: true,
        flexGrow: true,
        flexPositive: true,
        flexShrink: true,
        flexNegative: true,
        flexOrder: true,
        gridRow: true,
        gridColumn: true,
        fontWeight: true,
        lineClamp: true,
        lineHeight: true,
        opacity: true,
        order: true,
        orphans: true,
        tabSize: true,
        widows: true,
        zIndex: true,
        zoom: true,

        // SVG-related properties
        fillOpacity: true,
        floodOpacity: true,
        stopOpacity: true,
        strokeDasharray: true,
        strokeDashoffset: true,
        strokeMiterlimit: true,
        strokeOpacity: true,
        strokeWidth: true,
      };

      /**
       * @param {string} prefix vendor-specific prefix, eg: Webkit
       * @param {string} key style name, eg: transitionDuration
       * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
       * WebkitTransitionDuration
       */
      function prefixKey(prefix, key) {
        return prefix + key.charAt(0).toUpperCase() + key.substring(1);
      }

      /**
       * Support style names that may come passed in prefixed by adding permutations
       * of vendor prefixes.
       */
      var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

      // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
      // infinite loop, because it iterates over the newly added props too.
      Object.keys(isUnitlessNumber).forEach(function (prop) {
        prefixes.forEach(function (prefix) {
          isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
        });
      });

      /**
       * Most style properties can be unset by doing .style[prop] = '' but IE8
       * doesn't like doing that with shorthand properties so for the properties that
       * IE8 breaks on, which are listed here, we instead unset each of the
       * individual properties. See http://bugs.jquery.com/ticket/12385.
       * The 4-value 'clock' properties like margin, padding, border-width seem to
       * behave without any problems. Curiously, list-style works too without any
       * special prodding.
       */
      var shorthandPropertyExpansions = {
        background: {
          backgroundAttachment: true,
          backgroundColor: true,
          backgroundImage: true,
          backgroundPositionX: true,
          backgroundPositionY: true,
          backgroundRepeat: true,
        },
        backgroundPosition: {
          backgroundPositionX: true,
          backgroundPositionY: true,
        },
        border: {
          borderWidth: true,
          borderStyle: true,
          borderColor: true,
        },
        borderBottom: {
          borderBottomWidth: true,
          borderBottomStyle: true,
          borderBottomColor: true,
        },
        borderLeft: {
          borderLeftWidth: true,
          borderLeftStyle: true,
          borderLeftColor: true,
        },
        borderRight: {
          borderRightWidth: true,
          borderRightStyle: true,
          borderRightColor: true,
        },
        borderTop: {
          borderTopWidth: true,
          borderTopStyle: true,
          borderTopColor: true,
        },
        font: {
          fontStyle: true,
          fontVariant: true,
          fontWeight: true,
          fontSize: true,
          lineHeight: true,
          fontFamily: true,
        },
        outline: {
          outlineWidth: true,
          outlineStyle: true,
          outlineColor: true,
        },
      };

      var CSSProperty = {
        isUnitlessNumber: isUnitlessNumber,
        shorthandPropertyExpansions: shorthandPropertyExpansions,
      };

      module.exports = CSSProperty;

      /***/
    },
    /* 195 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      'use strict';

      var camelize = __webpack_require__(196);

      var msPattern = /^-ms-/;

      /**
       * Camelcases a hyphenated CSS property name, for example:
       *
       *   > camelizeStyleName('background-color')
       *   < "backgroundColor"
       *   > camelizeStyleName('-moz-transition')
       *   < "MozTransition"
       *   > camelizeStyleName('-ms-transition')
       *   < "msTransition"
       *
       * As Andi Smith suggests
       * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
       * is converted to lowercase `ms`.
       *
       * @param {string} string
       * @return {string}
       */
      function camelizeStyleName(string) {
        return camelize(string.replace(msPattern, 'ms-'));
      }

      module.exports = camelizeStyleName;

      /***/
    },
    /* 196 */
    /***/ function (module, exports) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      var _hyphenPattern = /-(.)/g;

      /**
       * Camelcases a hyphenated string, for example:
       *
       *   > camelize('background-color')
       *   < "backgroundColor"
       *
       * @param {string} string
       * @return {string}
       */
      function camelize(string) {
        return string.replace(_hyphenPattern, function (_, character) {
          return character.toUpperCase();
        });
      }

      module.exports = camelize;

      /***/
    },
    /* 197 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule dangerousStyleValue
       */

      'use strict';

      var CSSProperty = __webpack_require__(194);
      var warning = __webpack_require__(12);

      var isUnitlessNumber = CSSProperty.isUnitlessNumber;
      var styleWarnings = {};

      /**
       * Convert a value into the proper css writable value. The style name `name`
       * should be logical (no hyphens), as specified
       * in `CSSProperty.isUnitlessNumber`.
       *
       * @param {string} name CSS property name such as `topMargin`.
       * @param {*} value CSS property value such as `10px`.
       * @param {ReactDOMComponent} component
       * @return {string} Normalized style value with dimensions applied.
       */
      function dangerousStyleValue(name, value, component) {
        // Note that we've removed escapeTextForBrowser() calls here since the
        // whole string will be escaped when the attribute is injected into
        // the markup. If you provide unsafe user data here they can inject
        // arbitrary CSS which may be problematic (I couldn't repro this):
        // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
        // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
        // This is not an XSS hole but instead a potential CSS injection issue
        // which has lead to a greater discussion about how we're going to
        // trust URLs moving forward. See #2115901

        var isEmpty =
          value == null || typeof value === 'boolean' || value === '';
        if (isEmpty) {
          return '';
        }

        var isNonNumeric = isNaN(value);
        if (
          isNonNumeric ||
          value === 0 ||
          (isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])
        ) {
          return '' + value; // cast to string
        }

        if (typeof value === 'string') {
          if (true) {
            // Allow '0' to pass through without warning. 0 is already special and
            // doesn't require units, so we don't need to warn about it.
            if (component && value !== '0') {
              var owner = component._currentElement._owner;
              var ownerName = owner ? owner.getName() : null;
              if (ownerName && !styleWarnings[ownerName]) {
                styleWarnings[ownerName] = {};
              }
              var warned = false;
              if (ownerName) {
                var warnings = styleWarnings[ownerName];
                warned = warnings[name];
                if (!warned) {
                  warnings[name] = true;
                }
              }
              if (!warned) {
                true
                  ? warning(
                      false,
                      'a `%s` tag (owner: `%s`) was passed a numeric string value ' +
                        'for CSS property `%s` (value: `%s`) which will be treated ' +
                        'as a unitless number in a future version of React.',
                      component._currentElement.type,
                      ownerName || 'unknown',
                      name,
                      value,
                    )
                  : void 0;
              }
            }
          }
          value = value.trim();
        }
        return value + 'px';
      }

      module.exports = dangerousStyleValue;

      /***/
    },
    /* 198 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      'use strict';

      var hyphenate = __webpack_require__(199);

      var msPattern = /^ms-/;

      /**
       * Hyphenates a camelcased CSS property name, for example:
       *
       *   > hyphenateStyleName('backgroundColor')
       *   < "background-color"
       *   > hyphenateStyleName('MozTransition')
       *   < "-moz-transition"
       *   > hyphenateStyleName('msTransition')
       *   < "-ms-transition"
       *
       * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
       * is converted to `-ms-`.
       *
       * @param {string} string
       * @return {string}
       */
      function hyphenateStyleName(string) {
        return hyphenate(string).replace(msPattern, '-ms-');
      }

      module.exports = hyphenateStyleName;

      /***/
    },
    /* 199 */
    /***/ function (module, exports) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      var _uppercasePattern = /([A-Z])/g;

      /**
       * Hyphenates a camelcased string, for example:
       *
       *   > hyphenate('backgroundColor')
       *   < "background-color"
       *
       * For CSS style names, use `hyphenateStyleName` instead which works properly
       * with all vendor prefixes, including `ms`.
       *
       * @param {string} string
       * @return {string}
       */
      function hyphenate(string) {
        return string.replace(_uppercasePattern, '-$1').toLowerCase();
      }

      module.exports = hyphenate;

      /***/
    },
    /* 200 */
    /***/ function (module, exports) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       * @typechecks static-only
       */

      'use strict';

      /**
       * Memoizes the return value of a function that accepts one string argument.
       */

      function memoizeStringOnly(callback) {
        var cache = {};
        return function (string) {
          if (!cache.hasOwnProperty(string)) {
            cache[string] = callback.call(this, string);
          }
          return cache[string];
        };
      }

      module.exports = memoizeStringOnly;

      /***/
    },
    /* 201 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule DOMPropertyOperations
       */

      'use strict';

      var DOMProperty = __webpack_require__(133);
      var ReactDOMComponentTree = __webpack_require__(132);
      var ReactInstrumentation = __webpack_require__(158);

      var quoteAttributeValueForBrowser = __webpack_require__(202);
      var warning = __webpack_require__(12);

      var VALID_ATTRIBUTE_NAME_REGEX = new RegExp(
        '^[' +
          DOMProperty.ATTRIBUTE_NAME_START_CHAR +
          '][' +
          DOMProperty.ATTRIBUTE_NAME_CHAR +
          ']*$',
      );
      var illegalAttributeNameCache = {};
      var validatedAttributeNameCache = {};

      function isAttributeNameSafe(attributeName) {
        if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
          return true;
        }
        if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
          return false;
        }
        if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
          validatedAttributeNameCache[attributeName] = true;
          return true;
        }
        illegalAttributeNameCache[attributeName] = true;
        true
          ? warning(false, 'Invalid attribute name: `%s`', attributeName)
          : void 0;
        return false;
      }

      function shouldIgnoreValue(propertyInfo, value) {
        return (
          value == null ||
          (propertyInfo.hasBooleanValue && !value) ||
          (propertyInfo.hasNumericValue && isNaN(value)) ||
          (propertyInfo.hasPositiveNumericValue && value < 1) ||
          (propertyInfo.hasOverloadedBooleanValue && value === false)
        );
      }

      /**
       * Operations for dealing with DOM properties.
       */
      var DOMPropertyOperations = {
        /**
         * Creates markup for the ID property.
         *
         * @param {string} id Unescaped ID.
         * @return {string} Markup string.
         */
        createMarkupForID: function (id) {
          return (
            DOMProperty.ID_ATTRIBUTE_NAME +
            '=' +
            quoteAttributeValueForBrowser(id)
          );
        },

        setAttributeForID: function (node, id) {
          node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
        },

        createMarkupForRoot: function () {
          return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
        },

        setAttributeForRoot: function (node) {
          node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
        },

        /**
         * Creates markup for a property.
         *
         * @param {string} name
         * @param {*} value
         * @return {?string} Markup string, or null if the property was invalid.
         */
        createMarkupForProperty: function (name, value) {
          var propertyInfo = DOMProperty.properties.hasOwnProperty(name)
            ? DOMProperty.properties[name]
            : null;
          if (propertyInfo) {
            if (shouldIgnoreValue(propertyInfo, value)) {
              return '';
            }
            var attributeName = propertyInfo.attributeName;
            if (
              propertyInfo.hasBooleanValue ||
              (propertyInfo.hasOverloadedBooleanValue && value === true)
            ) {
              return attributeName + '=""';
            }
            return attributeName + '=' + quoteAttributeValueForBrowser(value);
          } else if (DOMProperty.isCustomAttribute(name)) {
            if (value == null) {
              return '';
            }
            return name + '=' + quoteAttributeValueForBrowser(value);
          }
          return null;
        },

        /**
         * Creates markup for a custom property.
         *
         * @param {string} name
         * @param {*} value
         * @return {string} Markup string, or empty string if the property was invalid.
         */
        createMarkupForCustomAttribute: function (name, value) {
          if (!isAttributeNameSafe(name) || value == null) {
            return '';
          }
          return name + '=' + quoteAttributeValueForBrowser(value);
        },

        /**
         * Sets the value for a property on a node.
         *
         * @param {DOMElement} node
         * @param {string} name
         * @param {*} value
         */
        setValueForProperty: function (node, name, value) {
          var propertyInfo = DOMProperty.properties.hasOwnProperty(name)
            ? DOMProperty.properties[name]
            : null;
          if (propertyInfo) {
            var mutationMethod = propertyInfo.mutationMethod;
            if (mutationMethod) {
              mutationMethod(node, value);
            } else if (shouldIgnoreValue(propertyInfo, value)) {
              this.deleteValueForProperty(node, name);
              return;
            } else if (propertyInfo.mustUseProperty) {
              // Contrary to `setAttribute`, object properties are properly
              // `toString`ed by IE8/9.
              node[propertyInfo.propertyName] = value;
            } else {
              var attributeName = propertyInfo.attributeName;
              var namespace = propertyInfo.attributeNamespace;
              // `setAttribute` with objects becomes only `[object]` in IE8/9,
              // ('' + value) makes it output the correct toString()-value.
              if (namespace) {
                node.setAttributeNS(namespace, attributeName, '' + value);
              } else if (
                propertyInfo.hasBooleanValue ||
                (propertyInfo.hasOverloadedBooleanValue && value === true)
              ) {
                node.setAttribute(attributeName, '');
              } else {
                node.setAttribute(attributeName, '' + value);
              }
            }
          } else if (DOMProperty.isCustomAttribute(name)) {
            DOMPropertyOperations.setValueForAttribute(node, name, value);
            return;
          }

          if (true) {
            var payload = {};
            payload[name] = value;
            ReactInstrumentation.debugTool.onHostOperation(
              ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
              'update attribute',
              payload,
            );
          }
        },

        setValueForAttribute: function (node, name, value) {
          if (!isAttributeNameSafe(name)) {
            return;
          }
          if (value == null) {
            node.removeAttribute(name);
          } else {
            node.setAttribute(name, '' + value);
          }

          if (true) {
            var payload = {};
            payload[name] = value;
            ReactInstrumentation.debugTool.onHostOperation(
              ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
              'update attribute',
              payload,
            );
          }
        },

        /**
         * Deletes an attributes from a node.
         *
         * @param {DOMElement} node
         * @param {string} name
         */
        deleteValueForAttribute: function (node, name) {
          node.removeAttribute(name);
          if (true) {
            ReactInstrumentation.debugTool.onHostOperation(
              ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
              'remove attribute',
              name,
            );
          }
        },

        /**
         * Deletes the value for a property on a node.
         *
         * @param {DOMElement} node
         * @param {string} name
         */
        deleteValueForProperty: function (node, name) {
          var propertyInfo = DOMProperty.properties.hasOwnProperty(name)
            ? DOMProperty.properties[name]
            : null;
          if (propertyInfo) {
            var mutationMethod = propertyInfo.mutationMethod;
            if (mutationMethod) {
              mutationMethod(node, undefined);
            } else if (propertyInfo.mustUseProperty) {
              var propName = propertyInfo.propertyName;
              if (propertyInfo.hasBooleanValue) {
                node[propName] = false;
              } else {
                node[propName] = '';
              }
            } else {
              node.removeAttribute(propertyInfo.attributeName);
            }
          } else if (DOMProperty.isCustomAttribute(name)) {
            node.removeAttribute(name);
          }

          if (true) {
            ReactInstrumentation.debugTool.onHostOperation(
              ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
              'remove attribute',
              name,
            );
          }
        },
      };

      module.exports = DOMPropertyOperations;

      /***/
    },
    /* 202 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule quoteAttributeValueForBrowser
       */

      'use strict';

      var escapeTextContentForBrowser = __webpack_require__(183);

      /**
       * Escapes attribute value to prevent scripting attacks.
       *
       * @param {*} value Value to escape.
       * @return {string} An escaped string.
       */
      function quoteAttributeValueForBrowser(value) {
        return '"' + escapeTextContentForBrowser(value) + '"';
      }

      module.exports = quoteAttributeValueForBrowser;

      /***/
    },
    /* 203 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactBrowserEventEmitter
       */

      'use strict';

      var _assign = __webpack_require__(5);

      var EventConstants = __webpack_require__(137);
      var EventPluginRegistry = __webpack_require__(140);
      var ReactEventEmitterMixin = __webpack_require__(204);
      var ViewportMetrics = __webpack_require__(173);

      var getVendorPrefixedEventName = __webpack_require__(205);
      var isEventSupported = __webpack_require__(167);

      /**
       * Summary of `ReactBrowserEventEmitter` event handling:
       *
       *  - Top-level delegation is used to trap most native browser events. This
       *    may only occur in the main thread and is the responsibility of
       *    ReactEventListener, which is injected and can therefore support pluggable
       *    event sources. This is the only work that occurs in the main thread.
       *
       *  - We normalize and de-duplicate events to account for browser quirks. This
       *    may be done in the worker thread.
       *
       *  - Forward these native events (with the associated top-level type used to
       *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
       *    to extract any synthetic events.
       *
       *  - The `EventPluginHub` will then process each event by annotating them with
       *    "dispatches", a sequence of listeners and IDs that care about that event.
       *
       *  - The `EventPluginHub` then dispatches the events.
       *
       * Overview of React and the event system:
       *
       * +------------+    .
       * |    DOM     |    .
       * +------------+    .
       *       |           .
       *       v           .
       * +------------+    .
       * | ReactEvent |    .
       * |  Listener  |    .
       * +------------+    .                         +-----------+
       *       |           .               +--------+|SimpleEvent|
       *       |           .               |         |Plugin     |
       * +-----|------+    .               v         +-----------+
       * |     |      |    .    +--------------+                    +------------+
       * |     +-----------.--->|EventPluginHub|                    |    Event   |
       * |            |    .    |              |     +-----------+  | Propagators|
       * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
       * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
       * |            |    .    |              |     +-----------+  |  utilities |
       * |     +-----------.--->|              |                    +------------+
       * |     |      |    .    +--------------+
       * +-----|------+    .                ^        +-----------+
       *       |           .                |        |Enter/Leave|
       *       +           .                +-------+|Plugin     |
       * +-------------+   .                         +-----------+
       * | application |   .
       * |-------------|   .
       * |             |   .
       * |             |   .
       * +-------------+   .
       *                   .
       *    React Core     .  General Purpose Event Plugin System
       */

      var hasEventPageXY;
      var alreadyListeningTo = {};
      var isMonitoringScrollValue = false;
      var reactTopListenersCounter = 0;

      // For events like 'submit' which don't consistently bubble (which we trap at a
      // lower node than `document`), binding at `document` would cause duplicate
      // events so we don't include them here
      var topEventMapping = {
        topAbort: 'abort',
        topAnimationEnd:
          getVendorPrefixedEventName('animationend') || 'animationend',
        topAnimationIteration:
          getVendorPrefixedEventName('animationiteration') ||
          'animationiteration',
        topAnimationStart:
          getVendorPrefixedEventName('animationstart') || 'animationstart',
        topBlur: 'blur',
        topCanPlay: 'canplay',
        topCanPlayThrough: 'canplaythrough',
        topChange: 'change',
        topClick: 'click',
        topCompositionEnd: 'compositionend',
        topCompositionStart: 'compositionstart',
        topCompositionUpdate: 'compositionupdate',
        topContextMenu: 'contextmenu',
        topCopy: 'copy',
        topCut: 'cut',
        topDoubleClick: 'dblclick',
        topDrag: 'drag',
        topDragEnd: 'dragend',
        topDragEnter: 'dragenter',
        topDragExit: 'dragexit',
        topDragLeave: 'dragleave',
        topDragOver: 'dragover',
        topDragStart: 'dragstart',
        topDrop: 'drop',
        topDurationChange: 'durationchange',
        topEmptied: 'emptied',
        topEncrypted: 'encrypted',
        topEnded: 'ended',
        topError: 'error',
        topFocus: 'focus',
        topInput: 'input',
        topKeyDown: 'keydown',
        topKeyPress: 'keypress',
        topKeyUp: 'keyup',
        topLoadedData: 'loadeddata',
        topLoadedMetadata: 'loadedmetadata',
        topLoadStart: 'loadstart',
        topMouseDown: 'mousedown',
        topMouseMove: 'mousemove',
        topMouseOut: 'mouseout',
        topMouseOver: 'mouseover',
        topMouseUp: 'mouseup',
        topPaste: 'paste',
        topPause: 'pause',
        topPlay: 'play',
        topPlaying: 'playing',
        topProgress: 'progress',
        topRateChange: 'ratechange',
        topScroll: 'scroll',
        topSeeked: 'seeked',
        topSeeking: 'seeking',
        topSelectionChange: 'selectionchange',
        topStalled: 'stalled',
        topSuspend: 'suspend',
        topTextInput: 'textInput',
        topTimeUpdate: 'timeupdate',
        topTouchCancel: 'touchcancel',
        topTouchEnd: 'touchend',
        topTouchMove: 'touchmove',
        topTouchStart: 'touchstart',
        topTransitionEnd:
          getVendorPrefixedEventName('transitionend') || 'transitionend',
        topVolumeChange: 'volumechange',
        topWaiting: 'waiting',
        topWheel: 'wheel',
      };

      /**
       * To ensure no conflicts with other potential React instances on the page
       */
      var topListenersIDKey =
        '_reactListenersID' + String(Math.random()).slice(2);

      function getListeningForDocument(mountAt) {
        // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
        // directly.
        if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
          mountAt[topListenersIDKey] = reactTopListenersCounter++;
          alreadyListeningTo[mountAt[topListenersIDKey]] = {};
        }
        return alreadyListeningTo[mountAt[topListenersIDKey]];
      }

      /**
       * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
       * example:
       *
       *   EventPluginHub.putListener('myID', 'onClick', myFunction);
       *
       * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
       *
       * @internal
       */
      var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
        /**
         * Injectable event backend
         */
        ReactEventListener: null,

        injection: {
          /**
           * @param {object} ReactEventListener
           */
          injectReactEventListener: function (ReactEventListener) {
            ReactEventListener.setHandleTopLevel(
              ReactBrowserEventEmitter.handleTopLevel,
            );
            ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
          },
        },

        /**
         * Sets whether or not any created callbacks should be enabled.
         *
         * @param {boolean} enabled True if callbacks should be enabled.
         */
        setEnabled: function (enabled) {
          if (ReactBrowserEventEmitter.ReactEventListener) {
            ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
          }
        },

        /**
         * @return {boolean} True if callbacks are enabled.
         */
        isEnabled: function () {
          return !!(
            ReactBrowserEventEmitter.ReactEventListener &&
            ReactBrowserEventEmitter.ReactEventListener.isEnabled()
          );
        },

        /**
         * We listen for bubbled touch events on the document object.
         *
         * Firefox v8.01 (and possibly others) exhibited strange behavior when
         * mounting `onmousemove` events at some node that was not the document
         * element. The symptoms were that if your mouse is not moving over something
         * contained within that mount point (for example on the background) the
         * top-level listeners for `onmousemove` won't be called. However, if you
         * register the `mousemove` on the document object, then it will of course
         * catch all `mousemove`s. This along with iOS quirks, justifies restricting
         * top-level listeners to the document object only, at least for these
         * movement types of events and possibly all events.
         *
         * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
         *
         * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
         * they bubble to document.
         *
         * @param {string} registrationName Name of listener (e.g. `onClick`).
         * @param {object} contentDocumentHandle Document which owns the container
         */
        listenTo: function (registrationName, contentDocumentHandle) {
          var mountAt = contentDocumentHandle;
          var isListening = getListeningForDocument(mountAt);
          var dependencies =
            EventPluginRegistry.registrationNameDependencies[registrationName];

          var topLevelTypes = EventConstants.topLevelTypes;
          for (var i = 0; i < dependencies.length; i++) {
            var dependency = dependencies[i];
            if (
              !(
                isListening.hasOwnProperty(dependency) &&
                isListening[dependency]
              )
            ) {
              if (dependency === topLevelTypes.topWheel) {
                if (isEventSupported('wheel')) {
                  ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
                    topLevelTypes.topWheel,
                    'wheel',
                    mountAt,
                  );
                } else if (isEventSupported('mousewheel')) {
                  ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
                    topLevelTypes.topWheel,
                    'mousewheel',
                    mountAt,
                  );
                } else {
                  // Firefox needs to capture a different mouse scroll event.
                  // @see http://www.quirksmode.org/dom/events/tests/scroll.html
                  ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
                    topLevelTypes.topWheel,
                    'DOMMouseScroll',
                    mountAt,
                  );
                }
              } else if (dependency === topLevelTypes.topScroll) {
                if (isEventSupported('scroll', true)) {
                  ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
                    topLevelTypes.topScroll,
                    'scroll',
                    mountAt,
                  );
                } else {
                  ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
                    topLevelTypes.topScroll,
                    'scroll',
                    ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE,
                  );
                }
              } else if (
                dependency === topLevelTypes.topFocus ||
                dependency === topLevelTypes.topBlur
              ) {
                if (isEventSupported('focus', true)) {
                  ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
                    topLevelTypes.topFocus,
                    'focus',
                    mountAt,
                  );
                  ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
                    topLevelTypes.topBlur,
                    'blur',
                    mountAt,
                  );
                } else if (isEventSupported('focusin')) {
                  // IE has `focusin` and `focusout` events which bubble.
                  // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
                  ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
                    topLevelTypes.topFocus,
                    'focusin',
                    mountAt,
                  );
                  ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
                    topLevelTypes.topBlur,
                    'focusout',
                    mountAt,
                  );
                }

                // to make sure blur and focus event listeners are only attached once
                isListening[topLevelTypes.topBlur] = true;
                isListening[topLevelTypes.topFocus] = true;
              } else if (topEventMapping.hasOwnProperty(dependency)) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
                  dependency,
                  topEventMapping[dependency],
                  mountAt,
                );
              }

              isListening[dependency] = true;
            }
          }
        },

        trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
          return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
            topLevelType,
            handlerBaseName,
            handle,
          );
        },

        trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
          return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
            topLevelType,
            handlerBaseName,
            handle,
          );
        },

        /**
         * Protect against document.createEvent() returning null
         * Some popup blocker extensions appear to do this:
         * https://github.com/facebook/react/issues/6887
         */
        supportsEventPageXY: function () {
          if (!document.createEvent) {
            return false;
          }
          var ev = document.createEvent('MouseEvent');
          return ev != null && 'pageX' in ev;
        },

        /**
         * Listens to window scroll and resize events. We cache scroll values so that
         * application code can access them without triggering reflows.
         *
         * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
         * pageX/pageY isn't supported (legacy browsers).
         *
         * NOTE: Scroll events do not bubble.
         *
         * @see http://www.quirksmode.org/dom/events/scroll.html
         */
        ensureScrollValueMonitoring: function () {
          if (hasEventPageXY === undefined) {
            hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
          }
          if (!hasEventPageXY && !isMonitoringScrollValue) {
            var refresh = ViewportMetrics.refreshScrollValues;
            ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(
              refresh,
            );
            isMonitoringScrollValue = true;
          }
        },
      });

      module.exports = ReactBrowserEventEmitter;

      /***/
    },
    /* 204 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactEventEmitterMixin
       */

      'use strict';

      var EventPluginHub = __webpack_require__(139);

      function runEventQueueInBatch(events) {
        EventPluginHub.enqueueEvents(events);
        EventPluginHub.processEventQueue(false);
      }

      var ReactEventEmitterMixin = {
        /**
         * Streams a fired top-level event to `EventPluginHub` where plugins have the
         * opportunity to create `ReactEvent`s to be dispatched.
         */
        handleTopLevel: function (
          topLevelType,
          targetInst,
          nativeEvent,
          nativeEventTarget,
        ) {
          var events = EventPluginHub.extractEvents(
            topLevelType,
            targetInst,
            nativeEvent,
            nativeEventTarget,
          );
          runEventQueueInBatch(events);
        },
      };

      module.exports = ReactEventEmitterMixin;

      /***/
    },
    /* 205 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule getVendorPrefixedEventName
       */

      'use strict';

      var ExecutionEnvironment = __webpack_require__(145);

      /**
       * Generate a mapping of standard vendor prefixes using the defined style property and event name.
       *
       * @param {string} styleProp
       * @param {string} eventName
       * @returns {object}
       */
      function makePrefixMap(styleProp, eventName) {
        var prefixes = {};

        prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
        prefixes['Webkit' + styleProp] = 'webkit' + eventName;
        prefixes['Moz' + styleProp] = 'moz' + eventName;
        prefixes['ms' + styleProp] = 'MS' + eventName;
        prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

        return prefixes;
      }

      /**
       * A list of event names to a configurable list of vendor prefixes.
       */
      var vendorPrefixes = {
        animationend: makePrefixMap('Animation', 'AnimationEnd'),
        animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
        animationstart: makePrefixMap('Animation', 'AnimationStart'),
        transitionend: makePrefixMap('Transition', 'TransitionEnd'),
      };

      /**
       * Event names that have already been detected and prefixed (if applicable).
       */
      var prefixedEventNames = {};

      /**
       * Element to check for prefixes on.
       */
      var style = {};

      /**
       * Bootstrap if a DOM exists.
       */
      if (ExecutionEnvironment.canUseDOM) {
        style = document.createElement('div').style;

        // On some platforms, in particular some releases of Android 4.x,
        // the un-prefixed "animation" and "transition" properties are defined on the
        // style object but the events that fire will still be prefixed, so we need
        // to check if the un-prefixed events are usable, and if not remove them from the map.
        if (!('AnimationEvent' in window)) {
          delete vendorPrefixes.animationend.animation;
          delete vendorPrefixes.animationiteration.animation;
          delete vendorPrefixes.animationstart.animation;
        }

        // Same as above
        if (!('TransitionEvent' in window)) {
          delete vendorPrefixes.transitionend.transition;
        }
      }

      /**
       * Attempts to determine the correct vendor prefixed event name.
       *
       * @param {string} eventName
       * @returns {string}
       */
      function getVendorPrefixedEventName(eventName) {
        if (prefixedEventNames[eventName]) {
          return prefixedEventNames[eventName];
        } else if (!vendorPrefixes[eventName]) {
          return eventName;
        }

        var prefixMap = vendorPrefixes[eventName];

        for (var styleProp in prefixMap) {
          if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
            return (prefixedEventNames[eventName] = prefixMap[styleProp]);
          }
        }

        return '';
      }

      module.exports = getVendorPrefixedEventName;

      /***/
    },
    /* 206 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMButton
       */

      'use strict';

      var DisabledInputUtils = __webpack_require__(207);

      /**
       * Implements a <button> host component that does not receive mouse events
       * when `disabled` is set.
       */
      var ReactDOMButton = {
        getHostProps: DisabledInputUtils.getHostProps,
      };

      module.exports = ReactDOMButton;

      /***/
    },
    /* 207 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule DisabledInputUtils
       */

      'use strict';

      var disableableMouseListenerNames = {
        onClick: true,
        onDoubleClick: true,
        onMouseDown: true,
        onMouseMove: true,
        onMouseUp: true,

        onClickCapture: true,
        onDoubleClickCapture: true,
        onMouseDownCapture: true,
        onMouseMoveCapture: true,
        onMouseUpCapture: true,
      };

      /**
       * Implements a host component that does not receive mouse events
       * when `disabled` is set.
       */
      var DisabledInputUtils = {
        getHostProps: function (inst, props) {
          if (!props.disabled) {
            return props;
          }

          // Copy the props, except the mouse listeners
          var hostProps = {};
          for (var key in props) {
            if (
              !disableableMouseListenerNames[key] &&
              props.hasOwnProperty(key)
            ) {
              hostProps[key] = props[key];
            }
          }

          return hostProps;
        },
      };

      module.exports = DisabledInputUtils;

      /***/
    },
    /* 208 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMInput
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8),
        _assign = __webpack_require__(5);

      var DisabledInputUtils = __webpack_require__(207);
      var DOMPropertyOperations = __webpack_require__(201);
      var LinkedValueUtils = __webpack_require__(209);
      var ReactDOMComponentTree = __webpack_require__(132);
      var ReactUpdates = __webpack_require__(152);

      var invariant = __webpack_require__(9);
      var warning = __webpack_require__(12);

      var didWarnValueLink = false;
      var didWarnCheckedLink = false;
      var didWarnValueDefaultValue = false;
      var didWarnCheckedDefaultChecked = false;
      var didWarnControlledToUncontrolled = false;
      var didWarnUncontrolledToControlled = false;

      function forceUpdateIfMounted() {
        if (this._rootNodeID) {
          // DOM component is still mounted; update
          ReactDOMInput.updateWrapper(this);
        }
      }

      function isControlled(props) {
        var usesChecked = props.type === 'checkbox' || props.type === 'radio';
        return usesChecked ? props.checked != null : props.value != null;
      }

      /**
       * Implements an <input> host component that allows setting these optional
       * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
       *
       * If `checked` or `value` are not supplied (or null/undefined), user actions
       * that affect the checked state or value will trigger updates to the element.
       *
       * If they are supplied (and not null/undefined), the rendered element will not
       * trigger updates to the element. Instead, the props must change in order for
       * the rendered element to be updated.
       *
       * The rendered element will be initialized as unchecked (or `defaultChecked`)
       * with an empty value (or `defaultValue`).
       *
       * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
       */
      var ReactDOMInput = {
        getHostProps: function (inst, props) {
          var value = LinkedValueUtils.getValue(props);
          var checked = LinkedValueUtils.getChecked(props);

          var hostProps = _assign(
            {
              // Make sure we set .type before any other properties (setting .value
              // before .type means .value is lost in IE11 and below)
              type: undefined,
              // Make sure we set .step before .value (setting .value before .step
              // means .value is rounded on mount, based upon step precision)
              step: undefined,
              // Make sure we set .min & .max before .value (to ensure proper order
              // in corner cases such as min or max deriving from value, e.g. Issue #7170)
              min: undefined,
              max: undefined,
            },
            DisabledInputUtils.getHostProps(inst, props),
            {
              defaultChecked: undefined,
              defaultValue: undefined,
              value: value != null ? value : inst._wrapperState.initialValue,
              checked:
                checked != null ? checked : inst._wrapperState.initialChecked,
              onChange: inst._wrapperState.onChange,
            },
          );

          return hostProps;
        },

        mountWrapper: function (inst, props) {
          if (true) {
            LinkedValueUtils.checkPropTypes(
              'input',
              props,
              inst._currentElement._owner,
            );

            var owner = inst._currentElement._owner;

            if (props.valueLink !== undefined && !didWarnValueLink) {
              true
                ? warning(
                    false,
                    '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.',
                  )
                : void 0;
              didWarnValueLink = true;
            }
            if (props.checkedLink !== undefined && !didWarnCheckedLink) {
              true
                ? warning(
                    false,
                    '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.',
                  )
                : void 0;
              didWarnCheckedLink = true;
            }
            if (
              props.checked !== undefined &&
              props.defaultChecked !== undefined &&
              !didWarnCheckedDefaultChecked
            ) {
              true
                ? warning(
                    false,
                    '%s contains an input of type %s with both checked and defaultChecked props. ' +
                      'Input elements must be either controlled or uncontrolled ' +
                      '(specify either the checked prop, or the defaultChecked prop, but not ' +
                      'both). Decide between using a controlled or uncontrolled input ' +
                      'element and remove one of these props. More info: ' +
                      'https://fb.me/react-controlled-components',
                    (owner && owner.getName()) || 'A component',
                    props.type,
                  )
                : void 0;
              didWarnCheckedDefaultChecked = true;
            }
            if (
              props.value !== undefined &&
              props.defaultValue !== undefined &&
              !didWarnValueDefaultValue
            ) {
              true
                ? warning(
                    false,
                    '%s contains an input of type %s with both value and defaultValue props. ' +
                      'Input elements must be either controlled or uncontrolled ' +
                      '(specify either the value prop, or the defaultValue prop, but not ' +
                      'both). Decide between using a controlled or uncontrolled input ' +
                      'element and remove one of these props. More info: ' +
                      'https://fb.me/react-controlled-components',
                    (owner && owner.getName()) || 'A component',
                    props.type,
                  )
                : void 0;
              didWarnValueDefaultValue = true;
            }
          }

          var defaultValue = props.defaultValue;
          inst._wrapperState = {
            initialChecked:
              props.checked != null ? props.checked : props.defaultChecked,
            initialValue: props.value != null ? props.value : defaultValue,
            listeners: null,
            onChange: _handleChange.bind(inst),
          };

          if (true) {
            inst._wrapperState.controlled = isControlled(props);
          }
        },

        updateWrapper: function (inst) {
          var props = inst._currentElement.props;

          if (true) {
            var controlled = isControlled(props);
            var owner = inst._currentElement._owner;

            if (
              !inst._wrapperState.controlled &&
              controlled &&
              !didWarnUncontrolledToControlled
            ) {
              true
                ? warning(
                    false,
                    '%s is changing an uncontrolled input of type %s to be controlled. ' +
                      'Input elements should not switch from uncontrolled to controlled (or vice versa). ' +
                      'Decide between using a controlled or uncontrolled input ' +
                      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
                    (owner && owner.getName()) || 'A component',
                    props.type,
                  )
                : void 0;
              didWarnUncontrolledToControlled = true;
            }
            if (
              inst._wrapperState.controlled &&
              !controlled &&
              !didWarnControlledToUncontrolled
            ) {
              true
                ? warning(
                    false,
                    '%s is changing a controlled input of type %s to be uncontrolled. ' +
                      'Input elements should not switch from controlled to uncontrolled (or vice versa). ' +
                      'Decide between using a controlled or uncontrolled input ' +
                      'element for the lifetime of the component. More info: https://fb.me/react-controlled-components',
                    (owner && owner.getName()) || 'A component',
                    props.type,
                  )
                : void 0;
              didWarnControlledToUncontrolled = true;
            }
          }

          // TODO: Shouldn't this be getChecked(props)?
          var checked = props.checked;
          if (checked != null) {
            DOMPropertyOperations.setValueForProperty(
              ReactDOMComponentTree.getNodeFromInstance(inst),
              'checked',
              checked || false,
            );
          }

          var node = ReactDOMComponentTree.getNodeFromInstance(inst);
          var value = LinkedValueUtils.getValue(props);
          if (value != null) {
            // Cast `value` to a string to ensure the value is set correctly. While
            // browsers typically do this as necessary, jsdom doesn't.
            var newValue = '' + value;

            // To avoid side effects (such as losing text selection), only set value if changed
            if (newValue !== node.value) {
              node.value = newValue;
            }
          } else {
            if (props.value == null && props.defaultValue != null) {
              node.defaultValue = '' + props.defaultValue;
            }
            if (props.checked == null && props.defaultChecked != null) {
              node.defaultChecked = !!props.defaultChecked;
            }
          }
        },

        postMountWrapper: function (inst) {
          var props = inst._currentElement.props;

          // This is in postMount because we need access to the DOM node, which is not
          // available until after the component has mounted.
          var node = ReactDOMComponentTree.getNodeFromInstance(inst);

          // Detach value from defaultValue. We won't do anything if we're working on
          // submit or reset inputs as those values & defaultValues are linked. They
          // are not resetable nodes so this operation doesn't matter and actually
          // removes browser-default values (eg "Submit Query") when no value is
          // provided.

          switch (props.type) {
            case 'submit':
            case 'reset':
              break;
            case 'color':
            case 'date':
            case 'datetime':
            case 'datetime-local':
            case 'month':
            case 'time':
            case 'week':
              // This fixes the no-show issue on iOS Safari and Android Chrome:
              // https://github.com/facebook/react/issues/7233
              node.value = '';
              node.value = node.defaultValue;
              break;
            default:
              node.value = node.value;
              break;
          }

          // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
          // this is needed to work around a chrome bug where setting defaultChecked
          // will sometimes influence the value of checked (even after detachment).
          // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
          // We need to temporarily unset name to avoid disrupting radio button groups.
          var name = node.name;
          if (name !== '') {
            node.name = '';
          }
          node.defaultChecked = !node.defaultChecked;
          node.defaultChecked = !node.defaultChecked;
          if (name !== '') {
            node.name = name;
          }
        },
      };

      function _handleChange(event) {
        var props = this._currentElement.props;

        var returnValue = LinkedValueUtils.executeOnChange(props, event);

        // Here we use asap to wait until all updates have propagated, which
        // is important when using controlled components within layers:
        // https://github.com/facebook/react/issues/1698
        ReactUpdates.asap(forceUpdateIfMounted, this);

        var name = props.name;
        if (props.type === 'radio' && name != null) {
          var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
          var queryRoot = rootNode;

          while (queryRoot.parentNode) {
            queryRoot = queryRoot.parentNode;
          }

          // If `rootNode.form` was non-null, then we could try `form.elements`,
          // but that sometimes behaves strangely in IE8. We could also try using
          // `form.getElementsByName`, but that will only return direct children
          // and won't include inputs that use the HTML5 `form=` attribute. Since
          // the input might not even be in a form, let's just use the global
          // `querySelectorAll` to ensure we don't miss anything.
          var group = queryRoot.querySelectorAll(
            'input[name=' + JSON.stringify('' + name) + '][type="radio"]',
          );

          for (var i = 0; i < group.length; i++) {
            var otherNode = group[i];
            if (otherNode === rootNode || otherNode.form !== rootNode.form) {
              continue;
            }
            // This will throw if radio buttons rendered by different copies of React
            // and the same name are rendered into the same form (same as #1939).
            // That's probably okay; we don't support it just as we don't support
            // mixing React radio buttons with non-React ones.
            var otherInstance = ReactDOMComponentTree.getInstanceFromNode(
              otherNode,
            );
            !otherInstance
              ? true
                ? invariant(
                    false,
                    'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.',
                  )
                : _prodInvariant('90')
              : void 0;
            // If this is a controlled radio button group, forcing the input that
            // was previously checked to update will cause it to be come re-checked
            // as appropriate.
            ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
          }
        }

        return returnValue;
      }

      module.exports = ReactDOMInput;

      /***/
    },
    /* 209 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule LinkedValueUtils
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var ReactPropTypes = __webpack_require__(33);
      var ReactPropTypeLocations = __webpack_require__(23);
      var ReactPropTypesSecret = __webpack_require__(32);

      var invariant = __webpack_require__(9);
      var warning = __webpack_require__(12);

      var hasReadOnlyValue = {
        button: true,
        checkbox: true,
        image: true,
        hidden: true,
        radio: true,
        reset: true,
        submit: true,
      };

      function _assertSingleLink(inputProps) {
        !(inputProps.checkedLink == null || inputProps.valueLink == null)
          ? true
            ? invariant(
                false,
                "Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don't want to use valueLink and vice versa.",
              )
            : _prodInvariant('87')
          : void 0;
      }
      function _assertValueLink(inputProps) {
        _assertSingleLink(inputProps);
        !(inputProps.value == null && inputProps.onChange == null)
          ? true
            ? invariant(
                false,
                "Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don't want to use valueLink.",
              )
            : _prodInvariant('88')
          : void 0;
      }

      function _assertCheckedLink(inputProps) {
        _assertSingleLink(inputProps);
        !(inputProps.checked == null && inputProps.onChange == null)
          ? true
            ? invariant(
                false,
                "Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don't want to use checkedLink",
              )
            : _prodInvariant('89')
          : void 0;
      }

      var propTypes = {
        value: function (props, propName, componentName) {
          if (
            !props[propName] ||
            hasReadOnlyValue[props.type] ||
            props.onChange ||
            props.readOnly ||
            props.disabled
          ) {
            return null;
          }
          return new Error(
            'You provided a `value` prop to a form field without an ' +
              '`onChange` handler. This will render a read-only field. If ' +
              'the field should be mutable use `defaultValue`. Otherwise, ' +
              'set either `onChange` or `readOnly`.',
          );
        },
        checked: function (props, propName, componentName) {
          if (
            !props[propName] ||
            props.onChange ||
            props.readOnly ||
            props.disabled
          ) {
            return null;
          }
          return new Error(
            'You provided a `checked` prop to a form field without an ' +
              '`onChange` handler. This will render a read-only field. If ' +
              'the field should be mutable use `defaultChecked`. Otherwise, ' +
              'set either `onChange` or `readOnly`.',
          );
        },
        onChange: ReactPropTypes.func,
      };

      var loggedTypeFailures = {};
      function getDeclarationErrorAddendum(owner) {
        if (owner) {
          var name = owner.getName();
          if (name) {
            return ' Check the render method of `' + name + '`.';
          }
        }
        return '';
      }

      /**
       * Provide a linked `value` attribute for controlled forms. You should not use
       * this outside of the ReactDOM controlled form components.
       */
      var LinkedValueUtils = {
        checkPropTypes: function (tagName, props, owner) {
          for (var propName in propTypes) {
            if (propTypes.hasOwnProperty(propName)) {
              var error = propTypes[propName](
                props,
                propName,
                tagName,
                ReactPropTypeLocations.prop,
                null,
                ReactPropTypesSecret,
              );
            }
            if (
              error instanceof Error &&
              !(error.message in loggedTypeFailures)
            ) {
              // Only monitor this failure once because there tends to be a lot of the
              // same error.
              loggedTypeFailures[error.message] = true;

              var addendum = getDeclarationErrorAddendum(owner);
              true
                ? warning(
                    false,
                    'Failed form propType: %s%s',
                    error.message,
                    addendum,
                  )
                : void 0;
            }
          }
        },

        /**
         * @param {object} inputProps Props for form component
         * @return {*} current value of the input either from value prop or link.
         */
        getValue: function (inputProps) {
          if (inputProps.valueLink) {
            _assertValueLink(inputProps);
            return inputProps.valueLink.value;
          }
          return inputProps.value;
        },

        /**
         * @param {object} inputProps Props for form component
         * @return {*} current checked status of the input either from checked prop
         *             or link.
         */
        getChecked: function (inputProps) {
          if (inputProps.checkedLink) {
            _assertCheckedLink(inputProps);
            return inputProps.checkedLink.value;
          }
          return inputProps.checked;
        },

        /**
         * @param {object} inputProps Props for form component
         * @param {SyntheticEvent} event change event to handle
         */
        executeOnChange: function (inputProps, event) {
          if (inputProps.valueLink) {
            _assertValueLink(inputProps);
            return inputProps.valueLink.requestChange(event.target.value);
          } else if (inputProps.checkedLink) {
            _assertCheckedLink(inputProps);
            return inputProps.checkedLink.requestChange(event.target.checked);
          } else if (inputProps.onChange) {
            return inputProps.onChange.call(undefined, event);
          }
        },
      };

      module.exports = LinkedValueUtils;

      /***/
    },
    /* 210 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMOption
       */

      'use strict';

      var _assign = __webpack_require__(5);

      var ReactChildren = __webpack_require__(6);
      var ReactDOMComponentTree = __webpack_require__(132);
      var ReactDOMSelect = __webpack_require__(211);

      var warning = __webpack_require__(12);
      var didWarnInvalidOptionChildren = false;

      function flattenChildren(children) {
        var content = '';

        // Flatten children and warn if they aren't strings or numbers;
        // invalid types are ignored.
        ReactChildren.forEach(children, function (child) {
          if (child == null) {
            return;
          }
          if (typeof child === 'string' || typeof child === 'number') {
            content += child;
          } else if (!didWarnInvalidOptionChildren) {
            didWarnInvalidOptionChildren = true;
            true
              ? warning(
                  false,
                  'Only strings and numbers are supported as <option> children.',
                )
              : void 0;
          }
        });

        return content;
      }

      /**
       * Implements an <option> host component that warns when `selected` is set.
       */
      var ReactDOMOption = {
        mountWrapper: function (inst, props, hostParent) {
          // TODO (yungsters): Remove support for `selected` in <option>.
          if (true) {
            true
              ? warning(
                  props.selected == null,
                  'Use the `defaultValue` or `value` props on <select> instead of ' +
                    'setting `selected` on <option>.',
                )
              : void 0;
          }

          // Look up whether this option is 'selected'
          var selectValue = null;
          if (hostParent != null) {
            var selectParent = hostParent;

            if (selectParent._tag === 'optgroup') {
              selectParent = selectParent._hostParent;
            }

            if (selectParent != null && selectParent._tag === 'select') {
              selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
            }
          }

          // If the value is null (e.g., no specified value or after initial mount)
          // or missing (e.g., for <datalist>), we don't change props.selected
          var selected = null;
          if (selectValue != null) {
            var value;
            if (props.value != null) {
              value = props.value + '';
            } else {
              value = flattenChildren(props.children);
            }
            selected = false;
            if (Array.isArray(selectValue)) {
              // multiple
              for (var i = 0; i < selectValue.length; i++) {
                if ('' + selectValue[i] === value) {
                  selected = true;
                  break;
                }
              }
            } else {
              selected = '' + selectValue === value;
            }
          }

          inst._wrapperState = { selected: selected };
        },

        postMountWrapper: function (inst) {
          // value="" should make a value attribute (#6219)
          var props = inst._currentElement.props;
          if (props.value != null) {
            var node = ReactDOMComponentTree.getNodeFromInstance(inst);
            node.setAttribute('value', props.value);
          }
        },

        getHostProps: function (inst, props) {
          var hostProps = _assign(
            { selected: undefined, children: undefined },
            props,
          );

          // Read state only from initial mount because <select> updates value
          // manually; we need the initial state only for server rendering
          if (inst._wrapperState.selected != null) {
            hostProps.selected = inst._wrapperState.selected;
          }

          var content = flattenChildren(props.children);

          if (content) {
            hostProps.children = content;
          }

          return hostProps;
        },
      };

      module.exports = ReactDOMOption;

      /***/
    },
    /* 211 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMSelect
       */

      'use strict';

      var _assign = __webpack_require__(5);

      var DisabledInputUtils = __webpack_require__(207);
      var LinkedValueUtils = __webpack_require__(209);
      var ReactDOMComponentTree = __webpack_require__(132);
      var ReactUpdates = __webpack_require__(152);

      var warning = __webpack_require__(12);

      var didWarnValueLink = false;
      var didWarnValueDefaultValue = false;

      function updateOptionsIfPendingUpdateAndMounted() {
        if (this._rootNodeID && this._wrapperState.pendingUpdate) {
          this._wrapperState.pendingUpdate = false;

          var props = this._currentElement.props;
          var value = LinkedValueUtils.getValue(props);

          if (value != null) {
            updateOptions(this, Boolean(props.multiple), value);
          }
        }
      }

      function getDeclarationErrorAddendum(owner) {
        if (owner) {
          var name = owner.getName();
          if (name) {
            return ' Check the render method of `' + name + '`.';
          }
        }
        return '';
      }

      var valuePropNames = ['value', 'defaultValue'];

      /**
       * Validation function for `value` and `defaultValue`.
       * @private
       */
      function checkSelectPropTypes(inst, props) {
        var owner = inst._currentElement._owner;
        LinkedValueUtils.checkPropTypes('select', props, owner);

        if (props.valueLink !== undefined && !didWarnValueLink) {
          true
            ? warning(
                false,
                '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.',
              )
            : void 0;
          didWarnValueLink = true;
        }

        for (var i = 0; i < valuePropNames.length; i++) {
          var propName = valuePropNames[i];
          if (props[propName] == null) {
            continue;
          }
          var isArray = Array.isArray(props[propName]);
          if (props.multiple && !isArray) {
            true
              ? warning(
                  false,
                  'The `%s` prop supplied to <select> must be an array if ' +
                    '`multiple` is true.%s',
                  propName,
                  getDeclarationErrorAddendum(owner),
                )
              : void 0;
          } else if (!props.multiple && isArray) {
            true
              ? warning(
                  false,
                  'The `%s` prop supplied to <select> must be a scalar ' +
                    'value if `multiple` is false.%s',
                  propName,
                  getDeclarationErrorAddendum(owner),
                )
              : void 0;
          }
        }
      }

      /**
       * @param {ReactDOMComponent} inst
       * @param {boolean} multiple
       * @param {*} propValue A stringable (with `multiple`, a list of stringables).
       * @private
       */
      function updateOptions(inst, multiple, propValue) {
        var selectedValue, i;
        var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

        if (multiple) {
          selectedValue = {};
          for (i = 0; i < propValue.length; i++) {
            selectedValue['' + propValue[i]] = true;
          }
          for (i = 0; i < options.length; i++) {
            var selected = selectedValue.hasOwnProperty(options[i].value);
            if (options[i].selected !== selected) {
              options[i].selected = selected;
            }
          }
        } else {
          // Do not set `select.value` as exact behavior isn't consistent across all
          // browsers for all cases.
          selectedValue = '' + propValue;
          for (i = 0; i < options.length; i++) {
            if (options[i].value === selectedValue) {
              options[i].selected = true;
              return;
            }
          }
          if (options.length) {
            options[0].selected = true;
          }
        }
      }

      /**
       * Implements a <select> host component that allows optionally setting the
       * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
       * stringable. If `multiple` is true, the prop must be an array of stringables.
       *
       * If `value` is not supplied (or null/undefined), user actions that change the
       * selected option will trigger updates to the rendered options.
       *
       * If it is supplied (and not null/undefined), the rendered options will not
       * update in response to user actions. Instead, the `value` prop must change in
       * order for the rendered options to update.
       *
       * If `defaultValue` is provided, any options with the supplied values will be
       * selected.
       */
      var ReactDOMSelect = {
        getHostProps: function (inst, props) {
          return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
            onChange: inst._wrapperState.onChange,
            value: undefined,
          });
        },

        mountWrapper: function (inst, props) {
          if (true) {
            checkSelectPropTypes(inst, props);
          }

          var value = LinkedValueUtils.getValue(props);
          inst._wrapperState = {
            pendingUpdate: false,
            initialValue: value != null ? value : props.defaultValue,
            listeners: null,
            onChange: _handleChange.bind(inst),
            wasMultiple: Boolean(props.multiple),
          };

          if (
            props.value !== undefined &&
            props.defaultValue !== undefined &&
            !didWarnValueDefaultValue
          ) {
            true
              ? warning(
                  false,
                  'Select elements must be either controlled or uncontrolled ' +
                    '(specify either the value prop, or the defaultValue prop, but not ' +
                    'both). Decide between using a controlled or uncontrolled select ' +
                    'element and remove one of these props. More info: ' +
                    'https://fb.me/react-controlled-components',
                )
              : void 0;
            didWarnValueDefaultValue = true;
          }
        },

        getSelectValueContext: function (inst) {
          // ReactDOMOption looks at this initial value so the initial generated
          // markup has correct `selected` attributes
          return inst._wrapperState.initialValue;
        },

        postUpdateWrapper: function (inst) {
          var props = inst._currentElement.props;

          // After the initial mount, we control selected-ness manually so don't pass
          // this value down
          inst._wrapperState.initialValue = undefined;

          var wasMultiple = inst._wrapperState.wasMultiple;
          inst._wrapperState.wasMultiple = Boolean(props.multiple);

          var value = LinkedValueUtils.getValue(props);
          if (value != null) {
            inst._wrapperState.pendingUpdate = false;
            updateOptions(inst, Boolean(props.multiple), value);
          } else if (wasMultiple !== Boolean(props.multiple)) {
            // For simplicity, reapply `defaultValue` if `multiple` is toggled.
            if (props.defaultValue != null) {
              updateOptions(inst, Boolean(props.multiple), props.defaultValue);
            } else {
              // Revert the select back to its default unselected state.
              updateOptions(
                inst,
                Boolean(props.multiple),
                props.multiple ? [] : '',
              );
            }
          }
        },
      };

      function _handleChange(event) {
        var props = this._currentElement.props;
        var returnValue = LinkedValueUtils.executeOnChange(props, event);

        if (this._rootNodeID) {
          this._wrapperState.pendingUpdate = true;
        }
        ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
        return returnValue;
      }

      module.exports = ReactDOMSelect;

      /***/
    },
    /* 212 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMTextarea
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8),
        _assign = __webpack_require__(5);

      var DisabledInputUtils = __webpack_require__(207);
      var LinkedValueUtils = __webpack_require__(209);
      var ReactDOMComponentTree = __webpack_require__(132);
      var ReactUpdates = __webpack_require__(152);

      var invariant = __webpack_require__(9);
      var warning = __webpack_require__(12);

      var didWarnValueLink = false;
      var didWarnValDefaultVal = false;

      function forceUpdateIfMounted() {
        if (this._rootNodeID) {
          // DOM component is still mounted; update
          ReactDOMTextarea.updateWrapper(this);
        }
      }

      /**
       * Implements a <textarea> host component that allows setting `value`, and
       * `defaultValue`. This differs from the traditional DOM API because value is
       * usually set as PCDATA children.
       *
       * If `value` is not supplied (or null/undefined), user actions that affect the
       * value will trigger updates to the element.
       *
       * If `value` is supplied (and not null/undefined), the rendered element will
       * not trigger updates to the element. Instead, the `value` prop must change in
       * order for the rendered element to be updated.
       *
       * The rendered element will be initialized with an empty value, the prop
       * `defaultValue` if specified, or the children content (deprecated).
       */
      var ReactDOMTextarea = {
        getHostProps: function (inst, props) {
          !(props.dangerouslySetInnerHTML == null)
            ? true
              ? invariant(
                  false,
                  '`dangerouslySetInnerHTML` does not make sense on <textarea>.',
                )
              : _prodInvariant('91')
            : void 0;

          // Always set children to the same thing. In IE9, the selection range will
          // get reset if `textContent` is mutated.  We could add a check in setTextContent
          // to only set the value if/when the value differs from the node value (which would
          // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
          // The value can be a boolean or object so that's why it's forced to be a string.
          var hostProps = _assign(
            {},
            DisabledInputUtils.getHostProps(inst, props),
            {
              value: undefined,
              defaultValue: undefined,
              children: '' + inst._wrapperState.initialValue,
              onChange: inst._wrapperState.onChange,
            },
          );

          return hostProps;
        },

        mountWrapper: function (inst, props) {
          if (true) {
            LinkedValueUtils.checkPropTypes(
              'textarea',
              props,
              inst._currentElement._owner,
            );
            if (props.valueLink !== undefined && !didWarnValueLink) {
              true
                ? warning(
                    false,
                    '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.',
                  )
                : void 0;
              didWarnValueLink = true;
            }
            if (
              props.value !== undefined &&
              props.defaultValue !== undefined &&
              !didWarnValDefaultVal
            ) {
              true
                ? warning(
                    false,
                    'Textarea elements must be either controlled or uncontrolled ' +
                      '(specify either the value prop, or the defaultValue prop, but not ' +
                      'both). Decide between using a controlled or uncontrolled textarea ' +
                      'and remove one of these props. More info: ' +
                      'https://fb.me/react-controlled-components',
                  )
                : void 0;
              didWarnValDefaultVal = true;
            }
          }

          var value = LinkedValueUtils.getValue(props);
          var initialValue = value;

          // Only bother fetching default value if we're going to use it
          if (value == null) {
            var defaultValue = props.defaultValue;
            // TODO (yungsters): Remove support for children content in <textarea>.
            var children = props.children;
            if (children != null) {
              if (true) {
                true
                  ? warning(
                      false,
                      'Use the `defaultValue` or `value` props instead of setting ' +
                        'children on <textarea>.',
                    )
                  : void 0;
              }
              !(defaultValue == null)
                ? true
                  ? invariant(
                      false,
                      'If you supply `defaultValue` on a <textarea>, do not pass children.',
                    )
                  : _prodInvariant('92')
                : void 0;
              if (Array.isArray(children)) {
                !(children.length <= 1)
                  ? true
                    ? invariant(
                        false,
                        '<textarea> can only have at most one child.',
                      )
                    : _prodInvariant('93')
                  : void 0;
                children = children[0];
              }

              defaultValue = '' + children;
            }
            if (defaultValue == null) {
              defaultValue = '';
            }
            initialValue = defaultValue;
          }

          inst._wrapperState = {
            initialValue: '' + initialValue,
            listeners: null,
            onChange: _handleChange.bind(inst),
          };
        },

        updateWrapper: function (inst) {
          var props = inst._currentElement.props;

          var node = ReactDOMComponentTree.getNodeFromInstance(inst);
          var value = LinkedValueUtils.getValue(props);
          if (value != null) {
            // Cast `value` to a string to ensure the value is set correctly. While
            // browsers typically do this as necessary, jsdom doesn't.
            var newValue = '' + value;

            // To avoid side effects (such as losing text selection), only set value if changed
            if (newValue !== node.value) {
              node.value = newValue;
            }
            if (props.defaultValue == null) {
              node.defaultValue = newValue;
            }
          }
          if (props.defaultValue != null) {
            node.defaultValue = props.defaultValue;
          }
        },

        postMountWrapper: function (inst) {
          // This is in postMount because we need access to the DOM node, which is not
          // available until after the component has mounted.
          var node = ReactDOMComponentTree.getNodeFromInstance(inst);

          // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
          node.value = node.textContent; // Detach value from defaultValue
        },
      };

      function _handleChange(event) {
        var props = this._currentElement.props;
        var returnValue = LinkedValueUtils.executeOnChange(props, event);
        ReactUpdates.asap(forceUpdateIfMounted, this);
        return returnValue;
      }

      module.exports = ReactDOMTextarea;

      /***/
    },
    /* 213 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactMultiChild
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var ReactComponentEnvironment = __webpack_require__(214);
      var ReactInstanceMap = __webpack_require__(215);
      var ReactInstrumentation = __webpack_require__(158);
      var ReactMultiChildUpdateTypes = __webpack_require__(188);

      var ReactCurrentOwner = __webpack_require__(11);
      var ReactReconciler = __webpack_require__(155);
      var ReactChildReconciler = __webpack_require__(216);

      var emptyFunction = __webpack_require__(13);
      var flattenChildren = __webpack_require__(224);
      var invariant = __webpack_require__(9);

      /**
       * Make an update for markup to be rendered and inserted at a supplied index.
       *
       * @param {string} markup Markup that renders into an element.
       * @param {number} toIndex Destination index.
       * @private
       */
      function makeInsertMarkup(markup, afterNode, toIndex) {
        // NOTE: Null values reduce hidden classes.
        return {
          type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
          content: markup,
          fromIndex: null,
          fromNode: null,
          toIndex: toIndex,
          afterNode: afterNode,
        };
      }

      /**
       * Make an update for moving an existing element to another index.
       *
       * @param {number} fromIndex Source index of the existing element.
       * @param {number} toIndex Destination index of the element.
       * @private
       */
      function makeMove(child, afterNode, toIndex) {
        // NOTE: Null values reduce hidden classes.
        return {
          type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
          content: null,
          fromIndex: child._mountIndex,
          fromNode: ReactReconciler.getHostNode(child),
          toIndex: toIndex,
          afterNode: afterNode,
        };
      }

      /**
       * Make an update for removing an element at an index.
       *
       * @param {number} fromIndex Index of the element to remove.
       * @private
       */
      function makeRemove(child, node) {
        // NOTE: Null values reduce hidden classes.
        return {
          type: ReactMultiChildUpdateTypes.REMOVE_NODE,
          content: null,
          fromIndex: child._mountIndex,
          fromNode: node,
          toIndex: null,
          afterNode: null,
        };
      }

      /**
       * Make an update for setting the markup of a node.
       *
       * @param {string} markup Markup that renders into an element.
       * @private
       */
      function makeSetMarkup(markup) {
        // NOTE: Null values reduce hidden classes.
        return {
          type: ReactMultiChildUpdateTypes.SET_MARKUP,
          content: markup,
          fromIndex: null,
          fromNode: null,
          toIndex: null,
          afterNode: null,
        };
      }

      /**
       * Make an update for setting the text content.
       *
       * @param {string} textContent Text content to set.
       * @private
       */
      function makeTextContent(textContent) {
        // NOTE: Null values reduce hidden classes.
        return {
          type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
          content: textContent,
          fromIndex: null,
          fromNode: null,
          toIndex: null,
          afterNode: null,
        };
      }

      /**
       * Push an update, if any, onto the queue. Creates a new queue if none is
       * passed and always returns the queue. Mutative.
       */
      function enqueue(queue, update) {
        if (update) {
          queue = queue || [];
          queue.push(update);
        }
        return queue;
      }

      /**
       * Processes any enqueued updates.
       *
       * @private
       */
      function processQueue(inst, updateQueue) {
        ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
      }

      var setChildrenForInstrumentation = emptyFunction;
      if (true) {
        var getDebugID = function (inst) {
          if (!inst._debugID) {
            // Check for ART-like instances. TODO: This is silly/gross.
            var internal;
            if ((internal = ReactInstanceMap.get(inst))) {
              inst = internal;
            }
          }
          return inst._debugID;
        };
        setChildrenForInstrumentation = function (children) {
          var debugID = getDebugID(this);
          // TODO: React Native empty components are also multichild.
          // This means they still get into this method but don't have _debugID.
          if (debugID !== 0) {
            ReactInstrumentation.debugTool.onSetChildren(
              debugID,
              children
                ? Object.keys(children).map(function (key) {
                    return children[key]._debugID;
                  })
                : [],
            );
          }
        };
      }

      /**
       * ReactMultiChild are capable of reconciling multiple children.
       *
       * @class ReactMultiChild
       * @internal
       */
      var ReactMultiChild = {
        /**
         * Provides common functionality for components that must reconcile multiple
         * children. This is used by `ReactDOMComponent` to mount, update, and
         * unmount child components.
         *
         * @lends {ReactMultiChild.prototype}
         */
        Mixin: {
          _reconcilerInstantiateChildren: function (
            nestedChildren,
            transaction,
            context,
          ) {
            if (true) {
              var selfDebugID = getDebugID(this);
              if (this._currentElement) {
                try {
                  ReactCurrentOwner.current = this._currentElement._owner;
                  return ReactChildReconciler.instantiateChildren(
                    nestedChildren,
                    transaction,
                    context,
                    selfDebugID,
                  );
                } finally {
                  ReactCurrentOwner.current = null;
                }
              }
            }
            return ReactChildReconciler.instantiateChildren(
              nestedChildren,
              transaction,
              context,
            );
          },

          _reconcilerUpdateChildren: function (
            prevChildren,
            nextNestedChildrenElements,
            mountImages,
            removedNodes,
            transaction,
            context,
          ) {
            var nextChildren;
            var selfDebugID = 0;
            if (true) {
              selfDebugID = getDebugID(this);
              if (this._currentElement) {
                try {
                  ReactCurrentOwner.current = this._currentElement._owner;
                  nextChildren = flattenChildren(
                    nextNestedChildrenElements,
                    selfDebugID,
                  );
                } finally {
                  ReactCurrentOwner.current = null;
                }
                ReactChildReconciler.updateChildren(
                  prevChildren,
                  nextChildren,
                  mountImages,
                  removedNodes,
                  transaction,
                  this,
                  this._hostContainerInfo,
                  context,
                  selfDebugID,
                );
                return nextChildren;
              }
            }
            nextChildren = flattenChildren(
              nextNestedChildrenElements,
              selfDebugID,
            );
            ReactChildReconciler.updateChildren(
              prevChildren,
              nextChildren,
              mountImages,
              removedNodes,
              transaction,
              this,
              this._hostContainerInfo,
              context,
              selfDebugID,
            );
            return nextChildren;
          },

          /**
           * Generates a "mount image" for each of the supplied children. In the case
           * of `ReactDOMComponent`, a mount image is a string of markup.
           *
           * @param {?object} nestedChildren Nested child maps.
           * @return {array} An array of mounted representations.
           * @internal
           */
          mountChildren: function (nestedChildren, transaction, context) {
            var children = this._reconcilerInstantiateChildren(
              nestedChildren,
              transaction,
              context,
            );
            this._renderedChildren = children;

            var mountImages = [];
            var index = 0;
            for (var name in children) {
              if (children.hasOwnProperty(name)) {
                var child = children[name];
                var selfDebugID = 0;
                if (true) {
                  selfDebugID = getDebugID(this);
                }
                var mountImage = ReactReconciler.mountComponent(
                  child,
                  transaction,
                  this,
                  this._hostContainerInfo,
                  context,
                  selfDebugID,
                );
                child._mountIndex = index++;
                mountImages.push(mountImage);
              }
            }

            if (true) {
              setChildrenForInstrumentation.call(this, children);
            }

            return mountImages;
          },

          /**
           * Replaces any rendered children with a text content string.
           *
           * @param {string} nextContent String of content.
           * @internal
           */
          updateTextContent: function (nextContent) {
            var prevChildren = this._renderedChildren;
            // Remove any rendered children.
            ReactChildReconciler.unmountChildren(prevChildren, false);
            for (var name in prevChildren) {
              if (prevChildren.hasOwnProperty(name)) {
                true
                  ? true
                    ? invariant(
                        false,
                        'updateTextContent called on non-empty component.',
                      )
                    : _prodInvariant('118')
                  : void 0;
              }
            }
            // Set new text content.
            var updates = [makeTextContent(nextContent)];
            processQueue(this, updates);
          },

          /**
           * Replaces any rendered children with a markup string.
           *
           * @param {string} nextMarkup String of markup.
           * @internal
           */
          updateMarkup: function (nextMarkup) {
            var prevChildren = this._renderedChildren;
            // Remove any rendered children.
            ReactChildReconciler.unmountChildren(prevChildren, false);
            for (var name in prevChildren) {
              if (prevChildren.hasOwnProperty(name)) {
                true
                  ? true
                    ? invariant(
                        false,
                        'updateTextContent called on non-empty component.',
                      )
                    : _prodInvariant('118')
                  : void 0;
              }
            }
            var updates = [makeSetMarkup(nextMarkup)];
            processQueue(this, updates);
          },

          /**
           * Updates the rendered children with new children.
           *
           * @param {?object} nextNestedChildrenElements Nested child element maps.
           * @param {ReactReconcileTransaction} transaction
           * @internal
           */
          updateChildren: function (
            nextNestedChildrenElements,
            transaction,
            context,
          ) {
            // Hook used by React ART
            this._updateChildren(
              nextNestedChildrenElements,
              transaction,
              context,
            );
          },

          /**
           * @param {?object} nextNestedChildrenElements Nested child element maps.
           * @param {ReactReconcileTransaction} transaction
           * @final
           * @protected
           */
          _updateChildren: function (
            nextNestedChildrenElements,
            transaction,
            context,
          ) {
            var prevChildren = this._renderedChildren;
            var removedNodes = {};
            var mountImages = [];
            var nextChildren = this._reconcilerUpdateChildren(
              prevChildren,
              nextNestedChildrenElements,
              mountImages,
              removedNodes,
              transaction,
              context,
            );
            if (!nextChildren && !prevChildren) {
              return;
            }
            var updates = null;
            var name;
            // `nextIndex` will increment for each child in `nextChildren`, but
            // `lastIndex` will be the last index visited in `prevChildren`.
            var nextIndex = 0;
            var lastIndex = 0;
            // `nextMountIndex` will increment for each newly mounted child.
            var nextMountIndex = 0;
            var lastPlacedNode = null;
            for (name in nextChildren) {
              if (!nextChildren.hasOwnProperty(name)) {
                continue;
              }
              var prevChild = prevChildren && prevChildren[name];
              var nextChild = nextChildren[name];
              if (prevChild === nextChild) {
                updates = enqueue(
                  updates,
                  this.moveChild(
                    prevChild,
                    lastPlacedNode,
                    nextIndex,
                    lastIndex,
                  ),
                );
                lastIndex = Math.max(prevChild._mountIndex, lastIndex);
                prevChild._mountIndex = nextIndex;
              } else {
                if (prevChild) {
                  // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
                  lastIndex = Math.max(prevChild._mountIndex, lastIndex);
                  // The `removedNodes` loop below will actually remove the child.
                }
                // The child must be instantiated before it's mounted.
                updates = enqueue(
                  updates,
                  this._mountChildAtIndex(
                    nextChild,
                    mountImages[nextMountIndex],
                    lastPlacedNode,
                    nextIndex,
                    transaction,
                    context,
                  ),
                );
                nextMountIndex++;
              }
              nextIndex++;
              lastPlacedNode = ReactReconciler.getHostNode(nextChild);
            }
            // Remove children that are no longer present.
            for (name in removedNodes) {
              if (removedNodes.hasOwnProperty(name)) {
                updates = enqueue(
                  updates,
                  this._unmountChild(prevChildren[name], removedNodes[name]),
                );
              }
            }
            if (updates) {
              processQueue(this, updates);
            }
            this._renderedChildren = nextChildren;

            if (true) {
              setChildrenForInstrumentation.call(this, nextChildren);
            }
          },

          /**
           * Unmounts all rendered children. This should be used to clean up children
           * when this component is unmounted. It does not actually perform any
           * backend operations.
           *
           * @internal
           */
          unmountChildren: function (safely) {
            var renderedChildren = this._renderedChildren;
            ReactChildReconciler.unmountChildren(renderedChildren, safely);
            this._renderedChildren = null;
          },

          /**
           * Moves a child component to the supplied index.
           *
           * @param {ReactComponent} child Component to move.
           * @param {number} toIndex Destination index of the element.
           * @param {number} lastIndex Last index visited of the siblings of `child`.
           * @protected
           */
          moveChild: function (child, afterNode, toIndex, lastIndex) {
            // If the index of `child` is less than `lastIndex`, then it needs to
            // be moved. Otherwise, we do not need to move it because a child will be
            // inserted or moved before `child`.
            if (child._mountIndex < lastIndex) {
              return makeMove(child, afterNode, toIndex);
            }
          },

          /**
           * Creates a child component.
           *
           * @param {ReactComponent} child Component to create.
           * @param {string} mountImage Markup to insert.
           * @protected
           */
          createChild: function (child, afterNode, mountImage) {
            return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
          },

          /**
           * Removes a child component.
           *
           * @param {ReactComponent} child Child to remove.
           * @protected
           */
          removeChild: function (child, node) {
            return makeRemove(child, node);
          },

          /**
           * Mounts a child with the supplied name.
           *
           * NOTE: This is part of `updateChildren` and is here for readability.
           *
           * @param {ReactComponent} child Component to mount.
           * @param {string} name Name of the child.
           * @param {number} index Index at which to insert the child.
           * @param {ReactReconcileTransaction} transaction
           * @private
           */
          _mountChildAtIndex: function (
            child,
            mountImage,
            afterNode,
            index,
            transaction,
            context,
          ) {
            child._mountIndex = index;
            return this.createChild(child, afterNode, mountImage);
          },

          /**
           * Unmounts a rendered child.
           *
           * NOTE: This is part of `updateChildren` and is here for readability.
           *
           * @param {ReactComponent} child Component to unmount.
           * @private
           */
          _unmountChild: function (child, node) {
            var update = this.removeChild(child, node);
            child._mountIndex = null;
            return update;
          },
        },
      };

      module.exports = ReactMultiChild;

      /***/
    },
    /* 214 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2014-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactComponentEnvironment
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var invariant = __webpack_require__(9);

      var injected = false;

      var ReactComponentEnvironment = {
        /**
         * Optionally injectable hook for swapping out mount images in the middle of
         * the tree.
         */
        replaceNodeWithMarkup: null,

        /**
         * Optionally injectable hook for processing a queue of child updates. Will
         * later move into MultiChildComponents.
         */
        processChildrenUpdates: null,

        injection: {
          injectEnvironment: function (environment) {
            !!injected
              ? true
                ? invariant(
                    false,
                    'ReactCompositeComponent: injectEnvironment() can only be called once.',
                  )
                : _prodInvariant('104')
              : void 0;
            ReactComponentEnvironment.replaceNodeWithMarkup =
              environment.replaceNodeWithMarkup;
            ReactComponentEnvironment.processChildrenUpdates =
              environment.processChildrenUpdates;
            injected = true;
          },
        },
      };

      module.exports = ReactComponentEnvironment;

      /***/
    },
    /* 215 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactInstanceMap
       */

      'use strict';

      /**
       * `ReactInstanceMap` maintains a mapping from a public facing stateful
       * instance (key) and the internal representation (value). This allows public
       * methods to accept the user facing instance as an argument and map them back
       * to internal methods.
       */

      // TODO: Replace this with ES6: var ReactInstanceMap = new Map();

      var ReactInstanceMap = {
        /**
         * This API should be called `delete` but we'd have to make sure to always
         * transform these to strings for IE support. When this transform is fully
         * supported we can rename it.
         */
        remove: function (key) {
          key._reactInternalInstance = undefined;
        },

        get: function (key) {
          return key._reactInternalInstance;
        },

        has: function (key) {
          return key._reactInternalInstance !== undefined;
        },

        set: function (key, value) {
          key._reactInternalInstance = value;
        },
      };

      module.exports = ReactInstanceMap;

      /***/
    },
    /* 216 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2014-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         * @providesModule ReactChildReconciler
         */

        'use strict';

        var ReactReconciler = __webpack_require__(155);

        var instantiateReactComponent = __webpack_require__(217);
        var KeyEscapeUtils = __webpack_require__(17);
        var shouldUpdateReactComponent = __webpack_require__(221);
        var traverseAllChildren = __webpack_require__(15);
        var warning = __webpack_require__(12);

        var ReactComponentTreeHook;

        if (
          typeof process !== 'undefined' && { NODE_ENV: 'development' } &&
          'development' === 'test'
        ) {
          // Temporary hack.
          // Inline requires don't work well with Jest:
          // https://github.com/facebook/react/issues/7240
          // Remove the inline requires when we don't need them anymore:
          // https://github.com/facebook/react/pull/7178
          ReactComponentTreeHook = __webpack_require__(29);
        }

        function instantiateChild(childInstances, child, name, selfDebugID) {
          // We found a component instance.
          var keyUnique = childInstances[name] === undefined;
          if (true) {
            if (!ReactComponentTreeHook) {
              ReactComponentTreeHook = __webpack_require__(29);
            }
            if (!keyUnique) {
              true
                ? warning(
                    false,
                    'flattenChildren(...): Encountered two children with the same key, ' +
                      '`%s`. Child keys must be unique; when two children share a key, only ' +
                      'the first child will be used.%s',
                    KeyEscapeUtils.unescape(name),
                    ReactComponentTreeHook.getStackAddendumByID(selfDebugID),
                  )
                : void 0;
            }
          }
          if (child != null && keyUnique) {
            childInstances[name] = instantiateReactComponent(child, true);
          }
        }

        /**
         * ReactChildReconciler provides helpers for initializing or updating a set of
         * children. Its output is suitable for passing it onto ReactMultiChild which
         * does diffed reordering and insertion.
         */
        var ReactChildReconciler = {
          /**
           * Generates a "mount image" for each of the supplied children. In the case
           * of `ReactDOMComponent`, a mount image is a string of markup.
           *
           * @param {?object} nestedChildNodes Nested child maps.
           * @return {?object} A set of child instances.
           * @internal
           */
          instantiateChildren: function (
            nestedChildNodes,
            transaction,
            context,
            selfDebugID, // 0 in production and for roots
          ) {
            if (nestedChildNodes == null) {
              return null;
            }
            var childInstances = {};

            if (true) {
              traverseAllChildren(
                nestedChildNodes,
                function (childInsts, child, name) {
                  return instantiateChild(childInsts, child, name, selfDebugID);
                },
                childInstances,
              );
            } else {
              traverseAllChildren(
                nestedChildNodes,
                instantiateChild,
                childInstances,
              );
            }
            return childInstances;
          },

          /**
           * Updates the rendered children and returns a new set of children.
           *
           * @param {?object} prevChildren Previously initialized set of children.
           * @param {?object} nextChildren Flat child element maps.
           * @param {ReactReconcileTransaction} transaction
           * @param {object} context
           * @return {?object} A new set of child instances.
           * @internal
           */
          updateChildren: function (
            prevChildren,
            nextChildren,
            mountImages,
            removedNodes,
            transaction,
            hostParent,
            hostContainerInfo,
            context,
            selfDebugID, // 0 in production and for roots
          ) {
            // We currently don't have a way to track moves here but if we use iterators
            // instead of for..in we can zip the iterators and check if an item has
            // moved.
            // TODO: If nothing has changed, return the prevChildren object so that we
            // can quickly bailout if nothing has changed.
            if (!nextChildren && !prevChildren) {
              return;
            }
            var name;
            var prevChild;
            for (name in nextChildren) {
              if (!nextChildren.hasOwnProperty(name)) {
                continue;
              }
              prevChild = prevChildren && prevChildren[name];
              var prevElement = prevChild && prevChild._currentElement;
              var nextElement = nextChildren[name];
              if (
                prevChild != null &&
                shouldUpdateReactComponent(prevElement, nextElement)
              ) {
                ReactReconciler.receiveComponent(
                  prevChild,
                  nextElement,
                  transaction,
                  context,
                );
                nextChildren[name] = prevChild;
              } else {
                if (prevChild) {
                  removedNodes[name] = ReactReconciler.getHostNode(prevChild);
                  ReactReconciler.unmountComponent(prevChild, false);
                }
                // The child must be instantiated before it's mounted.
                var nextChildInstance = instantiateReactComponent(
                  nextElement,
                  true,
                );
                nextChildren[name] = nextChildInstance;
                // Creating mount image now ensures refs are resolved in right order
                // (see https://github.com/facebook/react/pull/7101 for explanation).
                var nextChildMountImage = ReactReconciler.mountComponent(
                  nextChildInstance,
                  transaction,
                  hostParent,
                  hostContainerInfo,
                  context,
                  selfDebugID,
                );
                mountImages.push(nextChildMountImage);
              }
            }
            // Unmount children that are no longer present.
            for (name in prevChildren) {
              if (
                prevChildren.hasOwnProperty(name) &&
                !(nextChildren && nextChildren.hasOwnProperty(name))
              ) {
                prevChild = prevChildren[name];
                removedNodes[name] = ReactReconciler.getHostNode(prevChild);
                ReactReconciler.unmountComponent(prevChild, false);
              }
            }
          },

          /**
           * Unmounts all rendered children. This should be used to clean up children
           * when this component is unmounted.
           *
           * @param {?object} renderedChildren Previously initialized set of children.
           * @internal
           */
          unmountChildren: function (renderedChildren, safely) {
            for (var name in renderedChildren) {
              if (renderedChildren.hasOwnProperty(name)) {
                var renderedChild = renderedChildren[name];
                ReactReconciler.unmountComponent(renderedChild, safely);
              }
            }
          },
        };

        module.exports = ReactChildReconciler;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(31)));

      /***/
    },
    /* 217 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule instantiateReactComponent
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8),
        _assign = __webpack_require__(5);

      var ReactCompositeComponent = __webpack_require__(218);
      var ReactEmptyComponent = __webpack_require__(222);
      var ReactHostComponent = __webpack_require__(223);

      var invariant = __webpack_require__(9);
      var warning = __webpack_require__(12);

      // To avoid a cyclic dependency, we create the final class in this module
      var ReactCompositeComponentWrapper = function (element) {
        this.construct(element);
      };
      _assign(
        ReactCompositeComponentWrapper.prototype,
        ReactCompositeComponent.Mixin,
        {
          _instantiateReactComponent: instantiateReactComponent,
        },
      );

      function getDeclarationErrorAddendum(owner) {
        if (owner) {
          var name = owner.getName();
          if (name) {
            return ' Check the render method of `' + name + '`.';
          }
        }
        return '';
      }

      /**
       * Check if the type reference is a known internal type. I.e. not a user
       * provided composite type.
       *
       * @param {function} type
       * @return {boolean} Returns true if this is a valid internal type.
       */
      function isInternalComponentType(type) {
        return (
          typeof type === 'function' &&
          typeof type.prototype !== 'undefined' &&
          typeof type.prototype.mountComponent === 'function' &&
          typeof type.prototype.receiveComponent === 'function'
        );
      }

      var nextDebugID = 1;

      /**
       * Given a ReactNode, create an instance that will actually be mounted.
       *
       * @param {ReactNode} node
       * @param {boolean} shouldHaveDebugID
       * @return {object} A new instance of the element's constructor.
       * @protected
       */
      function instantiateReactComponent(node, shouldHaveDebugID) {
        var instance;

        if (node === null || node === false) {
          instance = ReactEmptyComponent.create(instantiateReactComponent);
        } else if (typeof node === 'object') {
          var element = node;
          !(
            element &&
            (typeof element.type === 'function' ||
              typeof element.type === 'string')
          )
            ? true
              ? invariant(
                  false,
                  'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s',
                  element.type == null ? element.type : typeof element.type,
                  getDeclarationErrorAddendum(element._owner),
                )
              : _prodInvariant(
                  '130',
                  element.type == null ? element.type : typeof element.type,
                  getDeclarationErrorAddendum(element._owner),
                )
            : void 0;

          // Special case string values
          if (typeof element.type === 'string') {
            instance = ReactHostComponent.createInternalComponent(element);
          } else if (isInternalComponentType(element.type)) {
            // This is temporarily available for custom components that are not string
            // representations. I.e. ART. Once those are updated to use the string
            // representation, we can drop this code path.
            instance = new element.type(element);

            // We renamed this. Allow the old name for compat. :(
            if (!instance.getHostNode) {
              instance.getHostNode = instance.getNativeNode;
            }
          } else {
            instance = new ReactCompositeComponentWrapper(element);
          }
        } else if (typeof node === 'string' || typeof node === 'number') {
          instance = ReactHostComponent.createInstanceForText(node);
        } else {
          true
            ? true
              ? invariant(
                  false,
                  'Encountered invalid React node of type %s',
                  typeof node,
                )
              : _prodInvariant('131', typeof node)
            : void 0;
        }

        if (true) {
          true
            ? warning(
                typeof instance.mountComponent === 'function' &&
                  typeof instance.receiveComponent === 'function' &&
                  typeof instance.getHostNode === 'function' &&
                  typeof instance.unmountComponent === 'function',
                'Only React Components can be mounted.',
              )
            : void 0;
        }

        // These two fields are used by the DOM and ART diffing algorithms
        // respectively. Instead of using expandos on components, we should be
        // storing the state needed by the diffing algorithms elsewhere.
        instance._mountIndex = 0;
        instance._mountImage = null;

        if (true) {
          instance._debugID = shouldHaveDebugID ? nextDebugID++ : 0;
        }

        // Internal instances should fully constructed at this point, so they should
        // not get any new fields added to them at this point.
        if (true) {
          if (Object.preventExtensions) {
            Object.preventExtensions(instance);
          }
        }

        return instance;
      }

      module.exports = instantiateReactComponent;

      /***/
    },
    /* 218 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactCompositeComponent
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8),
        _assign = __webpack_require__(5);

      var ReactComponentEnvironment = __webpack_require__(214);
      var ReactCurrentOwner = __webpack_require__(11);
      var ReactElement = __webpack_require__(10);
      var ReactErrorUtils = __webpack_require__(142);
      var ReactInstanceMap = __webpack_require__(215);
      var ReactInstrumentation = __webpack_require__(158);
      var ReactNodeTypes = __webpack_require__(219);
      var ReactPropTypeLocations = __webpack_require__(23);
      var ReactReconciler = __webpack_require__(155);

      var checkReactTypeSpec = __webpack_require__(30);
      var emptyObject = __webpack_require__(20);
      var invariant = __webpack_require__(9);
      var shallowEqual = __webpack_require__(220);
      var shouldUpdateReactComponent = __webpack_require__(221);
      var warning = __webpack_require__(12);

      var CompositeTypes = {
        ImpureClass: 0,
        PureClass: 1,
        StatelessFunctional: 2,
      };

      function StatelessComponent(Component) {}
      StatelessComponent.prototype.render = function () {
        var Component = ReactInstanceMap.get(this)._currentElement.type;
        var element = Component(this.props, this.context, this.updater);
        warnIfInvalidElement(Component, element);
        return element;
      };

      function warnIfInvalidElement(Component, element) {
        if (true) {
          true
            ? warning(
                element === null ||
                  element === false ||
                  ReactElement.isValidElement(element),
                '%s(...): A valid React element (or null) must be returned. You may have ' +
                  'returned undefined, an array or some other invalid object.',
                Component.displayName || Component.name || 'Component',
              )
            : void 0;
          true
            ? warning(
                !Component.childContextTypes,
                '%s(...): childContextTypes cannot be defined on a functional component.',
                Component.displayName || Component.name || 'Component',
              )
            : void 0;
        }
      }

      function shouldConstruct(Component) {
        return !!(Component.prototype && Component.prototype.isReactComponent);
      }

      function isPureComponent(Component) {
        return !!(
          Component.prototype && Component.prototype.isPureReactComponent
        );
      }

      // Separated into a function to contain deoptimizations caused by try/finally.
      function measureLifeCyclePerf(fn, debugID, timerType) {
        if (debugID === 0) {
          // Top-level wrappers (see ReactMount) and empty components (see
          // ReactDOMEmptyComponent) are invisible to hooks and devtools.
          // Both are implementation details that should go away in the future.
          return fn();
        }

        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(
          debugID,
          timerType,
        );
        try {
          return fn();
        } finally {
          ReactInstrumentation.debugTool.onEndLifeCycleTimer(
            debugID,
            timerType,
          );
        }
      }

      /**
       * ------------------ The Life-Cycle of a Composite Component ------------------
       *
       * - constructor: Initialization of state. The instance is now retained.
       *   - componentWillMount
       *   - render
       *   - [children's constructors]
       *     - [children's componentWillMount and render]
       *     - [children's componentDidMount]
       *     - componentDidMount
       *
       *       Update Phases:
       *       - componentWillReceiveProps (only called if parent updated)
       *       - shouldComponentUpdate
       *         - componentWillUpdate
       *           - render
       *           - [children's constructors or receive props phases]
       *         - componentDidUpdate
       *
       *     - componentWillUnmount
       *     - [children's componentWillUnmount]
       *   - [children destroyed]
       * - (destroyed): The instance is now blank, released by React and ready for GC.
       *
       * -----------------------------------------------------------------------------
       */

      /**
       * An incrementing ID assigned to each component when it is mounted. This is
       * used to enforce the order in which `ReactUpdates` updates dirty components.
       *
       * @private
       */
      var nextMountID = 1;

      /**
       * @lends {ReactCompositeComponent.prototype}
       */
      var ReactCompositeComponentMixin = {
        /**
         * Base constructor for all composite component.
         *
         * @param {ReactElement} element
         * @final
         * @internal
         */
        construct: function (element) {
          this._currentElement = element;
          this._rootNodeID = 0;
          this._compositeType = null;
          this._instance = null;
          this._hostParent = null;
          this._hostContainerInfo = null;

          // See ReactUpdateQueue
          this._updateBatchNumber = null;
          this._pendingElement = null;
          this._pendingStateQueue = null;
          this._pendingReplaceState = false;
          this._pendingForceUpdate = false;

          this._renderedNodeType = null;
          this._renderedComponent = null;
          this._context = null;
          this._mountOrder = 0;
          this._topLevelWrapper = null;

          // See ReactUpdates and ReactUpdateQueue.
          this._pendingCallbacks = null;

          // ComponentWillUnmount shall only be called once
          this._calledComponentWillUnmount = false;

          if (true) {
            this._warnedAboutRefsInRender = false;
          }
        },

        /**
         * Initializes the component, renders markup, and registers event listeners.
         *
         * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
         * @param {?object} hostParent
         * @param {?object} hostContainerInfo
         * @param {?object} context
         * @return {?string} Rendered markup to be inserted into the DOM.
         * @final
         * @internal
         */
        mountComponent: function (
          transaction,
          hostParent,
          hostContainerInfo,
          context,
        ) {
          var _this = this;

          this._context = context;
          this._mountOrder = nextMountID++;
          this._hostParent = hostParent;
          this._hostContainerInfo = hostContainerInfo;

          var publicProps = this._currentElement.props;
          var publicContext = this._processContext(context);

          var Component = this._currentElement.type;

          var updateQueue = transaction.getUpdateQueue();

          // Initialize the public class
          var doConstruct = shouldConstruct(Component);
          var inst = this._constructComponent(
            doConstruct,
            publicProps,
            publicContext,
            updateQueue,
          );
          var renderedElement;

          // Support functional components
          if (!doConstruct && (inst == null || inst.render == null)) {
            renderedElement = inst;
            warnIfInvalidElement(Component, renderedElement);
            !(
              inst === null ||
              inst === false ||
              ReactElement.isValidElement(inst)
            )
              ? true
                ? invariant(
                    false,
                    '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.',
                    Component.displayName || Component.name || 'Component',
                  )
                : _prodInvariant(
                    '105',
                    Component.displayName || Component.name || 'Component',
                  )
              : void 0;
            inst = new StatelessComponent(Component);
            this._compositeType = CompositeTypes.StatelessFunctional;
          } else {
            if (isPureComponent(Component)) {
              this._compositeType = CompositeTypes.PureClass;
            } else {
              this._compositeType = CompositeTypes.ImpureClass;
            }
          }

          if (true) {
            // This will throw later in _renderValidatedComponent, but add an early
            // warning now to help debugging
            if (inst.render == null) {
              true
                ? warning(
                    false,
                    '%s(...): No `render` method found on the returned component ' +
                      'instance: you may have forgotten to define `render`.',
                    Component.displayName || Component.name || 'Component',
                  )
                : void 0;
            }

            var propsMutated = inst.props !== publicProps;
            var componentName =
              Component.displayName || Component.name || 'Component';

            true
              ? warning(
                  inst.props === undefined || !propsMutated,
                  '%s(...): When calling super() in `%s`, make sure to pass ' +
                    "up the same props that your component's constructor was passed.",
                  componentName,
                  componentName,
                )
              : void 0;
          }

          // These should be set up in the constructor, but as a convenience for
          // simpler class abstractions, we set them up after the fact.
          inst.props = publicProps;
          inst.context = publicContext;
          inst.refs = emptyObject;
          inst.updater = updateQueue;

          this._instance = inst;

          // Store a reference from the instance back to the internal representation
          ReactInstanceMap.set(inst, this);

          if (true) {
            // Since plain JS classes are defined without any special initialization
            // logic, we can not catch common errors early. Therefore, we have to
            // catch them here, at initialization time, instead.
            true
              ? warning(
                  !inst.getInitialState ||
                    inst.getInitialState.isReactClassApproved,
                  'getInitialState was defined on %s, a plain JavaScript class. ' +
                    'This is only supported for classes created using React.createClass. ' +
                    'Did you mean to define a state property instead?',
                  this.getName() || 'a component',
                )
              : void 0;
            true
              ? warning(
                  !inst.getDefaultProps ||
                    inst.getDefaultProps.isReactClassApproved,
                  'getDefaultProps was defined on %s, a plain JavaScript class. ' +
                    'This is only supported for classes created using React.createClass. ' +
                    'Use a static property to define defaultProps instead.',
                  this.getName() || 'a component',
                )
              : void 0;
            true
              ? warning(
                  !inst.propTypes,
                  'propTypes was defined as an instance property on %s. Use a static ' +
                    'property to define propTypes instead.',
                  this.getName() || 'a component',
                )
              : void 0;
            true
              ? warning(
                  !inst.contextTypes,
                  'contextTypes was defined as an instance property on %s. Use a ' +
                    'static property to define contextTypes instead.',
                  this.getName() || 'a component',
                )
              : void 0;
            true
              ? warning(
                  typeof inst.componentShouldUpdate !== 'function',
                  '%s has a method called ' +
                    'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
                    'The name is phrased as a question because the function is ' +
                    'expected to return a value.',
                  this.getName() || 'A component',
                )
              : void 0;
            true
              ? warning(
                  typeof inst.componentDidUnmount !== 'function',
                  '%s has a method called ' +
                    'componentDidUnmount(). But there is no such lifecycle method. ' +
                    'Did you mean componentWillUnmount()?',
                  this.getName() || 'A component',
                )
              : void 0;
            true
              ? warning(
                  typeof inst.componentWillRecieveProps !== 'function',
                  '%s has a method called ' +
                    'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
                  this.getName() || 'A component',
                )
              : void 0;
          }

          var initialState = inst.state;
          if (initialState === undefined) {
            inst.state = initialState = null;
          }
          !(typeof initialState === 'object' && !Array.isArray(initialState))
            ? true
              ? invariant(
                  false,
                  '%s.state: must be set to an object or null',
                  this.getName() || 'ReactCompositeComponent',
                )
              : _prodInvariant(
                  '106',
                  this.getName() || 'ReactCompositeComponent',
                )
            : void 0;

          this._pendingStateQueue = null;
          this._pendingReplaceState = false;
          this._pendingForceUpdate = false;

          var markup;
          if (inst.unstable_handleError) {
            markup = this.performInitialMountWithErrorHandling(
              renderedElement,
              hostParent,
              hostContainerInfo,
              transaction,
              context,
            );
          } else {
            markup = this.performInitialMount(
              renderedElement,
              hostParent,
              hostContainerInfo,
              transaction,
              context,
            );
          }

          if (inst.componentDidMount) {
            if (true) {
              transaction.getReactMountReady().enqueue(function () {
                measureLifeCyclePerf(
                  function () {
                    return inst.componentDidMount();
                  },
                  _this._debugID,
                  'componentDidMount',
                );
              });
            } else {
              transaction
                .getReactMountReady()
                .enqueue(inst.componentDidMount, inst);
            }
          }

          return markup;
        },

        _constructComponent: function (
          doConstruct,
          publicProps,
          publicContext,
          updateQueue,
        ) {
          if (true) {
            ReactCurrentOwner.current = this;
            try {
              return this._constructComponentWithoutOwner(
                doConstruct,
                publicProps,
                publicContext,
                updateQueue,
              );
            } finally {
              ReactCurrentOwner.current = null;
            }
          } else {
            return this._constructComponentWithoutOwner(
              doConstruct,
              publicProps,
              publicContext,
              updateQueue,
            );
          }
        },

        _constructComponentWithoutOwner: function (
          doConstruct,
          publicProps,
          publicContext,
          updateQueue,
        ) {
          var Component = this._currentElement.type;

          if (doConstruct) {
            if (true) {
              return measureLifeCyclePerf(
                function () {
                  return new Component(publicProps, publicContext, updateQueue);
                },
                this._debugID,
                'ctor',
              );
            } else {
              return new Component(publicProps, publicContext, updateQueue);
            }
          }

          // This can still be an instance in case of factory components
          // but we'll count this as time spent rendering as the more common case.
          if (true) {
            return measureLifeCyclePerf(
              function () {
                return Component(publicProps, publicContext, updateQueue);
              },
              this._debugID,
              'render',
            );
          } else {
            return Component(publicProps, publicContext, updateQueue);
          }
        },

        performInitialMountWithErrorHandling: function (
          renderedElement,
          hostParent,
          hostContainerInfo,
          transaction,
          context,
        ) {
          var markup;
          var checkpoint = transaction.checkpoint();
          try {
            markup = this.performInitialMount(
              renderedElement,
              hostParent,
              hostContainerInfo,
              transaction,
              context,
            );
          } catch (e) {
            // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
            transaction.rollback(checkpoint);
            this._instance.unstable_handleError(e);
            if (this._pendingStateQueue) {
              this._instance.state = this._processPendingState(
                this._instance.props,
                this._instance.context,
              );
            }
            checkpoint = transaction.checkpoint();

            this._renderedComponent.unmountComponent(true);
            transaction.rollback(checkpoint);

            // Try again - we've informed the component about the error, so they can render an error message this time.
            // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
            markup = this.performInitialMount(
              renderedElement,
              hostParent,
              hostContainerInfo,
              transaction,
              context,
            );
          }
          return markup;
        },

        performInitialMount: function (
          renderedElement,
          hostParent,
          hostContainerInfo,
          transaction,
          context,
        ) {
          var inst = this._instance;

          var debugID = 0;
          if (true) {
            debugID = this._debugID;
          }

          if (inst.componentWillMount) {
            if (true) {
              measureLifeCyclePerf(
                function () {
                  return inst.componentWillMount();
                },
                debugID,
                'componentWillMount',
              );
            } else {
              inst.componentWillMount();
            }
            // When mounting, calls to `setState` by `componentWillMount` will set
            // `this._pendingStateQueue` without triggering a re-render.
            if (this._pendingStateQueue) {
              inst.state = this._processPendingState(inst.props, inst.context);
            }
          }

          // If not a stateless component, we now render
          if (renderedElement === undefined) {
            renderedElement = this._renderValidatedComponent();
          }

          var nodeType = ReactNodeTypes.getType(renderedElement);
          this._renderedNodeType = nodeType;
          var child = this._instantiateReactComponent(
            renderedElement,
            nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */,
          );
          this._renderedComponent = child;

          var markup = ReactReconciler.mountComponent(
            child,
            transaction,
            hostParent,
            hostContainerInfo,
            this._processChildContext(context),
            debugID,
          );

          if (true) {
            if (debugID !== 0) {
              var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
              ReactInstrumentation.debugTool.onSetChildren(
                debugID,
                childDebugIDs,
              );
            }
          }

          return markup;
        },

        getHostNode: function () {
          return ReactReconciler.getHostNode(this._renderedComponent);
        },

        /**
         * Releases any resources allocated by `mountComponent`.
         *
         * @final
         * @internal
         */
        unmountComponent: function (safely) {
          if (!this._renderedComponent) {
            return;
          }

          var inst = this._instance;

          if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
            inst._calledComponentWillUnmount = true;

            if (safely) {
              var name = this.getName() + '.componentWillUnmount()';
              ReactErrorUtils.invokeGuardedCallback(
                name,
                inst.componentWillUnmount.bind(inst),
              );
            } else {
              if (true) {
                measureLifeCyclePerf(
                  function () {
                    return inst.componentWillUnmount();
                  },
                  this._debugID,
                  'componentWillUnmount',
                );
              } else {
                inst.componentWillUnmount();
              }
            }
          }

          if (this._renderedComponent) {
            ReactReconciler.unmountComponent(this._renderedComponent, safely);
            this._renderedNodeType = null;
            this._renderedComponent = null;
            this._instance = null;
          }

          // Reset pending fields
          // Even if this component is scheduled for another update in ReactUpdates,
          // it would still be ignored because these fields are reset.
          this._pendingStateQueue = null;
          this._pendingReplaceState = false;
          this._pendingForceUpdate = false;
          this._pendingCallbacks = null;
          this._pendingElement = null;

          // These fields do not really need to be reset since this object is no
          // longer accessible.
          this._context = null;
          this._rootNodeID = 0;
          this._topLevelWrapper = null;

          // Delete the reference from the instance to this internal representation
          // which allow the internals to be properly cleaned up even if the user
          // leaks a reference to the public instance.
          ReactInstanceMap.remove(inst);

          // Some existing components rely on inst.props even after they've been
          // destroyed (in event handlers).
          // TODO: inst.props = null;
          // TODO: inst.state = null;
          // TODO: inst.context = null;
        },

        /**
         * Filters the context object to only contain keys specified in
         * `contextTypes`
         *
         * @param {object} context
         * @return {?object}
         * @private
         */
        _maskContext: function (context) {
          var Component = this._currentElement.type;
          var contextTypes = Component.contextTypes;
          if (!contextTypes) {
            return emptyObject;
          }
          var maskedContext = {};
          for (var contextName in contextTypes) {
            maskedContext[contextName] = context[contextName];
          }
          return maskedContext;
        },

        /**
         * Filters the context object to only contain keys specified in
         * `contextTypes`, and asserts that they are valid.
         *
         * @param {object} context
         * @return {?object}
         * @private
         */
        _processContext: function (context) {
          var maskedContext = this._maskContext(context);
          if (true) {
            var Component = this._currentElement.type;
            if (Component.contextTypes) {
              this._checkContextTypes(
                Component.contextTypes,
                maskedContext,
                ReactPropTypeLocations.context,
              );
            }
          }
          return maskedContext;
        },

        /**
         * @param {object} currentContext
         * @return {object}
         * @private
         */
        _processChildContext: function (currentContext) {
          var Component = this._currentElement.type;
          var inst = this._instance;
          var childContext;

          if (inst.getChildContext) {
            if (true) {
              ReactInstrumentation.debugTool.onBeginProcessingChildContext();
              try {
                childContext = inst.getChildContext();
              } finally {
                ReactInstrumentation.debugTool.onEndProcessingChildContext();
              }
            } else {
              childContext = inst.getChildContext();
            }
          }

          if (childContext) {
            !(typeof Component.childContextTypes === 'object')
              ? true
                ? invariant(
                    false,
                    '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().',
                    this.getName() || 'ReactCompositeComponent',
                  )
                : _prodInvariant(
                    '107',
                    this.getName() || 'ReactCompositeComponent',
                  )
              : void 0;
            if (true) {
              this._checkContextTypes(
                Component.childContextTypes,
                childContext,
                ReactPropTypeLocations.childContext,
              );
            }
            for (var name in childContext) {
              !(name in Component.childContextTypes)
                ? true
                  ? invariant(
                      false,
                      '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
                      this.getName() || 'ReactCompositeComponent',
                      name,
                    )
                  : _prodInvariant(
                      '108',
                      this.getName() || 'ReactCompositeComponent',
                      name,
                    )
                : void 0;
            }
            return _assign({}, currentContext, childContext);
          }
          return currentContext;
        },

        /**
         * Assert that the context types are valid
         *
         * @param {object} typeSpecs Map of context field to a ReactPropType
         * @param {object} values Runtime values that need to be type-checked
         * @param {string} location e.g. "prop", "context", "child context"
         * @private
         */
        _checkContextTypes: function (typeSpecs, values, location) {
          checkReactTypeSpec(
            typeSpecs,
            values,
            location,
            this.getName(),
            null,
            this._debugID,
          );
        },

        receiveComponent: function (nextElement, transaction, nextContext) {
          var prevElement = this._currentElement;
          var prevContext = this._context;

          this._pendingElement = null;

          this.updateComponent(
            transaction,
            prevElement,
            nextElement,
            prevContext,
            nextContext,
          );
        },

        /**
         * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
         * is set, update the component.
         *
         * @param {ReactReconcileTransaction} transaction
         * @internal
         */
        performUpdateIfNecessary: function (transaction) {
          if (this._pendingElement != null) {
            ReactReconciler.receiveComponent(
              this,
              this._pendingElement,
              transaction,
              this._context,
            );
          } else if (
            this._pendingStateQueue !== null ||
            this._pendingForceUpdate
          ) {
            this.updateComponent(
              transaction,
              this._currentElement,
              this._currentElement,
              this._context,
              this._context,
            );
          } else {
            this._updateBatchNumber = null;
          }
        },

        /**
         * Perform an update to a mounted component. The componentWillReceiveProps and
         * shouldComponentUpdate methods are called, then (assuming the update isn't
         * skipped) the remaining update lifecycle methods are called and the DOM
         * representation is updated.
         *
         * By default, this implements React's rendering and reconciliation algorithm.
         * Sophisticated clients may wish to override this.
         *
         * @param {ReactReconcileTransaction} transaction
         * @param {ReactElement} prevParentElement
         * @param {ReactElement} nextParentElement
         * @internal
         * @overridable
         */
        updateComponent: function (
          transaction,
          prevParentElement,
          nextParentElement,
          prevUnmaskedContext,
          nextUnmaskedContext,
        ) {
          var inst = this._instance;
          !(inst != null)
            ? true
              ? invariant(
                  false,
                  'Attempted to update component `%s` that has already been unmounted (or failed to mount).',
                  this.getName() || 'ReactCompositeComponent',
                )
              : _prodInvariant(
                  '136',
                  this.getName() || 'ReactCompositeComponent',
                )
            : void 0;

          var willReceive = false;
          var nextContext;

          // Determine if the context has changed or not
          if (this._context === nextUnmaskedContext) {
            nextContext = inst.context;
          } else {
            nextContext = this._processContext(nextUnmaskedContext);
            willReceive = true;
          }

          var prevProps = prevParentElement.props;
          var nextProps = nextParentElement.props;

          // Not a simple state update but a props update
          if (prevParentElement !== nextParentElement) {
            willReceive = true;
          }

          // An update here will schedule an update but immediately set
          // _pendingStateQueue which will ensure that any state updates gets
          // immediately reconciled instead of waiting for the next batch.
          if (willReceive && inst.componentWillReceiveProps) {
            if (true) {
              measureLifeCyclePerf(
                function () {
                  return inst.componentWillReceiveProps(nextProps, nextContext);
                },
                this._debugID,
                'componentWillReceiveProps',
              );
            } else {
              inst.componentWillReceiveProps(nextProps, nextContext);
            }
          }

          var nextState = this._processPendingState(nextProps, nextContext);
          var shouldUpdate = true;

          if (!this._pendingForceUpdate) {
            if (inst.shouldComponentUpdate) {
              if (true) {
                shouldUpdate = measureLifeCyclePerf(
                  function () {
                    return inst.shouldComponentUpdate(
                      nextProps,
                      nextState,
                      nextContext,
                    );
                  },
                  this._debugID,
                  'shouldComponentUpdate',
                );
              } else {
                shouldUpdate = inst.shouldComponentUpdate(
                  nextProps,
                  nextState,
                  nextContext,
                );
              }
            } else {
              if (this._compositeType === CompositeTypes.PureClass) {
                shouldUpdate =
                  !shallowEqual(prevProps, nextProps) ||
                  !shallowEqual(inst.state, nextState);
              }
            }
          }

          if (true) {
            true
              ? warning(
                  shouldUpdate !== undefined,
                  '%s.shouldComponentUpdate(): Returned undefined instead of a ' +
                    'boolean value. Make sure to return true or false.',
                  this.getName() || 'ReactCompositeComponent',
                )
              : void 0;
          }

          this._updateBatchNumber = null;
          if (shouldUpdate) {
            this._pendingForceUpdate = false;
            // Will set `this.props`, `this.state` and `this.context`.
            this._performComponentUpdate(
              nextParentElement,
              nextProps,
              nextState,
              nextContext,
              transaction,
              nextUnmaskedContext,
            );
          } else {
            // If it's determined that a component should not update, we still want
            // to set props and state but we shortcut the rest of the update.
            this._currentElement = nextParentElement;
            this._context = nextUnmaskedContext;
            inst.props = nextProps;
            inst.state = nextState;
            inst.context = nextContext;
          }
        },

        _processPendingState: function (props, context) {
          var inst = this._instance;
          var queue = this._pendingStateQueue;
          var replace = this._pendingReplaceState;
          this._pendingReplaceState = false;
          this._pendingStateQueue = null;

          if (!queue) {
            return inst.state;
          }

          if (replace && queue.length === 1) {
            return queue[0];
          }

          var nextState = _assign({}, replace ? queue[0] : inst.state);
          for (var i = replace ? 1 : 0; i < queue.length; i++) {
            var partial = queue[i];
            _assign(
              nextState,
              typeof partial === 'function'
                ? partial.call(inst, nextState, props, context)
                : partial,
            );
          }

          return nextState;
        },

        /**
         * Merges new props and state, notifies delegate methods of update and
         * performs update.
         *
         * @param {ReactElement} nextElement Next element
         * @param {object} nextProps Next public object to set as properties.
         * @param {?object} nextState Next object to set as state.
         * @param {?object} nextContext Next public object to set as context.
         * @param {ReactReconcileTransaction} transaction
         * @param {?object} unmaskedContext
         * @private
         */
        _performComponentUpdate: function (
          nextElement,
          nextProps,
          nextState,
          nextContext,
          transaction,
          unmaskedContext,
        ) {
          var _this2 = this;

          var inst = this._instance;

          var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
          var prevProps;
          var prevState;
          var prevContext;
          if (hasComponentDidUpdate) {
            prevProps = inst.props;
            prevState = inst.state;
            prevContext = inst.context;
          }

          if (inst.componentWillUpdate) {
            if (true) {
              measureLifeCyclePerf(
                function () {
                  return inst.componentWillUpdate(
                    nextProps,
                    nextState,
                    nextContext,
                  );
                },
                this._debugID,
                'componentWillUpdate',
              );
            } else {
              inst.componentWillUpdate(nextProps, nextState, nextContext);
            }
          }

          this._currentElement = nextElement;
          this._context = unmaskedContext;
          inst.props = nextProps;
          inst.state = nextState;
          inst.context = nextContext;

          this._updateRenderedComponent(transaction, unmaskedContext);

          if (hasComponentDidUpdate) {
            if (true) {
              transaction.getReactMountReady().enqueue(function () {
                measureLifeCyclePerf(
                  inst.componentDidUpdate.bind(
                    inst,
                    prevProps,
                    prevState,
                    prevContext,
                  ),
                  _this2._debugID,
                  'componentDidUpdate',
                );
              });
            } else {
              transaction
                .getReactMountReady()
                .enqueue(
                  inst.componentDidUpdate.bind(
                    inst,
                    prevProps,
                    prevState,
                    prevContext,
                  ),
                  inst,
                );
            }
          }
        },

        /**
         * Call the component's `render` method and update the DOM accordingly.
         *
         * @param {ReactReconcileTransaction} transaction
         * @internal
         */
        _updateRenderedComponent: function (transaction, context) {
          var prevComponentInstance = this._renderedComponent;
          var prevRenderedElement = prevComponentInstance._currentElement;
          var nextRenderedElement = this._renderValidatedComponent();

          var debugID = 0;
          if (true) {
            debugID = this._debugID;
          }

          if (
            shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)
          ) {
            ReactReconciler.receiveComponent(
              prevComponentInstance,
              nextRenderedElement,
              transaction,
              this._processChildContext(context),
            );
          } else {
            var oldHostNode = ReactReconciler.getHostNode(
              prevComponentInstance,
            );
            ReactReconciler.unmountComponent(prevComponentInstance, false);

            var nodeType = ReactNodeTypes.getType(nextRenderedElement);
            this._renderedNodeType = nodeType;
            var child = this._instantiateReactComponent(
              nextRenderedElement,
              nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */,
            );
            this._renderedComponent = child;

            var nextMarkup = ReactReconciler.mountComponent(
              child,
              transaction,
              this._hostParent,
              this._hostContainerInfo,
              this._processChildContext(context),
              debugID,
            );

            if (true) {
              if (debugID !== 0) {
                var childDebugIDs =
                  child._debugID !== 0 ? [child._debugID] : [];
                ReactInstrumentation.debugTool.onSetChildren(
                  debugID,
                  childDebugIDs,
                );
              }
            }

            this._replaceNodeWithMarkup(
              oldHostNode,
              nextMarkup,
              prevComponentInstance,
            );
          }
        },

        /**
         * Overridden in shallow rendering.
         *
         * @protected
         */
        _replaceNodeWithMarkup: function (
          oldHostNode,
          nextMarkup,
          prevInstance,
        ) {
          ReactComponentEnvironment.replaceNodeWithMarkup(
            oldHostNode,
            nextMarkup,
            prevInstance,
          );
        },

        /**
         * @protected
         */
        _renderValidatedComponentWithoutOwnerOrContext: function () {
          var inst = this._instance;
          var renderedComponent;

          if (true) {
            renderedComponent = measureLifeCyclePerf(
              function () {
                return inst.render();
              },
              this._debugID,
              'render',
            );
          } else {
            renderedComponent = inst.render();
          }

          if (true) {
            // We allow auto-mocks to proceed as if they're returning null.
            if (
              renderedComponent === undefined &&
              inst.render._isMockFunction
            ) {
              // This is probably bad practice. Consider warning here and
              // deprecating this convenience.
              renderedComponent = null;
            }
          }

          return renderedComponent;
        },

        /**
         * @private
         */
        _renderValidatedComponent: function () {
          var renderedComponent;
          if (true) {
            ReactCurrentOwner.current = this;
            try {
              renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
            } finally {
              ReactCurrentOwner.current = null;
            }
          } else {
            renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
          }
          !(
            // TODO: An `isValidNode` function would probably be more appropriate
            (
              renderedComponent === null ||
              renderedComponent === false ||
              ReactElement.isValidElement(renderedComponent)
            )
          )
            ? true
              ? invariant(
                  false,
                  '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.',
                  this.getName() || 'ReactCompositeComponent',
                )
              : _prodInvariant(
                  '109',
                  this.getName() || 'ReactCompositeComponent',
                )
            : void 0;

          return renderedComponent;
        },

        /**
         * Lazily allocates the refs object and stores `component` as `ref`.
         *
         * @param {string} ref Reference name.
         * @param {component} component Component to store as `ref`.
         * @final
         * @private
         */
        attachRef: function (ref, component) {
          var inst = this.getPublicInstance();
          !(inst != null)
            ? true
              ? invariant(
                  false,
                  'Stateless function components cannot have refs.',
                )
              : _prodInvariant('110')
            : void 0;
          var publicComponentInstance = component.getPublicInstance();
          if (true) {
            var componentName =
              component && component.getName
                ? component.getName()
                : 'a component';
            true
              ? warning(
                  publicComponentInstance != null ||
                    component._compositeType !==
                      CompositeTypes.StatelessFunctional,
                  'Stateless function components cannot be given refs ' +
                    '(See ref "%s" in %s created by %s). ' +
                    'Attempts to access this ref will fail.',
                  ref,
                  componentName,
                  this.getName(),
                )
              : void 0;
          }
          var refs = inst.refs === emptyObject ? (inst.refs = {}) : inst.refs;
          refs[ref] = publicComponentInstance;
        },

        /**
         * Detaches a reference name.
         *
         * @param {string} ref Name to dereference.
         * @final
         * @private
         */
        detachRef: function (ref) {
          var refs = this.getPublicInstance().refs;
          delete refs[ref];
        },

        /**
         * Get a text description of the component that can be used to identify it
         * in error messages.
         * @return {string} The name or null.
         * @internal
         */
        getName: function () {
          var type = this._currentElement.type;
          var constructor = this._instance && this._instance.constructor;
          return (
            type.displayName ||
            (constructor && constructor.displayName) ||
            type.name ||
            (constructor && constructor.name) ||
            null
          );
        },

        /**
         * Get the publicly accessible representation of this component - i.e. what
         * is exposed by refs and returned by render. Can be null for stateless
         * components.
         *
         * @return {ReactComponent} the public component instance.
         * @internal
         */
        getPublicInstance: function () {
          var inst = this._instance;
          if (this._compositeType === CompositeTypes.StatelessFunctional) {
            return null;
          }
          return inst;
        },

        // Stub
        _instantiateReactComponent: null,
      };

      var ReactCompositeComponent = {
        Mixin: ReactCompositeComponentMixin,
      };

      module.exports = ReactCompositeComponent;

      /***/
    },
    /* 219 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactNodeTypes
       *
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var ReactElement = __webpack_require__(10);

      var invariant = __webpack_require__(9);

      var ReactNodeTypes = {
        HOST: 0,
        COMPOSITE: 1,
        EMPTY: 2,

        getType: function (node) {
          if (node === null || node === false) {
            return ReactNodeTypes.EMPTY;
          } else if (ReactElement.isValidElement(node)) {
            if (typeof node.type === 'function') {
              return ReactNodeTypes.COMPOSITE;
            } else {
              return ReactNodeTypes.HOST;
            }
          }
          true
            ? true
              ? invariant(false, 'Unexpected node: %s', node)
              : _prodInvariant('26', node)
            : void 0;
        },
      };

      module.exports = ReactNodeTypes;

      /***/
    },
    /* 220 */
    /***/ function (module, exports) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       *
       */

      /*eslint-disable no-self-compare */

      'use strict';

      var hasOwnProperty = Object.prototype.hasOwnProperty;

      /**
       * inlined Object.is polyfill to avoid requiring consumers ship their own
       * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
       */
      function is(x, y) {
        // SameValue algorithm
        if (x === y) {
          // Steps 1-5, 7-10
          // Steps 6.b-6.e: +0 != -0
          // Added the nonzero y check to make Flow happy, but it is redundant
          return x !== 0 || y !== 0 || 1 / x === 1 / y;
        } else {
          // Step 6.a: NaN == NaN
          return x !== x && y !== y;
        }
      }

      /**
       * Performs equality by iterating through keys on an object and returning false
       * when any key has values which are not strictly equal between the arguments.
       * Returns true when the values of all keys are strictly equal.
       */
      function shallowEqual(objA, objB) {
        if (is(objA, objB)) {
          return true;
        }

        if (
          typeof objA !== 'object' ||
          objA === null ||
          typeof objB !== 'object' ||
          objB === null
        ) {
          return false;
        }

        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);

        if (keysA.length !== keysB.length) {
          return false;
        }

        // Test for A's keys different from B.
        for (var i = 0; i < keysA.length; i++) {
          if (
            !hasOwnProperty.call(objB, keysA[i]) ||
            !is(objA[keysA[i]], objB[keysA[i]])
          ) {
            return false;
          }
        }

        return true;
      }

      module.exports = shallowEqual;

      /***/
    },
    /* 221 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule shouldUpdateReactComponent
       */

      'use strict';

      /**
       * Given a `prevElement` and `nextElement`, determines if the existing
       * instance should be updated as opposed to being destroyed or replaced by a new
       * instance. Both arguments are elements. This ensures that this logic can
       * operate on stateless trees without any backing instance.
       *
       * @param {?object} prevElement
       * @param {?object} nextElement
       * @return {boolean} True if the existing instance should be updated.
       * @protected
       */

      function shouldUpdateReactComponent(prevElement, nextElement) {
        var prevEmpty = prevElement === null || prevElement === false;
        var nextEmpty = nextElement === null || nextElement === false;
        if (prevEmpty || nextEmpty) {
          return prevEmpty === nextEmpty;
        }

        var prevType = typeof prevElement;
        var nextType = typeof nextElement;
        if (prevType === 'string' || prevType === 'number') {
          return nextType === 'string' || nextType === 'number';
        } else {
          return (
            nextType === 'object' &&
            prevElement.type === nextElement.type &&
            prevElement.key === nextElement.key
          );
        }
      }

      module.exports = shouldUpdateReactComponent;

      /***/
    },
    /* 222 */
    /***/ function (module, exports) {
      /**
       * Copyright 2014-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactEmptyComponent
       */

      'use strict';

      var emptyComponentFactory;

      var ReactEmptyComponentInjection = {
        injectEmptyComponentFactory: function (factory) {
          emptyComponentFactory = factory;
        },
      };

      var ReactEmptyComponent = {
        create: function (instantiate) {
          return emptyComponentFactory(instantiate);
        },
      };

      ReactEmptyComponent.injection = ReactEmptyComponentInjection;

      module.exports = ReactEmptyComponent;

      /***/
    },
    /* 223 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2014-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactHostComponent
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8),
        _assign = __webpack_require__(5);

      var invariant = __webpack_require__(9);

      var genericComponentClass = null;
      // This registry keeps track of wrapper classes around host tags.
      var tagToComponentClass = {};
      var textComponentClass = null;

      var ReactHostComponentInjection = {
        // This accepts a class that receives the tag string. This is a catch all
        // that can render any kind of tag.
        injectGenericComponentClass: function (componentClass) {
          genericComponentClass = componentClass;
        },
        // This accepts a text component class that takes the text string to be
        // rendered as props.
        injectTextComponentClass: function (componentClass) {
          textComponentClass = componentClass;
        },
        // This accepts a keyed object with classes as values. Each key represents a
        // tag. That particular tag will use this class instead of the generic one.
        injectComponentClasses: function (componentClasses) {
          _assign(tagToComponentClass, componentClasses);
        },
      };

      /**
       * Get a host internal component class for a specific tag.
       *
       * @param {ReactElement} element The element to create.
       * @return {function} The internal class constructor function.
       */
      function createInternalComponent(element) {
        !genericComponentClass
          ? true
            ? invariant(
                false,
                'There is no registered component for the tag %s',
                element.type,
              )
            : _prodInvariant('111', element.type)
          : void 0;
        return new genericComponentClass(element);
      }

      /**
       * @param {ReactText} text
       * @return {ReactComponent}
       */
      function createInstanceForText(text) {
        return new textComponentClass(text);
      }

      /**
       * @param {ReactComponent} component
       * @return {boolean}
       */
      function isTextComponent(component) {
        return component instanceof textComponentClass;
      }

      var ReactHostComponent = {
        createInternalComponent: createInternalComponent,
        createInstanceForText: createInstanceForText,
        isTextComponent: isTextComponent,
        injection: ReactHostComponentInjection,
      };

      module.exports = ReactHostComponent;

      /***/
    },
    /* 224 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (process) {
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         * @providesModule flattenChildren
         *
         */

        'use strict';

        var KeyEscapeUtils = __webpack_require__(17);
        var traverseAllChildren = __webpack_require__(15);
        var warning = __webpack_require__(12);

        var ReactComponentTreeHook;

        if (
          typeof process !== 'undefined' && { NODE_ENV: 'development' } &&
          'development' === 'test'
        ) {
          // Temporary hack.
          // Inline requires don't work well with Jest:
          // https://github.com/facebook/react/issues/7240
          // Remove the inline requires when we don't need them anymore:
          // https://github.com/facebook/react/pull/7178
          ReactComponentTreeHook = __webpack_require__(29);
        }

        /**
         * @param {function} traverseContext Context passed through traversal.
         * @param {?ReactComponent} child React child component.
         * @param {!string} name String name of key path to child.
         * @param {number=} selfDebugID Optional debugID of the current internal instance.
         */
        function flattenSingleChildIntoContext(
          traverseContext,
          child,
          name,
          selfDebugID,
        ) {
          // We found a component instance.
          if (traverseContext && typeof traverseContext === 'object') {
            var result = traverseContext;
            var keyUnique = result[name] === undefined;
            if (true) {
              if (!ReactComponentTreeHook) {
                ReactComponentTreeHook = __webpack_require__(29);
              }
              if (!keyUnique) {
                true
                  ? warning(
                      false,
                      'flattenChildren(...): Encountered two children with the same key, ' +
                        '`%s`. Child keys must be unique; when two children share a key, only ' +
                        'the first child will be used.%s',
                      KeyEscapeUtils.unescape(name),
                      ReactComponentTreeHook.getStackAddendumByID(selfDebugID),
                    )
                  : void 0;
              }
            }
            if (keyUnique && child != null) {
              result[name] = child;
            }
          }
        }

        /**
         * Flattens children that are typically specified as `props.children`. Any null
         * children will not be included in the resulting object.
         * @return {!object} flattened children keyed by name.
         */
        function flattenChildren(children, selfDebugID) {
          if (children == null) {
            return children;
          }
          var result = {};

          if (true) {
            traverseAllChildren(
              children,
              function (traverseContext, child, name) {
                return flattenSingleChildIntoContext(
                  traverseContext,
                  child,
                  name,
                  selfDebugID,
                );
              },
              result,
            );
          } else {
            traverseAllChildren(
              children,
              flattenSingleChildIntoContext,
              result,
            );
          }
          return result;
        }

        module.exports = flattenChildren;
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(31)));

      /***/
    },
    /* 225 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2014-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactServerRenderingTransaction
       */

      'use strict';

      var _assign = __webpack_require__(5);

      var PooledClass = __webpack_require__(7);
      var Transaction = __webpack_require__(165);
      var ReactInstrumentation = __webpack_require__(158);
      var ReactServerUpdateQueue = __webpack_require__(226);

      /**
       * Executed within the scope of the `Transaction` instance. Consider these as
       * being member methods, but with an implied ordering while being isolated from
       * each other.
       */
      var TRANSACTION_WRAPPERS = [];

      if (true) {
        TRANSACTION_WRAPPERS.push({
          initialize: ReactInstrumentation.debugTool.onBeginFlush,
          close: ReactInstrumentation.debugTool.onEndFlush,
        });
      }

      var noopCallbackQueue = {
        enqueue: function () {},
      };

      /**
       * @class ReactServerRenderingTransaction
       * @param {boolean} renderToStaticMarkup
       */
      function ReactServerRenderingTransaction(renderToStaticMarkup) {
        this.reinitializeTransaction();
        this.renderToStaticMarkup = renderToStaticMarkup;
        this.useCreateElement = false;
        this.updateQueue = new ReactServerUpdateQueue(this);
      }

      var Mixin = {
        /**
         * @see Transaction
         * @abstract
         * @final
         * @return {array} Empty list of operation wrap procedures.
         */
        getTransactionWrappers: function () {
          return TRANSACTION_WRAPPERS;
        },

        /**
         * @return {object} The queue to collect `onDOMReady` callbacks with.
         */
        getReactMountReady: function () {
          return noopCallbackQueue;
        },

        /**
         * @return {object} The queue to collect React async events.
         */
        getUpdateQueue: function () {
          return this.updateQueue;
        },

        /**
         * `PooledClass` looks for this, and will invoke this before allowing this
         * instance to be reused.
         */
        destructor: function () {},

        checkpoint: function () {},

        rollback: function () {},
      };

      _assign(
        ReactServerRenderingTransaction.prototype,
        Transaction.Mixin,
        Mixin,
      );

      PooledClass.addPoolingTo(ReactServerRenderingTransaction);

      module.exports = ReactServerRenderingTransaction;

      /***/
    },
    /* 226 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2015-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactServerUpdateQueue
       *
       */

      'use strict';

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      var ReactUpdateQueue = __webpack_require__(227);
      var Transaction = __webpack_require__(165);
      var warning = __webpack_require__(12);

      function warnNoop(publicInstance, callerName) {
        if (true) {
          var constructor = publicInstance.constructor;
          true
            ? warning(
                false,
                '%s(...): Can only update a mounting component. ' +
                  'This usually means you called %s() outside componentWillMount() on the server. ' +
                  'This is a no-op. Please check the code for the %s component.',
                callerName,
                callerName,
                (constructor &&
                  (constructor.displayName || constructor.name)) ||
                  'ReactClass',
              )
            : void 0;
        }
      }

      /**
       * This is the update queue used for server rendering.
       * It delegates to ReactUpdateQueue while server rendering is in progress and
       * switches to ReactNoopUpdateQueue after the transaction has completed.
       * @class ReactServerUpdateQueue
       * @param {Transaction} transaction
       */

      var ReactServerUpdateQueue = (function () {
        /* :: transaction: Transaction; */

        function ReactServerUpdateQueue(transaction) {
          _classCallCheck(this, ReactServerUpdateQueue);

          this.transaction = transaction;
        }

        /**
         * Checks whether or not this composite component is mounted.
         * @param {ReactClass} publicInstance The instance we want to test.
         * @return {boolean} True if mounted, false otherwise.
         * @protected
         * @final
         */

        ReactServerUpdateQueue.prototype.isMounted = function isMounted(
          publicInstance,
        ) {
          return false;
        };

        /**
         * Enqueue a callback that will be executed after all the pending updates
         * have processed.
         *
         * @param {ReactClass} publicInstance The instance to use as `this` context.
         * @param {?function} callback Called after state is updated.
         * @internal
         */

        ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(
          publicInstance,
          callback,
          callerName,
        ) {
          if (this.transaction.isInTransaction()) {
            ReactUpdateQueue.enqueueCallback(
              publicInstance,
              callback,
              callerName,
            );
          }
        };

        /**
         * Forces an update. This should only be invoked when it is known with
         * certainty that we are **not** in a DOM transaction.
         *
         * You may want to call this when you know that some deeper aspect of the
         * component's state has changed but `setState` was not called.
         *
         * This will not invoke `shouldComponentUpdate`, but it will invoke
         * `componentWillUpdate` and `componentDidUpdate`.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @internal
         */

        ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(
          publicInstance,
        ) {
          if (this.transaction.isInTransaction()) {
            ReactUpdateQueue.enqueueForceUpdate(publicInstance);
          } else {
            warnNoop(publicInstance, 'forceUpdate');
          }
        };

        /**
         * Replaces all of the state. Always use this or `setState` to mutate state.
         * You should treat `this.state` as immutable.
         *
         * There is no guarantee that `this.state` will be immediately updated, so
         * accessing `this.state` after calling this method may return the old value.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object|function} completeState Next state.
         * @internal
         */

        ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(
          publicInstance,
          completeState,
        ) {
          if (this.transaction.isInTransaction()) {
            ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
          } else {
            warnNoop(publicInstance, 'replaceState');
          }
        };

        /**
         * Sets a subset of the state. This only exists because _pendingState is
         * internal. This provides a merging strategy that is not available to deep
         * properties which is confusing. TODO: Expose pendingState or don't use it
         * during the merge.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object|function} partialState Next partial state to be merged with state.
         * @internal
         */

        ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(
          publicInstance,
          partialState,
        ) {
          if (this.transaction.isInTransaction()) {
            ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
          } else {
            warnNoop(publicInstance, 'setState');
          }
        };

        return ReactServerUpdateQueue;
      })();

      module.exports = ReactServerUpdateQueue;

      /***/
    },
    /* 227 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2015-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactUpdateQueue
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var ReactCurrentOwner = __webpack_require__(11);
      var ReactInstanceMap = __webpack_require__(215);
      var ReactInstrumentation = __webpack_require__(158);
      var ReactUpdates = __webpack_require__(152);

      var invariant = __webpack_require__(9);
      var warning = __webpack_require__(12);

      function enqueueUpdate(internalInstance) {
        ReactUpdates.enqueueUpdate(internalInstance);
      }

      function formatUnexpectedArgument(arg) {
        var type = typeof arg;
        if (type !== 'object') {
          return type;
        }
        var displayName = (arg.constructor && arg.constructor.name) || type;
        var keys = Object.keys(arg);
        if (keys.length > 0 && keys.length < 20) {
          return displayName + ' (keys: ' + keys.join(', ') + ')';
        }
        return displayName;
      }

      function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
        var internalInstance = ReactInstanceMap.get(publicInstance);
        if (!internalInstance) {
          if (true) {
            var ctor = publicInstance.constructor;
            // Only warn when we have a callerName. Otherwise we should be silent.
            // We're probably calling from enqueueCallback. We don't want to warn
            // there because we already warned for the corresponding lifecycle method.
            true
              ? warning(
                  !callerName,
                  '%s(...): Can only update a mounted or mounting component. ' +
                    'This usually means you called %s() on an unmounted component. ' +
                    'This is a no-op. Please check the code for the %s component.',
                  callerName,
                  callerName,
                  (ctor && (ctor.displayName || ctor.name)) || 'ReactClass',
                )
              : void 0;
          }
          return null;
        }

        if (true) {
          true
            ? warning(
                ReactCurrentOwner.current == null,
                '%s(...): Cannot update during an existing state transition (such as ' +
                  "within `render` or another component's constructor). Render methods " +
                  'should be a pure function of props and state; constructor ' +
                  'side-effects are an anti-pattern, but can be moved to ' +
                  '`componentWillMount`.',
                callerName,
              )
            : void 0;
        }

        return internalInstance;
      }

      /**
       * ReactUpdateQueue allows for state updates to be scheduled into a later
       * reconciliation step.
       */
      var ReactUpdateQueue = {
        /**
         * Checks whether or not this composite component is mounted.
         * @param {ReactClass} publicInstance The instance we want to test.
         * @return {boolean} True if mounted, false otherwise.
         * @protected
         * @final
         */
        isMounted: function (publicInstance) {
          if (true) {
            var owner = ReactCurrentOwner.current;
            if (owner !== null) {
              true
                ? warning(
                    owner._warnedAboutRefsInRender,
                    '%s is accessing isMounted inside its render() function. ' +
                      'render() should be a pure function of props and state. It should ' +
                      'never access something that requires stale data from the previous ' +
                      'render, such as refs. Move this logic to componentDidMount and ' +
                      'componentDidUpdate instead.',
                    owner.getName() || 'A component',
                  )
                : void 0;
              owner._warnedAboutRefsInRender = true;
            }
          }
          var internalInstance = ReactInstanceMap.get(publicInstance);
          if (internalInstance) {
            // During componentWillMount and render this will still be null but after
            // that will always render to something. At least for now. So we can use
            // this hack.
            return !!internalInstance._renderedComponent;
          } else {
            return false;
          }
        },

        /**
         * Enqueue a callback that will be executed after all the pending updates
         * have processed.
         *
         * @param {ReactClass} publicInstance The instance to use as `this` context.
         * @param {?function} callback Called after state is updated.
         * @param {string} callerName Name of the calling function in the public API.
         * @internal
         */
        enqueueCallback: function (publicInstance, callback, callerName) {
          ReactUpdateQueue.validateCallback(callback, callerName);
          var internalInstance = getInternalInstanceReadyForUpdate(
            publicInstance,
          );

          // Previously we would throw an error if we didn't have an internal
          // instance. Since we want to make it a no-op instead, we mirror the same
          // behavior we have in other enqueue* methods.
          // We also need to ignore callbacks in componentWillMount. See
          // enqueueUpdates.
          if (!internalInstance) {
            return null;
          }

          if (internalInstance._pendingCallbacks) {
            internalInstance._pendingCallbacks.push(callback);
          } else {
            internalInstance._pendingCallbacks = [callback];
          }
          // TODO: The callback here is ignored when setState is called from
          // componentWillMount. Either fix it or disallow doing so completely in
          // favor of getInitialState. Alternatively, we can disallow
          // componentWillMount during server-side rendering.
          enqueueUpdate(internalInstance);
        },

        enqueueCallbackInternal: function (internalInstance, callback) {
          if (internalInstance._pendingCallbacks) {
            internalInstance._pendingCallbacks.push(callback);
          } else {
            internalInstance._pendingCallbacks = [callback];
          }
          enqueueUpdate(internalInstance);
        },

        /**
         * Forces an update. This should only be invoked when it is known with
         * certainty that we are **not** in a DOM transaction.
         *
         * You may want to call this when you know that some deeper aspect of the
         * component's state has changed but `setState` was not called.
         *
         * This will not invoke `shouldComponentUpdate`, but it will invoke
         * `componentWillUpdate` and `componentDidUpdate`.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @internal
         */
        enqueueForceUpdate: function (publicInstance) {
          var internalInstance = getInternalInstanceReadyForUpdate(
            publicInstance,
            'forceUpdate',
          );

          if (!internalInstance) {
            return;
          }

          internalInstance._pendingForceUpdate = true;

          enqueueUpdate(internalInstance);
        },

        /**
         * Replaces all of the state. Always use this or `setState` to mutate state.
         * You should treat `this.state` as immutable.
         *
         * There is no guarantee that `this.state` will be immediately updated, so
         * accessing `this.state` after calling this method may return the old value.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} completeState Next state.
         * @internal
         */
        enqueueReplaceState: function (publicInstance, completeState) {
          var internalInstance = getInternalInstanceReadyForUpdate(
            publicInstance,
            'replaceState',
          );

          if (!internalInstance) {
            return;
          }

          internalInstance._pendingStateQueue = [completeState];
          internalInstance._pendingReplaceState = true;

          enqueueUpdate(internalInstance);
        },

        /**
         * Sets a subset of the state. This only exists because _pendingState is
         * internal. This provides a merging strategy that is not available to deep
         * properties which is confusing. TODO: Expose pendingState or don't use it
         * during the merge.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} partialState Next partial state to be merged with state.
         * @internal
         */
        enqueueSetState: function (publicInstance, partialState) {
          if (true) {
            ReactInstrumentation.debugTool.onSetState();
            true
              ? warning(
                  partialState != null,
                  'setState(...): You passed an undefined or null state object; ' +
                    'instead, use forceUpdate().',
                )
              : void 0;
          }

          var internalInstance = getInternalInstanceReadyForUpdate(
            publicInstance,
            'setState',
          );

          if (!internalInstance) {
            return;
          }

          var queue =
            internalInstance._pendingStateQueue ||
            (internalInstance._pendingStateQueue = []);
          queue.push(partialState);

          enqueueUpdate(internalInstance);
        },

        enqueueElementInternal: function (
          internalInstance,
          nextElement,
          nextContext,
        ) {
          internalInstance._pendingElement = nextElement;
          // TODO: introduce _pendingContext instead of setting it directly.
          internalInstance._context = nextContext;
          enqueueUpdate(internalInstance);
        },

        validateCallback: function (callback, callerName) {
          !(!callback || typeof callback === 'function')
            ? true
              ? invariant(
                  false,
                  '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.',
                  callerName,
                  formatUnexpectedArgument(callback),
                )
              : _prodInvariant(
                  '122',
                  callerName,
                  formatUnexpectedArgument(callback),
                )
            : void 0;
        },
      };

      module.exports = ReactUpdateQueue;

      /***/
    },
    /* 228 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2015-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule validateDOMNesting
       */

      'use strict';

      var _assign = __webpack_require__(5);

      var emptyFunction = __webpack_require__(13);
      var warning = __webpack_require__(12);

      var validateDOMNesting = emptyFunction;

      if (true) {
        // This validation code was written based on the HTML5 parsing spec:
        // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
        //
        // Note: this does not catch all invalid nesting, nor does it try to (as it's
        // not clear what practical benefit doing so provides); instead, we warn only
        // for cases where the parser will give a parse tree differing from what React
        // intended. For example, <b><div></div></b> is invalid but we don't warn
        // because it still parses correctly; we do warn for other cases like nested
        // <p> tags where the beginning of the second element implicitly closes the
        // first, causing a confusing mess.

        // https://html.spec.whatwg.org/multipage/syntax.html#special
        var specialTags = [
          'address',
          'applet',
          'area',
          'article',
          'aside',
          'base',
          'basefont',
          'bgsound',
          'blockquote',
          'body',
          'br',
          'button',
          'caption',
          'center',
          'col',
          'colgroup',
          'dd',
          'details',
          'dir',
          'div',
          'dl',
          'dt',
          'embed',
          'fieldset',
          'figcaption',
          'figure',
          'footer',
          'form',
          'frame',
          'frameset',
          'h1',
          'h2',
          'h3',
          'h4',
          'h5',
          'h6',
          'head',
          'header',
          'hgroup',
          'hr',
          'html',
          'iframe',
          'img',
          'input',
          'isindex',
          'li',
          'link',
          'listing',
          'main',
          'marquee',
          'menu',
          'menuitem',
          'meta',
          'nav',
          'noembed',
          'noframes',
          'noscript',
          'object',
          'ol',
          'p',
          'param',
          'plaintext',
          'pre',
          'script',
          'section',
          'select',
          'source',
          'style',
          'summary',
          'table',
          'tbody',
          'td',
          'template',
          'textarea',
          'tfoot',
          'th',
          'thead',
          'title',
          'tr',
          'track',
          'ul',
          'wbr',
          'xmp',
        ];

        // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
        var inScopeTags = [
          'applet',
          'caption',
          'html',
          'table',
          'td',
          'th',
          'marquee',
          'object',
          'template',

          // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
          // TODO: Distinguish by namespace here -- for <title>, including it here
          // errs on the side of fewer warnings
          'foreignObject',
          'desc',
          'title',
        ];

        // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
        var buttonScopeTags = inScopeTags.concat(['button']);

        // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
        var impliedEndTags = [
          'dd',
          'dt',
          'li',
          'option',
          'optgroup',
          'p',
          'rp',
          'rt',
        ];

        var emptyAncestorInfo = {
          current: null,

          formTag: null,
          aTagInScope: null,
          buttonTagInScope: null,
          nobrTagInScope: null,
          pTagInButtonScope: null,

          listItemTagAutoclosing: null,
          dlItemTagAutoclosing: null,
        };

        var updatedAncestorInfo = function (oldInfo, tag, instance) {
          var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
          var info = { tag: tag, instance: instance };

          if (inScopeTags.indexOf(tag) !== -1) {
            ancestorInfo.aTagInScope = null;
            ancestorInfo.buttonTagInScope = null;
            ancestorInfo.nobrTagInScope = null;
          }
          if (buttonScopeTags.indexOf(tag) !== -1) {
            ancestorInfo.pTagInButtonScope = null;
          }

          // See rules for 'li', 'dd', 'dt' start tags in
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
          if (
            specialTags.indexOf(tag) !== -1 &&
            tag !== 'address' &&
            tag !== 'div' &&
            tag !== 'p'
          ) {
            ancestorInfo.listItemTagAutoclosing = null;
            ancestorInfo.dlItemTagAutoclosing = null;
          }

          ancestorInfo.current = info;

          if (tag === 'form') {
            ancestorInfo.formTag = info;
          }
          if (tag === 'a') {
            ancestorInfo.aTagInScope = info;
          }
          if (tag === 'button') {
            ancestorInfo.buttonTagInScope = info;
          }
          if (tag === 'nobr') {
            ancestorInfo.nobrTagInScope = info;
          }
          if (tag === 'p') {
            ancestorInfo.pTagInButtonScope = info;
          }
          if (tag === 'li') {
            ancestorInfo.listItemTagAutoclosing = info;
          }
          if (tag === 'dd' || tag === 'dt') {
            ancestorInfo.dlItemTagAutoclosing = info;
          }

          return ancestorInfo;
        };

        /**
         * Returns whether
         */
        var isTagValidWithParent = function (tag, parentTag) {
          // First, let's check if we're in an unusual parsing mode...
          switch (parentTag) {
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
            case 'select':
              return tag === 'option' || tag === 'optgroup' || tag === '#text';
            case 'optgroup':
              return tag === 'option' || tag === '#text';
            // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
            // but
            case 'option':
              return tag === '#text';

            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
            // No special behavior since these rules fall back to "in body" mode for
            // all except special table nodes which cause bad parsing behavior anyway.

            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
            case 'tr':
              return (
                tag === 'th' ||
                tag === 'td' ||
                tag === 'style' ||
                tag === 'script' ||
                tag === 'template'
              );

            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
            case 'tbody':
            case 'thead':
            case 'tfoot':
              return (
                tag === 'tr' ||
                tag === 'style' ||
                tag === 'script' ||
                tag === 'template'
              );

            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
            case 'colgroup':
              return tag === 'col' || tag === 'template';

            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
            case 'table':
              return (
                tag === 'caption' ||
                tag === 'colgroup' ||
                tag === 'tbody' ||
                tag === 'tfoot' ||
                tag === 'thead' ||
                tag === 'style' ||
                tag === 'script' ||
                tag === 'template'
              );

            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
            case 'head':
              return (
                tag === 'base' ||
                tag === 'basefont' ||
                tag === 'bgsound' ||
                tag === 'link' ||
                tag === 'meta' ||
                tag === 'title' ||
                tag === 'noscript' ||
                tag === 'noframes' ||
                tag === 'style' ||
                tag === 'script' ||
                tag === 'template'
              );

            // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
            case 'html':
              return tag === 'head' || tag === 'body';
            case '#document':
              return tag === 'html';
          }

          // Probably in the "in body" parsing mode, so we outlaw only tag combos
          // where the parsing rules cause implicit opens or closes to be added.
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
          switch (tag) {
            case 'h1':
            case 'h2':
            case 'h3':
            case 'h4':
            case 'h5':
            case 'h6':
              return (
                parentTag !== 'h1' &&
                parentTag !== 'h2' &&
                parentTag !== 'h3' &&
                parentTag !== 'h4' &&
                parentTag !== 'h5' &&
                parentTag !== 'h6'
              );

            case 'rp':
            case 'rt':
              return impliedEndTags.indexOf(parentTag) === -1;

            case 'body':
            case 'caption':
            case 'col':
            case 'colgroup':
            case 'frame':
            case 'head':
            case 'html':
            case 'tbody':
            case 'td':
            case 'tfoot':
            case 'th':
            case 'thead':
            case 'tr':
              // These tags are only valid with a few parents that have special child
              // parsing rules -- if we're down here, then none of those matched and
              // so we allow it only if we don't know what the parent is, as all other
              // cases are invalid.
              return parentTag == null;
          }

          return true;
        };

        /**
         * Returns whether
         */
        var findInvalidAncestorForTag = function (tag, ancestorInfo) {
          switch (tag) {
            case 'address':
            case 'article':
            case 'aside':
            case 'blockquote':
            case 'center':
            case 'details':
            case 'dialog':
            case 'dir':
            case 'div':
            case 'dl':
            case 'fieldset':
            case 'figcaption':
            case 'figure':
            case 'footer':
            case 'header':
            case 'hgroup':
            case 'main':
            case 'menu':
            case 'nav':
            case 'ol':
            case 'p':
            case 'section':
            case 'summary':
            case 'ul':

            case 'pre':
            case 'listing':

            case 'table':

            case 'hr':

            case 'xmp':

            case 'h1':
            case 'h2':
            case 'h3':
            case 'h4':
            case 'h5':
            case 'h6':
              return ancestorInfo.pTagInButtonScope;

            case 'form':
              return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

            case 'li':
              return ancestorInfo.listItemTagAutoclosing;

            case 'dd':
            case 'dt':
              return ancestorInfo.dlItemTagAutoclosing;

            case 'button':
              return ancestorInfo.buttonTagInScope;

            case 'a':
              // Spec says something about storing a list of markers, but it sounds
              // equivalent to this check.
              return ancestorInfo.aTagInScope;

            case 'nobr':
              return ancestorInfo.nobrTagInScope;
          }

          return null;
        };

        /**
         * Given a ReactCompositeComponent instance, return a list of its recursive
         * owners, starting at the root and ending with the instance itself.
         */
        var findOwnerStack = function (instance) {
          if (!instance) {
            return [];
          }

          var stack = [];
          do {
            stack.push(instance);
          } while ((instance = instance._currentElement._owner));
          stack.reverse();
          return stack;
        };

        var didWarn = {};

        validateDOMNesting = function (
          childTag,
          childText,
          childInstance,
          ancestorInfo,
        ) {
          ancestorInfo = ancestorInfo || emptyAncestorInfo;
          var parentInfo = ancestorInfo.current;
          var parentTag = parentInfo && parentInfo.tag;

          if (childText != null) {
            true
              ? warning(
                  childTag == null,
                  'validateDOMNesting: when childText is passed, childTag should be null',
                )
              : void 0;
            childTag = '#text';
          }

          var invalidParent = isTagValidWithParent(childTag, parentTag)
            ? null
            : parentInfo;
          var invalidAncestor = invalidParent
            ? null
            : findInvalidAncestorForTag(childTag, ancestorInfo);
          var problematic = invalidParent || invalidAncestor;

          if (problematic) {
            var ancestorTag = problematic.tag;
            var ancestorInstance = problematic.instance;

            var childOwner =
              childInstance && childInstance._currentElement._owner;
            var ancestorOwner =
              ancestorInstance && ancestorInstance._currentElement._owner;

            var childOwners = findOwnerStack(childOwner);
            var ancestorOwners = findOwnerStack(ancestorOwner);

            var minStackLen = Math.min(
              childOwners.length,
              ancestorOwners.length,
            );
            var i;

            var deepestCommon = -1;
            for (i = 0; i < minStackLen; i++) {
              if (childOwners[i] === ancestorOwners[i]) {
                deepestCommon = i;
              } else {
                break;
              }
            }

            var UNKNOWN = '(unknown)';
            var childOwnerNames = childOwners
              .slice(deepestCommon + 1)
              .map(function (inst) {
                return inst.getName() || UNKNOWN;
              });
            var ancestorOwnerNames = ancestorOwners
              .slice(deepestCommon + 1)
              .map(function (inst) {
                return inst.getName() || UNKNOWN;
              });
            var ownerInfo = []
              .concat(
                // If the parent and child instances have a common owner ancestor, start
                // with that -- otherwise we just start with the parent's owners.
                deepestCommon !== -1
                  ? childOwners[deepestCommon].getName() || UNKNOWN
                  : [],
                ancestorOwnerNames,
                ancestorTag,
                // If we're warning about an invalid (non-parent) ancestry, add '...'
                invalidAncestor ? ['...'] : [],
                childOwnerNames,
                childTag,
              )
              .join(' > ');

            var warnKey =
              !!invalidParent +
              '|' +
              childTag +
              '|' +
              ancestorTag +
              '|' +
              ownerInfo;
            if (didWarn[warnKey]) {
              return;
            }
            didWarn[warnKey] = true;

            var tagDisplayName = childTag;
            var whitespaceInfo = '';
            if (childTag === '#text') {
              if (/\S/.test(childText)) {
                tagDisplayName = 'Text nodes';
              } else {
                tagDisplayName = 'Whitespace text nodes';
                whitespaceInfo =
                  " Make sure you don't have any extra whitespace between tags on " +
                  'each line of your source code.';
              }
            } else {
              tagDisplayName = '<' + childTag + '>';
            }

            if (invalidParent) {
              var info = '';
              if (ancestorTag === 'table' && childTag === 'tr') {
                info +=
                  ' Add a <tbody> to your code to match the DOM tree generated by ' +
                  'the browser.';
              }
              true
                ? warning(
                    false,
                    'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' +
                      'See %s.%s',
                    tagDisplayName,
                    ancestorTag,
                    whitespaceInfo,
                    ownerInfo,
                    info,
                  )
                : void 0;
            } else {
              true
                ? warning(
                    false,
                    'validateDOMNesting(...): %s cannot appear as a descendant of ' +
                      '<%s>. See %s.',
                    tagDisplayName,
                    ancestorTag,
                    ownerInfo,
                  )
                : void 0;
            }
          }
        };

        validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

        // For testing
        validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
          ancestorInfo = ancestorInfo || emptyAncestorInfo;
          var parentInfo = ancestorInfo.current;
          var parentTag = parentInfo && parentInfo.tag;
          return (
            isTagValidWithParent(tag, parentTag) &&
            !findInvalidAncestorForTag(tag, ancestorInfo)
          );
        };
      }

      module.exports = validateDOMNesting;

      /***/
    },
    /* 229 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2014-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMEmptyComponent
       */

      'use strict';

      var _assign = __webpack_require__(5);

      var DOMLazyTree = __webpack_require__(178);
      var ReactDOMComponentTree = __webpack_require__(132);

      var ReactDOMEmptyComponent = function (instantiate) {
        // ReactCompositeComponent uses this:
        this._currentElement = null;
        // ReactDOMComponentTree uses these:
        this._hostNode = null;
        this._hostParent = null;
        this._hostContainerInfo = null;
        this._domID = 0;
      };
      _assign(ReactDOMEmptyComponent.prototype, {
        mountComponent: function (
          transaction,
          hostParent,
          hostContainerInfo,
          context,
        ) {
          var domID = hostContainerInfo._idCounter++;
          this._domID = domID;
          this._hostParent = hostParent;
          this._hostContainerInfo = hostContainerInfo;

          var nodeValue = ' react-empty: ' + this._domID + ' ';
          if (transaction.useCreateElement) {
            var ownerDocument = hostContainerInfo._ownerDocument;
            var node = ownerDocument.createComment(nodeValue);
            ReactDOMComponentTree.precacheNode(this, node);
            return DOMLazyTree(node);
          } else {
            if (transaction.renderToStaticMarkup) {
              // Normally we'd insert a comment node, but since this is a situation
              // where React won't take over (static pages), we can simply return
              // nothing.
              return '';
            }
            return '<!--' + nodeValue + '-->';
          }
        },
        receiveComponent: function () {},
        getHostNode: function () {
          return ReactDOMComponentTree.getNodeFromInstance(this);
        },
        unmountComponent: function () {
          ReactDOMComponentTree.uncacheNode(this);
        },
      });

      module.exports = ReactDOMEmptyComponent;

      /***/
    },
    /* 230 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2015-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMTreeTraversal
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var invariant = __webpack_require__(9);

      /**
       * Return the lowest common ancestor of A and B, or null if they are in
       * different trees.
       */
      function getLowestCommonAncestor(instA, instB) {
        !('_hostNode' in instA)
          ? true
            ? invariant(false, 'getNodeFromInstance: Invalid argument.')
            : _prodInvariant('33')
          : void 0;
        !('_hostNode' in instB)
          ? true
            ? invariant(false, 'getNodeFromInstance: Invalid argument.')
            : _prodInvariant('33')
          : void 0;

        var depthA = 0;
        for (var tempA = instA; tempA; tempA = tempA._hostParent) {
          depthA++;
        }
        var depthB = 0;
        for (var tempB = instB; tempB; tempB = tempB._hostParent) {
          depthB++;
        }

        // If A is deeper, crawl up.
        while (depthA - depthB > 0) {
          instA = instA._hostParent;
          depthA--;
        }

        // If B is deeper, crawl up.
        while (depthB - depthA > 0) {
          instB = instB._hostParent;
          depthB--;
        }

        // Walk in lockstep until we find a match.
        var depth = depthA;
        while (depth--) {
          if (instA === instB) {
            return instA;
          }
          instA = instA._hostParent;
          instB = instB._hostParent;
        }
        return null;
      }

      /**
       * Return if A is an ancestor of B.
       */
      function isAncestor(instA, instB) {
        !('_hostNode' in instA)
          ? true
            ? invariant(false, 'isAncestor: Invalid argument.')
            : _prodInvariant('35')
          : void 0;
        !('_hostNode' in instB)
          ? true
            ? invariant(false, 'isAncestor: Invalid argument.')
            : _prodInvariant('35')
          : void 0;

        while (instB) {
          if (instB === instA) {
            return true;
          }
          instB = instB._hostParent;
        }
        return false;
      }

      /**
       * Return the parent instance of the passed-in instance.
       */
      function getParentInstance(inst) {
        !('_hostNode' in inst)
          ? true
            ? invariant(false, 'getParentInstance: Invalid argument.')
            : _prodInvariant('36')
          : void 0;

        return inst._hostParent;
      }

      /**
       * Simulates the traversal of a two-phase, capture/bubble event dispatch.
       */
      function traverseTwoPhase(inst, fn, arg) {
        var path = [];
        while (inst) {
          path.push(inst);
          inst = inst._hostParent;
        }
        var i;
        for (i = path.length; i-- > 0; ) {
          fn(path[i], false, arg);
        }
        for (i = 0; i < path.length; i++) {
          fn(path[i], true, arg);
        }
      }

      /**
       * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
       * should would receive a `mouseEnter` or `mouseLeave` event.
       *
       * Does not invoke the callback on the nearest common ancestor because nothing
       * "entered" or "left" that element.
       */
      function traverseEnterLeave(from, to, fn, argFrom, argTo) {
        var common = from && to ? getLowestCommonAncestor(from, to) : null;
        var pathFrom = [];
        while (from && from !== common) {
          pathFrom.push(from);
          from = from._hostParent;
        }
        var pathTo = [];
        while (to && to !== common) {
          pathTo.push(to);
          to = to._hostParent;
        }
        var i;
        for (i = 0; i < pathFrom.length; i++) {
          fn(pathFrom[i], true, argFrom);
        }
        for (i = pathTo.length; i-- > 0; ) {
          fn(pathTo[i], false, argTo);
        }
      }

      module.exports = {
        isAncestor: isAncestor,
        getLowestCommonAncestor: getLowestCommonAncestor,
        getParentInstance: getParentInstance,
        traverseTwoPhase: traverseTwoPhase,
        traverseEnterLeave: traverseEnterLeave,
      };

      /***/
    },
    /* 231 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMTextComponent
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8),
        _assign = __webpack_require__(5);

      var DOMChildrenOperations = __webpack_require__(177);
      var DOMLazyTree = __webpack_require__(178);
      var ReactDOMComponentTree = __webpack_require__(132);

      var escapeTextContentForBrowser = __webpack_require__(183);
      var invariant = __webpack_require__(9);
      var validateDOMNesting = __webpack_require__(228);

      /**
       * Text nodes violate a couple assumptions that React makes about components:
       *
       *  - When mounting text into the DOM, adjacent text nodes are merged.
       *  - Text nodes cannot be assigned a React root ID.
       *
       * This component is used to wrap strings between comment nodes so that they
       * can undergo the same reconciliation that is applied to elements.
       *
       * TODO: Investigate representing React components in the DOM with text nodes.
       *
       * @class ReactDOMTextComponent
       * @extends ReactComponent
       * @internal
       */
      var ReactDOMTextComponent = function (text) {
        // TODO: This is really a ReactText (ReactNode), not a ReactElement
        this._currentElement = text;
        this._stringText = '' + text;
        // ReactDOMComponentTree uses these:
        this._hostNode = null;
        this._hostParent = null;

        // Properties
        this._domID = 0;
        this._mountIndex = 0;
        this._closingComment = null;
        this._commentNodes = null;
      };

      _assign(ReactDOMTextComponent.prototype, {
        /**
         * Creates the markup for this text node. This node is not intended to have
         * any features besides containing text content.
         *
         * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
         * @return {string} Markup for this text node.
         * @internal
         */
        mountComponent: function (
          transaction,
          hostParent,
          hostContainerInfo,
          context,
        ) {
          if (true) {
            var parentInfo;
            if (hostParent != null) {
              parentInfo = hostParent._ancestorInfo;
            } else if (hostContainerInfo != null) {
              parentInfo = hostContainerInfo._ancestorInfo;
            }
            if (parentInfo) {
              // parentInfo should always be present except for the top-level
              // component when server rendering
              validateDOMNesting(null, this._stringText, this, parentInfo);
            }
          }

          var domID = hostContainerInfo._idCounter++;
          var openingValue = ' react-text: ' + domID + ' ';
          var closingValue = ' /react-text ';
          this._domID = domID;
          this._hostParent = hostParent;
          if (transaction.useCreateElement) {
            var ownerDocument = hostContainerInfo._ownerDocument;
            var openingComment = ownerDocument.createComment(openingValue);
            var closingComment = ownerDocument.createComment(closingValue);
            var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
            DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
            if (this._stringText) {
              DOMLazyTree.queueChild(
                lazyTree,
                DOMLazyTree(ownerDocument.createTextNode(this._stringText)),
              );
            }
            DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
            ReactDOMComponentTree.precacheNode(this, openingComment);
            this._closingComment = closingComment;
            return lazyTree;
          } else {
            var escapedText = escapeTextContentForBrowser(this._stringText);

            if (transaction.renderToStaticMarkup) {
              // Normally we'd wrap this between comment nodes for the reasons stated
              // above, but since this is a situation where React won't take over
              // (static pages), we can simply return the text as it is.
              return escapedText;
            }

            return (
              '<!--' +
              openingValue +
              '-->' +
              escapedText +
              '<!--' +
              closingValue +
              '-->'
            );
          }
        },

        /**
         * Updates this component by updating the text content.
         *
         * @param {ReactText} nextText The next text content
         * @param {ReactReconcileTransaction} transaction
         * @internal
         */
        receiveComponent: function (nextText, transaction) {
          if (nextText !== this._currentElement) {
            this._currentElement = nextText;
            var nextStringText = '' + nextText;
            if (nextStringText !== this._stringText) {
              // TODO: Save this as pending props and use performUpdateIfNecessary
              // and/or updateComponent to do the actual update for consistency with
              // other component types?
              this._stringText = nextStringText;
              var commentNodes = this.getHostNode();
              DOMChildrenOperations.replaceDelimitedText(
                commentNodes[0],
                commentNodes[1],
                nextStringText,
              );
            }
          }
        },

        getHostNode: function () {
          var hostNode = this._commentNodes;
          if (hostNode) {
            return hostNode;
          }
          if (!this._closingComment) {
            var openingComment = ReactDOMComponentTree.getNodeFromInstance(
              this,
            );
            var node = openingComment.nextSibling;
            while (true) {
              !(node != null)
                ? true
                  ? invariant(
                      false,
                      'Missing closing comment for text component %s',
                      this._domID,
                    )
                  : _prodInvariant('67', this._domID)
                : void 0;
              if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
                this._closingComment = node;
                break;
              }
              node = node.nextSibling;
            }
          }
          hostNode = [this._hostNode, this._closingComment];
          this._commentNodes = hostNode;
          return hostNode;
        },

        unmountComponent: function () {
          this._closingComment = null;
          this._commentNodes = null;
          ReactDOMComponentTree.uncacheNode(this);
        },
      });

      module.exports = ReactDOMTextComponent;

      /***/
    },
    /* 232 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDefaultBatchingStrategy
       */

      'use strict';

      var _assign = __webpack_require__(5);

      var ReactUpdates = __webpack_require__(152);
      var Transaction = __webpack_require__(165);

      var emptyFunction = __webpack_require__(13);

      var RESET_BATCHED_UPDATES = {
        initialize: emptyFunction,
        close: function () {
          ReactDefaultBatchingStrategy.isBatchingUpdates = false;
        },
      };

      var FLUSH_BATCHED_UPDATES = {
        initialize: emptyFunction,
        close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates),
      };

      var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

      function ReactDefaultBatchingStrategyTransaction() {
        this.reinitializeTransaction();
      }

      _assign(
        ReactDefaultBatchingStrategyTransaction.prototype,
        Transaction.Mixin,
        {
          getTransactionWrappers: function () {
            return TRANSACTION_WRAPPERS;
          },
        },
      );

      var transaction = new ReactDefaultBatchingStrategyTransaction();

      var ReactDefaultBatchingStrategy = {
        isBatchingUpdates: false,

        /**
         * Call the provided function in a context within which calls to `setState`
         * and friends are batched such that components aren't updated unnecessarily.
         */
        batchedUpdates: function (callback, a, b, c, d, e) {
          var alreadyBatchingUpdates =
            ReactDefaultBatchingStrategy.isBatchingUpdates;

          ReactDefaultBatchingStrategy.isBatchingUpdates = true;

          // The code is written this way to avoid extra allocations
          if (alreadyBatchingUpdates) {
            callback(a, b, c, d, e);
          } else {
            transaction.perform(callback, null, a, b, c, d, e);
          }
        },
      };

      module.exports = ReactDefaultBatchingStrategy;

      /***/
    },
    /* 233 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactEventListener
       */

      'use strict';

      var _assign = __webpack_require__(5);

      var EventListener = __webpack_require__(234);
      var ExecutionEnvironment = __webpack_require__(145);
      var PooledClass = __webpack_require__(7);
      var ReactDOMComponentTree = __webpack_require__(132);
      var ReactUpdates = __webpack_require__(152);

      var getEventTarget = __webpack_require__(166);
      var getUnboundedScrollPosition = __webpack_require__(235);

      /**
       * Find the deepest React component completely containing the root of the
       * passed-in instance (for use when entire React trees are nested within each
       * other). If React trees are not nested, returns null.
       */
      function findParent(inst) {
        // TODO: It may be a good idea to cache this to prevent unnecessary DOM
        // traversal, but caching is difficult to do correctly without using a
        // mutation observer to listen for all DOM changes.
        while (inst._hostParent) {
          inst = inst._hostParent;
        }
        var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
        var container = rootNode.parentNode;
        return ReactDOMComponentTree.getClosestInstanceFromNode(container);
      }

      // Used to store ancestor hierarchy in top level callback
      function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
        this.topLevelType = topLevelType;
        this.nativeEvent = nativeEvent;
        this.ancestors = [];
      }
      _assign(TopLevelCallbackBookKeeping.prototype, {
        destructor: function () {
          this.topLevelType = null;
          this.nativeEvent = null;
          this.ancestors.length = 0;
        },
      });
      PooledClass.addPoolingTo(
        TopLevelCallbackBookKeeping,
        PooledClass.twoArgumentPooler,
      );

      function handleTopLevelImpl(bookKeeping) {
        var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
        var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(
          nativeEventTarget,
        );

        // Loop through the hierarchy, in case there's any nested components.
        // It's important that we build the array of ancestors before calling any
        // event handlers, because event handlers can modify the DOM, leading to
        // inconsistencies with ReactMount's node cache. See #1105.
        var ancestor = targetInst;
        do {
          bookKeeping.ancestors.push(ancestor);
          ancestor = ancestor && findParent(ancestor);
        } while (ancestor);

        for (var i = 0; i < bookKeeping.ancestors.length; i++) {
          targetInst = bookKeeping.ancestors[i];
          ReactEventListener._handleTopLevel(
            bookKeeping.topLevelType,
            targetInst,
            bookKeeping.nativeEvent,
            getEventTarget(bookKeeping.nativeEvent),
          );
        }
      }

      function scrollValueMonitor(cb) {
        var scrollPosition = getUnboundedScrollPosition(window);
        cb(scrollPosition);
      }

      var ReactEventListener = {
        _enabled: true,
        _handleTopLevel: null,

        WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

        setHandleTopLevel: function (handleTopLevel) {
          ReactEventListener._handleTopLevel = handleTopLevel;
        },

        setEnabled: function (enabled) {
          ReactEventListener._enabled = !!enabled;
        },

        isEnabled: function () {
          return ReactEventListener._enabled;
        },

        /**
         * Traps top-level events by using event bubbling.
         *
         * @param {string} topLevelType Record from `EventConstants`.
         * @param {string} handlerBaseName Event name (e.g. "click").
         * @param {object} handle Element on which to attach listener.
         * @return {?object} An object with a remove function which will forcefully
         *                  remove the listener.
         * @internal
         */
        trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
          var element = handle;
          if (!element) {
            return null;
          }
          return EventListener.listen(
            element,
            handlerBaseName,
            ReactEventListener.dispatchEvent.bind(null, topLevelType),
          );
        },

        /**
         * Traps a top-level event by using event capturing.
         *
         * @param {string} topLevelType Record from `EventConstants`.
         * @param {string} handlerBaseName Event name (e.g. "click").
         * @param {object} handle Element on which to attach listener.
         * @return {?object} An object with a remove function which will forcefully
         *                  remove the listener.
         * @internal
         */
        trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
          var element = handle;
          if (!element) {
            return null;
          }
          return EventListener.capture(
            element,
            handlerBaseName,
            ReactEventListener.dispatchEvent.bind(null, topLevelType),
          );
        },

        monitorScrollValue: function (refresh) {
          var callback = scrollValueMonitor.bind(null, refresh);
          EventListener.listen(window, 'scroll', callback);
        },

        dispatchEvent: function (topLevelType, nativeEvent) {
          if (!ReactEventListener._enabled) {
            return;
          }

          var bookKeeping = TopLevelCallbackBookKeeping.getPooled(
            topLevelType,
            nativeEvent,
          );
          try {
            // Event queue being processed in the same cycle allows
            // `preventDefault`.
            ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
          } finally {
            TopLevelCallbackBookKeeping.release(bookKeeping);
          }
        },
      };

      module.exports = ReactEventListener;

      /***/
    },
    /* 234 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       * http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       *
       * @typechecks
       */

      var emptyFunction = __webpack_require__(13);

      /**
       * Upstream version of event listener. Does not take into account specific
       * nature of platform.
       */
      var EventListener = {
        /**
         * Listen to DOM events during the bubble phase.
         *
         * @param {DOMEventTarget} target DOM element to register listener on.
         * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
         * @param {function} callback Callback function.
         * @return {object} Object with a `remove` method.
         */
        listen: function listen(target, eventType, callback) {
          if (target.addEventListener) {
            target.addEventListener(eventType, callback, false);
            return {
              remove: function remove() {
                target.removeEventListener(eventType, callback, false);
              },
            };
          } else if (target.attachEvent) {
            target.attachEvent('on' + eventType, callback);
            return {
              remove: function remove() {
                target.detachEvent('on' + eventType, callback);
              },
            };
          }
        },

        /**
         * Listen to DOM events during the capture phase.
         *
         * @param {DOMEventTarget} target DOM element to register listener on.
         * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
         * @param {function} callback Callback function.
         * @return {object} Object with a `remove` method.
         */
        capture: function capture(target, eventType, callback) {
          if (target.addEventListener) {
            target.addEventListener(eventType, callback, true);
            return {
              remove: function remove() {
                target.removeEventListener(eventType, callback, true);
              },
            };
          } else {
            if (true) {
              console.error(
                'Attempted to listen to events during the capture phase on a ' +
                  'browser that does not support the capture phase. Your application ' +
                  'will not receive some events.',
              );
            }
            return {
              remove: emptyFunction,
            };
          }
        },

        registerDefault: function registerDefault() {},
      };

      module.exports = EventListener;

      /***/
    },
    /* 235 */
    /***/ function (module, exports) {
      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      'use strict';

      /**
       * Gets the scroll position of the supplied element or window.
       *
       * The return values are unbounded, unlike `getScrollPosition`. This means they
       * may be negative or exceed the element boundaries (which is possible using
       * inertial scrolling).
       *
       * @param {DOMWindow|DOMElement} scrollable
       * @return {object} Map with `x` and `y` keys.
       */

      function getUnboundedScrollPosition(scrollable) {
        if (scrollable === window) {
          return {
            x: window.pageXOffset || document.documentElement.scrollLeft,
            y: window.pageYOffset || document.documentElement.scrollTop,
          };
        }
        return {
          x: scrollable.scrollLeft,
          y: scrollable.scrollTop,
        };
      }

      module.exports = getUnboundedScrollPosition;

      /***/
    },
    /* 236 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactInjection
       */

      'use strict';

      var DOMProperty = __webpack_require__(133);
      var EventPluginHub = __webpack_require__(139);
      var EventPluginUtils = __webpack_require__(141);
      var ReactComponentEnvironment = __webpack_require__(214);
      var ReactClass = __webpack_require__(22);
      var ReactEmptyComponent = __webpack_require__(222);
      var ReactBrowserEventEmitter = __webpack_require__(203);
      var ReactHostComponent = __webpack_require__(223);
      var ReactUpdates = __webpack_require__(152);

      var ReactInjection = {
        Component: ReactComponentEnvironment.injection,
        Class: ReactClass.injection,
        DOMProperty: DOMProperty.injection,
        EmptyComponent: ReactEmptyComponent.injection,
        EventPluginHub: EventPluginHub.injection,
        EventPluginUtils: EventPluginUtils.injection,
        EventEmitter: ReactBrowserEventEmitter.injection,
        HostComponent: ReactHostComponent.injection,
        Updates: ReactUpdates.injection,
      };

      module.exports = ReactInjection;

      /***/
    },
    /* 237 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactReconcileTransaction
       */

      'use strict';

      var _assign = __webpack_require__(5);

      var CallbackQueue = __webpack_require__(153);
      var PooledClass = __webpack_require__(7);
      var ReactBrowserEventEmitter = __webpack_require__(203);
      var ReactInputSelection = __webpack_require__(238);
      var ReactInstrumentation = __webpack_require__(158);
      var Transaction = __webpack_require__(165);
      var ReactUpdateQueue = __webpack_require__(227);

      /**
       * Ensures that, when possible, the selection range (currently selected text
       * input) is not disturbed by performing the transaction.
       */
      var SELECTION_RESTORATION = {
        /**
         * @return {Selection} Selection information.
         */
        initialize: ReactInputSelection.getSelectionInformation,
        /**
         * @param {Selection} sel Selection information returned from `initialize`.
         */
        close: ReactInputSelection.restoreSelection,
      };

      /**
       * Suppresses events (blur/focus) that could be inadvertently dispatched due to
       * high level DOM manipulations (like temporarily removing a text input from the
       * DOM).
       */
      var EVENT_SUPPRESSION = {
        /**
         * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
         * the reconciliation.
         */
        initialize: function () {
          var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
          ReactBrowserEventEmitter.setEnabled(false);
          return currentlyEnabled;
        },

        /**
         * @param {boolean} previouslyEnabled Enabled status of
         *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
         *   restores the previous value.
         */
        close: function (previouslyEnabled) {
          ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
        },
      };

      /**
       * Provides a queue for collecting `componentDidMount` and
       * `componentDidUpdate` callbacks during the transaction.
       */
      var ON_DOM_READY_QUEUEING = {
        /**
         * Initializes the internal `onDOMReady` queue.
         */
        initialize: function () {
          this.reactMountReady.reset();
        },

        /**
         * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
         */
        close: function () {
          this.reactMountReady.notifyAll();
        },
      };

      /**
       * Executed within the scope of the `Transaction` instance. Consider these as
       * being member methods, but with an implied ordering while being isolated from
       * each other.
       */
      var TRANSACTION_WRAPPERS = [
        SELECTION_RESTORATION,
        EVENT_SUPPRESSION,
        ON_DOM_READY_QUEUEING,
      ];

      if (true) {
        TRANSACTION_WRAPPERS.push({
          initialize: ReactInstrumentation.debugTool.onBeginFlush,
          close: ReactInstrumentation.debugTool.onEndFlush,
        });
      }

      /**
       * Currently:
       * - The order that these are listed in the transaction is critical:
       * - Suppresses events.
       * - Restores selection range.
       *
       * Future:
       * - Restore document/overflow scroll positions that were unintentionally
       *   modified via DOM insertions above the top viewport boundary.
       * - Implement/integrate with customized constraint based layout system and keep
       *   track of which dimensions must be remeasured.
       *
       * @class ReactReconcileTransaction
       */
      function ReactReconcileTransaction(useCreateElement) {
        this.reinitializeTransaction();
        // Only server-side rendering really needs this option (see
        // `ReactServerRendering`), but server-side uses
        // `ReactServerRenderingTransaction` instead. This option is here so that it's
        // accessible and defaults to false when `ReactDOMComponent` and
        // `ReactDOMTextComponent` checks it in `mountComponent`.`
        this.renderToStaticMarkup = false;
        this.reactMountReady = CallbackQueue.getPooled(null);
        this.useCreateElement = useCreateElement;
      }

      var Mixin = {
        /**
         * @see Transaction
         * @abstract
         * @final
         * @return {array<object>} List of operation wrap procedures.
         *   TODO: convert to array<TransactionWrapper>
         */
        getTransactionWrappers: function () {
          return TRANSACTION_WRAPPERS;
        },

        /**
         * @return {object} The queue to collect `onDOMReady` callbacks with.
         */
        getReactMountReady: function () {
          return this.reactMountReady;
        },

        /**
         * @return {object} The queue to collect React async events.
         */
        getUpdateQueue: function () {
          return ReactUpdateQueue;
        },

        /**
         * Save current transaction state -- if the return value from this method is
         * passed to `rollback`, the transaction will be reset to that state.
         */
        checkpoint: function () {
          // reactMountReady is the our only stateful wrapper
          return this.reactMountReady.checkpoint();
        },

        rollback: function (checkpoint) {
          this.reactMountReady.rollback(checkpoint);
        },

        /**
         * `PooledClass` looks for this, and will invoke this before allowing this
         * instance to be reused.
         */
        destructor: function () {
          CallbackQueue.release(this.reactMountReady);
          this.reactMountReady = null;
        },
      };

      _assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

      PooledClass.addPoolingTo(ReactReconcileTransaction);

      module.exports = ReactReconcileTransaction;

      /***/
    },
    /* 238 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactInputSelection
       */

      'use strict';

      var ReactDOMSelection = __webpack_require__(239);

      var containsNode = __webpack_require__(241);
      var focusNode = __webpack_require__(192);
      var getActiveElement = __webpack_require__(244);

      function isInDocument(node) {
        return containsNode(document.documentElement, node);
      }

      /**
       * @ReactInputSelection: React input selection module. Based on Selection.js,
       * but modified to be suitable for react and has a couple of bug fixes (doesn't
       * assume buttons have range selections allowed).
       * Input selection module for React.
       */
      var ReactInputSelection = {
        hasSelectionCapabilities: function (elem) {
          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
          return (
            nodeName &&
            ((nodeName === 'input' && elem.type === 'text') ||
              nodeName === 'textarea' ||
              elem.contentEditable === 'true')
          );
        },

        getSelectionInformation: function () {
          var focusedElem = getActiveElement();
          return {
            focusedElem: focusedElem,
            selectionRange: ReactInputSelection.hasSelectionCapabilities(
              focusedElem,
            )
              ? ReactInputSelection.getSelection(focusedElem)
              : null,
          };
        },

        /**
         * @restoreSelection: If any selection information was potentially lost,
         * restore it. This is useful when performing operations that could remove dom
         * nodes and place them back in, resulting in focus being lost.
         */
        restoreSelection: function (priorSelectionInformation) {
          var curFocusedElem = getActiveElement();
          var priorFocusedElem = priorSelectionInformation.focusedElem;
          var priorSelectionRange = priorSelectionInformation.selectionRange;
          if (
            curFocusedElem !== priorFocusedElem &&
            isInDocument(priorFocusedElem)
          ) {
            if (
              ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)
            ) {
              ReactInputSelection.setSelection(
                priorFocusedElem,
                priorSelectionRange,
              );
            }
            focusNode(priorFocusedElem);
          }
        },

        /**
         * @getSelection: Gets the selection bounds of a focused textarea, input or
         * contentEditable node.
         * -@input: Look up selection bounds of this input
         * -@return {start: selectionStart, end: selectionEnd}
         */
        getSelection: function (input) {
          var selection;

          if ('selectionStart' in input) {
            // Modern browser with input or textarea.
            selection = {
              start: input.selectionStart,
              end: input.selectionEnd,
            };
          } else if (
            document.selection &&
            input.nodeName &&
            input.nodeName.toLowerCase() === 'input'
          ) {
            // IE8 input.
            var range = document.selection.createRange();
            // There can only be one selection per document in IE, so it must
            // be in our element.
            if (range.parentElement() === input) {
              selection = {
                start: -range.moveStart('character', -input.value.length),
                end: -range.moveEnd('character', -input.value.length),
              };
            }
          } else {
            // Content editable or old IE textarea.
            selection = ReactDOMSelection.getOffsets(input);
          }

          return selection || { start: 0, end: 0 };
        },

        /**
         * @setSelection: Sets the selection bounds of a textarea or input and focuses
         * the input.
         * -@input     Set selection bounds of this input or textarea
         * -@offsets   Object of same form that is returned from get*
         */
        setSelection: function (input, offsets) {
          var start = offsets.start;
          var end = offsets.end;
          if (end === undefined) {
            end = start;
          }

          if ('selectionStart' in input) {
            input.selectionStart = start;
            input.selectionEnd = Math.min(end, input.value.length);
          } else if (
            document.selection &&
            input.nodeName &&
            input.nodeName.toLowerCase() === 'input'
          ) {
            var range = input.createTextRange();
            range.collapse(true);
            range.moveStart('character', start);
            range.moveEnd('character', end - start);
            range.select();
          } else {
            ReactDOMSelection.setOffsets(input, offsets);
          }
        },
      };

      module.exports = ReactInputSelection;

      /***/
    },
    /* 239 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMSelection
       */

      'use strict';

      var ExecutionEnvironment = __webpack_require__(145);

      var getNodeForCharacterOffset = __webpack_require__(240);
      var getTextContentAccessor = __webpack_require__(147);

      /**
       * While `isCollapsed` is available on the Selection object and `collapsed`
       * is available on the Range object, IE11 sometimes gets them wrong.
       * If the anchor/focus nodes and offsets are the same, the range is collapsed.
       */
      function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
        return anchorNode === focusNode && anchorOffset === focusOffset;
      }

      /**
       * Get the appropriate anchor and focus node/offset pairs for IE.
       *
       * The catch here is that IE's selection API doesn't provide information
       * about whether the selection is forward or backward, so we have to
       * behave as though it's always forward.
       *
       * IE text differs from modern selection in that it behaves as though
       * block elements end with a new line. This means character offsets will
       * differ between the two APIs.
       *
       * @param {DOMElement} node
       * @return {object}
       */
      function getIEOffsets(node) {
        var selection = document.selection;
        var selectedRange = selection.createRange();
        var selectedLength = selectedRange.text.length;

        // Duplicate selection so we can move range without breaking user selection.
        var fromStart = selectedRange.duplicate();
        fromStart.moveToElementText(node);
        fromStart.setEndPoint('EndToStart', selectedRange);

        var startOffset = fromStart.text.length;
        var endOffset = startOffset + selectedLength;

        return {
          start: startOffset,
          end: endOffset,
        };
      }

      /**
       * @param {DOMElement} node
       * @return {?object}
       */
      function getModernOffsets(node) {
        var selection = window.getSelection && window.getSelection();

        if (!selection || selection.rangeCount === 0) {
          return null;
        }

        var anchorNode = selection.anchorNode;
        var anchorOffset = selection.anchorOffset;
        var focusNode = selection.focusNode;
        var focusOffset = selection.focusOffset;

        var currentRange = selection.getRangeAt(0);

        // In Firefox, range.startContainer and range.endContainer can be "anonymous
        // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
        // divs do not seem to expose properties, triggering a "Permission denied
        // error" if any of its properties are accessed. The only seemingly possible
        // way to avoid erroring is to access a property that typically works for
        // non-anonymous divs and catch any error that may otherwise arise. See
        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
        try {
          /* eslint-disable no-unused-expressions */
          currentRange.startContainer.nodeType;
          currentRange.endContainer.nodeType;
          /* eslint-enable no-unused-expressions */
        } catch (e) {
          return null;
        }

        // If the node and offset values are the same, the selection is collapsed.
        // `Selection.isCollapsed` is available natively, but IE sometimes gets
        // this value wrong.
        var isSelectionCollapsed = isCollapsed(
          selection.anchorNode,
          selection.anchorOffset,
          selection.focusNode,
          selection.focusOffset,
        );

        var rangeLength = isSelectionCollapsed
          ? 0
          : currentRange.toString().length;

        var tempRange = currentRange.cloneRange();
        tempRange.selectNodeContents(node);
        tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

        var isTempRangeCollapsed = isCollapsed(
          tempRange.startContainer,
          tempRange.startOffset,
          tempRange.endContainer,
          tempRange.endOffset,
        );

        var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
        var end = start + rangeLength;

        // Detect whether the selection is backward.
        var detectionRange = document.createRange();
        detectionRange.setStart(anchorNode, anchorOffset);
        detectionRange.setEnd(focusNode, focusOffset);
        var isBackward = detectionRange.collapsed;

        return {
          start: isBackward ? end : start,
          end: isBackward ? start : end,
        };
      }

      /**
       * @param {DOMElement|DOMTextNode} node
       * @param {object} offsets
       */
      function setIEOffsets(node, offsets) {
        var range = document.selection.createRange().duplicate();
        var start, end;

        if (offsets.end === undefined) {
          start = offsets.start;
          end = start;
        } else if (offsets.start > offsets.end) {
          start = offsets.end;
          end = offsets.start;
        } else {
          start = offsets.start;
          end = offsets.end;
        }

        range.moveToElementText(node);
        range.moveStart('character', start);
        range.setEndPoint('EndToStart', range);
        range.moveEnd('character', end - start);
        range.select();
      }

      /**
       * In modern non-IE browsers, we can support both forward and backward
       * selections.
       *
       * Note: IE10+ supports the Selection object, but it does not support
       * the `extend` method, which means that even in modern IE, it's not possible
       * to programmatically create a backward selection. Thus, for all IE
       * versions, we use the old IE API to create our selections.
       *
       * @param {DOMElement|DOMTextNode} node
       * @param {object} offsets
       */
      function setModernOffsets(node, offsets) {
        if (!window.getSelection) {
          return;
        }

        var selection = window.getSelection();
        var length = node[getTextContentAccessor()].length;
        var start = Math.min(offsets.start, length);
        var end =
          offsets.end === undefined ? start : Math.min(offsets.end, length);

        // IE 11 uses modern selection, but doesn't support the extend method.
        // Flip backward selections, so we can set with a single range.
        if (!selection.extend && start > end) {
          var temp = end;
          end = start;
          start = temp;
        }

        var startMarker = getNodeForCharacterOffset(node, start);
        var endMarker = getNodeForCharacterOffset(node, end);

        if (startMarker && endMarker) {
          var range = document.createRange();
          range.setStart(startMarker.node, startMarker.offset);
          selection.removeAllRanges();

          if (start > end) {
            selection.addRange(range);
            selection.extend(endMarker.node, endMarker.offset);
          } else {
            range.setEnd(endMarker.node, endMarker.offset);
            selection.addRange(range);
          }
        }
      }

      var useIEOffsets =
        ExecutionEnvironment.canUseDOM &&
        'selection' in document &&
        !('getSelection' in window);

      var ReactDOMSelection = {
        /**
         * @param {DOMElement} node
         */
        getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

        /**
         * @param {DOMElement|DOMTextNode} node
         * @param {object} offsets
         */
        setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets,
      };

      module.exports = ReactDOMSelection;

      /***/
    },
    /* 240 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule getNodeForCharacterOffset
       */

      'use strict';

      /**
       * Given any node return the first leaf node without children.
       *
       * @param {DOMElement|DOMTextNode} node
       * @return {DOMElement|DOMTextNode}
       */

      function getLeafNode(node) {
        while (node && node.firstChild) {
          node = node.firstChild;
        }
        return node;
      }

      /**
       * Get the next sibling within a container. This will walk up the
       * DOM if a node's siblings have been exhausted.
       *
       * @param {DOMElement|DOMTextNode} node
       * @return {?DOMElement|DOMTextNode}
       */
      function getSiblingNode(node) {
        while (node) {
          if (node.nextSibling) {
            return node.nextSibling;
          }
          node = node.parentNode;
        }
      }

      /**
       * Get object describing the nodes which contain characters at offset.
       *
       * @param {DOMElement|DOMTextNode} root
       * @param {number} offset
       * @return {?object}
       */
      function getNodeForCharacterOffset(root, offset) {
        var node = getLeafNode(root);
        var nodeStart = 0;
        var nodeEnd = 0;

        while (node) {
          if (node.nodeType === 3) {
            nodeEnd = nodeStart + node.textContent.length;

            if (nodeStart <= offset && nodeEnd >= offset) {
              return {
                node: node,
                offset: offset - nodeStart,
              };
            }

            nodeStart = nodeEnd;
          }

          node = getLeafNode(getSiblingNode(node));
        }
      }

      module.exports = getNodeForCharacterOffset;

      /***/
    },
    /* 241 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       *
       */

      var isTextNode = __webpack_require__(242);

      /*eslint-disable no-bitwise */

      /**
       * Checks if a given DOM node contains or is another DOM node.
       */
      function containsNode(outerNode, innerNode) {
        if (!outerNode || !innerNode) {
          return false;
        } else if (outerNode === innerNode) {
          return true;
        } else if (isTextNode(outerNode)) {
          return false;
        } else if (isTextNode(innerNode)) {
          return containsNode(outerNode, innerNode.parentNode);
        } else if ('contains' in outerNode) {
          return outerNode.contains(innerNode);
        } else if (outerNode.compareDocumentPosition) {
          return !!(outerNode.compareDocumentPosition(innerNode) & 16);
        } else {
          return false;
        }
      }

      module.exports = containsNode;

      /***/
    },
    /* 242 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      var isNode = __webpack_require__(243);

      /**
       * @param {*} object The object to check.
       * @return {boolean} Whether or not the object is a DOM text node.
       */
      function isTextNode(object) {
        return isNode(object) && object.nodeType == 3;
      }

      module.exports = isTextNode;

      /***/
    },
    /* 243 */
    /***/ function (module, exports) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      /**
       * @param {*} object The object to check.
       * @return {boolean} Whether or not the object is a DOM node.
       */
      function isNode(object) {
        return !!(
          object &&
          (typeof Node === 'function'
            ? object instanceof Node
            : typeof object === 'object' &&
              typeof object.nodeType === 'number' &&
              typeof object.nodeName === 'string')
        );
      }

      module.exports = isNode;

      /***/
    },
    /* 244 */
    /***/ function (module, exports) {
      'use strict';

      /**
       * Copyright (c) 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @typechecks
       */

      /* eslint-disable fb-www/typeof-undefined */

      /**
       * Same as document.activeElement but wraps in a try-catch block. In IE it is
       * not safe to call document.activeElement if there is nothing focused.
       *
       * The activeElement will be null only if the document or document body is not
       * yet defined.
       */
      function getActiveElement() /*?DOMElement*/ {
        if (typeof document === 'undefined') {
          return null;
        }
        try {
          return document.activeElement || document.body;
        } catch (e) {
          return document.body;
        }
      }

      module.exports = getActiveElement;

      /***/
    },
    /* 245 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SVGDOMPropertyConfig
       */

      'use strict';

      var NS = {
        xlink: 'http://www.w3.org/1999/xlink',
        xml: 'http://www.w3.org/XML/1998/namespace',
      };

      // We use attributes for everything SVG so let's avoid some duplication and run
      // code instead.
      // The following are all specified in the HTML config already so we exclude here.
      // - class (as className)
      // - color
      // - height
      // - id
      // - lang
      // - max
      // - media
      // - method
      // - min
      // - name
      // - style
      // - target
      // - type
      // - width
      var ATTRS = {
        accentHeight: 'accent-height',
        accumulate: 0,
        additive: 0,
        alignmentBaseline: 'alignment-baseline',
        allowReorder: 'allowReorder',
        alphabetic: 0,
        amplitude: 0,
        arabicForm: 'arabic-form',
        ascent: 0,
        attributeName: 'attributeName',
        attributeType: 'attributeType',
        autoReverse: 'autoReverse',
        azimuth: 0,
        baseFrequency: 'baseFrequency',
        baseProfile: 'baseProfile',
        baselineShift: 'baseline-shift',
        bbox: 0,
        begin: 0,
        bias: 0,
        by: 0,
        calcMode: 'calcMode',
        capHeight: 'cap-height',
        clip: 0,
        clipPath: 'clip-path',
        clipRule: 'clip-rule',
        clipPathUnits: 'clipPathUnits',
        colorInterpolation: 'color-interpolation',
        colorInterpolationFilters: 'color-interpolation-filters',
        colorProfile: 'color-profile',
        colorRendering: 'color-rendering',
        contentScriptType: 'contentScriptType',
        contentStyleType: 'contentStyleType',
        cursor: 0,
        cx: 0,
        cy: 0,
        d: 0,
        decelerate: 0,
        descent: 0,
        diffuseConstant: 'diffuseConstant',
        direction: 0,
        display: 0,
        divisor: 0,
        dominantBaseline: 'dominant-baseline',
        dur: 0,
        dx: 0,
        dy: 0,
        edgeMode: 'edgeMode',
        elevation: 0,
        enableBackground: 'enable-background',
        end: 0,
        exponent: 0,
        externalResourcesRequired: 'externalResourcesRequired',
        fill: 0,
        fillOpacity: 'fill-opacity',
        fillRule: 'fill-rule',
        filter: 0,
        filterRes: 'filterRes',
        filterUnits: 'filterUnits',
        floodColor: 'flood-color',
        floodOpacity: 'flood-opacity',
        focusable: 0,
        fontFamily: 'font-family',
        fontSize: 'font-size',
        fontSizeAdjust: 'font-size-adjust',
        fontStretch: 'font-stretch',
        fontStyle: 'font-style',
        fontVariant: 'font-variant',
        fontWeight: 'font-weight',
        format: 0,
        from: 0,
        fx: 0,
        fy: 0,
        g1: 0,
        g2: 0,
        glyphName: 'glyph-name',
        glyphOrientationHorizontal: 'glyph-orientation-horizontal',
        glyphOrientationVertical: 'glyph-orientation-vertical',
        glyphRef: 'glyphRef',
        gradientTransform: 'gradientTransform',
        gradientUnits: 'gradientUnits',
        hanging: 0,
        horizAdvX: 'horiz-adv-x',
        horizOriginX: 'horiz-origin-x',
        ideographic: 0,
        imageRendering: 'image-rendering',
        in: 0,
        in2: 0,
        intercept: 0,
        k: 0,
        k1: 0,
        k2: 0,
        k3: 0,
        k4: 0,
        kernelMatrix: 'kernelMatrix',
        kernelUnitLength: 'kernelUnitLength',
        kerning: 0,
        keyPoints: 'keyPoints',
        keySplines: 'keySplines',
        keyTimes: 'keyTimes',
        lengthAdjust: 'lengthAdjust',
        letterSpacing: 'letter-spacing',
        lightingColor: 'lighting-color',
        limitingConeAngle: 'limitingConeAngle',
        local: 0,
        markerEnd: 'marker-end',
        markerMid: 'marker-mid',
        markerStart: 'marker-start',
        markerHeight: 'markerHeight',
        markerUnits: 'markerUnits',
        markerWidth: 'markerWidth',
        mask: 0,
        maskContentUnits: 'maskContentUnits',
        maskUnits: 'maskUnits',
        mathematical: 0,
        mode: 0,
        numOctaves: 'numOctaves',
        offset: 0,
        opacity: 0,
        operator: 0,
        order: 0,
        orient: 0,
        orientation: 0,
        origin: 0,
        overflow: 0,
        overlinePosition: 'overline-position',
        overlineThickness: 'overline-thickness',
        paintOrder: 'paint-order',
        panose1: 'panose-1',
        pathLength: 'pathLength',
        patternContentUnits: 'patternContentUnits',
        patternTransform: 'patternTransform',
        patternUnits: 'patternUnits',
        pointerEvents: 'pointer-events',
        points: 0,
        pointsAtX: 'pointsAtX',
        pointsAtY: 'pointsAtY',
        pointsAtZ: 'pointsAtZ',
        preserveAlpha: 'preserveAlpha',
        preserveAspectRatio: 'preserveAspectRatio',
        primitiveUnits: 'primitiveUnits',
        r: 0,
        radius: 0,
        refX: 'refX',
        refY: 'refY',
        renderingIntent: 'rendering-intent',
        repeatCount: 'repeatCount',
        repeatDur: 'repeatDur',
        requiredExtensions: 'requiredExtensions',
        requiredFeatures: 'requiredFeatures',
        restart: 0,
        result: 0,
        rotate: 0,
        rx: 0,
        ry: 0,
        scale: 0,
        seed: 0,
        shapeRendering: 'shape-rendering',
        slope: 0,
        spacing: 0,
        specularConstant: 'specularConstant',
        specularExponent: 'specularExponent',
        speed: 0,
        spreadMethod: 'spreadMethod',
        startOffset: 'startOffset',
        stdDeviation: 'stdDeviation',
        stemh: 0,
        stemv: 0,
        stitchTiles: 'stitchTiles',
        stopColor: 'stop-color',
        stopOpacity: 'stop-opacity',
        strikethroughPosition: 'strikethrough-position',
        strikethroughThickness: 'strikethrough-thickness',
        string: 0,
        stroke: 0,
        strokeDasharray: 'stroke-dasharray',
        strokeDashoffset: 'stroke-dashoffset',
        strokeLinecap: 'stroke-linecap',
        strokeLinejoin: 'stroke-linejoin',
        strokeMiterlimit: 'stroke-miterlimit',
        strokeOpacity: 'stroke-opacity',
        strokeWidth: 'stroke-width',
        surfaceScale: 'surfaceScale',
        systemLanguage: 'systemLanguage',
        tableValues: 'tableValues',
        targetX: 'targetX',
        targetY: 'targetY',
        textAnchor: 'text-anchor',
        textDecoration: 'text-decoration',
        textRendering: 'text-rendering',
        textLength: 'textLength',
        to: 0,
        transform: 0,
        u1: 0,
        u2: 0,
        underlinePosition: 'underline-position',
        underlineThickness: 'underline-thickness',
        unicode: 0,
        unicodeBidi: 'unicode-bidi',
        unicodeRange: 'unicode-range',
        unitsPerEm: 'units-per-em',
        vAlphabetic: 'v-alphabetic',
        vHanging: 'v-hanging',
        vIdeographic: 'v-ideographic',
        vMathematical: 'v-mathematical',
        values: 0,
        vectorEffect: 'vector-effect',
        version: 0,
        vertAdvY: 'vert-adv-y',
        vertOriginX: 'vert-origin-x',
        vertOriginY: 'vert-origin-y',
        viewBox: 'viewBox',
        viewTarget: 'viewTarget',
        visibility: 0,
        widths: 0,
        wordSpacing: 'word-spacing',
        writingMode: 'writing-mode',
        x: 0,
        xHeight: 'x-height',
        x1: 0,
        x2: 0,
        xChannelSelector: 'xChannelSelector',
        xlinkActuate: 'xlink:actuate',
        xlinkArcrole: 'xlink:arcrole',
        xlinkHref: 'xlink:href',
        xlinkRole: 'xlink:role',
        xlinkShow: 'xlink:show',
        xlinkTitle: 'xlink:title',
        xlinkType: 'xlink:type',
        xmlBase: 'xml:base',
        xmlns: 0,
        xmlnsXlink: 'xmlns:xlink',
        xmlLang: 'xml:lang',
        xmlSpace: 'xml:space',
        y: 0,
        y1: 0,
        y2: 0,
        yChannelSelector: 'yChannelSelector',
        z: 0,
        zoomAndPan: 'zoomAndPan',
      };

      var SVGDOMPropertyConfig = {
        Properties: {},
        DOMAttributeNamespaces: {
          xlinkActuate: NS.xlink,
          xlinkArcrole: NS.xlink,
          xlinkHref: NS.xlink,
          xlinkRole: NS.xlink,
          xlinkShow: NS.xlink,
          xlinkTitle: NS.xlink,
          xlinkType: NS.xlink,
          xmlBase: NS.xml,
          xmlLang: NS.xml,
          xmlSpace: NS.xml,
        },
        DOMAttributeNames: {},
      };

      Object.keys(ATTRS).forEach(function (key) {
        SVGDOMPropertyConfig.Properties[key] = 0;
        if (ATTRS[key]) {
          SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
        }
      });

      module.exports = SVGDOMPropertyConfig;

      /***/
    },
    /* 246 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SelectEventPlugin
       */

      'use strict';

      var EventConstants = __webpack_require__(137);
      var EventPropagators = __webpack_require__(138);
      var ExecutionEnvironment = __webpack_require__(145);
      var ReactDOMComponentTree = __webpack_require__(132);
      var ReactInputSelection = __webpack_require__(238);
      var SyntheticEvent = __webpack_require__(149);

      var getActiveElement = __webpack_require__(244);
      var isTextInputElement = __webpack_require__(168);
      var keyOf = __webpack_require__(26);
      var shallowEqual = __webpack_require__(220);

      var topLevelTypes = EventConstants.topLevelTypes;

      var skipSelectionChangeEvent =
        ExecutionEnvironment.canUseDOM &&
        'documentMode' in document &&
        document.documentMode <= 11;

      var eventTypes = {
        select: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onSelect: null }),
            captured: keyOf({ onSelectCapture: null }),
          },
          dependencies: [
            topLevelTypes.topBlur,
            topLevelTypes.topContextMenu,
            topLevelTypes.topFocus,
            topLevelTypes.topKeyDown,
            topLevelTypes.topKeyUp,
            topLevelTypes.topMouseDown,
            topLevelTypes.topMouseUp,
            topLevelTypes.topSelectionChange,
          ],
        },
      };

      var activeElement = null;
      var activeElementInst = null;
      var lastSelection = null;
      var mouseDown = false;

      // Track whether a listener exists for this plugin. If none exist, we do
      // not extract events. See #3639.
      var hasListener = false;
      var ON_SELECT_KEY = keyOf({ onSelect: null });

      /**
       * Get an object which is a unique representation of the current selection.
       *
       * The return value will not be consistent across nodes or browsers, but
       * two identical selections on the same node will return identical objects.
       *
       * @param {DOMElement} node
       * @return {object}
       */
      function getSelection(node) {
        if (
          'selectionStart' in node &&
          ReactInputSelection.hasSelectionCapabilities(node)
        ) {
          return {
            start: node.selectionStart,
            end: node.selectionEnd,
          };
        } else if (window.getSelection) {
          var selection = window.getSelection();
          return {
            anchorNode: selection.anchorNode,
            anchorOffset: selection.anchorOffset,
            focusNode: selection.focusNode,
            focusOffset: selection.focusOffset,
          };
        } else if (document.selection) {
          var range = document.selection.createRange();
          return {
            parentElement: range.parentElement(),
            text: range.text,
            top: range.boundingTop,
            left: range.boundingLeft,
          };
        }
      }

      /**
       * Poll selection to see whether it's changed.
       *
       * @param {object} nativeEvent
       * @return {?SyntheticEvent}
       */
      function constructSelectEvent(nativeEvent, nativeEventTarget) {
        // Ensure we have the right element, and that the user is not dragging a
        // selection (this matches native `select` event behavior). In HTML5, select
        // fires only on input and textarea thus if there's no focused element we
        // won't dispatch.
        if (
          mouseDown ||
          activeElement == null ||
          activeElement !== getActiveElement()
        ) {
          return null;
        }

        // Only fire when selection has actually changed.
        var currentSelection = getSelection(activeElement);
        if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
          lastSelection = currentSelection;

          var syntheticEvent = SyntheticEvent.getPooled(
            eventTypes.select,
            activeElementInst,
            nativeEvent,
            nativeEventTarget,
          );

          syntheticEvent.type = 'select';
          syntheticEvent.target = activeElement;

          EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

          return syntheticEvent;
        }

        return null;
      }

      /**
       * This plugin creates an `onSelect` event that normalizes select events
       * across form elements.
       *
       * Supported elements are:
       * - input (see `isTextInputElement`)
       * - textarea
       * - contentEditable
       *
       * This differs from native browser implementations in the following ways:
       * - Fires on contentEditable fields as well as inputs.
       * - Fires for collapsed selection.
       * - Fires after user input.
       */
      var SelectEventPlugin = {
        eventTypes: eventTypes,

        extractEvents: function (
          topLevelType,
          targetInst,
          nativeEvent,
          nativeEventTarget,
        ) {
          if (!hasListener) {
            return null;
          }

          var targetNode = targetInst
            ? ReactDOMComponentTree.getNodeFromInstance(targetInst)
            : window;

          switch (topLevelType) {
            // Track the input node that has focus.
            case topLevelTypes.topFocus:
              if (
                isTextInputElement(targetNode) ||
                targetNode.contentEditable === 'true'
              ) {
                activeElement = targetNode;
                activeElementInst = targetInst;
                lastSelection = null;
              }
              break;
            case topLevelTypes.topBlur:
              activeElement = null;
              activeElementInst = null;
              lastSelection = null;
              break;

            // Don't fire the event while the user is dragging. This matches the
            // semantics of the native select event.
            case topLevelTypes.topMouseDown:
              mouseDown = true;
              break;
            case topLevelTypes.topContextMenu:
            case topLevelTypes.topMouseUp:
              mouseDown = false;
              return constructSelectEvent(nativeEvent, nativeEventTarget);

            // Chrome and IE fire non-standard event when selection is changed (and
            // sometimes when it hasn't). IE's event fires out of order with respect
            // to key and input events on deletion, so we discard it.
            //
            // Firefox doesn't support selectionchange, so check selection status
            // after each key entry. The selection changes after keydown and before
            // keyup, but we check on keydown as well in the case of holding down a
            // key, when multiple keydown events are fired but only one keyup is.
            // This is also our approach for IE handling, for the reason above.
            case topLevelTypes.topSelectionChange:
              if (skipSelectionChangeEvent) {
                break;
              }
            // falls through
            case topLevelTypes.topKeyDown:
            case topLevelTypes.topKeyUp:
              return constructSelectEvent(nativeEvent, nativeEventTarget);
          }

          return null;
        },

        didPutListener: function (inst, registrationName, listener) {
          if (registrationName === ON_SELECT_KEY) {
            hasListener = true;
          }
        },
      };

      module.exports = SelectEventPlugin;

      /***/
    },
    /* 247 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SimpleEventPlugin
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var EventConstants = __webpack_require__(137);
      var EventListener = __webpack_require__(234);
      var EventPropagators = __webpack_require__(138);
      var ReactDOMComponentTree = __webpack_require__(132);
      var SyntheticAnimationEvent = __webpack_require__(248);
      var SyntheticClipboardEvent = __webpack_require__(249);
      var SyntheticEvent = __webpack_require__(149);
      var SyntheticFocusEvent = __webpack_require__(250);
      var SyntheticKeyboardEvent = __webpack_require__(251);
      var SyntheticMouseEvent = __webpack_require__(171);
      var SyntheticDragEvent = __webpack_require__(254);
      var SyntheticTouchEvent = __webpack_require__(255);
      var SyntheticTransitionEvent = __webpack_require__(256);
      var SyntheticUIEvent = __webpack_require__(172);
      var SyntheticWheelEvent = __webpack_require__(257);

      var emptyFunction = __webpack_require__(13);
      var getEventCharCode = __webpack_require__(252);
      var invariant = __webpack_require__(9);
      var keyOf = __webpack_require__(26);

      var topLevelTypes = EventConstants.topLevelTypes;

      var eventTypes = {
        abort: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onAbort: true }),
            captured: keyOf({ onAbortCapture: true }),
          },
        },
        animationEnd: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onAnimationEnd: true }),
            captured: keyOf({ onAnimationEndCapture: true }),
          },
        },
        animationIteration: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onAnimationIteration: true }),
            captured: keyOf({ onAnimationIterationCapture: true }),
          },
        },
        animationStart: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onAnimationStart: true }),
            captured: keyOf({ onAnimationStartCapture: true }),
          },
        },
        blur: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onBlur: true }),
            captured: keyOf({ onBlurCapture: true }),
          },
        },
        canPlay: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onCanPlay: true }),
            captured: keyOf({ onCanPlayCapture: true }),
          },
        },
        canPlayThrough: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onCanPlayThrough: true }),
            captured: keyOf({ onCanPlayThroughCapture: true }),
          },
        },
        click: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onClick: true }),
            captured: keyOf({ onClickCapture: true }),
          },
        },
        contextMenu: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onContextMenu: true }),
            captured: keyOf({ onContextMenuCapture: true }),
          },
        },
        copy: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onCopy: true }),
            captured: keyOf({ onCopyCapture: true }),
          },
        },
        cut: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onCut: true }),
            captured: keyOf({ onCutCapture: true }),
          },
        },
        doubleClick: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onDoubleClick: true }),
            captured: keyOf({ onDoubleClickCapture: true }),
          },
        },
        drag: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onDrag: true }),
            captured: keyOf({ onDragCapture: true }),
          },
        },
        dragEnd: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onDragEnd: true }),
            captured: keyOf({ onDragEndCapture: true }),
          },
        },
        dragEnter: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onDragEnter: true }),
            captured: keyOf({ onDragEnterCapture: true }),
          },
        },
        dragExit: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onDragExit: true }),
            captured: keyOf({ onDragExitCapture: true }),
          },
        },
        dragLeave: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onDragLeave: true }),
            captured: keyOf({ onDragLeaveCapture: true }),
          },
        },
        dragOver: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onDragOver: true }),
            captured: keyOf({ onDragOverCapture: true }),
          },
        },
        dragStart: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onDragStart: true }),
            captured: keyOf({ onDragStartCapture: true }),
          },
        },
        drop: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onDrop: true }),
            captured: keyOf({ onDropCapture: true }),
          },
        },
        durationChange: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onDurationChange: true }),
            captured: keyOf({ onDurationChangeCapture: true }),
          },
        },
        emptied: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onEmptied: true }),
            captured: keyOf({ onEmptiedCapture: true }),
          },
        },
        encrypted: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onEncrypted: true }),
            captured: keyOf({ onEncryptedCapture: true }),
          },
        },
        ended: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onEnded: true }),
            captured: keyOf({ onEndedCapture: true }),
          },
        },
        error: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onError: true }),
            captured: keyOf({ onErrorCapture: true }),
          },
        },
        focus: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onFocus: true }),
            captured: keyOf({ onFocusCapture: true }),
          },
        },
        input: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onInput: true }),
            captured: keyOf({ onInputCapture: true }),
          },
        },
        invalid: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onInvalid: true }),
            captured: keyOf({ onInvalidCapture: true }),
          },
        },
        keyDown: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onKeyDown: true }),
            captured: keyOf({ onKeyDownCapture: true }),
          },
        },
        keyPress: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onKeyPress: true }),
            captured: keyOf({ onKeyPressCapture: true }),
          },
        },
        keyUp: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onKeyUp: true }),
            captured: keyOf({ onKeyUpCapture: true }),
          },
        },
        load: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onLoad: true }),
            captured: keyOf({ onLoadCapture: true }),
          },
        },
        loadedData: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onLoadedData: true }),
            captured: keyOf({ onLoadedDataCapture: true }),
          },
        },
        loadedMetadata: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onLoadedMetadata: true }),
            captured: keyOf({ onLoadedMetadataCapture: true }),
          },
        },
        loadStart: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onLoadStart: true }),
            captured: keyOf({ onLoadStartCapture: true }),
          },
        },
        // Note: We do not allow listening to mouseOver events. Instead, use the
        // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
        mouseDown: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onMouseDown: true }),
            captured: keyOf({ onMouseDownCapture: true }),
          },
        },
        mouseMove: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onMouseMove: true }),
            captured: keyOf({ onMouseMoveCapture: true }),
          },
        },
        mouseOut: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onMouseOut: true }),
            captured: keyOf({ onMouseOutCapture: true }),
          },
        },
        mouseOver: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onMouseOver: true }),
            captured: keyOf({ onMouseOverCapture: true }),
          },
        },
        mouseUp: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onMouseUp: true }),
            captured: keyOf({ onMouseUpCapture: true }),
          },
        },
        paste: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onPaste: true }),
            captured: keyOf({ onPasteCapture: true }),
          },
        },
        pause: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onPause: true }),
            captured: keyOf({ onPauseCapture: true }),
          },
        },
        play: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onPlay: true }),
            captured: keyOf({ onPlayCapture: true }),
          },
        },
        playing: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onPlaying: true }),
            captured: keyOf({ onPlayingCapture: true }),
          },
        },
        progress: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onProgress: true }),
            captured: keyOf({ onProgressCapture: true }),
          },
        },
        rateChange: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onRateChange: true }),
            captured: keyOf({ onRateChangeCapture: true }),
          },
        },
        reset: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onReset: true }),
            captured: keyOf({ onResetCapture: true }),
          },
        },
        scroll: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onScroll: true }),
            captured: keyOf({ onScrollCapture: true }),
          },
        },
        seeked: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onSeeked: true }),
            captured: keyOf({ onSeekedCapture: true }),
          },
        },
        seeking: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onSeeking: true }),
            captured: keyOf({ onSeekingCapture: true }),
          },
        },
        stalled: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onStalled: true }),
            captured: keyOf({ onStalledCapture: true }),
          },
        },
        submit: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onSubmit: true }),
            captured: keyOf({ onSubmitCapture: true }),
          },
        },
        suspend: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onSuspend: true }),
            captured: keyOf({ onSuspendCapture: true }),
          },
        },
        timeUpdate: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onTimeUpdate: true }),
            captured: keyOf({ onTimeUpdateCapture: true }),
          },
        },
        touchCancel: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onTouchCancel: true }),
            captured: keyOf({ onTouchCancelCapture: true }),
          },
        },
        touchEnd: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onTouchEnd: true }),
            captured: keyOf({ onTouchEndCapture: true }),
          },
        },
        touchMove: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onTouchMove: true }),
            captured: keyOf({ onTouchMoveCapture: true }),
          },
        },
        touchStart: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onTouchStart: true }),
            captured: keyOf({ onTouchStartCapture: true }),
          },
        },
        transitionEnd: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onTransitionEnd: true }),
            captured: keyOf({ onTransitionEndCapture: true }),
          },
        },
        volumeChange: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onVolumeChange: true }),
            captured: keyOf({ onVolumeChangeCapture: true }),
          },
        },
        waiting: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onWaiting: true }),
            captured: keyOf({ onWaitingCapture: true }),
          },
        },
        wheel: {
          phasedRegistrationNames: {
            bubbled: keyOf({ onWheel: true }),
            captured: keyOf({ onWheelCapture: true }),
          },
        },
      };

      var topLevelEventsToDispatchConfig = {
        topAbort: eventTypes.abort,
        topAnimationEnd: eventTypes.animationEnd,
        topAnimationIteration: eventTypes.animationIteration,
        topAnimationStart: eventTypes.animationStart,
        topBlur: eventTypes.blur,
        topCanPlay: eventTypes.canPlay,
        topCanPlayThrough: eventTypes.canPlayThrough,
        topClick: eventTypes.click,
        topContextMenu: eventTypes.contextMenu,
        topCopy: eventTypes.copy,
        topCut: eventTypes.cut,
        topDoubleClick: eventTypes.doubleClick,
        topDrag: eventTypes.drag,
        topDragEnd: eventTypes.dragEnd,
        topDragEnter: eventTypes.dragEnter,
        topDragExit: eventTypes.dragExit,
        topDragLeave: eventTypes.dragLeave,
        topDragOver: eventTypes.dragOver,
        topDragStart: eventTypes.dragStart,
        topDrop: eventTypes.drop,
        topDurationChange: eventTypes.durationChange,
        topEmptied: eventTypes.emptied,
        topEncrypted: eventTypes.encrypted,
        topEnded: eventTypes.ended,
        topError: eventTypes.error,
        topFocus: eventTypes.focus,
        topInput: eventTypes.input,
        topInvalid: eventTypes.invalid,
        topKeyDown: eventTypes.keyDown,
        topKeyPress: eventTypes.keyPress,
        topKeyUp: eventTypes.keyUp,
        topLoad: eventTypes.load,
        topLoadedData: eventTypes.loadedData,
        topLoadedMetadata: eventTypes.loadedMetadata,
        topLoadStart: eventTypes.loadStart,
        topMouseDown: eventTypes.mouseDown,
        topMouseMove: eventTypes.mouseMove,
        topMouseOut: eventTypes.mouseOut,
        topMouseOver: eventTypes.mouseOver,
        topMouseUp: eventTypes.mouseUp,
        topPaste: eventTypes.paste,
        topPause: eventTypes.pause,
        topPlay: eventTypes.play,
        topPlaying: eventTypes.playing,
        topProgress: eventTypes.progress,
        topRateChange: eventTypes.rateChange,
        topReset: eventTypes.reset,
        topScroll: eventTypes.scroll,
        topSeeked: eventTypes.seeked,
        topSeeking: eventTypes.seeking,
        topStalled: eventTypes.stalled,
        topSubmit: eventTypes.submit,
        topSuspend: eventTypes.suspend,
        topTimeUpdate: eventTypes.timeUpdate,
        topTouchCancel: eventTypes.touchCancel,
        topTouchEnd: eventTypes.touchEnd,
        topTouchMove: eventTypes.touchMove,
        topTouchStart: eventTypes.touchStart,
        topTransitionEnd: eventTypes.transitionEnd,
        topVolumeChange: eventTypes.volumeChange,
        topWaiting: eventTypes.waiting,
        topWheel: eventTypes.wheel,
      };

      for (var type in topLevelEventsToDispatchConfig) {
        topLevelEventsToDispatchConfig[type].dependencies = [type];
      }

      var ON_CLICK_KEY = keyOf({ onClick: null });
      var onClickListeners = {};

      function getDictionaryKey(inst) {
        // Prevents V8 performance issue:
        // https://github.com/facebook/react/pull/7232
        return '.' + inst._rootNodeID;
      }

      var SimpleEventPlugin = {
        eventTypes: eventTypes,

        extractEvents: function (
          topLevelType,
          targetInst,
          nativeEvent,
          nativeEventTarget,
        ) {
          var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
          if (!dispatchConfig) {
            return null;
          }
          var EventConstructor;
          switch (topLevelType) {
            case topLevelTypes.topAbort:
            case topLevelTypes.topCanPlay:
            case topLevelTypes.topCanPlayThrough:
            case topLevelTypes.topDurationChange:
            case topLevelTypes.topEmptied:
            case topLevelTypes.topEncrypted:
            case topLevelTypes.topEnded:
            case topLevelTypes.topError:
            case topLevelTypes.topInput:
            case topLevelTypes.topInvalid:
            case topLevelTypes.topLoad:
            case topLevelTypes.topLoadedData:
            case topLevelTypes.topLoadedMetadata:
            case topLevelTypes.topLoadStart:
            case topLevelTypes.topPause:
            case topLevelTypes.topPlay:
            case topLevelTypes.topPlaying:
            case topLevelTypes.topProgress:
            case topLevelTypes.topRateChange:
            case topLevelTypes.topReset:
            case topLevelTypes.topSeeked:
            case topLevelTypes.topSeeking:
            case topLevelTypes.topStalled:
            case topLevelTypes.topSubmit:
            case topLevelTypes.topSuspend:
            case topLevelTypes.topTimeUpdate:
            case topLevelTypes.topVolumeChange:
            case topLevelTypes.topWaiting:
              // HTML Events
              // @see http://www.w3.org/TR/html5/index.html#events-0
              EventConstructor = SyntheticEvent;
              break;
            case topLevelTypes.topKeyPress:
              // Firefox creates a keypress event for function keys too. This removes
              // the unwanted keypress events. Enter is however both printable and
              // non-printable. One would expect Tab to be as well (but it isn't).
              if (getEventCharCode(nativeEvent) === 0) {
                return null;
              }
            /* falls through */
            case topLevelTypes.topKeyDown:
            case topLevelTypes.topKeyUp:
              EventConstructor = SyntheticKeyboardEvent;
              break;
            case topLevelTypes.topBlur:
            case topLevelTypes.topFocus:
              EventConstructor = SyntheticFocusEvent;
              break;
            case topLevelTypes.topClick:
              // Firefox creates a click event on right mouse clicks. This removes the
              // unwanted click events.
              if (nativeEvent.button === 2) {
                return null;
              }
            /* falls through */
            case topLevelTypes.topContextMenu:
            case topLevelTypes.topDoubleClick:
            case topLevelTypes.topMouseDown:
            case topLevelTypes.topMouseMove:
            case topLevelTypes.topMouseOut:
            case topLevelTypes.topMouseOver:
            case topLevelTypes.topMouseUp:
              EventConstructor = SyntheticMouseEvent;
              break;
            case topLevelTypes.topDrag:
            case topLevelTypes.topDragEnd:
            case topLevelTypes.topDragEnter:
            case topLevelTypes.topDragExit:
            case topLevelTypes.topDragLeave:
            case topLevelTypes.topDragOver:
            case topLevelTypes.topDragStart:
            case topLevelTypes.topDrop:
              EventConstructor = SyntheticDragEvent;
              break;
            case topLevelTypes.topTouchCancel:
            case topLevelTypes.topTouchEnd:
            case topLevelTypes.topTouchMove:
            case topLevelTypes.topTouchStart:
              EventConstructor = SyntheticTouchEvent;
              break;
            case topLevelTypes.topAnimationEnd:
            case topLevelTypes.topAnimationIteration:
            case topLevelTypes.topAnimationStart:
              EventConstructor = SyntheticAnimationEvent;
              break;
            case topLevelTypes.topTransitionEnd:
              EventConstructor = SyntheticTransitionEvent;
              break;
            case topLevelTypes.topScroll:
              EventConstructor = SyntheticUIEvent;
              break;
            case topLevelTypes.topWheel:
              EventConstructor = SyntheticWheelEvent;
              break;
            case topLevelTypes.topCopy:
            case topLevelTypes.topCut:
            case topLevelTypes.topPaste:
              EventConstructor = SyntheticClipboardEvent;
              break;
          }
          !EventConstructor
            ? true
              ? invariant(
                  false,
                  'SimpleEventPlugin: Unhandled event type, `%s`.',
                  topLevelType,
                )
              : _prodInvariant('86', topLevelType)
            : void 0;
          var event = EventConstructor.getPooled(
            dispatchConfig,
            targetInst,
            nativeEvent,
            nativeEventTarget,
          );
          EventPropagators.accumulateTwoPhaseDispatches(event);
          return event;
        },

        didPutListener: function (inst, registrationName, listener) {
          // Mobile Safari does not fire properly bubble click events on
          // non-interactive elements, which means delegated click listeners do not
          // fire. The workaround for this bug involves attaching an empty click
          // listener on the target node.
          if (registrationName === ON_CLICK_KEY) {
            var key = getDictionaryKey(inst);
            var node = ReactDOMComponentTree.getNodeFromInstance(inst);
            if (!onClickListeners[key]) {
              onClickListeners[key] = EventListener.listen(
                node,
                'click',
                emptyFunction,
              );
            }
          }
        },

        willDeleteListener: function (inst, registrationName) {
          if (registrationName === ON_CLICK_KEY) {
            var key = getDictionaryKey(inst);
            onClickListeners[key].remove();
            delete onClickListeners[key];
          }
        },
      };

      module.exports = SimpleEventPlugin;

      /***/
    },
    /* 248 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SyntheticAnimationEvent
       */

      'use strict';

      var SyntheticEvent = __webpack_require__(149);

      /**
       * @interface Event
       * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
       * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
       */
      var AnimationEventInterface = {
        animationName: null,
        elapsedTime: null,
        pseudoElement: null,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticEvent}
       */
      function SyntheticAnimationEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget,
      ) {
        return SyntheticEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget,
        );
      }

      SyntheticEvent.augmentClass(
        SyntheticAnimationEvent,
        AnimationEventInterface,
      );

      module.exports = SyntheticAnimationEvent;

      /***/
    },
    /* 249 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SyntheticClipboardEvent
       */

      'use strict';

      var SyntheticEvent = __webpack_require__(149);

      /**
       * @interface Event
       * @see http://www.w3.org/TR/clipboard-apis/
       */
      var ClipboardEventInterface = {
        clipboardData: function (event) {
          return 'clipboardData' in event
            ? event.clipboardData
            : window.clipboardData;
        },
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticClipboardEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget,
      ) {
        return SyntheticEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget,
        );
      }

      SyntheticEvent.augmentClass(
        SyntheticClipboardEvent,
        ClipboardEventInterface,
      );

      module.exports = SyntheticClipboardEvent;

      /***/
    },
    /* 250 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SyntheticFocusEvent
       */

      'use strict';

      var SyntheticUIEvent = __webpack_require__(172);

      /**
       * @interface FocusEvent
       * @see http://www.w3.org/TR/DOM-Level-3-Events/
       */
      var FocusEventInterface = {
        relatedTarget: null,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticFocusEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget,
      ) {
        return SyntheticUIEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget,
        );
      }

      SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

      module.exports = SyntheticFocusEvent;

      /***/
    },
    /* 251 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SyntheticKeyboardEvent
       */

      'use strict';

      var SyntheticUIEvent = __webpack_require__(172);

      var getEventCharCode = __webpack_require__(252);
      var getEventKey = __webpack_require__(253);
      var getEventModifierState = __webpack_require__(174);

      /**
       * @interface KeyboardEvent
       * @see http://www.w3.org/TR/DOM-Level-3-Events/
       */
      var KeyboardEventInterface = {
        key: getEventKey,
        location: null,
        ctrlKey: null,
        shiftKey: null,
        altKey: null,
        metaKey: null,
        repeat: null,
        locale: null,
        getModifierState: getEventModifierState,
        // Legacy Interface
        charCode: function (event) {
          // `charCode` is the result of a KeyPress event and represents the value of
          // the actual printable character.

          // KeyPress is deprecated, but its replacement is not yet final and not
          // implemented in any major browser. Only KeyPress has charCode.
          if (event.type === 'keypress') {
            return getEventCharCode(event);
          }
          return 0;
        },
        keyCode: function (event) {
          // `keyCode` is the result of a KeyDown/Up event and represents the value of
          // physical keyboard key.

          // The actual meaning of the value depends on the users' keyboard layout
          // which cannot be detected. Assuming that it is a US keyboard layout
          // provides a surprisingly accurate mapping for US and European users.
          // Due to this, it is left to the user to implement at this time.
          if (event.type === 'keydown' || event.type === 'keyup') {
            return event.keyCode;
          }
          return 0;
        },
        which: function (event) {
          // `which` is an alias for either `keyCode` or `charCode` depending on the
          // type of the event.
          if (event.type === 'keypress') {
            return getEventCharCode(event);
          }
          if (event.type === 'keydown' || event.type === 'keyup') {
            return event.keyCode;
          }
          return 0;
        },
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticKeyboardEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget,
      ) {
        return SyntheticUIEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget,
        );
      }

      SyntheticUIEvent.augmentClass(
        SyntheticKeyboardEvent,
        KeyboardEventInterface,
      );

      module.exports = SyntheticKeyboardEvent;

      /***/
    },
    /* 252 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule getEventCharCode
       */

      'use strict';

      /**
       * `charCode` represents the actual "character code" and is safe to use with
       * `String.fromCharCode`. As such, only keys that correspond to printable
       * characters produce a valid `charCode`, the only exception to this is Enter.
       * The Tab-key is considered non-printable and does not have a `charCode`,
       * presumably because it does not produce a tab-character in browsers.
       *
       * @param {object} nativeEvent Native browser event.
       * @return {number} Normalized `charCode` property.
       */

      function getEventCharCode(nativeEvent) {
        var charCode;
        var keyCode = nativeEvent.keyCode;

        if ('charCode' in nativeEvent) {
          charCode = nativeEvent.charCode;

          // FF does not set `charCode` for the Enter-key, check against `keyCode`.
          if (charCode === 0 && keyCode === 13) {
            charCode = 13;
          }
        } else {
          // IE8 does not implement `charCode`, but `keyCode` has the correct value.
          charCode = keyCode;
        }

        // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
        // Must not discard the (non-)printable Enter-key.
        if (charCode >= 32 || charCode === 13) {
          return charCode;
        }

        return 0;
      }

      module.exports = getEventCharCode;

      /***/
    },
    /* 253 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule getEventKey
       */

      'use strict';

      var getEventCharCode = __webpack_require__(252);

      /**
       * Normalization of deprecated HTML5 `key` values
       * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
       */
      var normalizeKey = {
        Esc: 'Escape',
        Spacebar: ' ',
        Left: 'ArrowLeft',
        Up: 'ArrowUp',
        Right: 'ArrowRight',
        Down: 'ArrowDown',
        Del: 'Delete',
        Win: 'OS',
        Menu: 'ContextMenu',
        Apps: 'ContextMenu',
        Scroll: 'ScrollLock',
        MozPrintableKey: 'Unidentified',
      };

      /**
       * Translation from legacy `keyCode` to HTML5 `key`
       * Only special keys supported, all others depend on keyboard layout or browser
       * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
       */
      var translateToKey = {
        8: 'Backspace',
        9: 'Tab',
        12: 'Clear',
        13: 'Enter',
        16: 'Shift',
        17: 'Control',
        18: 'Alt',
        19: 'Pause',
        20: 'CapsLock',
        27: 'Escape',
        32: ' ',
        33: 'PageUp',
        34: 'PageDown',
        35: 'End',
        36: 'Home',
        37: 'ArrowLeft',
        38: 'ArrowUp',
        39: 'ArrowRight',
        40: 'ArrowDown',
        45: 'Insert',
        46: 'Delete',
        112: 'F1',
        113: 'F2',
        114: 'F3',
        115: 'F4',
        116: 'F5',
        117: 'F6',
        118: 'F7',
        119: 'F8',
        120: 'F9',
        121: 'F10',
        122: 'F11',
        123: 'F12',
        144: 'NumLock',
        145: 'ScrollLock',
        224: 'Meta',
      };

      /**
       * @param {object} nativeEvent Native browser event.
       * @return {string} Normalized `key` property.
       */
      function getEventKey(nativeEvent) {
        if (nativeEvent.key) {
          // Normalize inconsistent values reported by browsers due to
          // implementations of a working draft specification.

          // FireFox implements `key` but returns `MozPrintableKey` for all
          // printable characters (normalized to `Unidentified`), ignore it.
          var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
          if (key !== 'Unidentified') {
            return key;
          }
        }

        // Browser does not implement `key`, polyfill as much of it as we can.
        if (nativeEvent.type === 'keypress') {
          var charCode = getEventCharCode(nativeEvent);

          // The enter-key is technically both printable and non-printable and can
          // thus be captured by `keypress`, no other non-printable key should.
          return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
        }
        if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
          // While user keyboard layout determines the actual meaning of each
          // `keyCode` value, almost all function keys have a universal value.
          return translateToKey[nativeEvent.keyCode] || 'Unidentified';
        }
        return '';
      }

      module.exports = getEventKey;

      /***/
    },
    /* 254 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SyntheticDragEvent
       */

      'use strict';

      var SyntheticMouseEvent = __webpack_require__(171);

      /**
       * @interface DragEvent
       * @see http://www.w3.org/TR/DOM-Level-3-Events/
       */
      var DragEventInterface = {
        dataTransfer: null,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticDragEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget,
      ) {
        return SyntheticMouseEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget,
        );
      }

      SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

      module.exports = SyntheticDragEvent;

      /***/
    },
    /* 255 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SyntheticTouchEvent
       */

      'use strict';

      var SyntheticUIEvent = __webpack_require__(172);

      var getEventModifierState = __webpack_require__(174);

      /**
       * @interface TouchEvent
       * @see http://www.w3.org/TR/touch-events/
       */
      var TouchEventInterface = {
        touches: null,
        targetTouches: null,
        changedTouches: null,
        altKey: null,
        metaKey: null,
        ctrlKey: null,
        shiftKey: null,
        getModifierState: getEventModifierState,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticUIEvent}
       */
      function SyntheticTouchEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget,
      ) {
        return SyntheticUIEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget,
        );
      }

      SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

      module.exports = SyntheticTouchEvent;

      /***/
    },
    /* 256 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SyntheticTransitionEvent
       */

      'use strict';

      var SyntheticEvent = __webpack_require__(149);

      /**
       * @interface Event
       * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
       * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
       */
      var TransitionEventInterface = {
        propertyName: null,
        elapsedTime: null,
        pseudoElement: null,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticEvent}
       */
      function SyntheticTransitionEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget,
      ) {
        return SyntheticEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget,
        );
      }

      SyntheticEvent.augmentClass(
        SyntheticTransitionEvent,
        TransitionEventInterface,
      );

      module.exports = SyntheticTransitionEvent;

      /***/
    },
    /* 257 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule SyntheticWheelEvent
       */

      'use strict';

      var SyntheticMouseEvent = __webpack_require__(171);

      /**
       * @interface WheelEvent
       * @see http://www.w3.org/TR/DOM-Level-3-Events/
       */
      var WheelEventInterface = {
        deltaX: function (event) {
          return 'deltaX' in event
            ? event.deltaX
            : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
            'wheelDeltaX' in event
            ? -event.wheelDeltaX
            : 0;
        },
        deltaY: function (event) {
          return 'deltaY' in event
            ? event.deltaY
            : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
            'wheelDeltaY' in event
            ? -event.wheelDeltaY
            : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
            'wheelDelta' in event
            ? -event.wheelDelta
            : 0;
        },
        deltaZ: null,

        // Browsers without "deltaMode" is reporting in raw wheel delta where one
        // notch on the scroll is always +/- 120, roughly equivalent to pixels.
        // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
        // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
        deltaMode: null,
      };

      /**
       * @param {object} dispatchConfig Configuration used to dispatch this event.
       * @param {string} dispatchMarker Marker identifying the event target.
       * @param {object} nativeEvent Native browser event.
       * @extends {SyntheticMouseEvent}
       */
      function SyntheticWheelEvent(
        dispatchConfig,
        dispatchMarker,
        nativeEvent,
        nativeEventTarget,
      ) {
        return SyntheticMouseEvent.call(
          this,
          dispatchConfig,
          dispatchMarker,
          nativeEvent,
          nativeEventTarget,
        );
      }

      SyntheticMouseEvent.augmentClass(
        SyntheticWheelEvent,
        WheelEventInterface,
      );

      module.exports = SyntheticWheelEvent;

      /***/
    },
    /* 258 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactMount
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var DOMLazyTree = __webpack_require__(178);
      var DOMProperty = __webpack_require__(133);
      var ReactBrowserEventEmitter = __webpack_require__(203);
      var ReactCurrentOwner = __webpack_require__(11);
      var ReactDOMComponentTree = __webpack_require__(132);
      var ReactDOMContainerInfo = __webpack_require__(259);
      var ReactDOMFeatureFlags = __webpack_require__(260);
      var ReactElement = __webpack_require__(10);
      var ReactFeatureFlags = __webpack_require__(154);
      var ReactInstanceMap = __webpack_require__(215);
      var ReactInstrumentation = __webpack_require__(158);
      var ReactMarkupChecksum = __webpack_require__(261);
      var ReactReconciler = __webpack_require__(155);
      var ReactUpdateQueue = __webpack_require__(227);
      var ReactUpdates = __webpack_require__(152);

      var emptyObject = __webpack_require__(20);
      var instantiateReactComponent = __webpack_require__(217);
      var invariant = __webpack_require__(9);
      var setInnerHTML = __webpack_require__(180);
      var shouldUpdateReactComponent = __webpack_require__(221);
      var warning = __webpack_require__(12);

      var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
      var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

      var ELEMENT_NODE_TYPE = 1;
      var DOC_NODE_TYPE = 9;
      var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

      var instancesByReactRootID = {};

      /**
       * Finds the index of the first character
       * that's not common between the two given strings.
       *
       * @return {number} the index of the character where the strings diverge
       */
      function firstDifferenceIndex(string1, string2) {
        var minLen = Math.min(string1.length, string2.length);
        for (var i = 0; i < minLen; i++) {
          if (string1.charAt(i) !== string2.charAt(i)) {
            return i;
          }
        }
        return string1.length === string2.length ? -1 : minLen;
      }

      /**
       * @param {DOMElement|DOMDocument} container DOM element that may contain
       * a React component
       * @return {?*} DOM element that may have the reactRoot ID, or null.
       */
      function getReactRootElementInContainer(container) {
        if (!container) {
          return null;
        }

        if (container.nodeType === DOC_NODE_TYPE) {
          return container.documentElement;
        } else {
          return container.firstChild;
        }
      }

      function internalGetID(node) {
        // If node is something like a window, document, or text node, none of
        // which support attributes or a .getAttribute method, gracefully return
        // the empty string, as if the attribute were missing.
        return (node.getAttribute && node.getAttribute(ATTR_NAME)) || '';
      }

      /**
       * Mounts this component and inserts it into the DOM.
       *
       * @param {ReactComponent} componentInstance The instance to mount.
       * @param {DOMElement} container DOM element to mount into.
       * @param {ReactReconcileTransaction} transaction
       * @param {boolean} shouldReuseMarkup If true, do not insert markup
       */
      function mountComponentIntoNode(
        wrapperInstance,
        container,
        transaction,
        shouldReuseMarkup,
        context,
      ) {
        var markerName;
        if (ReactFeatureFlags.logTopLevelRenders) {
          var wrappedElement = wrapperInstance._currentElement.props;
          var type = wrappedElement.type;
          markerName =
            'React mount: ' +
            (typeof type === 'string' ? type : type.displayName || type.name);
          console.time(markerName);
        }

        var markup = ReactReconciler.mountComponent(
          wrapperInstance,
          transaction,
          null,
          ReactDOMContainerInfo(wrapperInstance, container),
          context,
          0 /* parentDebugID */,
        );

        if (markerName) {
          console.timeEnd(markerName);
        }

        wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
        ReactMount._mountImageIntoNode(
          markup,
          container,
          wrapperInstance,
          shouldReuseMarkup,
          transaction,
        );
      }

      /**
       * Batched mount.
       *
       * @param {ReactComponent} componentInstance The instance to mount.
       * @param {DOMElement} container DOM element to mount into.
       * @param {boolean} shouldReuseMarkup If true, do not insert markup
       */
      function batchedMountComponentIntoNode(
        componentInstance,
        container,
        shouldReuseMarkup,
        context,
      ) {
        var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
          /* useCreateElement */
          !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement,
        );
        transaction.perform(
          mountComponentIntoNode,
          null,
          componentInstance,
          container,
          transaction,
          shouldReuseMarkup,
          context,
        );
        ReactUpdates.ReactReconcileTransaction.release(transaction);
      }

      /**
       * Unmounts a component and removes it from the DOM.
       *
       * @param {ReactComponent} instance React component instance.
       * @param {DOMElement} container DOM element to unmount from.
       * @final
       * @internal
       * @see {ReactMount.unmountComponentAtNode}
       */
      function unmountComponentFromNode(instance, container, safely) {
        if (true) {
          ReactInstrumentation.debugTool.onBeginFlush();
        }
        ReactReconciler.unmountComponent(instance, safely);
        if (true) {
          ReactInstrumentation.debugTool.onEndFlush();
        }

        if (container.nodeType === DOC_NODE_TYPE) {
          container = container.documentElement;
        }

        // http://jsperf.com/emptying-a-node
        while (container.lastChild) {
          container.removeChild(container.lastChild);
        }
      }

      /**
       * True if the supplied DOM node has a direct React-rendered child that is
       * not a React root element. Useful for warning in `render`,
       * `unmountComponentAtNode`, etc.
       *
       * @param {?DOMElement} node The candidate DOM node.
       * @return {boolean} True if the DOM element contains a direct child that was
       * rendered by React but is not a root element.
       * @internal
       */
      function hasNonRootReactChild(container) {
        var rootEl = getReactRootElementInContainer(container);
        if (rootEl) {
          var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
          return !!(inst && inst._hostParent);
        }
      }

      /**
       * True if the supplied DOM node is a React DOM element and
       * it has been rendered by another copy of React.
       *
       * @param {?DOMElement} node The candidate DOM node.
       * @return {boolean} True if the DOM has been rendered by another copy of React
       * @internal
       */
      function nodeIsRenderedByOtherInstance(container) {
        var rootEl = getReactRootElementInContainer(container);
        return !!(
          rootEl &&
          isReactNode(rootEl) &&
          !ReactDOMComponentTree.getInstanceFromNode(rootEl)
        );
      }

      /**
       * True if the supplied DOM node is a valid node element.
       *
       * @param {?DOMElement} node The candidate DOM node.
       * @return {boolean} True if the DOM is a valid DOM node.
       * @internal
       */
      function isValidContainer(node) {
        return !!(
          node &&
          (node.nodeType === ELEMENT_NODE_TYPE ||
            node.nodeType === DOC_NODE_TYPE ||
            node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)
        );
      }

      /**
       * True if the supplied DOM node is a valid React node element.
       *
       * @param {?DOMElement} node The candidate DOM node.
       * @return {boolean} True if the DOM is a valid React DOM node.
       * @internal
       */
      function isReactNode(node) {
        return (
          isValidContainer(node) &&
          (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME))
        );
      }

      function getHostRootInstanceInContainer(container) {
        var rootEl = getReactRootElementInContainer(container);
        var prevHostInstance =
          rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
        return prevHostInstance && !prevHostInstance._hostParent
          ? prevHostInstance
          : null;
      }

      function getTopLevelWrapperInContainer(container) {
        var root = getHostRootInstanceInContainer(container);
        return root ? root._hostContainerInfo._topLevelWrapper : null;
      }

      /**
       * Temporary (?) hack so that we can store all top-level pending updates on
       * composites instead of having to worry about different types of components
       * here.
       */
      var topLevelRootCounter = 1;
      var TopLevelWrapper = function () {
        this.rootID = topLevelRootCounter++;
      };
      TopLevelWrapper.prototype.isReactComponent = {};
      if (true) {
        TopLevelWrapper.displayName = 'TopLevelWrapper';
      }
      TopLevelWrapper.prototype.render = function () {
        // this.props is actually a ReactElement
        return this.props;
      };

      /**
       * Mounting is the process of initializing a React component by creating its
       * representative DOM elements and inserting them into a supplied `container`.
       * Any prior content inside `container` is destroyed in the process.
       *
       *   ReactMount.render(
       *     component,
       *     document.getElementById('container')
       *   );
       *
       *   <div id="container">                   <-- Supplied `container`.
       *     <div data-reactid=".3">              <-- Rendered reactRoot of React
       *       // ...                                 component.
       *     </div>
       *   </div>
       *
       * Inside of `container`, the first element rendered is the "reactRoot".
       */
      var ReactMount = {
        TopLevelWrapper: TopLevelWrapper,

        /**
         * Used by devtools. The keys are not important.
         */
        _instancesByReactRootID: instancesByReactRootID,

        /**
         * This is a hook provided to support rendering React components while
         * ensuring that the apparent scroll position of its `container` does not
         * change.
         *
         * @param {DOMElement} container The `container` being rendered into.
         * @param {function} renderCallback This must be called once to do the render.
         */
        scrollMonitor: function (container, renderCallback) {
          renderCallback();
        },

        /**
         * Take a component that's already mounted into the DOM and replace its props
         * @param {ReactComponent} prevComponent component instance already in the DOM
         * @param {ReactElement} nextElement component instance to render
         * @param {DOMElement} container container to render into
         * @param {?function} callback function triggered on completion
         */
        _updateRootComponent: function (
          prevComponent,
          nextElement,
          nextContext,
          container,
          callback,
        ) {
          ReactMount.scrollMonitor(container, function () {
            ReactUpdateQueue.enqueueElementInternal(
              prevComponent,
              nextElement,
              nextContext,
            );
            if (callback) {
              ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
            }
          });

          return prevComponent;
        },

        /**
         * Render a new component into the DOM. Hooked by hooks!
         *
         * @param {ReactElement} nextElement element to render
         * @param {DOMElement} container container to render into
         * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
         * @return {ReactComponent} nextComponent
         */
        _renderNewRootComponent: function (
          nextElement,
          container,
          shouldReuseMarkup,
          context,
        ) {
          // Various parts of our code (such as ReactCompositeComponent's
          // _renderValidatedComponent) assume that calls to render aren't nested;
          // verify that that's the case.
          true
            ? warning(
                ReactCurrentOwner.current == null,
                '_renderNewRootComponent(): Render methods should be a pure function ' +
                  'of props and state; triggering nested component updates from ' +
                  'render is not allowed. If necessary, trigger nested updates in ' +
                  'componentDidUpdate. Check the render method of %s.',
                (ReactCurrentOwner.current &&
                  ReactCurrentOwner.current.getName()) ||
                  'ReactCompositeComponent',
              )
            : void 0;

          !isValidContainer(container)
            ? true
              ? invariant(
                  false,
                  '_registerComponent(...): Target container is not a DOM element.',
                )
              : _prodInvariant('37')
            : void 0;

          ReactBrowserEventEmitter.ensureScrollValueMonitoring();
          var componentInstance = instantiateReactComponent(nextElement, false);

          // The initial render is synchronous but any updates that happen during
          // rendering, in componentWillMount or componentDidMount, will be batched
          // according to the current batching strategy.

          ReactUpdates.batchedUpdates(
            batchedMountComponentIntoNode,
            componentInstance,
            container,
            shouldReuseMarkup,
            context,
          );

          var wrapperID = componentInstance._instance.rootID;
          instancesByReactRootID[wrapperID] = componentInstance;

          return componentInstance;
        },

        /**
         * Renders a React component into the DOM in the supplied `container`.
         *
         * If the React component was previously rendered into `container`, this will
         * perform an update on it and only mutate the DOM as necessary to reflect the
         * latest React component.
         *
         * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
         * @param {ReactElement} nextElement Component element to render.
         * @param {DOMElement} container DOM element to render into.
         * @param {?function} callback function triggered on completion
         * @return {ReactComponent} Component instance rendered in `container`.
         */
        renderSubtreeIntoContainer: function (
          parentComponent,
          nextElement,
          container,
          callback,
        ) {
          !(parentComponent != null && ReactInstanceMap.has(parentComponent))
            ? true
              ? invariant(
                  false,
                  'parentComponent must be a valid React Component',
                )
              : _prodInvariant('38')
            : void 0;
          return ReactMount._renderSubtreeIntoContainer(
            parentComponent,
            nextElement,
            container,
            callback,
          );
        },

        _renderSubtreeIntoContainer: function (
          parentComponent,
          nextElement,
          container,
          callback,
        ) {
          ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
          !ReactElement.isValidElement(nextElement)
            ? true
              ? invariant(
                  false,
                  'ReactDOM.render(): Invalid component element.%s',
                  typeof nextElement === 'string'
                    ? " Instead of passing a string like 'div', pass " +
                        "React.createElement('div') or <div />."
                    : typeof nextElement === 'function'
                    ? ' Instead of passing a class like Foo, pass ' +
                      'React.createElement(Foo) or <Foo />.'
                    : // Check if it quacks like an element
                    nextElement != null && nextElement.props !== undefined
                    ? ' This may be caused by unintentionally loading two independent ' +
                      'copies of React.'
                    : '',
                )
              : _prodInvariant(
                  '39',
                  typeof nextElement === 'string'
                    ? " Instead of passing a string like 'div', pass " +
                        "React.createElement('div') or <div />."
                    : typeof nextElement === 'function'
                    ? ' Instead of passing a class like Foo, pass ' +
                      'React.createElement(Foo) or <Foo />.'
                    : nextElement != null && nextElement.props !== undefined
                    ? ' This may be caused by unintentionally loading two independent ' +
                      'copies of React.'
                    : '',
                )
            : void 0;

          true
            ? warning(
                !container ||
                  !container.tagName ||
                  container.tagName.toUpperCase() !== 'BODY',
                'render(): Rendering components directly into document.body is ' +
                  'discouraged, since its children are often manipulated by third-party ' +
                  'scripts and browser extensions. This may lead to subtle ' +
                  'reconciliation issues. Try rendering into a container element created ' +
                  'for your app.',
              )
            : void 0;

          var nextWrappedElement = ReactElement(
            TopLevelWrapper,
            null,
            null,
            null,
            null,
            null,
            nextElement,
          );

          var nextContext;
          if (parentComponent) {
            var parentInst = ReactInstanceMap.get(parentComponent);
            nextContext = parentInst._processChildContext(parentInst._context);
          } else {
            nextContext = emptyObject;
          }

          var prevComponent = getTopLevelWrapperInContainer(container);

          if (prevComponent) {
            var prevWrappedElement = prevComponent._currentElement;
            var prevElement = prevWrappedElement.props;
            if (shouldUpdateReactComponent(prevElement, nextElement)) {
              var publicInst = prevComponent._renderedComponent.getPublicInstance();
              var updatedCallback =
                callback &&
                function () {
                  callback.call(publicInst);
                };
              ReactMount._updateRootComponent(
                prevComponent,
                nextWrappedElement,
                nextContext,
                container,
                updatedCallback,
              );
              return publicInst;
            } else {
              ReactMount.unmountComponentAtNode(container);
            }
          }

          var reactRootElement = getReactRootElementInContainer(container);
          var containerHasReactMarkup =
            reactRootElement && !!internalGetID(reactRootElement);
          var containerHasNonRootReactChild = hasNonRootReactChild(container);

          if (true) {
            true
              ? warning(
                  !containerHasNonRootReactChild,
                  'render(...): Replacing React-rendered children with a new root ' +
                    'component. If you intended to update the children of this node, ' +
                    'you should instead have the existing children update their state ' +
                    'and render the new components instead of calling ReactDOM.render.',
                )
              : void 0;

            if (!containerHasReactMarkup || reactRootElement.nextSibling) {
              var rootElementSibling = reactRootElement;
              while (rootElementSibling) {
                if (internalGetID(rootElementSibling)) {
                  true
                    ? warning(
                        false,
                        'render(): Target node has markup rendered by React, but there ' +
                          'are unrelated nodes as well. This is most commonly caused by ' +
                          'white-space inserted around server-rendered markup.',
                      )
                    : void 0;
                  break;
                }
                rootElementSibling = rootElementSibling.nextSibling;
              }
            }
          }

          var shouldReuseMarkup =
            containerHasReactMarkup &&
            !prevComponent &&
            !containerHasNonRootReactChild;
          var component = ReactMount._renderNewRootComponent(
            nextWrappedElement,
            container,
            shouldReuseMarkup,
            nextContext,
          )._renderedComponent.getPublicInstance();
          if (callback) {
            callback.call(component);
          }
          return component;
        },

        /**
         * Renders a React component into the DOM in the supplied `container`.
         * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
         *
         * If the React component was previously rendered into `container`, this will
         * perform an update on it and only mutate the DOM as necessary to reflect the
         * latest React component.
         *
         * @param {ReactElement} nextElement Component element to render.
         * @param {DOMElement} container DOM element to render into.
         * @param {?function} callback function triggered on completion
         * @return {ReactComponent} Component instance rendered in `container`.
         */
        render: function (nextElement, container, callback) {
          return ReactMount._renderSubtreeIntoContainer(
            null,
            nextElement,
            container,
            callback,
          );
        },

        /**
         * Unmounts and destroys the React component rendered in the `container`.
         * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
         *
         * @param {DOMElement} container DOM element containing a React component.
         * @return {boolean} True if a component was found in and unmounted from
         *                   `container`
         */
        unmountComponentAtNode: function (container) {
          // Various parts of our code (such as ReactCompositeComponent's
          // _renderValidatedComponent) assume that calls to render aren't nested;
          // verify that that's the case. (Strictly speaking, unmounting won't cause a
          // render but we still don't expect to be in a render call here.)
          true
            ? warning(
                ReactCurrentOwner.current == null,
                'unmountComponentAtNode(): Render methods should be a pure function ' +
                  'of props and state; triggering nested component updates from render ' +
                  'is not allowed. If necessary, trigger nested updates in ' +
                  'componentDidUpdate. Check the render method of %s.',
                (ReactCurrentOwner.current &&
                  ReactCurrentOwner.current.getName()) ||
                  'ReactCompositeComponent',
              )
            : void 0;

          !isValidContainer(container)
            ? true
              ? invariant(
                  false,
                  'unmountComponentAtNode(...): Target container is not a DOM element.',
                )
              : _prodInvariant('40')
            : void 0;

          if (true) {
            true
              ? warning(
                  !nodeIsRenderedByOtherInstance(container),
                  "unmountComponentAtNode(): The node you're attempting to unmount " +
                    'was rendered by another copy of React.',
                )
              : void 0;
          }

          var prevComponent = getTopLevelWrapperInContainer(container);
          if (!prevComponent) {
            // Check if the node being unmounted was rendered by React, but isn't a
            // root node.
            var containerHasNonRootReactChild = hasNonRootReactChild(container);

            // Check if the container itself is a React root node.
            var isContainerReactRoot =
              container.nodeType === 1 &&
              container.hasAttribute(ROOT_ATTR_NAME);

            if (true) {
              true
                ? warning(
                    !containerHasNonRootReactChild,
                    "unmountComponentAtNode(): The node you're attempting to unmount " +
                      'was rendered by React and is not a top-level container. %s',
                    isContainerReactRoot
                      ? 'You may have accidentally passed in a React root node instead ' +
                          'of its container.'
                      : 'Instead, have the parent component update its state and ' +
                          'rerender in order to remove this component.',
                  )
                : void 0;
            }

            return false;
          }
          delete instancesByReactRootID[prevComponent._instance.rootID];
          ReactUpdates.batchedUpdates(
            unmountComponentFromNode,
            prevComponent,
            container,
            false,
          );
          return true;
        },

        _mountImageIntoNode: function (
          markup,
          container,
          instance,
          shouldReuseMarkup,
          transaction,
        ) {
          !isValidContainer(container)
            ? true
              ? invariant(
                  false,
                  'mountComponentIntoNode(...): Target container is not valid.',
                )
              : _prodInvariant('41')
            : void 0;

          if (shouldReuseMarkup) {
            var rootElement = getReactRootElementInContainer(container);
            if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
              ReactDOMComponentTree.precacheNode(instance, rootElement);
              return;
            } else {
              var checksum = rootElement.getAttribute(
                ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
              );
              rootElement.removeAttribute(
                ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
              );

              var rootMarkup = rootElement.outerHTML;
              rootElement.setAttribute(
                ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
                checksum,
              );

              var normalizedMarkup = markup;
              if (true) {
                // because rootMarkup is retrieved from the DOM, various normalizations
                // will have occurred which will not be present in `markup`. Here,
                // insert markup into a <div> or <iframe> depending on the container
                // type to perform the same normalizations before comparing.
                var normalizer;
                if (container.nodeType === ELEMENT_NODE_TYPE) {
                  normalizer = document.createElement('div');
                  normalizer.innerHTML = markup;
                  normalizedMarkup = normalizer.innerHTML;
                } else {
                  normalizer = document.createElement('iframe');
                  document.body.appendChild(normalizer);
                  normalizer.contentDocument.write(markup);
                  normalizedMarkup =
                    normalizer.contentDocument.documentElement.outerHTML;
                  document.body.removeChild(normalizer);
                }
              }

              var diffIndex = firstDifferenceIndex(
                normalizedMarkup,
                rootMarkup,
              );
              var difference =
                ' (client) ' +
                normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) +
                '\n (server) ' +
                rootMarkup.substring(diffIndex - 20, diffIndex + 20);

              !(container.nodeType !== DOC_NODE_TYPE)
                ? true
                  ? invariant(
                      false,
                      "You're trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s",
                      difference,
                    )
                  : _prodInvariant('42', difference)
                : void 0;

              if (true) {
                true
                  ? warning(
                      false,
                      'React attempted to reuse markup in a container but the ' +
                        'checksum was invalid. This generally means that you are ' +
                        'using server rendering and the markup generated on the ' +
                        'server was not what the client was expecting. React injected ' +
                        'new markup to compensate which works but you have lost many ' +
                        'of the benefits of server rendering. Instead, figure out ' +
                        'why the markup being generated is different on the client ' +
                        'or server:\n%s',
                      difference,
                    )
                  : void 0;
              }
            }
          }

          !(container.nodeType !== DOC_NODE_TYPE)
            ? true
              ? invariant(
                  false,
                  "You're trying to render a component to the document but you didn't use server rendering. We can't do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.",
                )
              : _prodInvariant('43')
            : void 0;

          if (transaction.useCreateElement) {
            while (container.lastChild) {
              container.removeChild(container.lastChild);
            }
            DOMLazyTree.insertTreeBefore(container, markup, null);
          } else {
            setInnerHTML(container, markup);
            ReactDOMComponentTree.precacheNode(instance, container.firstChild);
          }

          if (true) {
            var hostNode = ReactDOMComponentTree.getInstanceFromNode(
              container.firstChild,
            );
            if (hostNode._debugID !== 0) {
              ReactInstrumentation.debugTool.onHostOperation(
                hostNode._debugID,
                'mount',
                markup.toString(),
              );
            }
          }
        },
      };

      module.exports = ReactMount;

      /***/
    },
    /* 259 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMContainerInfo
       */

      'use strict';

      var validateDOMNesting = __webpack_require__(228);

      var DOC_NODE_TYPE = 9;

      function ReactDOMContainerInfo(topLevelWrapper, node) {
        var info = {
          _topLevelWrapper: topLevelWrapper,
          _idCounter: 1,
          _ownerDocument: node
            ? node.nodeType === DOC_NODE_TYPE
              ? node
              : node.ownerDocument
            : null,
          _node: node,
          _tag: node ? node.nodeName.toLowerCase() : null,
          _namespaceURI: node ? node.namespaceURI : null,
        };
        if (true) {
          info._ancestorInfo = node
            ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null)
            : null;
        }
        return info;
      }

      module.exports = ReactDOMContainerInfo;

      /***/
    },
    /* 260 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMFeatureFlags
       */

      'use strict';

      var ReactDOMFeatureFlags = {
        useCreateElement: true,
      };

      module.exports = ReactDOMFeatureFlags;

      /***/
    },
    /* 261 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactMarkupChecksum
       */

      'use strict';

      var adler32 = __webpack_require__(262);

      var TAG_END = /\/?>/;
      var COMMENT_START = /^<\!\-\-/;

      var ReactMarkupChecksum = {
        CHECKSUM_ATTR_NAME: 'data-react-checksum',

        /**
         * @param {string} markup Markup string
         * @return {string} Markup string with checksum attribute attached
         */
        addChecksumToMarkup: function (markup) {
          var checksum = adler32(markup);

          // Add checksum (handle both parent tags, comments and self-closing tags)
          if (COMMENT_START.test(markup)) {
            return markup;
          } else {
            return markup.replace(
              TAG_END,
              ' ' +
                ReactMarkupChecksum.CHECKSUM_ATTR_NAME +
                '="' +
                checksum +
                '"$&',
            );
          }
        },

        /**
         * @param {string} markup to use
         * @param {DOMElement} element root React element
         * @returns {boolean} whether or not the markup is the same
         */
        canReuseMarkup: function (markup, element) {
          var existingChecksum = element.getAttribute(
            ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
          );
          existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
          var markupChecksum = adler32(markup);
          return markupChecksum === existingChecksum;
        },
      };

      module.exports = ReactMarkupChecksum;

      /***/
    },
    /* 262 */
    /***/ function (module, exports) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule adler32
       *
       */

      'use strict';

      var MOD = 65521;

      // adler32 is not cryptographically strong, and is only used to sanity check that
      // markup generated on the server matches the markup generated on the client.
      // This implementation (a modified version of the SheetJS version) has been optimized
      // for our use case, at the expense of conforming to the adler32 specification
      // for non-ascii inputs.
      function adler32(data) {
        var a = 1;
        var b = 0;
        var i = 0;
        var l = data.length;
        var m = l & ~0x3;
        while (i < m) {
          var n = Math.min(i + 4096, m);
          for (; i < n; i += 4) {
            b +=
              (a += data.charCodeAt(i)) +
              (a += data.charCodeAt(i + 1)) +
              (a += data.charCodeAt(i + 2)) +
              (a += data.charCodeAt(i + 3));
          }
          a %= MOD;
          b %= MOD;
        }
        for (; i < l; i++) {
          b += a += data.charCodeAt(i);
        }
        a %= MOD;
        b %= MOD;
        return a | (b << 16);
      }

      module.exports = adler32;

      /***/
    },
    /* 263 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule findDOMNode
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var ReactCurrentOwner = __webpack_require__(11);
      var ReactDOMComponentTree = __webpack_require__(132);
      var ReactInstanceMap = __webpack_require__(215);

      var getHostComponentFromComposite = __webpack_require__(264);
      var invariant = __webpack_require__(9);
      var warning = __webpack_require__(12);

      /**
       * Returns the DOM node rendered by this element.
       *
       * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
       *
       * @param {ReactComponent|DOMElement} componentOrElement
       * @return {?DOMElement} The root node of this element.
       */
      function findDOMNode(componentOrElement) {
        if (true) {
          var owner = ReactCurrentOwner.current;
          if (owner !== null) {
            true
              ? warning(
                  owner._warnedAboutRefsInRender,
                  '%s is accessing findDOMNode inside its render(). ' +
                    'render() should be a pure function of props and state. It should ' +
                    'never access something that requires stale data from the previous ' +
                    'render, such as refs. Move this logic to componentDidMount and ' +
                    'componentDidUpdate instead.',
                  owner.getName() || 'A component',
                )
              : void 0;
            owner._warnedAboutRefsInRender = true;
          }
        }
        if (componentOrElement == null) {
          return null;
        }
        if (componentOrElement.nodeType === 1) {
          return componentOrElement;
        }

        var inst = ReactInstanceMap.get(componentOrElement);
        if (inst) {
          inst = getHostComponentFromComposite(inst);
          return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
        }

        if (typeof componentOrElement.render === 'function') {
          true
            ? true
              ? invariant(
                  false,
                  'findDOMNode was called on an unmounted component.',
                )
              : _prodInvariant('44')
            : void 0;
        } else {
          true
            ? true
              ? invariant(
                  false,
                  'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',
                  Object.keys(componentOrElement),
                )
              : _prodInvariant('45', Object.keys(componentOrElement))
            : void 0;
        }
      }

      module.exports = findDOMNode;

      /***/
    },
    /* 264 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule getHostComponentFromComposite
       */

      'use strict';

      var ReactNodeTypes = __webpack_require__(219);

      function getHostComponentFromComposite(inst) {
        var type;

        while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
          inst = inst._renderedComponent;
        }

        if (type === ReactNodeTypes.HOST) {
          return inst._renderedComponent;
        } else if (type === ReactNodeTypes.EMPTY) {
          return null;
        }
      }

      module.exports = getHostComponentFromComposite;

      /***/
    },
    /* 265 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule renderSubtreeIntoContainer
       */

      'use strict';

      var ReactMount = __webpack_require__(258);

      module.exports = ReactMount.renderSubtreeIntoContainer;

      /***/
    },
    /* 266 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMUnknownPropertyHook
       */

      'use strict';

      var DOMProperty = __webpack_require__(133);
      var EventPluginRegistry = __webpack_require__(140);
      var ReactComponentTreeHook = __webpack_require__(29);

      var warning = __webpack_require__(12);

      if (true) {
        var reactProps = {
          children: true,
          dangerouslySetInnerHTML: true,
          key: true,
          ref: true,

          autoFocus: true,
          defaultValue: true,
          valueLink: true,
          defaultChecked: true,
          checkedLink: true,
          innerHTML: true,
          suppressContentEditableWarning: true,
          onFocusIn: true,
          onFocusOut: true,
        };
        var warnedProperties = {};

        var validateProperty = function (tagName, name, debugID) {
          if (
            DOMProperty.properties.hasOwnProperty(name) ||
            DOMProperty.isCustomAttribute(name)
          ) {
            return true;
          }
          if (
            (reactProps.hasOwnProperty(name) && reactProps[name]) ||
            (warnedProperties.hasOwnProperty(name) && warnedProperties[name])
          ) {
            return true;
          }
          if (
            EventPluginRegistry.registrationNameModules.hasOwnProperty(name)
          ) {
            return true;
          }
          warnedProperties[name] = true;
          var lowerCasedName = name.toLowerCase();

          // data-* attributes should be lowercase; suggest the lowercase version
          var standardName = DOMProperty.isCustomAttribute(lowerCasedName)
            ? lowerCasedName
            : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName)
            ? DOMProperty.getPossibleStandardName[lowerCasedName]
            : null;

          var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(
            lowerCasedName,
          )
            ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName]
            : null;

          if (standardName != null) {
            true
              ? warning(
                  false,
                  'Unknown DOM property %s. Did you mean %s?%s',
                  name,
                  standardName,
                  ReactComponentTreeHook.getStackAddendumByID(debugID),
                )
              : void 0;
            return true;
          } else if (registrationName != null) {
            true
              ? warning(
                  false,
                  'Unknown event handler property %s. Did you mean `%s`?%s',
                  name,
                  registrationName,
                  ReactComponentTreeHook.getStackAddendumByID(debugID),
                )
              : void 0;
            return true;
          } else {
            // We were unable to guess which prop the user intended.
            // It is likely that the user was just blindly spreading/forwarding props
            // Components should be careful to only render valid props/attributes.
            // Warning will be invoked in warnUnknownProperties to allow grouping.
            return false;
          }
        };
      }

      var warnUnknownProperties = function (debugID, element) {
        var unknownProps = [];
        for (var key in element.props) {
          var isValid = validateProperty(element.type, key, debugID);
          if (!isValid) {
            unknownProps.push(key);
          }
        }

        var unknownPropString = unknownProps
          .map(function (prop) {
            return '`' + prop + '`';
          })
          .join(', ');

        if (unknownProps.length === 1) {
          true
            ? warning(
                false,
                'Unknown prop %s on <%s> tag. Remove this prop from the element. ' +
                  'For details, see https://fb.me/react-unknown-prop%s',
                unknownPropString,
                element.type,
                ReactComponentTreeHook.getStackAddendumByID(debugID),
              )
            : void 0;
        } else if (unknownProps.length > 1) {
          true
            ? warning(
                false,
                'Unknown props %s on <%s> tag. Remove these props from the element. ' +
                  'For details, see https://fb.me/react-unknown-prop%s',
                unknownPropString,
                element.type,
                ReactComponentTreeHook.getStackAddendumByID(debugID),
              )
            : void 0;
        }
      };

      function handleElement(debugID, element) {
        if (element == null || typeof element.type !== 'string') {
          return;
        }
        if (element.type.indexOf('-') >= 0 || element.props.is) {
          return;
        }
        warnUnknownProperties(debugID, element);
      }

      var ReactDOMUnknownPropertyHook = {
        onBeforeMountComponent: function (debugID, element) {
          handleElement(debugID, element);
        },
        onBeforeUpdateComponent: function (debugID, element) {
          handleElement(debugID, element);
        },
      };

      module.exports = ReactDOMUnknownPropertyHook;

      /***/
    },
    /* 267 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactDOMNullInputValuePropHook
       */

      'use strict';

      var ReactComponentTreeHook = __webpack_require__(29);

      var warning = __webpack_require__(12);

      var didWarnValueNull = false;

      function handleElement(debugID, element) {
        if (element == null) {
          return;
        }
        if (
          element.type !== 'input' &&
          element.type !== 'textarea' &&
          element.type !== 'select'
        ) {
          return;
        }
        if (
          element.props != null &&
          element.props.value === null &&
          !didWarnValueNull
        ) {
          true
            ? warning(
                false,
                '`value` prop on `%s` should not be null. ' +
                  'Consider using the empty string to clear the component or `undefined` ' +
                  'for uncontrolled components.%s',
                element.type,
                ReactComponentTreeHook.getStackAddendumByID(debugID),
              )
            : void 0;

          didWarnValueNull = true;
        }
      }

      var ReactDOMNullInputValuePropHook = {
        onBeforeMountComponent: function (debugID, element) {
          handleElement(debugID, element);
        },
        onBeforeUpdateComponent: function (debugID, element) {
          handleElement(debugID, element);
        },
      };

      module.exports = ReactDOMNullInputValuePropHook;

      /***/
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    /* 268 */ /* 269 */ /* 270 */ /* 271 */ /* 272 */ /* 273 */ /* 274 */ /* 275 */ /* 276 */ /* 277 */ /* 278 */ /* 279 */ /* 280 */ /* 281 */ /* 282 */ /* 283 */ /* 284 */ /* 285 */ /* 286 */ /* 287 */ /* 288 */ /* 289 */ /* 290 */ /* 291 */ /* 292 */ /* 293 */ /* 294 */ /* 295 */ /* 296 */ /* 297 */ /* 298 */ /* 299 */ /* 300 */ /* 301 */ /* 302 */ /* 303 */ /* 304 */ /* 305 */ /* 306 */ /* 307 */ /* 308 */ /* 309 */ /* 310 */ /* 311 */ /* 312 */ /* 313 */ /* 314 */ /* 315 */ /* 316 */ /* 317 */ /* 318 */ /* 319 */ /* 320 */ /* 321 */ /* 322 */ /* 323 */ /* 324 */ /* 325 */ /* 326 */ /* 327 */ /* 328 */ /* 329 */ /* 330 */ /* 331 */ /* 332 */ /* 333 */ /* 334 */ /* 335 */ /* 336 */ /* 337 */ /* 338 */ /* 339 */ /* 340 */ /* 341 */ /* 342 */
    /***/ function (module, exports) {
      /**
       * This method returns the first argument it receives.
       *
       * @static
       * @since 0.1.0
       * @memberOf _
       * @category Util
       * @param {*} value Any value.
       * @returns {*} Returns `value`.
       * @example
       *
       * var object = { 'a': 1 };
       *
       * console.log(_.identity(object) === object);
       * // => true
       */
      function identity(value) {
        return value;
      }

      module.exports = identity;

      /***/
    },
    ,
    /* 343 */ /* 344 */
    /***/ function (module, exports, __webpack_require__) {
      var baseGetTag = __webpack_require__(112),
        isObject = __webpack_require__(345);

      /** `Object#toString` result references. */
      var asyncTag = '[object AsyncFunction]',
        funcTag = '[object Function]',
        genTag = '[object GeneratorFunction]',
        proxyTag = '[object Proxy]';

      /**
       * Checks if `value` is classified as a `Function` object.
       *
       * @static
       * @memberOf _
       * @since 0.1.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is a function, else `false`.
       * @example
       *
       * _.isFunction(_);
       * // => true
       *
       * _.isFunction(/abc/);
       * // => false
       */
      function isFunction(value) {
        if (!isObject(value)) {
          return false;
        }
        // The use of `Object#toString` avoids issues with the `typeof` operator
        // in Safari 9 which returns 'object' for typed arrays and other constructors.
        var tag = baseGetTag(value);
        return (
          tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag
        );
      }

      module.exports = isFunction;

      /***/
    },
    /* 345 */
    /***/ function (module, exports) {
      /**
       * Checks if `value` is the
       * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
       * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
       *
       * @static
       * @memberOf _
       * @since 0.1.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is an object, else `false`.
       * @example
       *
       * _.isObject({});
       * // => true
       *
       * _.isObject([1, 2, 3]);
       * // => true
       *
       * _.isObject(_.noop);
       * // => true
       *
       * _.isObject(null);
       * // => false
       */
      function isObject(value) {
        var type = typeof value;
        return value != null && (type == 'object' || type == 'function');
      }

      module.exports = isObject;

      /***/
    },
    ,
    ,
    ,
    ,
    ,
    ,
    /* 346 */ /* 347 */ /* 348 */ /* 349 */ /* 350 */ /* 351 */ /* 352 */
    /***/ function (module, exports, __webpack_require__) {
      var isFunction = __webpack_require__(344),
        isLength = __webpack_require__(353);

      /**
       * Checks if `value` is array-like. A value is considered array-like if it's
       * not a function and has a `value.length` that's an integer greater than or
       * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
       * @example
       *
       * _.isArrayLike([1, 2, 3]);
       * // => true
       *
       * _.isArrayLike(document.body.children);
       * // => true
       *
       * _.isArrayLike('abc');
       * // => true
       *
       * _.isArrayLike(_.noop);
       * // => false
       */
      function isArrayLike(value) {
        return value != null && isLength(value.length) && !isFunction(value);
      }

      module.exports = isArrayLike;

      /***/
    },
    /* 353 */
    /***/ function (module, exports) {
      /** Used as references for various `Number` constants. */
      var MAX_SAFE_INTEGER = 9007199254740991;

      /**
       * Checks if `value` is a valid array-like length.
       *
       * **Note:** This method is loosely based on
       * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
       * @example
       *
       * _.isLength(3);
       * // => true
       *
       * _.isLength(Number.MIN_VALUE);
       * // => false
       *
       * _.isLength(Infinity);
       * // => false
       *
       * _.isLength('3');
       * // => false
       */
      function isLength(value) {
        return (
          typeof value == 'number' &&
          value > -1 &&
          value % 1 == 0 &&
          value <= MAX_SAFE_INTEGER
        );
      }

      module.exports = isLength;

      /***/
    },
    ,
    /* 354 */ /* 355 */
    /***/ function (module, exports) {
      /**
       * Checks if `value` is classified as an `Array` object.
       *
       * @static
       * @memberOf _
       * @since 0.1.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is an array, else `false`.
       * @example
       *
       * _.isArray([1, 2, 3]);
       * // => true
       *
       * _.isArray(document.body.children);
       * // => false
       *
       * _.isArray('abc');
       * // => false
       *
       * _.isArray(_.noop);
       * // => false
       */
      var isArray = Array.isArray;

      module.exports = isArray;

      /***/
    },
    ,
    ,
    /* 356 */ /* 357 */ /* 358 */
    /***/ function (module, exports, __webpack_require__) {
      var isObject = __webpack_require__(345),
        isSymbol = __webpack_require__(359);

      /** Used as references for various `Number` constants. */
      var NAN = 0 / 0;

      /** Used to match leading and trailing whitespace. */
      var reTrim = /^\s+|\s+$/g;

      /** Used to detect bad signed hexadecimal string values. */
      var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

      /** Used to detect binary string values. */
      var reIsBinary = /^0b[01]+$/i;

      /** Used to detect octal string values. */
      var reIsOctal = /^0o[0-7]+$/i;

      /** Built-in method references without a dependency on `root`. */
      var freeParseInt = parseInt;

      /**
       * Converts `value` to a number.
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to process.
       * @returns {number} Returns the number.
       * @example
       *
       * _.toNumber(3.2);
       * // => 3.2
       *
       * _.toNumber(Number.MIN_VALUE);
       * // => 5e-324
       *
       * _.toNumber(Infinity);
       * // => Infinity
       *
       * _.toNumber('3.2');
       * // => 3.2
       */
      function toNumber(value) {
        if (typeof value == 'number') {
          return value;
        }
        if (isSymbol(value)) {
          return NAN;
        }
        if (isObject(value)) {
          var other =
            typeof value.valueOf == 'function' ? value.valueOf() : value;
          value = isObject(other) ? other + '' : other;
        }
        if (typeof value != 'string') {
          return value === 0 ? value : +value;
        }
        value = value.replace(reTrim, '');
        var isBinary = reIsBinary.test(value);
        return isBinary || reIsOctal.test(value)
          ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
          : reIsBadHex.test(value)
          ? NAN
          : +value;
      }

      module.exports = toNumber;

      /***/
    },
    /* 359 */
    /***/ function (module, exports, __webpack_require__) {
      var baseGetTag = __webpack_require__(112),
        isObjectLike = __webpack_require__(120);

      /** `Object#toString` result references. */
      var symbolTag = '[object Symbol]';

      /**
       * Checks if `value` is classified as a `Symbol` primitive or object.
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
       * @example
       *
       * _.isSymbol(Symbol.iterator);
       * // => true
       *
       * _.isSymbol('abc');
       * // => false
       */
      function isSymbol(value) {
        return (
          typeof value == 'symbol' ||
          (isObjectLike(value) && baseGetTag(value) == symbolTag)
        );
      }

      module.exports = isSymbol;

      /***/
    },
    ,
    ,
    ,
    ,
    /* 360 */ /* 361 */ /* 362 */ /* 363 */ /* 364 */
    /***/ function (module, exports, __webpack_require__) {
      var baseTimes = __webpack_require__(365),
        isArguments = __webpack_require__(366),
        isArray = __webpack_require__(355),
        isBuffer = __webpack_require__(368),
        isIndex = __webpack_require__(370),
        isTypedArray = __webpack_require__(371);

      /** Used for built-in method references. */
      var objectProto = Object.prototype;

      /** Used to check objects for own properties. */
      var hasOwnProperty = objectProto.hasOwnProperty;

      /**
       * Creates an array of the enumerable property names of the array-like `value`.
       *
       * @private
       * @param {*} value The value to query.
       * @param {boolean} inherited Specify returning inherited property names.
       * @returns {Array} Returns the array of property names.
       */
      function arrayLikeKeys(value, inherited) {
        var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

        for (var key in value) {
          if (
            (inherited || hasOwnProperty.call(value, key)) &&
            !(
              skipIndexes &&
              // Safari 9 has enumerable `arguments.length` in strict mode.
              (key == 'length' ||
                // Node.js 0.10 has enumerable non-index properties on buffers.
                (isBuff && (key == 'offset' || key == 'parent')) ||
                // PhantomJS 2 has enumerable non-index properties on typed arrays.
                (isType &&
                  (key == 'buffer' ||
                    key == 'byteLength' ||
                    key == 'byteOffset')) ||
                // Skip index properties.
                isIndex(key, length))
            )
          ) {
            result.push(key);
          }
        }
        return result;
      }

      module.exports = arrayLikeKeys;

      /***/
    },
    /* 365 */
    /***/ function (module, exports) {
      /**
       * The base implementation of `_.times` without support for iteratee shorthands
       * or max array length checks.
       *
       * @private
       * @param {number} n The number of times to invoke `iteratee`.
       * @param {Function} iteratee The function invoked per iteration.
       * @returns {Array} Returns the array of results.
       */
      function baseTimes(n, iteratee) {
        var index = -1,
          result = Array(n);

        while (++index < n) {
          result[index] = iteratee(index);
        }
        return result;
      }

      module.exports = baseTimes;

      /***/
    },
    /* 366 */
    /***/ function (module, exports, __webpack_require__) {
      var baseIsArguments = __webpack_require__(367),
        isObjectLike = __webpack_require__(120);

      /** Used for built-in method references. */
      var objectProto = Object.prototype;

      /** Used to check objects for own properties. */
      var hasOwnProperty = objectProto.hasOwnProperty;

      /** Built-in value references. */
      var propertyIsEnumerable = objectProto.propertyIsEnumerable;

      /**
       * Checks if `value` is likely an `arguments` object.
       *
       * @static
       * @memberOf _
       * @since 0.1.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is an `arguments` object,
       *  else `false`.
       * @example
       *
       * _.isArguments(function() { return arguments; }());
       * // => true
       *
       * _.isArguments([1, 2, 3]);
       * // => false
       */
      var isArguments = baseIsArguments(
        (function () {
          return arguments;
        })(),
      )
        ? baseIsArguments
        : function (value) {
            return (
              isObjectLike(value) &&
              hasOwnProperty.call(value, 'callee') &&
              !propertyIsEnumerable.call(value, 'callee')
            );
          };

      module.exports = isArguments;

      /***/
    },
    /* 367 */
    /***/ function (module, exports, __webpack_require__) {
      var baseGetTag = __webpack_require__(112),
        isObjectLike = __webpack_require__(120);

      /** `Object#toString` result references. */
      var argsTag = '[object Arguments]';

      /**
       * The base implementation of `_.isArguments`.
       *
       * @private
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is an `arguments` object,
       */
      function baseIsArguments(value) {
        return isObjectLike(value) && baseGetTag(value) == argsTag;
      }

      module.exports = baseIsArguments;

      /***/
    },
    /* 368 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (module) {
        var root = __webpack_require__(114),
          stubFalse = __webpack_require__(369);

        /** Detect free variable `exports`. */
        var freeExports =
          typeof exports == 'object' && exports && !exports.nodeType && exports;

        /** Detect free variable `module`. */
        var freeModule =
          freeExports &&
          typeof module == 'object' &&
          module &&
          !module.nodeType &&
          module;

        /** Detect the popular CommonJS extension `module.exports`. */
        var moduleExports = freeModule && freeModule.exports === freeExports;

        /** Built-in value references. */
        var Buffer = moduleExports ? root.Buffer : undefined;

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

        /**
         * Checks if `value` is a buffer.
         *
         * @static
         * @memberOf _
         * @since 4.3.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
         * @example
         *
         * _.isBuffer(new Buffer(2));
         * // => true
         *
         * _.isBuffer(new Uint8Array(2));
         * // => false
         */
        var isBuffer = nativeIsBuffer || stubFalse;

        module.exports = isBuffer;

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(123)(module)));

      /***/
    },
    /* 369 */
    /***/ function (module, exports) {
      /**
       * This method returns `false`.
       *
       * @static
       * @memberOf _
       * @since 4.13.0
       * @category Util
       * @returns {boolean} Returns `false`.
       * @example
       *
       * _.times(2, _.stubFalse);
       * // => [false, false]
       */
      function stubFalse() {
        return false;
      }

      module.exports = stubFalse;

      /***/
    },
    /* 370 */
    /***/ function (module, exports) {
      /** Used as references for various `Number` constants. */
      var MAX_SAFE_INTEGER = 9007199254740991;

      /** Used to detect unsigned integer values. */
      var reIsUint = /^(?:0|[1-9]\d*)$/;

      /**
       * Checks if `value` is a valid array-like index.
       *
       * @private
       * @param {*} value The value to check.
       * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
       * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
       */
      function isIndex(value, length) {
        length = length == null ? MAX_SAFE_INTEGER : length;
        return (
          !!length &&
          (typeof value == 'number' || reIsUint.test(value)) &&
          value > -1 &&
          value % 1 == 0 &&
          value < length
        );
      }

      module.exports = isIndex;

      /***/
    },
    /* 371 */
    /***/ function (module, exports, __webpack_require__) {
      var baseIsTypedArray = __webpack_require__(372),
        baseUnary = __webpack_require__(373),
        nodeUtil = __webpack_require__(374);

      /* Node.js helper references. */
      var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

      /**
       * Checks if `value` is classified as a typed array.
       *
       * @static
       * @memberOf _
       * @since 3.0.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
       * @example
       *
       * _.isTypedArray(new Uint8Array);
       * // => true
       *
       * _.isTypedArray([]);
       * // => false
       */
      var isTypedArray = nodeIsTypedArray
        ? baseUnary(nodeIsTypedArray)
        : baseIsTypedArray;

      module.exports = isTypedArray;

      /***/
    },
    /* 372 */
    /***/ function (module, exports, __webpack_require__) {
      var baseGetTag = __webpack_require__(112),
        isLength = __webpack_require__(353),
        isObjectLike = __webpack_require__(120);

      /** `Object#toString` result references. */
      var argsTag = '[object Arguments]',
        arrayTag = '[object Array]',
        boolTag = '[object Boolean]',
        dateTag = '[object Date]',
        errorTag = '[object Error]',
        funcTag = '[object Function]',
        mapTag = '[object Map]',
        numberTag = '[object Number]',
        objectTag = '[object Object]',
        regexpTag = '[object RegExp]',
        setTag = '[object Set]',
        stringTag = '[object String]',
        weakMapTag = '[object WeakMap]';

      var arrayBufferTag = '[object ArrayBuffer]',
        dataViewTag = '[object DataView]',
        float32Tag = '[object Float32Array]',
        float64Tag = '[object Float64Array]',
        int8Tag = '[object Int8Array]',
        int16Tag = '[object Int16Array]',
        int32Tag = '[object Int32Array]',
        uint8Tag = '[object Uint8Array]',
        uint8ClampedTag = '[object Uint8ClampedArray]',
        uint16Tag = '[object Uint16Array]',
        uint32Tag = '[object Uint32Array]';

      /** Used to identify `toStringTag` values of typed arrays. */
      var typedArrayTags = {};
      typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[
        int8Tag
      ] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[
        uint8Tag
      ] = typedArrayTags[uint8ClampedTag] = typedArrayTags[
        uint16Tag
      ] = typedArrayTags[uint32Tag] = true;
      typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[
        arrayBufferTag
      ] = typedArrayTags[boolTag] = typedArrayTags[
        dataViewTag
      ] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[
        funcTag
      ] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[
        objectTag
      ] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[
        stringTag
      ] = typedArrayTags[weakMapTag] = false;

      /**
       * The base implementation of `_.isTypedArray` without Node.js optimizations.
       *
       * @private
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
       */
      function baseIsTypedArray(value) {
        return (
          isObjectLike(value) &&
          isLength(value.length) &&
          !!typedArrayTags[baseGetTag(value)]
        );
      }

      module.exports = baseIsTypedArray;

      /***/
    },
    /* 373 */
    /***/ function (module, exports) {
      /**
       * The base implementation of `_.unary` without support for storing metadata.
       *
       * @private
       * @param {Function} func The function to cap arguments for.
       * @returns {Function} Returns the new capped function.
       */
      function baseUnary(func) {
        return function (value) {
          return func(value);
        };
      }

      module.exports = baseUnary;

      /***/
    },
    /* 374 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (module) {
        var freeGlobal = __webpack_require__(115);

        /** Detect free variable `exports`. */
        var freeExports =
          typeof exports == 'object' && exports && !exports.nodeType && exports;

        /** Detect free variable `module`. */
        var freeModule =
          freeExports &&
          typeof module == 'object' &&
          module &&
          !module.nodeType &&
          module;

        /** Detect the popular CommonJS extension `module.exports`. */
        var moduleExports = freeModule && freeModule.exports === freeExports;

        /** Detect free variable `process` from Node.js. */
        var freeProcess = moduleExports && freeGlobal.process;

        /** Used to access faster Node.js helpers. */
        var nodeUtil = (function () {
          try {
            return freeProcess && freeProcess.binding('util');
          } catch (e) {}
        })();

        module.exports = nodeUtil;

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(123)(module)));

      /***/
    },
    ,
    /* 375 */ /* 376 */
    /***/ function (module, exports) {
      /** Used for built-in method references. */
      var objectProto = Object.prototype;

      /**
       * Checks if `value` is likely a prototype object.
       *
       * @private
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
       */
      function isPrototype(value) {
        var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

        return value === proto;
      }

      module.exports = isPrototype;

      /***/
    },
    ,
    ,
    ,
    ,
    ,
    /* 377 */ /* 378 */ /* 379 */ /* 380 */ /* 381 */ /* 382 */
    /***/ function (module, exports, __webpack_require__) {
      var baseIsNative = __webpack_require__(383),
        getValue = __webpack_require__(387);

      /**
       * Gets the native function at `key` of `object`.
       *
       * @private
       * @param {Object} object The object to query.
       * @param {string} key The key of the method to get.
       * @returns {*} Returns the function if it's native, else `undefined`.
       */
      function getNative(object, key) {
        var value = getValue(object, key);
        return baseIsNative(value) ? value : undefined;
      }

      module.exports = getNative;

      /***/
    },
    /* 383 */
    /***/ function (module, exports, __webpack_require__) {
      var isFunction = __webpack_require__(344),
        isMasked = __webpack_require__(384),
        isObject = __webpack_require__(345),
        toSource = __webpack_require__(386);

      /**
       * Used to match `RegExp`
       * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
       */
      var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

      /** Used to detect host constructors (Safari). */
      var reIsHostCtor = /^\[object .+?Constructor\]$/;

      /** Used for built-in method references. */
      var funcProto = Function.prototype,
        objectProto = Object.prototype;

      /** Used to resolve the decompiled source of functions. */
      var funcToString = funcProto.toString;

      /** Used to check objects for own properties. */
      var hasOwnProperty = objectProto.hasOwnProperty;

      /** Used to detect if a method is native. */
      var reIsNative = RegExp(
        '^' +
          funcToString
            .call(hasOwnProperty)
            .replace(reRegExpChar, '\\$&')
            .replace(
              /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
              '$1.*?',
            ) +
          '$',
      );

      /**
       * The base implementation of `_.isNative` without bad shim checks.
       *
       * @private
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is a native function,
       *  else `false`.
       */
      function baseIsNative(value) {
        if (!isObject(value) || isMasked(value)) {
          return false;
        }
        var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
        return pattern.test(toSource(value));
      }

      module.exports = baseIsNative;

      /***/
    },
    /* 384 */
    /***/ function (module, exports, __webpack_require__) {
      var coreJsData = __webpack_require__(385);

      /** Used to detect methods masquerading as native. */
      var maskSrcKey = (function () {
        var uid = /[^.]+$/.exec(
          (coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) || '',
        );
        return uid ? 'Symbol(src)_1.' + uid : '';
      })();

      /**
       * Checks if `func` has its source masked.
       *
       * @private
       * @param {Function} func The function to check.
       * @returns {boolean} Returns `true` if `func` is masked, else `false`.
       */
      function isMasked(func) {
        return !!maskSrcKey && maskSrcKey in func;
      }

      module.exports = isMasked;

      /***/
    },
    /* 385 */
    /***/ function (module, exports, __webpack_require__) {
      var root = __webpack_require__(114);

      /** Used to detect overreaching core-js shims. */
      var coreJsData = root['__core-js_shared__'];

      module.exports = coreJsData;

      /***/
    },
    /* 386 */
    /***/ function (module, exports) {
      /** Used for built-in method references. */
      var funcProto = Function.prototype;

      /** Used to resolve the decompiled source of functions. */
      var funcToString = funcProto.toString;

      /**
       * Converts `func` to its source code.
       *
       * @private
       * @param {Function} func The function to convert.
       * @returns {string} Returns the source code.
       */
      function toSource(func) {
        if (func != null) {
          try {
            return funcToString.call(func);
          } catch (e) {}
          try {
            return func + '';
          } catch (e) {}
        }
        return '';
      }

      module.exports = toSource;

      /***/
    },
    /* 387 */
    /***/ function (module, exports) {
      /**
       * Gets the value at `key` of `object`.
       *
       * @private
       * @param {Object} [object] The object to query.
       * @param {string} key The key of the property to get.
       * @returns {*} Returns the property value.
       */
      function getValue(object, key) {
        return object == null ? undefined : object[key];
      }

      module.exports = getValue;

      /***/
    },
    /* 388 */
    /***/ function (module, exports, __webpack_require__) {
      var getNative = __webpack_require__(382),
        root = __webpack_require__(114);

      /* Built-in method references that are verified to be native. */
      var Map = getNative(root, 'Map');

      module.exports = Map;

      /***/
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    /* 389 */ /* 390 */ /* 391 */ /* 392 */ /* 393 */ /* 394 */ /* 395 */ /* 396 */ /* 397 */ /* 398 */ /* 399 */ /* 400 */ /* 401 */ /* 402 */ /* 403 */ /* 404 */ /* 405 */ /* 406 */ /* 407 */ /* 408 */ /* 409 */ /* 410 */ /* 411 */ /* 412 */ /* 413 */ /* 414 */ /* 415 */ /* 416 */ /* 417 */ /* 418 */ /* 419 */ /* 420 */
    /***/ function (module, exports, __webpack_require__) {
      var createBaseFor = __webpack_require__(421);

      /**
       * The base implementation of `baseForOwn` which iterates over `object`
       * properties returned by `keysFunc` and invokes `iteratee` for each property.
       * Iteratee functions may exit iteration early by explicitly returning `false`.
       *
       * @private
       * @param {Object} object The object to iterate over.
       * @param {Function} iteratee The function invoked per iteration.
       * @param {Function} keysFunc The function to get the keys of `object`.
       * @returns {Object} Returns `object`.
       */
      var baseFor = createBaseFor();

      module.exports = baseFor;

      /***/
    },
    /* 421 */
    /***/ function (module, exports) {
      /**
       * Creates a base function for methods like `_.forIn` and `_.forOwn`.
       *
       * @private
       * @param {boolean} [fromRight] Specify iterating from right to left.
       * @returns {Function} Returns the new base function.
       */
      function createBaseFor(fromRight) {
        return function (object, iteratee, keysFunc) {
          var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

          while (length--) {
            var key = props[fromRight ? length : ++index];
            if (iteratee(iterable[key], key, iterable) === false) {
              break;
            }
          }
          return object;
        };
      }

      module.exports = createBaseFor;

      /***/
    },
    ,
    ,
    ,
    ,
    /* 422 */ /* 423 */ /* 424 */ /* 425 */ /* 426 */
    /***/ function (module, exports, __webpack_require__) {
      var ListCache = __webpack_require__(427),
        stackClear = __webpack_require__(435),
        stackDelete = __webpack_require__(436),
        stackGet = __webpack_require__(437),
        stackHas = __webpack_require__(438),
        stackSet = __webpack_require__(439);

      /**
       * Creates a stack cache object to store key-value pairs.
       *
       * @private
       * @constructor
       * @param {Array} [entries] The key-value pairs to cache.
       */
      function Stack(entries) {
        var data = (this.__data__ = new ListCache(entries));
        this.size = data.size;
      }

      // Add methods to `Stack`.
      Stack.prototype.clear = stackClear;
      Stack.prototype['delete'] = stackDelete;
      Stack.prototype.get = stackGet;
      Stack.prototype.has = stackHas;
      Stack.prototype.set = stackSet;

      module.exports = Stack;

      /***/
    },
    /* 427 */
    /***/ function (module, exports, __webpack_require__) {
      var listCacheClear = __webpack_require__(428),
        listCacheDelete = __webpack_require__(429),
        listCacheGet = __webpack_require__(432),
        listCacheHas = __webpack_require__(433),
        listCacheSet = __webpack_require__(434);

      /**
       * Creates an list cache object.
       *
       * @private
       * @constructor
       * @param {Array} [entries] The key-value pairs to cache.
       */
      function ListCache(entries) {
        var index = -1,
          length = entries == null ? 0 : entries.length;

        this.clear();
        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }

      // Add methods to `ListCache`.
      ListCache.prototype.clear = listCacheClear;
      ListCache.prototype['delete'] = listCacheDelete;
      ListCache.prototype.get = listCacheGet;
      ListCache.prototype.has = listCacheHas;
      ListCache.prototype.set = listCacheSet;

      module.exports = ListCache;

      /***/
    },
    /* 428 */
    /***/ function (module, exports) {
      /**
       * Removes all key-value entries from the list cache.
       *
       * @private
       * @name clear
       * @memberOf ListCache
       */
      function listCacheClear() {
        this.__data__ = [];
        this.size = 0;
      }

      module.exports = listCacheClear;

      /***/
    },
    /* 429 */
    /***/ function (module, exports, __webpack_require__) {
      var assocIndexOf = __webpack_require__(430);

      /** Used for built-in method references. */
      var arrayProto = Array.prototype;

      /** Built-in value references. */
      var splice = arrayProto.splice;

      /**
       * Removes `key` and its value from the list cache.
       *
       * @private
       * @name delete
       * @memberOf ListCache
       * @param {string} key The key of the value to remove.
       * @returns {boolean} Returns `true` if the entry was removed, else `false`.
       */
      function listCacheDelete(key) {
        var data = this.__data__,
          index = assocIndexOf(data, key);

        if (index < 0) {
          return false;
        }
        var lastIndex = data.length - 1;
        if (index == lastIndex) {
          data.pop();
        } else {
          splice.call(data, index, 1);
        }
        --this.size;
        return true;
      }

      module.exports = listCacheDelete;

      /***/
    },
    /* 430 */
    /***/ function (module, exports, __webpack_require__) {
      var eq = __webpack_require__(431);

      /**
       * Gets the index at which the `key` is found in `array` of key-value pairs.
       *
       * @private
       * @param {Array} array The array to inspect.
       * @param {*} key The key to search for.
       * @returns {number} Returns the index of the matched value, else `-1`.
       */
      function assocIndexOf(array, key) {
        var length = array.length;
        while (length--) {
          if (eq(array[length][0], key)) {
            return length;
          }
        }
        return -1;
      }

      module.exports = assocIndexOf;

      /***/
    },
    /* 431 */
    /***/ function (module, exports) {
      /**
       * Performs a
       * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
       * comparison between two values to determine if they are equivalent.
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to compare.
       * @param {*} other The other value to compare.
       * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
       * @example
       *
       * var object = { 'a': 1 };
       * var other = { 'a': 1 };
       *
       * _.eq(object, object);
       * // => true
       *
       * _.eq(object, other);
       * // => false
       *
       * _.eq('a', 'a');
       * // => true
       *
       * _.eq('a', Object('a'));
       * // => false
       *
       * _.eq(NaN, NaN);
       * // => true
       */
      function eq(value, other) {
        return value === other || (value !== value && other !== other);
      }

      module.exports = eq;

      /***/
    },
    /* 432 */
    /***/ function (module, exports, __webpack_require__) {
      var assocIndexOf = __webpack_require__(430);

      /**
       * Gets the list cache value for `key`.
       *
       * @private
       * @name get
       * @memberOf ListCache
       * @param {string} key The key of the value to get.
       * @returns {*} Returns the entry value.
       */
      function listCacheGet(key) {
        var data = this.__data__,
          index = assocIndexOf(data, key);

        return index < 0 ? undefined : data[index][1];
      }

      module.exports = listCacheGet;

      /***/
    },
    /* 433 */
    /***/ function (module, exports, __webpack_require__) {
      var assocIndexOf = __webpack_require__(430);

      /**
       * Checks if a list cache value for `key` exists.
       *
       * @private
       * @name has
       * @memberOf ListCache
       * @param {string} key The key of the entry to check.
       * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
       */
      function listCacheHas(key) {
        return assocIndexOf(this.__data__, key) > -1;
      }

      module.exports = listCacheHas;

      /***/
    },
    /* 434 */
    /***/ function (module, exports, __webpack_require__) {
      var assocIndexOf = __webpack_require__(430);

      /**
       * Sets the list cache `key` to `value`.
       *
       * @private
       * @name set
       * @memberOf ListCache
       * @param {string} key The key of the value to set.
       * @param {*} value The value to set.
       * @returns {Object} Returns the list cache instance.
       */
      function listCacheSet(key, value) {
        var data = this.__data__,
          index = assocIndexOf(data, key);

        if (index < 0) {
          ++this.size;
          data.push([key, value]);
        } else {
          data[index][1] = value;
        }
        return this;
      }

      module.exports = listCacheSet;

      /***/
    },
    /* 435 */
    /***/ function (module, exports, __webpack_require__) {
      var ListCache = __webpack_require__(427);

      /**
       * Removes all key-value entries from the stack.
       *
       * @private
       * @name clear
       * @memberOf Stack
       */
      function stackClear() {
        this.__data__ = new ListCache();
        this.size = 0;
      }

      module.exports = stackClear;

      /***/
    },
    /* 436 */
    /***/ function (module, exports) {
      /**
       * Removes `key` and its value from the stack.
       *
       * @private
       * @name delete
       * @memberOf Stack
       * @param {string} key The key of the value to remove.
       * @returns {boolean} Returns `true` if the entry was removed, else `false`.
       */
      function stackDelete(key) {
        var data = this.__data__,
          result = data['delete'](key);

        this.size = data.size;
        return result;
      }

      module.exports = stackDelete;

      /***/
    },
    /* 437 */
    /***/ function (module, exports) {
      /**
       * Gets the stack value for `key`.
       *
       * @private
       * @name get
       * @memberOf Stack
       * @param {string} key The key of the value to get.
       * @returns {*} Returns the entry value.
       */
      function stackGet(key) {
        return this.__data__.get(key);
      }

      module.exports = stackGet;

      /***/
    },
    /* 438 */
    /***/ function (module, exports) {
      /**
       * Checks if a stack value for `key` exists.
       *
       * @private
       * @name has
       * @memberOf Stack
       * @param {string} key The key of the entry to check.
       * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
       */
      function stackHas(key) {
        return this.__data__.has(key);
      }

      module.exports = stackHas;

      /***/
    },
    /* 439 */
    /***/ function (module, exports, __webpack_require__) {
      var ListCache = __webpack_require__(427),
        Map = __webpack_require__(388),
        MapCache = __webpack_require__(440);

      /** Used as the size to enable large array optimizations. */
      var LARGE_ARRAY_SIZE = 200;

      /**
       * Sets the stack `key` to `value`.
       *
       * @private
       * @name set
       * @memberOf Stack
       * @param {string} key The key of the value to set.
       * @param {*} value The value to set.
       * @returns {Object} Returns the stack cache instance.
       */
      function stackSet(key, value) {
        var data = this.__data__;
        if (data instanceof ListCache) {
          var pairs = data.__data__;
          if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
            pairs.push([key, value]);
            this.size = ++data.size;
            return this;
          }
          data = this.__data__ = new MapCache(pairs);
        }
        data.set(key, value);
        this.size = data.size;
        return this;
      }

      module.exports = stackSet;

      /***/
    },
    /* 440 */
    /***/ function (module, exports, __webpack_require__) {
      var mapCacheClear = __webpack_require__(441),
        mapCacheDelete = __webpack_require__(449),
        mapCacheGet = __webpack_require__(452),
        mapCacheHas = __webpack_require__(453),
        mapCacheSet = __webpack_require__(454);

      /**
       * Creates a map cache object to store key-value pairs.
       *
       * @private
       * @constructor
       * @param {Array} [entries] The key-value pairs to cache.
       */
      function MapCache(entries) {
        var index = -1,
          length = entries == null ? 0 : entries.length;

        this.clear();
        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }

      // Add methods to `MapCache`.
      MapCache.prototype.clear = mapCacheClear;
      MapCache.prototype['delete'] = mapCacheDelete;
      MapCache.prototype.get = mapCacheGet;
      MapCache.prototype.has = mapCacheHas;
      MapCache.prototype.set = mapCacheSet;

      module.exports = MapCache;

      /***/
    },
    /* 441 */
    /***/ function (module, exports, __webpack_require__) {
      var Hash = __webpack_require__(442),
        ListCache = __webpack_require__(427),
        Map = __webpack_require__(388);

      /**
       * Removes all key-value entries from the map.
       *
       * @private
       * @name clear
       * @memberOf MapCache
       */
      function mapCacheClear() {
        this.size = 0;
        this.__data__ = {
          hash: new Hash(),
          map: new (Map || ListCache)(),
          string: new Hash(),
        };
      }

      module.exports = mapCacheClear;

      /***/
    },
    /* 442 */
    /***/ function (module, exports, __webpack_require__) {
      var hashClear = __webpack_require__(443),
        hashDelete = __webpack_require__(445),
        hashGet = __webpack_require__(446),
        hashHas = __webpack_require__(447),
        hashSet = __webpack_require__(448);

      /**
       * Creates a hash object.
       *
       * @private
       * @constructor
       * @param {Array} [entries] The key-value pairs to cache.
       */
      function Hash(entries) {
        var index = -1,
          length = entries == null ? 0 : entries.length;

        this.clear();
        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }

      // Add methods to `Hash`.
      Hash.prototype.clear = hashClear;
      Hash.prototype['delete'] = hashDelete;
      Hash.prototype.get = hashGet;
      Hash.prototype.has = hashHas;
      Hash.prototype.set = hashSet;

      module.exports = Hash;

      /***/
    },
    /* 443 */
    /***/ function (module, exports, __webpack_require__) {
      var nativeCreate = __webpack_require__(444);

      /**
       * Removes all key-value entries from the hash.
       *
       * @private
       * @name clear
       * @memberOf Hash
       */
      function hashClear() {
        this.__data__ = nativeCreate ? nativeCreate(null) : {};
        this.size = 0;
      }

      module.exports = hashClear;

      /***/
    },
    /* 444 */
    /***/ function (module, exports, __webpack_require__) {
      var getNative = __webpack_require__(382);

      /* Built-in method references that are verified to be native. */
      var nativeCreate = getNative(Object, 'create');

      module.exports = nativeCreate;

      /***/
    },
    /* 445 */
    /***/ function (module, exports) {
      /**
       * Removes `key` and its value from the hash.
       *
       * @private
       * @name delete
       * @memberOf Hash
       * @param {Object} hash The hash to modify.
       * @param {string} key The key of the value to remove.
       * @returns {boolean} Returns `true` if the entry was removed, else `false`.
       */
      function hashDelete(key) {
        var result = this.has(key) && delete this.__data__[key];
        this.size -= result ? 1 : 0;
        return result;
      }

      module.exports = hashDelete;

      /***/
    },
    /* 446 */
    /***/ function (module, exports, __webpack_require__) {
      var nativeCreate = __webpack_require__(444);

      /** Used to stand-in for `undefined` hash values. */
      var HASH_UNDEFINED = '__lodash_hash_undefined__';

      /** Used for built-in method references. */
      var objectProto = Object.prototype;

      /** Used to check objects for own properties. */
      var hasOwnProperty = objectProto.hasOwnProperty;

      /**
       * Gets the hash value for `key`.
       *
       * @private
       * @name get
       * @memberOf Hash
       * @param {string} key The key of the value to get.
       * @returns {*} Returns the entry value.
       */
      function hashGet(key) {
        var data = this.__data__;
        if (nativeCreate) {
          var result = data[key];
          return result === HASH_UNDEFINED ? undefined : result;
        }
        return hasOwnProperty.call(data, key) ? data[key] : undefined;
      }

      module.exports = hashGet;

      /***/
    },
    /* 447 */
    /***/ function (module, exports, __webpack_require__) {
      var nativeCreate = __webpack_require__(444);

      /** Used for built-in method references. */
      var objectProto = Object.prototype;

      /** Used to check objects for own properties. */
      var hasOwnProperty = objectProto.hasOwnProperty;

      /**
       * Checks if a hash value for `key` exists.
       *
       * @private
       * @name has
       * @memberOf Hash
       * @param {string} key The key of the entry to check.
       * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
       */
      function hashHas(key) {
        var data = this.__data__;
        return nativeCreate
          ? data[key] !== undefined
          : hasOwnProperty.call(data, key);
      }

      module.exports = hashHas;

      /***/
    },
    /* 448 */
    /***/ function (module, exports, __webpack_require__) {
      var nativeCreate = __webpack_require__(444);

      /** Used to stand-in for `undefined` hash values. */
      var HASH_UNDEFINED = '__lodash_hash_undefined__';

      /**
       * Sets the hash `key` to `value`.
       *
       * @private
       * @name set
       * @memberOf Hash
       * @param {string} key The key of the value to set.
       * @param {*} value The value to set.
       * @returns {Object} Returns the hash instance.
       */
      function hashSet(key, value) {
        var data = this.__data__;
        this.size += this.has(key) ? 0 : 1;
        data[key] =
          nativeCreate && value === undefined ? HASH_UNDEFINED : value;
        return this;
      }

      module.exports = hashSet;

      /***/
    },
    /* 449 */
    /***/ function (module, exports, __webpack_require__) {
      var getMapData = __webpack_require__(450);

      /**
       * Removes `key` and its value from the map.
       *
       * @private
       * @name delete
       * @memberOf MapCache
       * @param {string} key The key of the value to remove.
       * @returns {boolean} Returns `true` if the entry was removed, else `false`.
       */
      function mapCacheDelete(key) {
        var result = getMapData(this, key)['delete'](key);
        this.size -= result ? 1 : 0;
        return result;
      }

      module.exports = mapCacheDelete;

      /***/
    },
    /* 450 */
    /***/ function (module, exports, __webpack_require__) {
      var isKeyable = __webpack_require__(451);

      /**
       * Gets the data for `map`.
       *
       * @private
       * @param {Object} map The map to query.
       * @param {string} key The reference key.
       * @returns {*} Returns the map data.
       */
      function getMapData(map, key) {
        var data = map.__data__;
        return isKeyable(key)
          ? data[typeof key == 'string' ? 'string' : 'hash']
          : data.map;
      }

      module.exports = getMapData;

      /***/
    },
    /* 451 */
    /***/ function (module, exports) {
      /**
       * Checks if `value` is suitable for use as unique object key.
       *
       * @private
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
       */
      function isKeyable(value) {
        var type = typeof value;
        return type == 'string' ||
          type == 'number' ||
          type == 'symbol' ||
          type == 'boolean'
          ? value !== '__proto__'
          : value === null;
      }

      module.exports = isKeyable;

      /***/
    },
    /* 452 */
    /***/ function (module, exports, __webpack_require__) {
      var getMapData = __webpack_require__(450);

      /**
       * Gets the map value for `key`.
       *
       * @private
       * @name get
       * @memberOf MapCache
       * @param {string} key The key of the value to get.
       * @returns {*} Returns the entry value.
       */
      function mapCacheGet(key) {
        return getMapData(this, key).get(key);
      }

      module.exports = mapCacheGet;

      /***/
    },
    /* 453 */
    /***/ function (module, exports, __webpack_require__) {
      var getMapData = __webpack_require__(450);

      /**
       * Checks if a map value for `key` exists.
       *
       * @private
       * @name has
       * @memberOf MapCache
       * @param {string} key The key of the entry to check.
       * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
       */
      function mapCacheHas(key) {
        return getMapData(this, key).has(key);
      }

      module.exports = mapCacheHas;

      /***/
    },
    /* 454 */
    /***/ function (module, exports, __webpack_require__) {
      var getMapData = __webpack_require__(450);

      /**
       * Sets the map `key` to `value`.
       *
       * @private
       * @name set
       * @memberOf MapCache
       * @param {string} key The key of the value to set.
       * @param {*} value The value to set.
       * @returns {Object} Returns the map cache instance.
       */
      function mapCacheSet(key, value) {
        var data = getMapData(this, key),
          size = data.size;

        data.set(key, value);
        this.size += data.size == size ? 0 : 1;
        return this;
      }

      module.exports = mapCacheSet;

      /***/
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    /* 455 */ /* 456 */ /* 457 */ /* 458 */ /* 459 */ /* 460 */ /* 461 */ /* 462 */ /* 463 */ /* 464 */
    /***/ function (module, exports, __webpack_require__) {
      var root = __webpack_require__(114);

      /** Built-in value references. */
      var Uint8Array = root.Uint8Array;

      module.exports = Uint8Array;

      /***/
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    /* 465 */ /* 466 */ /* 467 */ /* 468 */ /* 469 */ /* 470 */ /* 471 */ /* 472 */ /* 473 */ /* 474 */ /* 475 */ /* 476 */ /* 477 */ /* 478 */ /* 479 */ /* 480 */ /* 481 */ /* 482 */ /* 483 */ /* 484 */ /* 485 */ /* 486 */ /* 487 */ /* 488 */ /* 489 */ /* 490 */ /* 491 */ /* 492 */ /* 493 */ /* 494 */ /* 495 */ /* 496 */ /* 497 */ /* 498 */ /* 499 */ /* 500 */ /* 501 */ /* 502 */ /* 503 */ /* 504 */ /* 505 */ /* 506 */ /* 507 */ /* 508 */ /* 509 */ /* 510 */ /* 511 */ /* 512 */ /* 513 */ /* 514 */ /* 515 */ /* 516 */ /* 517 */ /* 518 */ /* 519 */ /* 520 */ /* 521 */ /* 522 */ /* 523 */ /* 524 */ /* 525 */ /* 526 */ /* 527 */ /* 528 */ /* 529 */
    /***/ function (module, exports, __webpack_require__) {
      var __WEBPACK_AMD_DEFINE_ARRAY__,
        __WEBPACK_AMD_DEFINE_RESULT__; /*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
      /* global define */

      (function () {
        'use strict';

        var hasOwn = {}.hasOwnProperty;

        function classNames() {
          var classes = [];

          for (var i = 0; i < arguments.length; i++) {
            var arg = arguments[i];
            if (!arg) continue;

            var argType = typeof arg;

            if (argType === 'string' || argType === 'number') {
              classes.push(arg);
            } else if (Array.isArray(arg)) {
              classes.push(classNames.apply(null, arg));
            } else if (argType === 'object') {
              for (var key in arg) {
                if (hasOwn.call(arg, key) && arg[key]) {
                  classes.push(key);
                }
              }
            }
          }

          return classes.join(' ');
        }

        if (typeof module !== 'undefined' && module.exports) {
          module.exports = classNames;
        } else if (true) {
          // register as 'classnames', consistent with npm package name
          !((__WEBPACK_AMD_DEFINE_ARRAY__ = []),
          (__WEBPACK_AMD_DEFINE_RESULT__ = function () {
            return classNames;
          }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
          __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
            (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
        } else {
          window.classNames = classNames;
        }
      })();

      /***/
    },
    /* 530 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Root reference for iframes.
       */

      var root;
      if (typeof window !== 'undefined') {
        // Browser window
        root = window;
      } else if (typeof self !== 'undefined') {
        // Web Worker
        root = self;
      } else {
        // Other environments
        console.warn(
          'Using browser-only version of superagent in non-browser environment',
        );
        root = this;
      }

      var Emitter = __webpack_require__(531);
      var requestBase = __webpack_require__(532);
      var isObject = __webpack_require__(533);

      /**
       * Noop.
       */

      function noop() {}

      /**
       * Expose `request`.
       */

      var request = (module.exports = __webpack_require__(534).bind(
        null,
        Request,
      ));

      /**
       * Determine XHR.
       */

      request.getXHR = function () {
        if (
          root.XMLHttpRequest &&
          (!root.location ||
            'file:' != root.location.protocol ||
            !root.ActiveXObject)
        ) {
          return new XMLHttpRequest();
        } else {
          try {
            return new ActiveXObject('Microsoft.XMLHTTP');
          } catch (e) {}
          try {
            return new ActiveXObject('Msxml2.XMLHTTP.6.0');
          } catch (e) {}
          try {
            return new ActiveXObject('Msxml2.XMLHTTP.3.0');
          } catch (e) {}
          try {
            return new ActiveXObject('Msxml2.XMLHTTP');
          } catch (e) {}
        }
        throw Error('Browser-only verison of superagent could not find XHR');
      };

      /**
       * Removes leading and trailing whitespace, added to support IE.
       *
       * @param {String} s
       * @return {String}
       * @api private
       */

      var trim = ''.trim
        ? function (s) {
            return s.trim();
          }
        : function (s) {
            return s.replace(/(^\s*|\s*$)/g, '');
          };

      /**
       * Serialize the given `obj`.
       *
       * @param {Object} obj
       * @return {String}
       * @api private
       */

      function serialize(obj) {
        if (!isObject(obj)) return obj;
        var pairs = [];
        for (var key in obj) {
          pushEncodedKeyValuePair(pairs, key, obj[key]);
        }
        return pairs.join('&');
      }

      /**
       * Helps 'serialize' with serializing arrays.
       * Mutates the pairs array.
       *
       * @param {Array} pairs
       * @param {String} key
       * @param {Mixed} val
       */

      function pushEncodedKeyValuePair(pairs, key, val) {
        if (val != null) {
          if (Array.isArray(val)) {
            val.forEach(function (v) {
              pushEncodedKeyValuePair(pairs, key, v);
            });
          } else if (isObject(val)) {
            for (var subkey in val) {
              pushEncodedKeyValuePair(
                pairs,
                key + '[' + subkey + ']',
                val[subkey],
              );
            }
          } else {
            pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(val));
          }
        } else if (val === null) {
          pairs.push(encodeURIComponent(key));
        }
      }

      /**
       * Expose serialization method.
       */

      request.serializeObject = serialize;

      /**
       * Parse the given x-www-form-urlencoded `str`.
       *
       * @param {String} str
       * @return {Object}
       * @api private
       */

      function parseString(str) {
        var obj = {};
        var pairs = str.split('&');
        var pair;
        var pos;

        for (var i = 0, len = pairs.length; i < len; ++i) {
          pair = pairs[i];
          pos = pair.indexOf('=');
          if (pos == -1) {
            obj[decodeURIComponent(pair)] = '';
          } else {
            obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(
              pair.slice(pos + 1),
            );
          }
        }

        return obj;
      }

      /**
       * Expose parser.
       */

      request.parseString = parseString;

      /**
       * Default MIME type map.
       *
       *     superagent.types.xml = 'application/xml';
       *
       */

      request.types = {
        html: 'text/html',
        json: 'application/json',
        xml: 'application/xml',
        urlencoded: 'application/x-www-form-urlencoded',
        form: 'application/x-www-form-urlencoded',
        'form-data': 'application/x-www-form-urlencoded',
      };

      /**
       * Default serialization map.
       *
       *     superagent.serialize['application/xml'] = function(obj){
       *       return 'generated xml here';
       *     };
       *
       */

      request.serialize = {
        'application/x-www-form-urlencoded': serialize,
        'application/json': JSON.stringify,
      };

      /**
       * Default parsers.
       *
       *     superagent.parse['application/xml'] = function(str){
       *       return { object parsed from str };
       *     };
       *
       */

      request.parse = {
        'application/x-www-form-urlencoded': parseString,
        'application/json': JSON.parse,
      };

      /**
       * Parse the given header `str` into
       * an object containing the mapped fields.
       *
       * @param {String} str
       * @return {Object}
       * @api private
       */

      function parseHeader(str) {
        var lines = str.split(/\r?\n/);
        var fields = {};
        var index;
        var line;
        var field;
        var val;

        lines.pop(); // trailing CRLF

        for (var i = 0, len = lines.length; i < len; ++i) {
          line = lines[i];
          index = line.indexOf(':');
          field = line.slice(0, index).toLowerCase();
          val = trim(line.slice(index + 1));
          fields[field] = val;
        }

        return fields;
      }

      /**
       * Check if `mime` is json or has +json structured syntax suffix.
       *
       * @param {String} mime
       * @return {Boolean}
       * @api private
       */

      function isJSON(mime) {
        return /[\/+]json\b/.test(mime);
      }

      /**
       * Return the mime type for the given `str`.
       *
       * @param {String} str
       * @return {String}
       * @api private
       */

      function type(str) {
        return str.split(/ *; */).shift();
      }

      /**
       * Return header field parameters.
       *
       * @param {String} str
       * @return {Object}
       * @api private
       */

      function params(str) {
        return str.split(/ *; */).reduce(function (obj, str) {
          var parts = str.split(/ *= */),
            key = parts.shift(),
            val = parts.shift();

          if (key && val) obj[key] = val;
          return obj;
        }, {});
      }

      /**
       * Initialize a new `Response` with the given `xhr`.
       *
       *  - set flags (.ok, .error, etc)
       *  - parse header
       *
       * Examples:
       *
       *  Aliasing `superagent` as `request` is nice:
       *
       *      request = superagent;
       *
       *  We can use the promise-like API, or pass callbacks:
       *
       *      request.get('/').end(function(res){});
       *      request.get('/', function(res){});
       *
       *  Sending data can be chained:
       *
       *      request
       *        .post('/user')
       *        .send({ name: 'tj' })
       *        .end(function(res){});
       *
       *  Or passed to `.send()`:
       *
       *      request
       *        .post('/user')
       *        .send({ name: 'tj' }, function(res){});
       *
       *  Or passed to `.post()`:
       *
       *      request
       *        .post('/user', { name: 'tj' })
       *        .end(function(res){});
       *
       * Or further reduced to a single call for simple cases:
       *
       *      request
       *        .post('/user', { name: 'tj' }, function(res){});
       *
       * @param {XMLHTTPRequest} xhr
       * @param {Object} options
       * @api private
       */

      function Response(req, options) {
        options = options || {};
        this.req = req;
        this.xhr = this.req.xhr;
        // responseText is accessible only if responseType is '' or 'text' and on older browsers
        this.text =
          (this.req.method != 'HEAD' &&
            (this.xhr.responseType === '' ||
              this.xhr.responseType === 'text')) ||
          typeof this.xhr.responseType === 'undefined'
            ? this.xhr.responseText
            : null;
        this.statusText = this.req.xhr.statusText;
        this._setStatusProperties(this.xhr.status);
        this.header = this.headers = parseHeader(
          this.xhr.getAllResponseHeaders(),
        );
        // getAllResponseHeaders sometimes falsely returns "" for CORS requests, but
        // getResponseHeader still works. so we get content-type even if getting
        // other headers fails.
        this.header['content-type'] = this.xhr.getResponseHeader(
          'content-type',
        );
        this._setHeaderProperties(this.header);
        this.body =
          this.req.method != 'HEAD'
            ? this._parseBody(this.text ? this.text : this.xhr.response)
            : null;
      }

      /**
       * Get case-insensitive `field` value.
       *
       * @param {String} field
       * @return {String}
       * @api public
       */

      Response.prototype.get = function (field) {
        return this.header[field.toLowerCase()];
      };

      /**
       * Set header related properties:
       *
       *   - `.type` the content type without params
       *
       * A response of "Content-Type: text/plain; charset=utf-8"
       * will provide you with a `.type` of "text/plain".
       *
       * @param {Object} header
       * @api private
       */

      Response.prototype._setHeaderProperties = function (header) {
        // content-type
        var ct = this.header['content-type'] || '';
        this.type = type(ct);

        // params
        var obj = params(ct);
        for (var key in obj) this[key] = obj[key];
      };

      /**
       * Parse the given body `str`.
       *
       * Used for auto-parsing of bodies. Parsers
       * are defined on the `superagent.parse` object.
       *
       * @param {String} str
       * @return {Mixed}
       * @api private
       */

      Response.prototype._parseBody = function (str) {
        var parse = request.parse[this.type];
        if (!parse && isJSON(this.type)) {
          parse = request.parse['application/json'];
        }
        return parse && str && (str.length || str instanceof Object)
          ? parse(str)
          : null;
      };

      /**
       * Set flags such as `.ok` based on `status`.
       *
       * For example a 2xx response will give you a `.ok` of __true__
       * whereas 5xx will be __false__ and `.error` will be __true__. The
       * `.clientError` and `.serverError` are also available to be more
       * specific, and `.statusType` is the class of error ranging from 1..5
       * sometimes useful for mapping respond colors etc.
       *
       * "sugar" properties are also defined for common cases. Currently providing:
       *
       *   - .noContent
       *   - .badRequest
       *   - .unauthorized
       *   - .notAcceptable
       *   - .notFound
       *
       * @param {Number} status
       * @api private
       */

      Response.prototype._setStatusProperties = function (status) {
        // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request
        if (status === 1223) {
          status = 204;
        }

        var type = (status / 100) | 0;

        // status / class
        this.status = this.statusCode = status;
        this.statusType = type;

        // basics
        this.info = 1 == type;
        this.ok = 2 == type;
        this.clientError = 4 == type;
        this.serverError = 5 == type;
        this.error = 4 == type || 5 == type ? this.toError() : false;

        // sugar
        this.accepted = 202 == status;
        this.noContent = 204 == status;
        this.badRequest = 400 == status;
        this.unauthorized = 401 == status;
        this.notAcceptable = 406 == status;
        this.notFound = 404 == status;
        this.forbidden = 403 == status;
      };

      /**
       * Return an `Error` representative of this response.
       *
       * @return {Error}
       * @api public
       */

      Response.prototype.toError = function () {
        var req = this.req;
        var method = req.method;
        var url = req.url;

        var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';
        var err = new Error(msg);
        err.status = this.status;
        err.method = method;
        err.url = url;

        return err;
      };

      /**
       * Expose `Response`.
       */

      request.Response = Response;

      /**
       * Initialize a new `Request` with the given `method` and `url`.
       *
       * @param {String} method
       * @param {String} url
       * @api public
       */

      function Request(method, url) {
        var self = this;
        this._query = this._query || [];
        this.method = method;
        this.url = url;
        this.header = {}; // preserves header name case
        this._header = {}; // coerces header names to lowercase
        this.on('end', function () {
          var err = null;
          var res = null;

          try {
            res = new Response(self);
          } catch (e) {
            err = new Error('Parser is unable to parse the response');
            err.parse = true;
            err.original = e;
            // issue #675: return the raw response if the response parsing fails
            err.rawResponse =
              self.xhr && self.xhr.responseText ? self.xhr.responseText : null;
            // issue #876: return the http status code if the response parsing fails
            err.statusCode =
              self.xhr && self.xhr.status ? self.xhr.status : null;
            return self.callback(err);
          }

          self.emit('response', res);

          var new_err;
          try {
            if (res.status < 200 || res.status >= 300) {
              new_err = new Error(
                res.statusText || 'Unsuccessful HTTP response',
              );
              new_err.original = err;
              new_err.response = res;
              new_err.status = res.status;
            }
          } catch (e) {
            new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android
          }

          // #1000 don't catch errors from the callback to avoid double calling it
          if (new_err) {
            self.callback(new_err, res);
          } else {
            self.callback(null, res);
          }
        });
      }

      /**
       * Mixin `Emitter` and `requestBase`.
       */

      Emitter(Request.prototype);
      for (var key in requestBase) {
        Request.prototype[key] = requestBase[key];
      }

      /**
       * Set Content-Type to `type`, mapping values from `request.types`.
       *
       * Examples:
       *
       *      superagent.types.xml = 'application/xml';
       *
       *      request.post('/')
       *        .type('xml')
       *        .send(xmlstring)
       *        .end(callback);
       *
       *      request.post('/')
       *        .type('application/xml')
       *        .send(xmlstring)
       *        .end(callback);
       *
       * @param {String} type
       * @return {Request} for chaining
       * @api public
       */

      Request.prototype.type = function (type) {
        this.set('Content-Type', request.types[type] || type);
        return this;
      };

      /**
       * Set responseType to `val`. Presently valid responseTypes are 'blob' and
       * 'arraybuffer'.
       *
       * Examples:
       *
       *      req.get('/')
       *        .responseType('blob')
       *        .end(callback);
       *
       * @param {String} val
       * @return {Request} for chaining
       * @api public
       */

      Request.prototype.responseType = function (val) {
        this._responseType = val;
        return this;
      };

      /**
       * Set Accept to `type`, mapping values from `request.types`.
       *
       * Examples:
       *
       *      superagent.types.json = 'application/json';
       *
       *      request.get('/agent')
       *        .accept('json')
       *        .end(callback);
       *
       *      request.get('/agent')
       *        .accept('application/json')
       *        .end(callback);
       *
       * @param {String} accept
       * @return {Request} for chaining
       * @api public
       */

      Request.prototype.accept = function (type) {
        this.set('Accept', request.types[type] || type);
        return this;
      };

      /**
       * Set Authorization field value with `user` and `pass`.
       *
       * @param {String} user
       * @param {String} pass
       * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')
       * @return {Request} for chaining
       * @api public
       */

      Request.prototype.auth = function (user, pass, options) {
        if (!options) {
          options = {
            type: 'basic',
          };
        }

        switch (options.type) {
          case 'basic':
            var str = btoa(user + ':' + pass);
            this.set('Authorization', 'Basic ' + str);
            break;

          case 'auto':
            this.username = user;
            this.password = pass;
            break;
        }
        return this;
      };

      /**
       * Add query-string `val`.
       *
       * Examples:
       *
       *   request.get('/shoes')
       *     .query('size=10')
       *     .query({ color: 'blue' })
       *
       * @param {Object|String} val
       * @return {Request} for chaining
       * @api public
       */

      Request.prototype.query = function (val) {
        if ('string' != typeof val) val = serialize(val);
        if (val) this._query.push(val);
        return this;
      };

      /**
       * Queue the given `file` as an attachment to the specified `field`,
       * with optional `filename`.
       *
       * ``` js
       * request.post('/upload')
       *   .attach('content', new Blob(['<a id="a"><b id="b">hey!</b></a>'], { type: "text/html"}))
       *   .end(callback);
       * ```
       *
       * @param {String} field
       * @param {Blob|File} file
       * @param {String} filename
       * @return {Request} for chaining
       * @api public
       */

      Request.prototype.attach = function (field, file, filename) {
        this._getFormData().append(field, file, filename || file.name);
        return this;
      };

      Request.prototype._getFormData = function () {
        if (!this._formData) {
          this._formData = new root.FormData();
        }
        return this._formData;
      };

      /**
       * Invoke the callback with `err` and `res`
       * and handle arity check.
       *
       * @param {Error} err
       * @param {Response} res
       * @api private
       */

      Request.prototype.callback = function (err, res) {
        var fn = this._callback;
        this.clearTimeout();
        fn(err, res);
      };

      /**
       * Invoke callback with x-domain error.
       *
       * @api private
       */

      Request.prototype.crossDomainError = function () {
        var err = new Error(
          'Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.',
        );
        err.crossDomain = true;

        err.status = this.status;
        err.method = this.method;
        err.url = this.url;

        this.callback(err);
      };

      /**
       * Invoke callback with timeout error.
       *
       * @api private
       */

      Request.prototype._timeoutError = function () {
        var timeout = this._timeout;
        var err = new Error('timeout of ' + timeout + 'ms exceeded');
        err.timeout = timeout;
        this.callback(err);
      };

      /**
       * Compose querystring to append to req.url
       *
       * @api private
       */

      Request.prototype._appendQueryString = function () {
        var query = this._query.join('&');
        if (query) {
          this.url += ~this.url.indexOf('?') ? '&' + query : '?' + query;
        }
      };

      /**
       * Initiate request, invoking callback `fn(res)`
       * with an instanceof `Response`.
       *
       * @param {Function} fn
       * @return {Request} for chaining
       * @api public
       */

      Request.prototype.end = function (fn) {
        var self = this;
        var xhr = (this.xhr = request.getXHR());
        var timeout = this._timeout;
        var data = this._formData || this._data;

        // store callback
        this._callback = fn || noop;

        // state change
        xhr.onreadystatechange = function () {
          if (4 != xhr.readyState) return;

          // In IE9, reads to any property (e.g. status) off of an aborted XHR will
          // result in the error "Could not complete the operation due to error c00c023f"
          var status;
          try {
            status = xhr.status;
          } catch (e) {
            status = 0;
          }

          if (0 == status) {
            if (self.timedout) return self._timeoutError();
            if (self._aborted) return;
            return self.crossDomainError();
          }
          self.emit('end');
        };

        // progress
        var handleProgress = function (direction, e) {
          if (e.total > 0) {
            e.percent = (e.loaded / e.total) * 100;
          }
          e.direction = direction;
          self.emit('progress', e);
        };
        if (this.hasListeners('progress')) {
          try {
            xhr.onprogress = handleProgress.bind(null, 'download');
            if (xhr.upload) {
              xhr.upload.onprogress = handleProgress.bind(null, 'upload');
            }
          } catch (e) {
            // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.
            // Reported here:
            // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context
          }
        }

        // timeout
        if (timeout && !this._timer) {
          this._timer = setTimeout(function () {
            self.timedout = true;
            self.abort();
          }, timeout);
        }

        // querystring
        this._appendQueryString();

        // initiate request
        if (this.username && this.password) {
          xhr.open(this.method, this.url, true, this.username, this.password);
        } else {
          xhr.open(this.method, this.url, true);
        }

        // CORS
        if (this._withCredentials) xhr.withCredentials = true;

        // body
        if (
          'GET' != this.method &&
          'HEAD' != this.method &&
          'string' != typeof data &&
          !this._isHost(data)
        ) {
          // serialize stuff
          var contentType = this._header['content-type'];
          var serialize =
            this._serializer ||
            request.serialize[contentType ? contentType.split(';')[0] : ''];
          if (!serialize && isJSON(contentType))
            serialize = request.serialize['application/json'];
          if (serialize) data = serialize(data);
        }

        // set header fields
        for (var field in this.header) {
          if (null == this.header[field]) continue;
          xhr.setRequestHeader(field, this.header[field]);
        }

        if (this._responseType) {
          xhr.responseType = this._responseType;
        }

        // send stuff
        this.emit('request', this);

        // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)
        // We need null here if data is undefined
        xhr.send(typeof data !== 'undefined' ? data : null);
        return this;
      };

      /**
       * Expose `Request`.
       */

      request.Request = Request;

      /**
       * GET `url` with optional callback `fn(res)`.
       *
       * @param {String} url
       * @param {Mixed|Function} [data] or fn
       * @param {Function} [fn]
       * @return {Request}
       * @api public
       */

      request.get = function (url, data, fn) {
        var req = request('GET', url);
        if ('function' == typeof data) (fn = data), (data = null);
        if (data) req.query(data);
        if (fn) req.end(fn);
        return req;
      };

      /**
       * HEAD `url` with optional callback `fn(res)`.
       *
       * @param {String} url
       * @param {Mixed|Function} [data] or fn
       * @param {Function} [fn]
       * @return {Request}
       * @api public
       */

      request.head = function (url, data, fn) {
        var req = request('HEAD', url);
        if ('function' == typeof data) (fn = data), (data = null);
        if (data) req.send(data);
        if (fn) req.end(fn);
        return req;
      };

      /**
       * OPTIONS query to `url` with optional callback `fn(res)`.
       *
       * @param {String} url
       * @param {Mixed|Function} [data] or fn
       * @param {Function} [fn]
       * @return {Request}
       * @api public
       */

      request.options = function (url, data, fn) {
        var req = request('OPTIONS', url);
        if ('function' == typeof data) (fn = data), (data = null);
        if (data) req.send(data);
        if (fn) req.end(fn);
        return req;
      };

      /**
       * DELETE `url` with optional callback `fn(res)`.
       *
       * @param {String} url
       * @param {Function} [fn]
       * @return {Request}
       * @api public
       */

      function del(url, fn) {
        var req = request('DELETE', url);
        if (fn) req.end(fn);
        return req;
      }

      request['del'] = del;
      request['delete'] = del;

      /**
       * PATCH `url` with optional `data` and callback `fn(res)`.
       *
       * @param {String} url
       * @param {Mixed} [data]
       * @param {Function} [fn]
       * @return {Request}
       * @api public
       */

      request.patch = function (url, data, fn) {
        var req = request('PATCH', url);
        if ('function' == typeof data) (fn = data), (data = null);
        if (data) req.send(data);
        if (fn) req.end(fn);
        return req;
      };

      /**
       * POST `url` with optional `data` and callback `fn(res)`.
       *
       * @param {String} url
       * @param {Mixed} [data]
       * @param {Function} [fn]
       * @return {Request}
       * @api public
       */

      request.post = function (url, data, fn) {
        var req = request('POST', url);
        if ('function' == typeof data) (fn = data), (data = null);
        if (data) req.send(data);
        if (fn) req.end(fn);
        return req;
      };

      /**
       * PUT `url` with optional `data` and callback `fn(res)`.
       *
       * @param {String} url
       * @param {Mixed|Function} [data] or fn
       * @param {Function} [fn]
       * @return {Request}
       * @api public
       */

      request.put = function (url, data, fn) {
        var req = request('PUT', url);
        if ('function' == typeof data) (fn = data), (data = null);
        if (data) req.send(data);
        if (fn) req.end(fn);
        return req;
      };

      /***/
    },
    /* 531 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Expose `Emitter`.
       */

      if (true) {
        module.exports = Emitter;
      }

      /**
       * Initialize a new `Emitter`.
       *
       * @api public
       */

      function Emitter(obj) {
        if (obj) return mixin(obj);
      }

      /**
       * Mixin the emitter properties.
       *
       * @param {Object} obj
       * @return {Object}
       * @api private
       */

      function mixin(obj) {
        for (var key in Emitter.prototype) {
          obj[key] = Emitter.prototype[key];
        }
        return obj;
      }

      /**
       * Listen on the given `event` with `fn`.
       *
       * @param {String} event
       * @param {Function} fn
       * @return {Emitter}
       * @api public
       */

      Emitter.prototype.on = Emitter.prototype.addEventListener = function (
        event,
        fn,
      ) {
        this._callbacks = this._callbacks || {};
        (this._callbacks['$' + event] =
          this._callbacks['$' + event] || []).push(fn);
        return this;
      };

      /**
       * Adds an `event` listener that will be invoked a single
       * time then automatically removed.
       *
       * @param {String} event
       * @param {Function} fn
       * @return {Emitter}
       * @api public
       */

      Emitter.prototype.once = function (event, fn) {
        function on() {
          this.off(event, on);
          fn.apply(this, arguments);
        }

        on.fn = fn;
        this.on(event, on);
        return this;
      };

      /**
       * Remove the given callback for `event` or all
       * registered callbacks.
       *
       * @param {String} event
       * @param {Function} fn
       * @return {Emitter}
       * @api public
       */

      Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (
        event,
        fn,
      ) {
        this._callbacks = this._callbacks || {};

        // all
        if (0 == arguments.length) {
          this._callbacks = {};
          return this;
        }

        // specific event
        var callbacks = this._callbacks['$' + event];
        if (!callbacks) return this;

        // remove all handlers
        if (1 == arguments.length) {
          delete this._callbacks['$' + event];
          return this;
        }

        // remove specific handler
        var cb;
        for (var i = 0; i < callbacks.length; i++) {
          cb = callbacks[i];
          if (cb === fn || cb.fn === fn) {
            callbacks.splice(i, 1);
            break;
          }
        }
        return this;
      };

      /**
       * Emit `event` with the given args.
       *
       * @param {String} event
       * @param {Mixed} ...
       * @return {Emitter}
       */

      Emitter.prototype.emit = function (event) {
        this._callbacks = this._callbacks || {};
        var args = [].slice.call(arguments, 1),
          callbacks = this._callbacks['$' + event];

        if (callbacks) {
          callbacks = callbacks.slice(0);
          for (var i = 0, len = callbacks.length; i < len; ++i) {
            callbacks[i].apply(this, args);
          }
        }

        return this;
      };

      /**
       * Return array of callbacks for `event`.
       *
       * @param {String} event
       * @return {Array}
       * @api public
       */

      Emitter.prototype.listeners = function (event) {
        this._callbacks = this._callbacks || {};
        return this._callbacks['$' + event] || [];
      };

      /**
       * Check if this emitter has `event` handlers.
       *
       * @param {String} event
       * @return {Boolean}
       * @api public
       */

      Emitter.prototype.hasListeners = function (event) {
        return !!this.listeners(event).length;
      };

      /***/
    },
    /* 532 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Module of mixed-in functions shared between node and client code
       */
      var isObject = __webpack_require__(533);

      /**
       * Clear previous timeout.
       *
       * @return {Request} for chaining
       * @api public
       */

      exports.clearTimeout = function _clearTimeout() {
        this._timeout = 0;
        clearTimeout(this._timer);
        return this;
      };

      /**
       * Override default response body parser
       *
       * This function will be called to convert incoming data into request.body
       *
       * @param {Function}
       * @api public
       */

      exports.parse = function parse(fn) {
        this._parser = fn;
        return this;
      };

      /**
       * Override default request body serializer
       *
       * This function will be called to convert data set via .send or .attach into payload to send
       *
       * @param {Function}
       * @api public
       */

      exports.serialize = function serialize(fn) {
        this._serializer = fn;
        return this;
      };

      /**
       * Set timeout to `ms`.
       *
       * @param {Number} ms
       * @return {Request} for chaining
       * @api public
       */

      exports.timeout = function timeout(ms) {
        this._timeout = ms;
        return this;
      };

      /**
       * Promise support
       *
       * @param {Function} resolve
       * @param {Function} reject
       * @return {Request}
       */

      exports.then = function then(resolve, reject) {
        if (!this._fullfilledPromise) {
          var self = this;
          this._fullfilledPromise = new Promise(function (
            innerResolve,
            innerReject,
          ) {
            self.end(function (err, res) {
              if (err) innerReject(err);
              else innerResolve(res);
            });
          });
        }
        return this._fullfilledPromise.then(resolve, reject);
      };

      exports.catch = function (cb) {
        return this.then(undefined, cb);
      };

      /**
       * Allow for extension
       */

      exports.use = function use(fn) {
        fn(this);
        return this;
      };

      /**
       * Get request header `field`.
       * Case-insensitive.
       *
       * @param {String} field
       * @return {String}
       * @api public
       */

      exports.get = function (field) {
        return this._header[field.toLowerCase()];
      };

      /**
       * Get case-insensitive header `field` value.
       * This is a deprecated internal API. Use `.get(field)` instead.
       *
       * (getHeader is no longer used internally by the superagent code base)
       *
       * @param {String} field
       * @return {String}
       * @api private
       * @deprecated
       */

      exports.getHeader = exports.get;

      /**
       * Set header `field` to `val`, or multiple fields with one object.
       * Case-insensitive.
       *
       * Examples:
       *
       *      req.get('/')
       *        .set('Accept', 'application/json')
       *        .set('X-API-Key', 'foobar')
       *        .end(callback);
       *
       *      req.get('/')
       *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })
       *        .end(callback);
       *
       * @param {String|Object} field
       * @param {String} val
       * @return {Request} for chaining
       * @api public
       */

      exports.set = function (field, val) {
        if (isObject(field)) {
          for (var key in field) {
            this.set(key, field[key]);
          }
          return this;
        }
        this._header[field.toLowerCase()] = val;
        this.header[field] = val;
        return this;
      };

      /**
       * Remove header `field`.
       * Case-insensitive.
       *
       * Example:
       *
       *      req.get('/')
       *        .unset('User-Agent')
       *        .end(callback);
       *
       * @param {String} field
       */
      exports.unset = function (field) {
        delete this._header[field.toLowerCase()];
        delete this.header[field];
        return this;
      };

      /**
       * Write the field `name` and `val`, or multiple fields with one object
       * for "multipart/form-data" request bodies.
       *
       * ``` js
       * request.post('/upload')
       *   .field('foo', 'bar')
       *   .end(callback);
       *
       * request.post('/upload')
       *   .field({ foo: 'bar', baz: 'qux' })
       *   .end(callback);
       * ```
       *
       * @param {String|Object} name
       * @param {String|Blob|File|Buffer|fs.ReadStream} val
       * @return {Request} for chaining
       * @api public
       */
      exports.field = function (name, val) {
        // name should be either a string or an object.
        if (null === name || undefined === name) {
          throw new Error('.field(name, val) name can not be empty');
        }

        if (isObject(name)) {
          for (var key in name) {
            this.field(key, name[key]);
          }
          return this;
        }

        // val should be defined now
        if (null === val || undefined === val) {
          throw new Error('.field(name, val) val can not be empty');
        }
        this._getFormData().append(name, val);
        return this;
      };

      /**
       * Abort the request, and clear potential timeout.
       *
       * @return {Request}
       * @api public
       */
      exports.abort = function () {
        if (this._aborted) {
          return this;
        }
        this._aborted = true;
        this.xhr && this.xhr.abort(); // browser
        this.req && this.req.abort(); // node
        this.clearTimeout();
        this.emit('abort');
        return this;
      };

      /**
       * Enable transmission of cookies with x-domain requests.
       *
       * Note that for this to work the origin must not be
       * using "Access-Control-Allow-Origin" with a wildcard,
       * and also must set "Access-Control-Allow-Credentials"
       * to "true".
       *
       * @api public
       */

      exports.withCredentials = function () {
        // This is browser-only functionality. Node side is no-op.
        this._withCredentials = true;
        return this;
      };

      /**
       * Set the max redirects to `n`. Does noting in browser XHR implementation.
       *
       * @param {Number} n
       * @return {Request} for chaining
       * @api public
       */

      exports.redirects = function (n) {
        this._maxRedirects = n;
        return this;
      };

      /**
       * Convert to a plain javascript object (not JSON string) of scalar properties.
       * Note as this method is designed to return a useful non-this value,
       * it cannot be chained.
       *
       * @return {Object} describing method, url, and data of this request
       * @api public
       */

      exports.toJSON = function () {
        return {
          method: this.method,
          url: this.url,
          data: this._data,
          headers: this._header,
        };
      };

      /**
       * Check if `obj` is a host object,
       * we don't want to serialize these :)
       *
       * TODO: future proof, move to compoent land
       *
       * @param {Object} obj
       * @return {Boolean}
       * @api private
       */

      exports._isHost = function _isHost(obj) {
        var str = {}.toString.call(obj);

        switch (str) {
          case '[object File]':
          case '[object Blob]':
          case '[object FormData]':
            return true;
          default:
            return false;
        }
      };

      /**
       * Send `data` as the request body, defaulting the `.type()` to "json" when
       * an object is given.
       *
       * Examples:
       *
       *       // manual json
       *       request.post('/user')
       *         .type('json')
       *         .send('{"name":"tj"}')
       *         .end(callback)
       *
       *       // auto json
       *       request.post('/user')
       *         .send({ name: 'tj' })
       *         .end(callback)
       *
       *       // manual x-www-form-urlencoded
       *       request.post('/user')
       *         .type('form')
       *         .send('name=tj')
       *         .end(callback)
       *
       *       // auto x-www-form-urlencoded
       *       request.post('/user')
       *         .type('form')
       *         .send({ name: 'tj' })
       *         .end(callback)
       *
       *       // defaults to x-www-form-urlencoded
       *      request.post('/user')
       *        .send('name=tobi')
       *        .send('species=ferret')
       *        .end(callback)
       *
       * @param {String|Object} data
       * @return {Request} for chaining
       * @api public
       */

      exports.send = function (data) {
        var obj = isObject(data);
        var type = this._header['content-type'];

        // merge
        if (obj && isObject(this._data)) {
          for (var key in data) {
            this._data[key] = data[key];
          }
        } else if ('string' == typeof data) {
          // default to x-www-form-urlencoded
          if (!type) this.type('form');
          type = this._header['content-type'];
          if ('application/x-www-form-urlencoded' == type) {
            this._data = this._data ? this._data + '&' + data : data;
          } else {
            this._data = (this._data || '') + data;
          }
        } else {
          this._data = data;
        }

        if (!obj || this._isHost(data)) return this;

        // default to json
        if (!type) this.type('json');
        return this;
      };

      /***/
    },
    /* 533 */
    /***/ function (module, exports) {
      /**
       * Check if `obj` is an object.
       *
       * @param {Object} obj
       * @return {Boolean}
       * @api private
       */

      function isObject(obj) {
        return null !== obj && 'object' === typeof obj;
      }

      module.exports = isObject;

      /***/
    },
    /* 534 */
    /***/ function (module, exports) {
      // The node and browser modules expose versions of this with the
      // appropriate constructor function bound as first argument
      /**
       * Issue a request:
       *
       * Examples:
       *
       *    request('GET', '/users').end(callback)
       *    request('/users').end(callback)
       *    request('/users', callback)
       *
       * @param {String} method
       * @param {String|Function} url or callback
       * @return {Request}
       * @api public
       */

      function request(RequestConstructor, method, url) {
        // callback
        if ('function' == typeof url) {
          return new RequestConstructor('GET', method).end(url);
        }

        // url first
        if (2 == arguments.length) {
          return new RequestConstructor('GET', method);
        }

        return new RequestConstructor(method, url);
      }

      module.exports = request;

      /***/
    },
    ,
    /* 535 */ /* 536 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.ToolbarTitle = exports.ToolbarSeparator = exports.ToolbarGroup = exports.Toolbar = exports.Toggle = exports.TimePicker = exports.TextField = exports.TableRowColumn = exports.TableRow = exports.TableHeaderColumn = exports.TableHeader = exports.TableFooter = exports.TableBody = exports.Table = exports.Tab = exports.Tabs = exports.Snackbar = exports.Stepper = exports.StepLabel = exports.StepContent = exports.StepButton = exports.Step = exports.SvgIcon = exports.Subheader = exports.Slider = exports.SelectField = exports.RefreshIndicator = exports.RaisedButton = exports.RadioButtonGroup = exports.RadioButton = exports.Popover = exports.Paper = exports.MuiThemeProvider = exports.MenuItem = exports.Menu = exports.MakeSelectable = exports.ListItem = exports.List = exports.LinearProgress = exports.IconMenu = exports.IconButton = exports.GridTile = exports.GridList = exports.FontIcon = exports.FloatingActionButton = exports.FlatButton = exports.DropDownMenu = exports.Drawer = exports.Divider = exports.Dialog = exports.DatePicker = exports.CircularProgress = exports.Chip = exports.Checkbox = exports.CardText = exports.CardTitle = exports.CardMedia = exports.CardHeader = exports.CardActions = exports.Card = exports.Badge = exports.Avatar = exports.AutoComplete = exports.AppBar = undefined;

      var _AppBar2 = __webpack_require__(537);

      var _AppBar3 = _interopRequireDefault(_AppBar2);

      var _AutoComplete2 = __webpack_require__(579);

      var _AutoComplete3 = _interopRequireDefault(_AutoComplete2);

      var _Avatar2 = __webpack_require__(611);

      var _Avatar3 = _interopRequireDefault(_Avatar2);

      var _Badge2 = __webpack_require__(613);

      var _Badge3 = _interopRequireDefault(_Badge2);

      var _Card2 = __webpack_require__(615);

      var _Card3 = _interopRequireDefault(_Card2);

      var _CardActions2 = __webpack_require__(624);

      var _CardActions3 = _interopRequireDefault(_CardActions2);

      var _CardHeader2 = __webpack_require__(620);

      var _CardHeader3 = _interopRequireDefault(_CardHeader2);

      var _CardMedia2 = __webpack_require__(622);

      var _CardMedia3 = _interopRequireDefault(_CardMedia2);

      var _CardTitle2 = __webpack_require__(621);

      var _CardTitle3 = _interopRequireDefault(_CardTitle2);

      var _CardText2 = __webpack_require__(623);

      var _CardText3 = _interopRequireDefault(_CardText2);

      var _Checkbox2 = __webpack_require__(625);

      var _Checkbox3 = _interopRequireDefault(_Checkbox2);

      var _Chip2 = __webpack_require__(630);

      var _Chip3 = _interopRequireDefault(_Chip2);

      var _CircularProgress2 = __webpack_require__(633);

      var _CircularProgress3 = _interopRequireDefault(_CircularProgress2);

      var _DatePicker2 = __webpack_require__(635);

      var _DatePicker3 = _interopRequireDefault(_DatePicker2);

      var _Dialog2 = __webpack_require__(654);

      var _Dialog3 = _interopRequireDefault(_Dialog2);

      var _Divider2 = __webpack_require__(609);

      var _Divider3 = _interopRequireDefault(_Divider2);

      var _Drawer2 = __webpack_require__(659);

      var _Drawer3 = _interopRequireDefault(_Drawer2);

      var _DropDownMenu2 = __webpack_require__(661);

      var _DropDownMenu3 = _interopRequireDefault(_DropDownMenu2);

      var _FlatButton2 = __webpack_require__(641);

      var _FlatButton3 = _interopRequireDefault(_FlatButton2);

      var _FloatingActionButton2 = __webpack_require__(666);

      var _FloatingActionButton3 = _interopRequireDefault(
        _FloatingActionButton2,
      );

      var _FontIcon2 = __webpack_require__(562);

      var _FontIcon3 = _interopRequireDefault(_FontIcon2);

      var _GridList2 = __webpack_require__(668);

      var _GridList3 = _interopRequireDefault(_GridList2);

      var _GridTile2 = __webpack_require__(670);

      var _GridTile3 = _interopRequireDefault(_GridTile2);

      var _IconButton2 = __webpack_require__(540);

      var _IconButton3 = _interopRequireDefault(_IconButton2);

      var _IconMenu2 = __webpack_require__(671);

      var _IconMenu3 = _interopRequireDefault(_IconMenu2);

      var _LinearProgress2 = __webpack_require__(673);

      var _LinearProgress3 = _interopRequireDefault(_LinearProgress2);

      var _List2 = __webpack_require__(675);

      var _List3 = _interopRequireDefault(_List2);

      var _ListItem2 = __webpack_require__(605);

      var _ListItem3 = _interopRequireDefault(_ListItem2);

      var _MakeSelectable2 = __webpack_require__(676);

      var _MakeSelectable3 = _interopRequireDefault(_MakeSelectable2);

      var _Menu2 = __webpack_require__(589);

      var _Menu3 = _interopRequireDefault(_Menu2);

      var _MenuItem2 = __webpack_require__(596);

      var _MenuItem3 = _interopRequireDefault(_MenuItem2);

      var _MuiThemeProvider2 = __webpack_require__(677);

      var _MuiThemeProvider3 = _interopRequireDefault(_MuiThemeProvider2);

      var _Paper2 = __webpack_require__(577);

      var _Paper3 = _interopRequireDefault(_Paper2);

      var _Popover2 = __webpack_require__(747);

      var _Popover3 = _interopRequireDefault(_Popover2);

      var _RadioButton2 = __webpack_require__(748);

      var _RadioButton3 = _interopRequireDefault(_RadioButton2);

      var _RadioButtonGroup2 = __webpack_require__(752);

      var _RadioButtonGroup3 = _interopRequireDefault(_RadioButtonGroup2);

      var _RaisedButton2 = __webpack_require__(753);

      var _RaisedButton3 = _interopRequireDefault(_RaisedButton2);

      var _RefreshIndicator2 = __webpack_require__(755);

      var _RefreshIndicator3 = _interopRequireDefault(_RefreshIndicator2);

      var _SelectField2 = __webpack_require__(757);

      var _SelectField3 = _interopRequireDefault(_SelectField2);

      var _Slider2 = __webpack_require__(759);

      var _Slider3 = _interopRequireDefault(_Slider2);

      var _Subheader2 = __webpack_require__(593);

      var _Subheader3 = _interopRequireDefault(_Subheader2);

      var _SvgIcon2 = __webpack_require__(575);

      var _SvgIcon3 = _interopRequireDefault(_SvgIcon2);

      var _Step2 = __webpack_require__(761);

      var _Step3 = _interopRequireDefault(_Step2);

      var _StepButton2 = __webpack_require__(762);

      var _StepButton3 = _interopRequireDefault(_StepButton2);

      var _StepContent2 = __webpack_require__(765);

      var _StepContent3 = _interopRequireDefault(_StepContent2);

      var _StepLabel2 = __webpack_require__(763);

      var _StepLabel3 = _interopRequireDefault(_StepLabel2);

      var _Stepper2 = __webpack_require__(768);

      var _Stepper3 = _interopRequireDefault(_Stepper2);

      var _Snackbar2 = __webpack_require__(770);

      var _Snackbar3 = _interopRequireDefault(_Snackbar2);

      var _Tabs2 = __webpack_require__(774);

      var _Tabs3 = _interopRequireDefault(_Tabs2);

      var _Tab2 = __webpack_require__(775);

      var _Tab3 = _interopRequireDefault(_Tab2);

      var _Table2 = __webpack_require__(779);

      var _Table3 = _interopRequireDefault(_Table2);

      var _TableBody2 = __webpack_require__(781);

      var _TableBody3 = _interopRequireDefault(_TableBody2);

      var _TableFooter2 = __webpack_require__(783);

      var _TableFooter3 = _interopRequireDefault(_TableFooter2);

      var _TableHeader2 = __webpack_require__(784);

      var _TableHeader3 = _interopRequireDefault(_TableHeader2);

      var _TableHeaderColumn2 = __webpack_require__(785);

      var _TableHeaderColumn3 = _interopRequireDefault(_TableHeaderColumn2);

      var _TableRow2 = __webpack_require__(786);

      var _TableRow3 = _interopRequireDefault(_TableRow2);

      var _TableRowColumn2 = __webpack_require__(782);

      var _TableRowColumn3 = _interopRequireDefault(_TableRowColumn2);

      var _TextField2 = __webpack_require__(581);

      var _TextField3 = _interopRequireDefault(_TextField2);

      var _TimePicker2 = __webpack_require__(787);

      var _TimePicker3 = _interopRequireDefault(_TimePicker2);

      var _Toggle2 = __webpack_require__(797);

      var _Toggle3 = _interopRequireDefault(_Toggle2);

      var _Toolbar2 = __webpack_require__(799);

      var _Toolbar3 = _interopRequireDefault(_Toolbar2);

      var _ToolbarGroup2 = __webpack_require__(801);

      var _ToolbarGroup3 = _interopRequireDefault(_ToolbarGroup2);

      var _ToolbarSeparator2 = __webpack_require__(802);

      var _ToolbarSeparator3 = _interopRequireDefault(_ToolbarSeparator2);

      var _ToolbarTitle2 = __webpack_require__(803);

      var _ToolbarTitle3 = _interopRequireDefault(_ToolbarTitle2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.AppBar = _AppBar3.default;
      exports.AutoComplete = _AutoComplete3.default;
      exports.Avatar = _Avatar3.default;
      exports.Badge = _Badge3.default;
      exports.Card = _Card3.default;
      exports.CardActions = _CardActions3.default;
      exports.CardHeader = _CardHeader3.default;
      exports.CardMedia = _CardMedia3.default;
      exports.CardTitle = _CardTitle3.default;
      exports.CardText = _CardText3.default;
      exports.Checkbox = _Checkbox3.default;
      exports.Chip = _Chip3.default;
      exports.CircularProgress = _CircularProgress3.default;
      exports.DatePicker = _DatePicker3.default;
      exports.Dialog = _Dialog3.default;
      exports.Divider = _Divider3.default;
      exports.Drawer = _Drawer3.default;
      exports.DropDownMenu = _DropDownMenu3.default;
      exports.FlatButton = _FlatButton3.default;
      exports.FloatingActionButton = _FloatingActionButton3.default;
      exports.FontIcon = _FontIcon3.default;
      exports.GridList = _GridList3.default;
      exports.GridTile = _GridTile3.default;
      exports.IconButton = _IconButton3.default;
      exports.IconMenu = _IconMenu3.default;
      exports.LinearProgress = _LinearProgress3.default;
      exports.List = _List3.default;
      exports.ListItem = _ListItem3.default;
      exports.MakeSelectable = _MakeSelectable3.default;
      exports.Menu = _Menu3.default;
      exports.MenuItem = _MenuItem3.default;
      exports.MuiThemeProvider = _MuiThemeProvider3.default;
      exports.Paper = _Paper3.default;
      exports.Popover = _Popover3.default;
      exports.RadioButton = _RadioButton3.default;
      exports.RadioButtonGroup = _RadioButtonGroup3.default;
      exports.RaisedButton = _RaisedButton3.default;
      exports.RefreshIndicator = _RefreshIndicator3.default;
      exports.SelectField = _SelectField3.default;
      exports.Slider = _Slider3.default;
      exports.Subheader = _Subheader3.default;
      exports.SvgIcon = _SvgIcon3.default;
      exports.Step = _Step3.default;
      exports.StepButton = _StepButton3.default;
      exports.StepContent = _StepContent3.default;
      exports.StepLabel = _StepLabel3.default;
      exports.Stepper = _Stepper3.default;
      exports.Snackbar = _Snackbar3.default;
      exports.Tabs = _Tabs3.default;
      exports.Tab = _Tab3.default;
      exports.Table = _Table3.default;
      exports.TableBody = _TableBody3.default;
      exports.TableFooter = _TableFooter3.default;
      exports.TableHeader = _TableHeader3.default;
      exports.TableHeaderColumn = _TableHeaderColumn3.default;
      exports.TableRow = _TableRow3.default;
      exports.TableRowColumn = _TableRowColumn3.default;
      exports.TextField = _TextField3.default;
      exports.TimePicker = _TimePicker3.default;
      exports.Toggle = _Toggle3.default;
      exports.Toolbar = _Toolbar3.default;
      exports.ToolbarGroup = _ToolbarGroup3.default;
      exports.ToolbarSeparator = _ToolbarSeparator3.default;
      exports.ToolbarTitle = _ToolbarTitle3.default;

      /***/
    },
    /* 537 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _AppBar = __webpack_require__(538);

      var _AppBar2 = _interopRequireDefault(_AppBar);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _AppBar2.default;

      /***/
    },
    /* 538 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      exports.getStyles = getStyles;

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _IconButton = __webpack_require__(540);

      var _IconButton2 = _interopRequireDefault(_IconButton);

      var _menu = __webpack_require__(565);

      var _menu2 = _interopRequireDefault(_menu);

      var _Paper = __webpack_require__(577);

      var _Paper2 = _interopRequireDefault(_Paper);

      var _propTypes = __webpack_require__(543);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var _context$muiTheme = context.muiTheme;
        var appBar = _context$muiTheme.appBar;
        var iconButtonSize = _context$muiTheme.button.iconButtonSize;
        var zIndex = _context$muiTheme.zIndex;

        var flatButtonSize = 36;

        var styles = {
          root: {
            position: 'relative',
            zIndex: zIndex.appBar,
            width: '100%',
            display: 'flex',
            backgroundColor: appBar.color,
            paddingLeft: appBar.padding,
            paddingRight: appBar.padding,
          },
          title: {
            whiteSpace: 'nowrap',
            overflow: 'hidden',
            textOverflow: 'ellipsis',
            margin: 0,
            paddingTop: 0,
            letterSpacing: 0,
            fontSize: 24,
            fontWeight: appBar.titleFontWeight,
            color: appBar.textColor,
            height: appBar.height,
            lineHeight: appBar.height + 'px',
          },
          mainElement: {
            boxFlex: 1,
            flex: '1',
          },
          iconButtonStyle: {
            marginTop: (appBar.height - iconButtonSize) / 2,
            marginRight: 8,
            marginLeft: -16,
          },
          iconButtonIconStyle: {
            fill: appBar.textColor,
            color: appBar.textColor,
          },
          flatButton: {
            color: appBar.textColor,
            marginTop: (iconButtonSize - flatButtonSize) / 2 + 1,
          },
        };

        return styles;
      }

      var AppBar = (function (_Component) {
        _inherits(AppBar, _Component);

        function AppBar() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, AppBar);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    AppBar,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.handleTouchTapLeftIconButton = function (event) {
                if (_this.props.onLeftIconButtonTouchTap) {
                  _this.props.onLeftIconButtonTouchTap(event);
                }
              }),
              (_this.handleTouchTapRightIconButton = function (event) {
                if (_this.props.onRightIconButtonTouchTap) {
                  _this.props.onRightIconButtonTouchTap(event);
                }
              }),
              (_this.handleTitleTouchTap = function (event) {
                if (_this.props.onTitleTouchTap) {
                  _this.props.onTitleTouchTap(event);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(AppBar, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              true
                ? (0, _warning2.default)(
                    !this.props.iconElementLeft ||
                      !this.props.iconClassNameLeft,
                    'Properties iconElementLeft\n      and iconClassNameLeft cannot be simultaneously defined. Please use one or the other.',
                  )
                : void 0;

              true
                ? (0, _warning2.default)(
                    !this.props.iconElementRight ||
                      !this.props.iconClassNameRight,
                    'Properties iconElementRight\n      and iconClassNameRight cannot be simultaneously defined. Please use one or the other.',
                  )
                : void 0;
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var title = _props.title;
              var titleStyle = _props.titleStyle;
              var iconStyleLeft = _props.iconStyleLeft;
              var iconStyleRight = _props.iconStyleRight;
              var onTitleTouchTap = _props.onTitleTouchTap;
              var showMenuIconButton = _props.showMenuIconButton;
              var iconElementLeft = _props.iconElementLeft;
              var iconElementRight = _props.iconElementRight;
              var iconClassNameLeft = _props.iconClassNameLeft;
              var iconClassNameRight = _props.iconClassNameRight;
              var onLeftIconButtonTouchTap = _props.onLeftIconButtonTouchTap;
              var className = _props.className;
              var style = _props.style;
              var zDepth = _props.zDepth;
              var children = _props.children;

              var other = _objectWithoutProperties(_props, [
                'title',
                'titleStyle',
                'iconStyleLeft',
                'iconStyleRight',
                'onTitleTouchTap',
                'showMenuIconButton',
                'iconElementLeft',
                'iconElementRight',
                'iconClassNameLeft',
                'iconClassNameRight',
                'onLeftIconButtonTouchTap',
                'className',
                'style',
                'zDepth',
                'children',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              var menuElementLeft = void 0;
              var menuElementRight = void 0;

              // If the title is a string, wrap in an h1 tag.
              // If not, wrap in a div tag.
              var titleComponent =
                typeof title === 'string' || title instanceof String
                  ? 'h1'
                  : 'div';

              var titleElement = _react2.default.createElement(
                titleComponent,
                {
                  onTouchTap: this.handleTitleTouchTap,
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(
                      styles.title,
                      styles.mainElement,
                      titleStyle,
                    ),
                  ),
                },
                title,
              );

              var iconLeftStyle = (0, _simpleAssign2.default)(
                {},
                styles.iconButtonStyle,
                iconStyleLeft,
              );

              if (showMenuIconButton) {
                var iconElementLeftNode = iconElementLeft;

                if (iconElementLeft) {
                  if (iconElementLeft.type.muiName === 'IconButton') {
                    var iconElemLeftChildren = iconElementLeft.props.children;
                    var iconButtonIconStyle = !(
                      iconElemLeftChildren &&
                      iconElemLeftChildren.props &&
                      iconElemLeftChildren.props.color
                    )
                      ? styles.iconButtonIconStyle
                      : null;

                    iconElementLeftNode = _react2.default.cloneElement(
                      iconElementLeft,
                      {
                        iconStyle: (0, _simpleAssign2.default)(
                          {},
                          iconButtonIconStyle,
                          iconElementLeft.props.iconStyle,
                        ),
                      },
                    );
                  }

                  menuElementLeft = _react2.default.createElement(
                    'div',
                    { style: prepareStyles(iconLeftStyle) },
                    iconElementLeftNode,
                  );
                } else {
                  var child = iconClassNameLeft
                    ? ''
                    : _react2.default.createElement(_menu2.default, {
                        style: (0, _simpleAssign2.default)(
                          {},
                          styles.iconButtonIconStyle,
                        ),
                      });
                  menuElementLeft = _react2.default.createElement(
                    _IconButton2.default,
                    {
                      style: iconLeftStyle,
                      iconStyle: styles.iconButtonIconStyle,
                      iconClassName: iconClassNameLeft,
                      onTouchTap: this.handleTouchTapLeftIconButton,
                    },
                    child,
                  );
                }
              }

              var iconRightStyle = (0, _simpleAssign2.default)(
                {},
                styles.iconButtonStyle,
                {
                  marginRight: -16,
                  marginLeft: 'auto',
                },
                iconStyleRight,
              );

              if (iconElementRight) {
                var iconElementRightNode = iconElementRight;

                switch (iconElementRight.type.muiName) {
                  case 'IconMenu':
                  case 'IconButton':
                    var iconElemRightChildren = iconElementRight.props.children;
                    var _iconButtonIconStyle = !(
                      iconElemRightChildren &&
                      iconElemRightChildren.props &&
                      iconElemRightChildren.props.color
                    )
                      ? styles.iconButtonIconStyle
                      : null;

                    iconElementRightNode = _react2.default.cloneElement(
                      iconElementRight,
                      {
                        iconStyle: (0, _simpleAssign2.default)(
                          {},
                          _iconButtonIconStyle,
                          iconElementRight.props.iconStyle,
                        ),
                      },
                    );
                    break;

                  case 'FlatButton':
                    iconElementRightNode = _react2.default.cloneElement(
                      iconElementRight,
                      {
                        style: (0, _simpleAssign2.default)(
                          {},
                          styles.flatButton,
                          iconElementRight.props.style,
                        ),
                      },
                    );
                    break;

                  default:
                }

                menuElementRight = _react2.default.createElement(
                  'div',
                  { style: prepareStyles(iconRightStyle) },
                  iconElementRightNode,
                );
              } else if (iconClassNameRight) {
                menuElementRight = _react2.default.createElement(
                  _IconButton2.default,
                  {
                    style: iconRightStyle,
                    iconStyle: styles.iconButtonIconStyle,
                    iconClassName: iconClassNameRight,
                    onTouchTap: this.handleTouchTapRightIconButton,
                  },
                );
              }

              return _react2.default.createElement(
                _Paper2.default,
                _extends({}, other, {
                  rounded: false,
                  className: className,
                  style: (0, _simpleAssign2.default)({}, styles.root, style),
                  zDepth: zDepth,
                }),
                menuElementLeft,
                titleElement,
                menuElementRight,
                children,
              );
            },
          },
        ]);

        return AppBar;
      })(_react.Component);

      AppBar.muiName = 'AppBar';
      AppBar.propTypes = {
        /**
         * Can be used to render a tab inside an app bar for instance.
         */
        children: _react.PropTypes.node,
        /**
         * Applied to the app bar's root element.
         */
        className: _react.PropTypes.string,
        /**
         * The classname of the icon on the left of the app bar.
         * If you are using a stylesheet for your icons, enter the class name for the icon to be used here.
         */
        iconClassNameLeft: _react.PropTypes.string,
        /**
         * Similiar to the iconClassNameLeft prop except that
         * it applies to the icon displayed on the right of the app bar.
         */
        iconClassNameRight: _react.PropTypes.string,
        /**
         * The custom element to be displayed on the left side of the
         * app bar such as an SvgIcon.
         */
        iconElementLeft: _react.PropTypes.element,
        /**
         * Similiar to the iconElementLeft prop except that this element is displayed on the right of the app bar.
         */
        iconElementRight: _react.PropTypes.element,
        /**
         * Override the inline-styles of the element displayed on the left side of the app bar.
         */
        iconStyleLeft: _react.PropTypes.object,
        /**
         * Override the inline-styles of the element displayed on the right side of the app bar.
         */
        iconStyleRight: _react.PropTypes.object,
        /**
         * Callback function for when the left icon is selected via a touch tap.
         *
         * @param {object} event TouchTap event targeting the left `IconButton`.
         */
        onLeftIconButtonTouchTap: _react.PropTypes.func,
        /**
         * Callback function for when the right icon is selected via a touch tap.
         *
         * @param {object} event TouchTap event targeting the right `IconButton`.
         */
        onRightIconButtonTouchTap: _react.PropTypes.func,
        /**
         * Callback function for when the title text is selected via a touch tap.
         *
         * @param {object} event TouchTap event targeting the `title` node.
         */
        onTitleTouchTap: _react.PropTypes.func,
        /**
         * Determines whether or not to display the Menu icon next to the title.
         * Setting this prop to false will hide the icon.
         */
        showMenuIconButton: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The title to display on the app bar.
         */
        title: _react.PropTypes.node,
        /**
         * Override the inline-styles of the app bar's title element.
         */
        titleStyle: _react.PropTypes.object,
        /**
         * The zDepth of the component.
         * The shadow of the app bar is also dependent on this property.
         */
        zDepth: _propTypes2.default.zDepth,
      };
      AppBar.defaultProps = {
        showMenuIconButton: true,
        title: '',
        zDepth: 1,
      };
      AppBar.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = AppBar;

      /***/
    },
    /* 539 */
    /***/ function (module, exports) {
      module.exports = function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };

      /***/
    },
    /* 540 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _IconButton = __webpack_require__(541);

      var _IconButton2 = _interopRequireDefault(_IconButton);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _IconButton2.default;

      /***/
    },
    /* 541 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _propTypes = __webpack_require__(543);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _EnhancedButton = __webpack_require__(544);

      var _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);

      var _FontIcon = __webpack_require__(562);

      var _FontIcon2 = _interopRequireDefault(_FontIcon);

      var _Tooltip = __webpack_require__(564);

      var _Tooltip2 = _interopRequireDefault(_Tooltip);

      var _childUtils = __webpack_require__(545);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var baseTheme = context.muiTheme.baseTheme;

        return {
          root: {
            position: 'relative',
            boxSizing: 'border-box',
            overflow: 'visible',
            transition: _transitions2.default.easeOut(),
            padding: baseTheme.spacing.iconSize / 2,
            width: baseTheme.spacing.iconSize * 2,
            height: baseTheme.spacing.iconSize * 2,
            fontSize: 0,
          },
          tooltip: {
            boxSizing: 'border-box',
          },
          overlay: {
            position: 'relative',
            top: 0,
            width: '100%',
            height: '100%',
            background: baseTheme.palette.disabledColor,
          },
          disabled: {
            color: baseTheme.palette.disabledColor,
            fill: baseTheme.palette.disabledColor,
            cursor: 'not-allowed',
          },
        };
      }

      var IconButton = (function (_Component) {
        _inherits(IconButton, _Component);

        function IconButton() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, IconButton);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    IconButton,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                tooltipShown: false,
              }),
              (_this.handleBlur = function (event) {
                _this.hideTooltip();
                if (_this.props.onBlur) _this.props.onBlur(event);
              }),
              (_this.handleFocus = function (event) {
                _this.showTooltip();
                if (_this.props.onFocus) _this.props.onFocus(event);
              }),
              (_this.handleMouseLeave = function (event) {
                if (!_this.refs.button.isKeyboardFocused()) _this.hideTooltip();
                if (_this.props.onMouseLeave) _this.props.onMouseLeave(event);
              }),
              (_this.handleMouseOut = function (event) {
                if (_this.props.disabled) _this.hideTooltip();
                if (_this.props.onMouseOut) _this.props.onMouseOut(event);
              }),
              (_this.handleMouseEnter = function (event) {
                _this.showTooltip();
                if (_this.props.onMouseEnter) _this.props.onMouseEnter(event);
              }),
              (_this.handleKeyboardFocus = function (event, keyboardFocused) {
                if (keyboardFocused && !_this.props.disabled) {
                  _this.showTooltip();
                  if (_this.props.onFocus) _this.props.onFocus(event);
                } else if (!_this.state.hovered) {
                  _this.hideTooltip();
                  if (_this.props.onBlur) _this.props.onBlur(event);
                }

                if (_this.props.onKeyboardFocus) {
                  _this.props.onKeyboardFocus(event, keyboardFocused);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(IconButton, [
          {
            key: 'setKeyboardFocus',
            value: function setKeyboardFocus() {
              this.refs.button.setKeyboardFocus();
            },
          },
          {
            key: 'showTooltip',
            value: function showTooltip() {
              if (this.props.tooltip) {
                this.setState({ tooltipShown: true });
              }
            },
          },
          {
            key: 'hideTooltip',
            value: function hideTooltip() {
              if (this.props.tooltip) this.setState({ tooltipShown: false });
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var disabled = _props.disabled;
              var disableTouchRipple = _props.disableTouchRipple;
              var children = _props.children;
              var iconClassName = _props.iconClassName;
              var onKeyboardFocus = _props.onKeyboardFocus;
              var tooltip = _props.tooltip;
              var tooltipPositionProp = _props.tooltipPosition;
              var tooltipStyles = _props.tooltipStyles;
              var touch = _props.touch;
              var iconStyle = _props.iconStyle;

              var other = _objectWithoutProperties(_props, [
                'disabled',
                'disableTouchRipple',
                'children',
                'iconClassName',
                'onKeyboardFocus',
                'tooltip',
                'tooltipPosition',
                'tooltipStyles',
                'touch',
                'iconStyle',
              ]);

              var fonticon = void 0;

              var styles = getStyles(this.props, this.context);
              var tooltipPosition = tooltipPositionProp.split('-');

              var tooltipElement = tooltip
                ? _react2.default.createElement(_Tooltip2.default, {
                    ref: 'tooltip',
                    label: tooltip,
                    show: this.state.tooltipShown,
                    touch: touch,
                    style: (0, _simpleAssign2.default)(
                      styles.tooltip,
                      tooltipStyles,
                    ),
                    verticalPosition: tooltipPosition[0],
                    horizontalPosition: tooltipPosition[1],
                  })
                : null;

              if (iconClassName) {
                var iconHoverColor = iconStyle.iconHoverColor;

                var iconStyleFontIcon = _objectWithoutProperties(iconStyle, [
                  'iconHoverColor',
                ]);

                fonticon = _react2.default.createElement(
                  _FontIcon2.default,
                  {
                    className: iconClassName,
                    hoverColor: disabled ? null : iconHoverColor,
                    style: (0, _simpleAssign2.default)(
                      {},
                      disabled && styles.disabled,
                      iconStyleFontIcon,
                    ),
                    color: this.context.muiTheme.baseTheme.palette.textColor,
                  },
                  children,
                );
              }

              var childrenStyle = disabled
                ? (0, _simpleAssign2.default)({}, iconStyle, styles.disabled)
                : iconStyle;

              return _react2.default.createElement(
                _EnhancedButton2.default,
                _extends({}, other, {
                  ref: 'button',
                  centerRipple: true,
                  disabled: disabled,
                  style: (0, _simpleAssign2.default)(
                    styles.root,
                    this.props.style,
                  ),
                  disableTouchRipple: disableTouchRipple,
                  onBlur: this.handleBlur,
                  onFocus: this.handleFocus,
                  onMouseLeave: this.handleMouseLeave,
                  onMouseEnter: this.handleMouseEnter,
                  onMouseOut: this.handleMouseOut,
                  onKeyboardFocus: this.handleKeyboardFocus,
                }),
                tooltipElement,
                fonticon,
                (0, _childUtils.extendChildren)(children, {
                  style: childrenStyle,
                }),
              );
            },
          },
        ]);

        return IconButton;
      })(_react.Component);

      IconButton.muiName = 'IconButton';
      IconButton.propTypes = {
        /**
         * Can be used to pass a `FontIcon` element as the icon for the button.
         */
        children: _react.PropTypes.node,
        /**
         * The CSS class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * If true, the element's ripple effect will be disabled.
         */
        disableTouchRipple: _react.PropTypes.bool,
        /**
         * If true, the element will be disabled.
         */
        disabled: _react.PropTypes.bool,
        /**
         * The URL to link to when the button is clicked.
         */
        href: _react.PropTypes.string,
        /**
         * The CSS class name of the icon. Used for setting the icon with a stylesheet.
         */
        iconClassName: _react.PropTypes.string,
        /**
         * Override the inline-styles of the icon element.
         */
        iconStyle: _react.PropTypes.object,
        /** @ignore */
        onBlur: _react.PropTypes.func,
        /** @ignore */
        onFocus: _react.PropTypes.func,
        /**
         * Callback function fired when the element is focused or blurred by the keyboard.
         *
         * @param {object} event `focus` or `blur` event targeting the element.
         * @param {boolean} keyboardFocused Indicates whether the element is focused.
         */
        onKeyboardFocus: _react.PropTypes.func,
        /** @ignore */
        onMouseEnter: _react.PropTypes.func,
        /** @ignore */
        onMouseLeave: _react.PropTypes.func,
        /** @ignore */
        onMouseOut: _react.PropTypes.func,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The text to supply to the element's tooltip.
         */
        tooltip: _react.PropTypes.node,
        /**
         * The vertical and horizontal positions, respectively, of the element's tooltip.
         * Possible values are: "bottom-center", "top-center", "bottom-right", "top-right",
         * "bottom-left", and "top-left".
         */
        tooltipPosition: _propTypes2.default.cornersAndCenter,
        /**
         * Override the inline-styles of the tooltip element.
         */
        tooltipStyles: _react.PropTypes.object,
        /**
         * If true, increase the tooltip element's size.  Useful for increasing tooltip
         * readability on mobile devices.
         */
        touch: _react.PropTypes.bool,
      };
      IconButton.defaultProps = {
        disabled: false,
        disableTouchRipple: false,
        iconStyle: {},
        tooltipPosition: 'bottom-center',
        touch: false,
      };
      IconButton.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = IconButton;

      /***/
    },
    /* 542 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = {
        easeOutFunction: 'cubic-bezier(0.23, 1, 0.32, 1)',
        easeInOutFunction: 'cubic-bezier(0.445, 0.05, 0.55, 0.95)',

        easeOut: function easeOut(duration, property, delay, easeFunction) {
          easeFunction = easeFunction || this.easeOutFunction;

          if (
            property &&
            Object.prototype.toString.call(property) === '[object Array]'
          ) {
            var transitions = '';
            for (var i = 0; i < property.length; i++) {
              if (transitions) transitions += ',';
              transitions += this.create(
                duration,
                property[i],
                delay,
                easeFunction,
              );
            }

            return transitions;
          } else {
            return this.create(duration, property, delay, easeFunction);
          }
        },
        create: function create(duration, property, delay, easeFunction) {
          duration = duration || '450ms';
          property = property || 'all';
          delay = delay || '0ms';
          easeFunction = easeFunction || 'linear';

          return property + ' ' + duration + ' ' + easeFunction + ' ' + delay;
        },
      };

      /***/
    },
    /* 543 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var horizontal = _react.PropTypes.oneOf(['left', 'middle', 'right']);
      var vertical = _react.PropTypes.oneOf(['top', 'center', 'bottom']);

      exports.default = {
        corners: _react.PropTypes.oneOf([
          'bottom-left',
          'bottom-right',
          'top-left',
          'top-right',
        ]),

        horizontal: horizontal,

        vertical: vertical,

        origin: _react.PropTypes.shape({
          horizontal: horizontal,
          vertical: vertical,
        }),

        cornersAndCenter: _react.PropTypes.oneOf([
          'bottom-center',
          'bottom-left',
          'bottom-right',
          'top-center',
          'top-left',
          'top-right',
        ]),

        stringOrNumber: _react.PropTypes.oneOfType([
          _react.PropTypes.string,
          _react.PropTypes.number,
        ]),

        zDepth: _react.PropTypes.oneOf([0, 1, 2, 3, 4, 5]),
      };

      /***/
    },
    /* 544 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _childUtils = __webpack_require__(545);

      var _events = __webpack_require__(548);

      var _events2 = _interopRequireDefault(_events);

      var _keycode = __webpack_require__(549);

      var _keycode2 = _interopRequireDefault(_keycode);

      var _FocusRipple = __webpack_require__(550);

      var _FocusRipple2 = _interopRequireDefault(_FocusRipple);

      var _TouchRipple = __webpack_require__(558);

      var _TouchRipple2 = _interopRequireDefault(_TouchRipple);

      var _deprecatedPropType = __webpack_require__(561);

      var _deprecatedPropType2 = _interopRequireDefault(_deprecatedPropType);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var styleInjected = false;
      var listening = false;
      var tabPressed = false;

      function injectStyle() {
        if (!styleInjected) {
          // Remove inner padding and border in Firefox 4+.
          var style = document.createElement('style');
          style.innerHTML =
            '\n      button::-moz-focus-inner,\n      input::-moz-focus-inner {\n        border: 0;\n        padding: 0;\n      }\n    ';

          document.body.appendChild(style);
          styleInjected = true;
        }
      }

      function listenForTabPresses() {
        if (!listening) {
          _events2.default.on(window, 'keydown', function (event) {
            tabPressed = (0, _keycode2.default)(event) === 'tab';
          });
          listening = true;
        }
      }

      var EnhancedButton = (function (_Component) {
        _inherits(EnhancedButton, _Component);

        function EnhancedButton() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, EnhancedButton);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    EnhancedButton,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = { isKeyboardFocused: false }),
              (_this.handleKeyDown = function (event) {
                if (
                  !_this.props.disabled &&
                  !_this.props.disableKeyboardFocus
                ) {
                  if (
                    (0, _keycode2.default)(event) === 'enter' &&
                    _this.state.isKeyboardFocused
                  ) {
                    _this.handleTouchTap(event);
                  }
                  if (
                    (0, _keycode2.default)(event) === 'esc' &&
                    _this.state.isKeyboardFocused
                  ) {
                    _this.removeKeyboardFocus(event);
                  }
                }
                _this.props.onKeyDown(event);
              }),
              (_this.handleKeyUp = function (event) {
                if (
                  !_this.props.disabled &&
                  !_this.props.disableKeyboardFocus
                ) {
                  if (
                    (0, _keycode2.default)(event) === 'space' &&
                    _this.state.isKeyboardFocused
                  ) {
                    _this.handleTouchTap(event);
                  }
                }
                _this.props.onKeyUp(event);
              }),
              (_this.handleBlur = function (event) {
                _this.cancelFocusTimeout();
                _this.removeKeyboardFocus(event);
                _this.props.onBlur(event);
              }),
              (_this.handleFocus = function (event) {
                if (event) event.persist();
                if (
                  !_this.props.disabled &&
                  !_this.props.disableKeyboardFocus
                ) {
                  // setTimeout is needed because the focus event fires first
                  // Wait so that we can capture if this was a keyboard focus
                  // or touch focus
                  _this.focusTimeout = setTimeout(function () {
                    if (tabPressed) {
                      _this.setKeyboardFocus(event);
                      tabPressed = false;
                    }
                  }, 150);

                  _this.props.onFocus(event);
                }
              }),
              (_this.handleClick = function (event) {
                if (!_this.props.disabled) {
                  tabPressed = false;
                  _this.props.onClick(event);
                }
              }),
              (_this.handleTouchTap = function (event) {
                _this.cancelFocusTimeout();
                if (!_this.props.disabled) {
                  tabPressed = false;
                  _this.removeKeyboardFocus(event);
                  _this.props.onTouchTap(event);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(EnhancedButton, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              var _props = this.props;
              var disabled = _props.disabled;
              var disableKeyboardFocus = _props.disableKeyboardFocus;
              var keyboardFocused = _props.keyboardFocused;

              if (!disabled && keyboardFocused && !disableKeyboardFocus) {
                this.setState({ isKeyboardFocused: true });
              }
            },
          },
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              injectStyle();
              listenForTabPresses();
              if (this.state.isKeyboardFocused) {
                this.refs.enhancedButton.focus();
                this.props.onKeyboardFocus(null, true);
              }
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (
                (nextProps.disabled || nextProps.disableKeyboardFocus) &&
                this.state.isKeyboardFocused
              ) {
                this.setState({ isKeyboardFocused: false });
                if (nextProps.onKeyboardFocus) {
                  nextProps.onKeyboardFocus(null, false);
                }
              }
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              clearTimeout(this.focusTimeout);
            },
          },
          {
            key: 'isKeyboardFocused',
            value: function isKeyboardFocused() {
              return this.state.isKeyboardFocused;
            },
          },
          {
            key: 'removeKeyboardFocus',
            value: function removeKeyboardFocus(event) {
              if (this.state.isKeyboardFocused) {
                this.setState({ isKeyboardFocused: false });
                this.props.onKeyboardFocus(event, false);
              }
            },
          },
          {
            key: 'setKeyboardFocus',
            value: function setKeyboardFocus(event) {
              if (!this.state.isKeyboardFocused) {
                this.setState({ isKeyboardFocused: true });
                this.props.onKeyboardFocus(event, true);
              }
            },
          },
          {
            key: 'cancelFocusTimeout',
            value: function cancelFocusTimeout() {
              if (this.focusTimeout) {
                clearTimeout(this.focusTimeout);
                this.focusTimeout = null;
              }
            },
          },
          {
            key: 'createButtonChildren',
            value: function createButtonChildren() {
              var _props2 = this.props;
              var centerRipple = _props2.centerRipple;
              var children = _props2.children;
              var disabled = _props2.disabled;
              var disableFocusRipple = _props2.disableFocusRipple;
              var disableKeyboardFocus = _props2.disableKeyboardFocus;
              var disableTouchRipple = _props2.disableTouchRipple;
              var focusRippleColor = _props2.focusRippleColor;
              var focusRippleOpacity = _props2.focusRippleOpacity;
              var touchRippleColor = _props2.touchRippleColor;
              var touchRippleOpacity = _props2.touchRippleOpacity;
              var isKeyboardFocused = this.state.isKeyboardFocused;

              // Focus Ripple

              var focusRipple =
                isKeyboardFocused &&
                !disabled &&
                !disableFocusRipple &&
                !disableKeyboardFocus
                  ? _react2.default.createElement(_FocusRipple2.default, {
                      color: focusRippleColor,
                      opacity: focusRippleOpacity,
                      show: isKeyboardFocused,
                    })
                  : undefined;

              // Touch Ripple
              var touchRipple =
                !disabled && !disableTouchRipple
                  ? _react2.default.createElement(
                      _TouchRipple2.default,
                      {
                        centerRipple: centerRipple,
                        color: touchRippleColor,
                        opacity: touchRippleOpacity,
                      },
                      children,
                    )
                  : undefined;

              return (0, _childUtils.createChildFragment)({
                focusRipple: focusRipple,
                touchRipple: touchRipple,
                children: touchRipple ? undefined : children,
              });
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props3 = this.props;
              var centerRipple = _props3.centerRipple;
              var children = _props3.children;
              var containerElement = _props3.containerElement;
              var disabled = _props3.disabled;
              var disableFocusRipple = _props3.disableFocusRipple;
              var disableKeyboardFocus = _props3.disableKeyboardFocus;
              var disableTouchRipple = _props3.disableTouchRipple;
              var focusRippleColor = _props3.focusRippleColor;
              var focusRippleOpacity = _props3.focusRippleOpacity;
              var href = _props3.href;
              var keyboardFocused = _props3.keyboardFocused;
              var linkButton = _props3.linkButton;
              var touchRippleColor = _props3.touchRippleColor;
              var touchRippleOpacity = _props3.touchRippleOpacity;
              var onBlur = _props3.onBlur;
              var onClick = _props3.onClick;
              var onFocus = _props3.onFocus;
              var onKeyUp = _props3.onKeyUp;
              var onKeyDown = _props3.onKeyDown;
              var onKeyboardFocus = _props3.onKeyboardFocus;
              var onTouchTap = _props3.onTouchTap;
              var style = _props3.style;
              var tabIndex = _props3.tabIndex;
              var type = _props3.type;

              var other = _objectWithoutProperties(_props3, [
                'centerRipple',
                'children',
                'containerElement',
                'disabled',
                'disableFocusRipple',
                'disableKeyboardFocus',
                'disableTouchRipple',
                'focusRippleColor',
                'focusRippleOpacity',
                'href',
                'keyboardFocused',
                'linkButton',
                'touchRippleColor',
                'touchRippleOpacity',
                'onBlur',
                'onClick',
                'onFocus',
                'onKeyUp',
                'onKeyDown',
                'onKeyboardFocus',
                'onTouchTap',
                'style',
                'tabIndex',
                'type',
              ]);

              var _context$muiTheme = this.context.muiTheme;
              var prepareStyles = _context$muiTheme.prepareStyles;
              var enhancedButton = _context$muiTheme.enhancedButton;

              var mergedStyles = (0, _simpleAssign2.default)(
                {
                  border: 10,
                  boxSizing: 'border-box',
                  display: 'inline-block',
                  fontFamily: this.context.muiTheme.baseTheme.fontFamily,
                  WebkitTapHighlightColor: enhancedButton.tapHighlightColor, // Remove mobile color flashing (deprecated)
                  cursor: disabled ? 'default' : 'pointer',
                  textDecoration: 'none',
                  margin: 0,
                  padding: 0,
                  outline: 'none',
                  fontSize: 'inherit',
                  fontWeight: 'inherit',
                  /**
                   * This is needed so that ripples do not bleed
                   * past border radius.
                   * See: http://stackoverflow.com/questions/17298739/
                   * css-overflow-hidden-not-working-in-chrome-when-parent-has-border-radius-and-chil
                   */
                  transform:
                    disableTouchRipple && disableFocusRipple
                      ? null
                      : 'translate(0, 0)',
                  verticalAlign: href ? 'middle' : null,
                },
                style,
              );

              // Passing both background:none & backgroundColor can break due to object iteration order
              if (!mergedStyles.backgroundColor && !mergedStyles.background) {
                mergedStyles.background = 'none';
              }

              if (disabled && href) {
                return _react2.default.createElement(
                  'span',
                  _extends({}, other, {
                    style: mergedStyles,
                  }),
                  children,
                );
              }

              var buttonProps = _extends({}, other, {
                style: prepareStyles(mergedStyles),
                ref: 'enhancedButton',
                disabled: disabled,
                href: href,
                onBlur: this.handleBlur,
                onClick: this.handleClick,
                onFocus: this.handleFocus,
                onKeyUp: this.handleKeyUp,
                onKeyDown: this.handleKeyDown,
                onTouchTap: this.handleTouchTap,
                tabIndex: tabIndex,
                type: type,
              });
              var buttonChildren = this.createButtonChildren();

              if (_react2.default.isValidElement(containerElement)) {
                return _react2.default.cloneElement(
                  containerElement,
                  buttonProps,
                  buttonChildren,
                );
              }

              return _react2.default.createElement(
                href ? 'a' : containerElement,
                buttonProps,
                buttonChildren,
              );
            },
          },
        ]);

        return EnhancedButton;
      })(_react.Component);

      EnhancedButton.propTypes = {
        centerRipple: _react.PropTypes.bool,
        children: _react.PropTypes.node,
        containerElement: _react.PropTypes.oneOfType([
          _react.PropTypes.string,
          _react.PropTypes.element,
        ]),
        disableFocusRipple: _react.PropTypes.bool,
        disableKeyboardFocus: _react.PropTypes.bool,
        disableTouchRipple: _react.PropTypes.bool,
        disabled: _react.PropTypes.bool,
        focusRippleColor: _react.PropTypes.string,
        focusRippleOpacity: _react.PropTypes.number,
        href: _react.PropTypes.string,
        keyboardFocused: _react.PropTypes.bool,
        linkButton: (0, _deprecatedPropType2.default)(
          _react.PropTypes.bool,
          'LinkButton is no longer required when the `href` property is provided.\n      It will be removed with v0.16.0.',
        ),
        onBlur: _react.PropTypes.func,
        onClick: _react.PropTypes.func,
        onFocus: _react.PropTypes.func,
        onKeyDown: _react.PropTypes.func,
        onKeyUp: _react.PropTypes.func,
        onKeyboardFocus: _react.PropTypes.func,
        onMouseDown: _react.PropTypes.func,
        onMouseEnter: _react.PropTypes.func,
        onMouseLeave: _react.PropTypes.func,
        onMouseUp: _react.PropTypes.func,
        onTouchEnd: _react.PropTypes.func,
        onTouchStart: _react.PropTypes.func,
        onTouchTap: _react.PropTypes.func,
        style: _react.PropTypes.object,
        tabIndex: _react.PropTypes.number,
        touchRippleColor: _react.PropTypes.string,
        touchRippleOpacity: _react.PropTypes.number,
        type: _react.PropTypes.string,
      };
      EnhancedButton.defaultProps = {
        containerElement: 'button',
        onBlur: function onBlur() {},
        onClick: function onClick() {},
        onFocus: function onFocus() {},
        onKeyDown: function onKeyDown() {},
        onKeyUp: function onKeyUp() {},
        onKeyboardFocus: function onKeyboardFocus() {},
        onMouseDown: function onMouseDown() {},
        onMouseEnter: function onMouseEnter() {},
        onMouseLeave: function onMouseLeave() {},
        onMouseUp: function onMouseUp() {},
        onTouchEnd: function onTouchEnd() {},
        onTouchStart: function onTouchStart() {},
        onTouchTap: function onTouchTap() {},
        tabIndex: 0,
        type: 'button',
      };
      EnhancedButton.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = EnhancedButton;

      /***/
    },
    /* 545 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.createChildFragment = createChildFragment;
      exports.extendChildren = extendChildren;

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactAddonsCreateFragment = __webpack_require__(546);

      var _reactAddonsCreateFragment2 = _interopRequireDefault(
        _reactAddonsCreateFragment,
      );

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function createChildFragment(fragments) {
        var newFragments = {};
        var validChildrenCount = 0;
        var firstKey = void 0;

        // Only create non-empty key fragments
        for (var key in fragments) {
          var currentChild = fragments[key];

          if (currentChild) {
            if (validChildrenCount === 0) firstKey = key;
            newFragments[key] = currentChild;
            validChildrenCount++;
          }
        }

        if (validChildrenCount === 0) return undefined;
        if (validChildrenCount === 1) return newFragments[firstKey];
        return (0, _reactAddonsCreateFragment2.default)(newFragments);
      }

      function extendChildren(children, extendedProps, extendedChildren) {
        return _react2.default.isValidElement(children)
          ? _react2.default.Children.map(children, function (child) {
              var newProps =
                typeof extendedProps === 'function'
                  ? extendedProps(child)
                  : extendedProps;

              var newChildren =
                typeof extendedChildren === 'function'
                  ? extendedChildren(child)
                  : extendedChildren
                  ? extendedChildren
                  : child.props.children;

              return _react2.default.cloneElement(child, newProps, newChildren);
            })
          : children;
      }

      /***/
    },
    /* 546 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = __webpack_require__(547).create;

      /***/
    },
    /* 547 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2015-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactFragment
       */

      'use strict';

      var _prodInvariant = __webpack_require__(8);

      var ReactChildren = __webpack_require__(6);
      var ReactElement = __webpack_require__(10);

      var emptyFunction = __webpack_require__(13);
      var invariant = __webpack_require__(9);
      var warning = __webpack_require__(12);

      /**
       * We used to allow keyed objects to serve as a collection of ReactElements,
       * or nested sets. This allowed us a way to explicitly key a set or fragment of
       * components. This is now being replaced with an opaque data structure.
       * The upgrade path is to call React.addons.createFragment({ key: value }) to
       * create a keyed fragment. The resulting data structure is an array.
       */

      var numericPropertyRegex = /^\d+$/;

      var warnedAboutNumeric = false;

      var ReactFragment = {
        /**
         * Wrap a keyed object in an opaque proxy that warns you if you access any
         * of its properties.
         * See https://facebook.github.io/react/docs/create-fragment.html
         */
        create: function (object) {
          if (typeof object !== 'object' || !object || Array.isArray(object)) {
            true
              ? warning(
                  false,
                  'React.addons.createFragment only accepts a single object. Got: %s',
                  object,
                )
              : void 0;
            return object;
          }
          if (ReactElement.isValidElement(object)) {
            true
              ? warning(
                  false,
                  'React.addons.createFragment does not accept a ReactElement ' +
                    'without a wrapper object.',
                )
              : void 0;
            return object;
          }

          !(object.nodeType !== 1)
            ? true
              ? invariant(
                  false,
                  'React.addons.createFragment(...): Encountered an invalid child; DOM elements are not valid children of React components.',
                )
              : _prodInvariant('0')
            : void 0;

          var result = [];

          for (var key in object) {
            if (true) {
              if (!warnedAboutNumeric && numericPropertyRegex.test(key)) {
                true
                  ? warning(
                      false,
                      'React.addons.createFragment(...): Child objects should have ' +
                        'non-numeric keys so ordering is preserved.',
                    )
                  : void 0;
                warnedAboutNumeric = true;
              }
            }
            ReactChildren.mapIntoWithKeyPrefixInternal(
              object[key],
              result,
              key,
              emptyFunction.thatReturnsArgument,
            );
          }

          return result;
        },
      };

      module.exports = ReactFragment;

      /***/
    },
    /* 548 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = {
        once: function once(el, type, callback) {
          var typeArray = type ? type.split(' ') : [];
          var recursiveFunction = function recursiveFunction(event) {
            event.target.removeEventListener(event.type, recursiveFunction);
            return callback(event);
          };

          for (var i = typeArray.length - 1; i >= 0; i--) {
            this.on(el, typeArray[i], recursiveFunction);
          }
        },
        on: function on(el, type, callback) {
          if (el.addEventListener) {
            el.addEventListener(type, callback);
          } else {
            // IE8+ Support
            el.attachEvent('on' + type, function () {
              callback.call(el);
            });
          }
        },
        off: function off(el, type, callback) {
          if (el.removeEventListener) {
            el.removeEventListener(type, callback);
          } else {
            // IE8+ Support
            el.detachEvent('on' + type, callback);
          }
        },
        isKeyboard: function isKeyboard(event) {
          return ['keydown', 'keypress', 'keyup'].indexOf(event.type) !== -1;
        },
      };

      /***/
    },
    /* 549 */
    /***/ function (module, exports) {
      // Source: http://jsfiddle.net/vWx8V/
      // http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes

      /**
       * Conenience method returns corresponding value for given keyName or keyCode.
       *
       * @param {Mixed} keyCode {Number} or keyName {String}
       * @return {Mixed}
       * @api public
       */

      exports = module.exports = function (searchInput) {
        // Keyboard Events
        if (searchInput && 'object' === typeof searchInput) {
          var hasKeyCode =
            searchInput.which || searchInput.keyCode || searchInput.charCode;
          if (hasKeyCode) searchInput = hasKeyCode;
        }

        // Numbers
        if ('number' === typeof searchInput) return names[searchInput];

        // Everything else (cast to string)
        var search = String(searchInput);

        // check codes
        var foundNamedKey = codes[search.toLowerCase()];
        if (foundNamedKey) return foundNamedKey;

        // check aliases
        var foundNamedKey = aliases[search.toLowerCase()];
        if (foundNamedKey) return foundNamedKey;

        // weird character?
        if (search.length === 1) return search.charCodeAt(0);

        return undefined;
      };

      /**
       * Get by name
       *
       *   exports.code['enter'] // => 13
       */

      var codes = (exports.code = exports.codes = {
        backspace: 8,
        tab: 9,
        enter: 13,
        shift: 16,
        ctrl: 17,
        alt: 18,
        'pause/break': 19,
        'caps lock': 20,
        esc: 27,
        space: 32,
        'page up': 33,
        'page down': 34,
        end: 35,
        home: 36,
        left: 37,
        up: 38,
        right: 39,
        down: 40,
        insert: 45,
        delete: 46,
        command: 91,
        'left command': 91,
        'right command': 93,
        'numpad *': 106,
        'numpad +': 107,
        'numpad -': 109,
        'numpad .': 110,
        'numpad /': 111,
        'num lock': 144,
        'scroll lock': 145,
        'my computer': 182,
        'my calculator': 183,
        ';': 186,
        '=': 187,
        ',': 188,
        '-': 189,
        '.': 190,
        '/': 191,
        '`': 192,
        '[': 219,
        '\\': 220,
        ']': 221,
        "'": 222,
      });

      // Helper aliases

      var aliases = (exports.aliases = {
        windows: 91,
        '⇧': 16,
        '⌥': 18,
        '⌃': 17,
        '⌘': 91,
        ctl: 17,
        control: 17,
        option: 18,
        pause: 19,
        break: 19,
        caps: 20,
        return: 13,
        escape: 27,
        spc: 32,
        pgup: 33,
        pgdn: 34,
        ins: 45,
        del: 46,
        cmd: 91,
      });

      /*!
       * Programatically add the following
       */

      // lower case chars
      for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32;

      // numbers
      for (var i = 48; i < 58; i++) codes[i - 48] = i;

      // function keys
      for (i = 1; i < 13; i++) codes['f' + i] = i + 111;

      // numpad keys
      for (i = 0; i < 10; i++) codes['numpad ' + i] = i + 96;

      /**
       * Get by code
       *
       *   exports.name[13] // => 'Enter'
       */

      var names = (exports.names = exports.title = {}); // title for backward compat

      // Create reverse mapping
      for (i in codes) names[codes[i]] = i;

      // Add aliases
      for (var alias in aliases) {
        codes[alias] = aliases[alias];
      }

      /***/
    },
    /* 550 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _shallowEqual = __webpack_require__(551);

      var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

      var _autoPrefix = __webpack_require__(552);

      var _autoPrefix2 = _interopRequireDefault(_autoPrefix);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _ScaleIn = __webpack_require__(553);

      var _ScaleIn2 = _interopRequireDefault(_ScaleIn);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var pulsateDuration = 750;

      var FocusRipple = (function (_Component) {
        _inherits(FocusRipple, _Component);

        function FocusRipple() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, FocusRipple);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    FocusRipple,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.pulsate = function () {
                var innerCircle = _reactDom2.default.findDOMNode(
                  _this.refs.innerCircle,
                );
                if (!innerCircle) return;

                var startScale = 'scale(1)';
                var endScale = 'scale(0.85)';
                var currentScale = innerCircle.style.transform || startScale;
                var nextScale =
                  currentScale === startScale ? endScale : startScale;

                _autoPrefix2.default.set(
                  innerCircle.style,
                  'transform',
                  nextScale,
                );
                _this.timeout = setTimeout(_this.pulsate, pulsateDuration);
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(FocusRipple, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              if (this.props.show) {
                this.setRippleSize();
                this.pulsate();
              }
            },
          },
          {
            key: 'shouldComponentUpdate',
            value: function shouldComponentUpdate(nextProps, nextState) {
              return (
                !(0, _shallowEqual2.default)(this.props, nextProps) ||
                !(0, _shallowEqual2.default)(this.state, nextState)
              );
            },
          },
          {
            key: 'componentDidUpdate',
            value: function componentDidUpdate() {
              if (this.props.show) {
                this.setRippleSize();
                this.pulsate();
              } else {
                if (this.timeout) clearTimeout(this.timeout);
              }
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              clearTimeout(this.timeout);
            },
          },
          {
            key: 'getRippleElement',
            value: function getRippleElement(props) {
              var color = props.color;
              var innerStyle = props.innerStyle;
              var opacity = props.opacity;
              var _context$muiTheme = this.context.muiTheme;
              var prepareStyles = _context$muiTheme.prepareStyles;
              var ripple = _context$muiTheme.ripple;

              var innerStyles = (0, _simpleAssign2.default)(
                {
                  position: 'absolute',
                  height: '100%',
                  width: '100%',
                  borderRadius: '50%',
                  opacity: opacity ? opacity : 0.16,
                  backgroundColor: color || ripple.color,
                  transition: _transitions2.default.easeOut(
                    pulsateDuration + 'ms',
                    'transform',
                    null,
                    _transitions2.default.easeInOutFunction,
                  ),
                },
                innerStyle,
              );

              return _react2.default.createElement('div', {
                ref: 'innerCircle',
                style: prepareStyles(
                  (0, _simpleAssign2.default)({}, innerStyles),
                ),
              });
            },
          },
          {
            key: 'setRippleSize',
            value: function setRippleSize() {
              var el = _reactDom2.default.findDOMNode(this.refs.innerCircle);
              var height = el.offsetHeight;
              var width = el.offsetWidth;
              var size = Math.max(height, width);

              var oldTop = 0;
              // For browsers that don't support endsWith()
              if (el.style.top.indexOf('px', el.style.top.length - 2) !== -1) {
                oldTop = parseInt(el.style.top);
              }
              el.style.height = size + 'px';
              el.style.top = height / 2 - size / 2 + oldTop + 'px';
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var show = _props.show;
              var style = _props.style;

              var mergedRootStyles = (0, _simpleAssign2.default)(
                {
                  height: '100%',
                  width: '100%',
                  position: 'absolute',
                  top: 0,
                  left: 0,
                },
                style,
              );

              var ripple = show ? this.getRippleElement(this.props) : null;

              return _react2.default.createElement(
                _ScaleIn2.default,
                {
                  maxScale: 0.85,
                  style: mergedRootStyles,
                },
                ripple,
              );
            },
          },
        ]);

        return FocusRipple;
      })(_react.Component);

      FocusRipple.propTypes = {
        color: _react.PropTypes.string,
        innerStyle: _react.PropTypes.object,
        opacity: _react.PropTypes.number,
        show: _react.PropTypes.bool,
        style: _react.PropTypes.object,
      };
      FocusRipple.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = FocusRipple;

      /***/
    },
    /* 551 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _shallowEqual = __webpack_require__(220);

      var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _shallowEqual2.default;

      /***/
    },
    /* 552 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = {
        set: function set(style, key, value) {
          style[key] = value;
        },
      };

      /***/
    },
    /* 553 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactAddonsTransitionGroup = __webpack_require__(554);

      var _reactAddonsTransitionGroup2 = _interopRequireDefault(
        _reactAddonsTransitionGroup,
      );

      var _ScaleInChild = __webpack_require__(557);

      var _ScaleInChild2 = _interopRequireDefault(_ScaleInChild);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ScaleIn = (function (_Component) {
        _inherits(ScaleIn, _Component);

        function ScaleIn() {
          _classCallCheck(this, ScaleIn);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(ScaleIn).apply(this, arguments),
          );
        }

        _createClass(ScaleIn, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var children = _props.children;
              var childStyle = _props.childStyle;
              var enterDelay = _props.enterDelay;
              var maxScale = _props.maxScale;
              var minScale = _props.minScale;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'children',
                'childStyle',
                'enterDelay',
                'maxScale',
                'minScale',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var mergedRootStyles = (0, _simpleAssign2.default)(
                {},
                {
                  position: 'relative',
                  overflow: 'hidden',
                  height: '100%',
                },
                style,
              );

              var newChildren = _react2.default.Children.map(
                children,
                function (child) {
                  return _react2.default.createElement(
                    _ScaleInChild2.default,
                    {
                      key: child.key,
                      enterDelay: enterDelay,
                      maxScale: maxScale,
                      minScale: minScale,
                      style: childStyle,
                    },
                    child,
                  );
                },
              );

              return _react2.default.createElement(
                _reactAddonsTransitionGroup2.default,
                _extends({}, other, {
                  style: prepareStyles(mergedRootStyles),
                  component: 'div',
                }),
                newChildren,
              );
            },
          },
        ]);

        return ScaleIn;
      })(_react.Component);

      ScaleIn.propTypes = {
        childStyle: _react.PropTypes.object,
        children: _react.PropTypes.node,
        enterDelay: _react.PropTypes.number,
        maxScale: _react.PropTypes.number,
        minScale: _react.PropTypes.number,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      ScaleIn.defaultProps = {
        enterDelay: 0,
      };
      ScaleIn.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = ScaleIn;

      /***/
    },
    /* 554 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = __webpack_require__(555);

      /***/
    },
    /* 555 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactTransitionGroup
       */

      'use strict';

      var _assign = __webpack_require__(5);

      var React = __webpack_require__(4);
      var ReactInstanceMap = __webpack_require__(215);
      var ReactTransitionChildMapping = __webpack_require__(556);

      var emptyFunction = __webpack_require__(13);

      /**
       * A basis for animations. When children are declaratively added or removed,
       * special lifecycle hooks are called.
       * See https://facebook.github.io/react/docs/animation.html#low-level-api-reacttransitiongroup
       */
      var ReactTransitionGroup = React.createClass({
        displayName: 'ReactTransitionGroup',

        propTypes: {
          component: React.PropTypes.any,
          childFactory: React.PropTypes.func,
        },

        getDefaultProps: function () {
          return {
            component: 'span',
            childFactory: emptyFunction.thatReturnsArgument,
          };
        },

        getInitialState: function () {
          return {
            // TODO: can we get useful debug information to show at this point?
            children: ReactTransitionChildMapping.getChildMapping(
              this.props.children,
            ),
          };
        },

        componentWillMount: function () {
          this.currentlyTransitioningKeys = {};
          this.keysToEnter = [];
          this.keysToLeave = [];
        },

        componentDidMount: function () {
          var initialChildMapping = this.state.children;
          for (var key in initialChildMapping) {
            if (initialChildMapping[key]) {
              this.performAppear(key);
            }
          }
        },

        componentWillReceiveProps: function (nextProps) {
          var nextChildMapping;
          if (true) {
            nextChildMapping = ReactTransitionChildMapping.getChildMapping(
              nextProps.children,
              ReactInstanceMap.get(this)._debugID,
            );
          } else {
            nextChildMapping = ReactTransitionChildMapping.getChildMapping(
              nextProps.children,
            );
          }
          var prevChildMapping = this.state.children;

          this.setState({
            children: ReactTransitionChildMapping.mergeChildMappings(
              prevChildMapping,
              nextChildMapping,
            ),
          });

          var key;

          for (key in nextChildMapping) {
            var hasPrev =
              prevChildMapping && prevChildMapping.hasOwnProperty(key);
            if (
              nextChildMapping[key] &&
              !hasPrev &&
              !this.currentlyTransitioningKeys[key]
            ) {
              this.keysToEnter.push(key);
            }
          }

          for (key in prevChildMapping) {
            var hasNext =
              nextChildMapping && nextChildMapping.hasOwnProperty(key);
            if (
              prevChildMapping[key] &&
              !hasNext &&
              !this.currentlyTransitioningKeys[key]
            ) {
              this.keysToLeave.push(key);
            }
          }

          // If we want to someday check for reordering, we could do it here.
        },

        componentDidUpdate: function () {
          var keysToEnter = this.keysToEnter;
          this.keysToEnter = [];
          keysToEnter.forEach(this.performEnter);

          var keysToLeave = this.keysToLeave;
          this.keysToLeave = [];
          keysToLeave.forEach(this.performLeave);
        },

        performAppear: function (key) {
          this.currentlyTransitioningKeys[key] = true;

          var component = this.refs[key];

          if (component.componentWillAppear) {
            component.componentWillAppear(
              this._handleDoneAppearing.bind(this, key),
            );
          } else {
            this._handleDoneAppearing(key);
          }
        },

        _handleDoneAppearing: function (key) {
          var component = this.refs[key];
          if (component.componentDidAppear) {
            component.componentDidAppear();
          }

          delete this.currentlyTransitioningKeys[key];

          var currentChildMapping;
          if (true) {
            currentChildMapping = ReactTransitionChildMapping.getChildMapping(
              this.props.children,
              ReactInstanceMap.get(this)._debugID,
            );
          } else {
            currentChildMapping = ReactTransitionChildMapping.getChildMapping(
              this.props.children,
            );
          }

          if (
            !currentChildMapping ||
            !currentChildMapping.hasOwnProperty(key)
          ) {
            // This was removed before it had fully appeared. Remove it.
            this.performLeave(key);
          }
        },

        performEnter: function (key) {
          this.currentlyTransitioningKeys[key] = true;

          var component = this.refs[key];

          if (component.componentWillEnter) {
            component.componentWillEnter(
              this._handleDoneEntering.bind(this, key),
            );
          } else {
            this._handleDoneEntering(key);
          }
        },

        _handleDoneEntering: function (key) {
          var component = this.refs[key];
          if (component.componentDidEnter) {
            component.componentDidEnter();
          }

          delete this.currentlyTransitioningKeys[key];

          var currentChildMapping;
          if (true) {
            currentChildMapping = ReactTransitionChildMapping.getChildMapping(
              this.props.children,
              ReactInstanceMap.get(this)._debugID,
            );
          } else {
            currentChildMapping = ReactTransitionChildMapping.getChildMapping(
              this.props.children,
            );
          }

          if (
            !currentChildMapping ||
            !currentChildMapping.hasOwnProperty(key)
          ) {
            // This was removed before it had fully entered. Remove it.
            this.performLeave(key);
          }
        },

        performLeave: function (key) {
          this.currentlyTransitioningKeys[key] = true;

          var component = this.refs[key];
          if (component.componentWillLeave) {
            component.componentWillLeave(
              this._handleDoneLeaving.bind(this, key),
            );
          } else {
            // Note that this is somewhat dangerous b/c it calls setState()
            // again, effectively mutating the component before all the work
            // is done.
            this._handleDoneLeaving(key);
          }
        },

        _handleDoneLeaving: function (key) {
          var component = this.refs[key];

          if (component.componentDidLeave) {
            component.componentDidLeave();
          }

          delete this.currentlyTransitioningKeys[key];

          var currentChildMapping;
          if (true) {
            currentChildMapping = ReactTransitionChildMapping.getChildMapping(
              this.props.children,
              ReactInstanceMap.get(this)._debugID,
            );
          } else {
            currentChildMapping = ReactTransitionChildMapping.getChildMapping(
              this.props.children,
            );
          }

          if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {
            // This entered again before it fully left. Add it again.
            this.performEnter(key);
          } else {
            this.setState(function (state) {
              var newChildren = _assign({}, state.children);
              delete newChildren[key];
              return { children: newChildren };
            });
          }
        },

        render: function () {
          // TODO: we could get rid of the need for the wrapper node
          // by cloning a single child
          var childrenToRender = [];
          for (var key in this.state.children) {
            var child = this.state.children[key];
            if (child) {
              // You may need to apply reactive updates to a child as it is leaving.
              // The normal React way to do it won't work since the child will have
              // already been removed. In case you need this behavior you can provide
              // a childFactory function to wrap every child, even the ones that are
              // leaving.
              childrenToRender.push(
                React.cloneElement(this.props.childFactory(child), {
                  ref: key,
                  key: key,
                }),
              );
            }
          }

          // Do not forward ReactTransitionGroup props to primitive DOM nodes
          var props = _assign({}, this.props);
          delete props.transitionLeave;
          delete props.transitionName;
          delete props.transitionAppear;
          delete props.transitionEnter;
          delete props.childFactory;
          delete props.transitionLeaveTimeout;
          delete props.transitionEnterTimeout;
          delete props.transitionAppearTimeout;
          delete props.component;

          return React.createElement(
            this.props.component,
            props,
            childrenToRender,
          );
        },
      });

      module.exports = ReactTransitionGroup;

      /***/
    },
    /* 556 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * Copyright 2013-present, Facebook, Inc.
       * All rights reserved.
       *
       * This source code is licensed under the BSD-style license found in the
       * LICENSE file in the root directory of this source tree. An additional grant
       * of patent rights can be found in the PATENTS file in the same directory.
       *
       * @providesModule ReactTransitionChildMapping
       */

      'use strict';

      var flattenChildren = __webpack_require__(224);

      var ReactTransitionChildMapping = {
        /**
         * Given `this.props.children`, return an object mapping key to child. Just
         * simple syntactic sugar around flattenChildren().
         *
         * @param {*} children `this.props.children`
         * @param {number=} selfDebugID Optional debugID of the current internal instance.
         * @return {object} Mapping of key to child
         */
        getChildMapping: function (children, selfDebugID) {
          if (!children) {
            return children;
          }

          if (true) {
            return flattenChildren(children, selfDebugID);
          }

          return flattenChildren(children);
        },

        /**
         * When you're adding or removing children some may be added or removed in the
         * same render pass. We want to show *both* since we want to simultaneously
         * animate elements in and out. This function takes a previous set of keys
         * and a new set of keys and merges them with its best guess of the correct
         * ordering. In the future we may expose some of the utilities in
         * ReactMultiChild to make this easy, but for now React itself does not
         * directly have this concept of the union of prevChildren and nextChildren
         * so we implement it here.
         *
         * @param {object} prev prev children as returned from
         * `ReactTransitionChildMapping.getChildMapping()`.
         * @param {object} next next children as returned from
         * `ReactTransitionChildMapping.getChildMapping()`.
         * @return {object} a key set that contains all keys in `prev` and all keys
         * in `next` in a reasonable order.
         */
        mergeChildMappings: function (prev, next) {
          prev = prev || {};
          next = next || {};

          function getValueForKey(key) {
            if (next.hasOwnProperty(key)) {
              return next[key];
            } else {
              return prev[key];
            }
          }

          // For each key of `next`, the list of keys to insert before that key in
          // the combined list
          var nextKeysPending = {};

          var pendingKeys = [];
          for (var prevKey in prev) {
            if (next.hasOwnProperty(prevKey)) {
              if (pendingKeys.length) {
                nextKeysPending[prevKey] = pendingKeys;
                pendingKeys = [];
              }
            } else {
              pendingKeys.push(prevKey);
            }
          }

          var i;
          var childMapping = {};
          for (var nextKey in next) {
            if (nextKeysPending.hasOwnProperty(nextKey)) {
              for (i = 0; i < nextKeysPending[nextKey].length; i++) {
                var pendingNextKey = nextKeysPending[nextKey][i];
                childMapping[nextKeysPending[nextKey][i]] = getValueForKey(
                  pendingNextKey,
                );
              }
            }
            childMapping[nextKey] = getValueForKey(nextKey);
          }

          // Finally, add the keys which didn't appear before any key in `next`
          for (i = 0; i < pendingKeys.length; i++) {
            childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
          }

          return childMapping;
        },
      };

      module.exports = ReactTransitionChildMapping;

      /***/
    },
    /* 557 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _autoPrefix = __webpack_require__(552);

      var _autoPrefix2 = _interopRequireDefault(_autoPrefix);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ScaleInChild = (function (_Component) {
        _inherits(ScaleInChild, _Component);

        function ScaleInChild() {
          _classCallCheck(this, ScaleInChild);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(ScaleInChild).apply(this, arguments),
          );
        }

        _createClass(ScaleInChild, [
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              clearTimeout(this.enterTimer);
              clearTimeout(this.leaveTimer);
            },
          },
          {
            key: 'componentWillAppear',
            value: function componentWillAppear(callback) {
              this.initializeAnimation(callback);
            },
          },
          {
            key: 'componentWillEnter',
            value: function componentWillEnter(callback) {
              this.initializeAnimation(callback);
            },
          },
          {
            key: 'componentDidAppear',
            value: function componentDidAppear() {
              this.animate();
            },
          },
          {
            key: 'componentDidEnter',
            value: function componentDidEnter() {
              this.animate();
            },
          },
          {
            key: 'componentWillLeave',
            value: function componentWillLeave(callback) {
              var style = _reactDom2.default.findDOMNode(this).style;

              style.opacity = '0';
              _autoPrefix2.default.set(
                style,
                'transform',
                'scale(' + this.props.minScale + ')',
              );

              this.leaveTimer = setTimeout(callback, 450);
            },
          },
          {
            key: 'animate',
            value: function animate() {
              var style = _reactDom2.default.findDOMNode(this).style;

              style.opacity = '1';
              _autoPrefix2.default.set(
                style,
                'transform',
                'scale(' + this.props.maxScale + ')',
              );
            },
          },
          {
            key: 'initializeAnimation',
            value: function initializeAnimation(callback) {
              var style = _reactDom2.default.findDOMNode(this).style;

              style.opacity = '0';
              _autoPrefix2.default.set(style, 'transform', 'scale(0)');

              this.enterTimer = setTimeout(callback, this.props.enterDelay);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var children = _props.children;
              var enterDelay = _props.enterDelay;
              var maxScale = _props.maxScale;
              var minScale = _props.minScale;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'children',
                'enterDelay',
                'maxScale',
                'minScale',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var mergedRootStyles = (0, _simpleAssign2.default)(
                {},
                {
                  position: 'absolute',
                  height: '100%',
                  width: '100%',
                  top: 0,
                  left: 0,
                  transition: _transitions2.default.easeOut(null, [
                    'transform',
                    'opacity',
                  ]),
                },
                style,
              );

              return _react2.default.createElement(
                'div',
                _extends({}, other, { style: prepareStyles(mergedRootStyles) }),
                children,
              );
            },
          },
        ]);

        return ScaleInChild;
      })(_react.Component);

      ScaleInChild.propTypes = {
        children: _react.PropTypes.node,
        enterDelay: _react.PropTypes.number,
        maxScale: _react.PropTypes.number,
        minScale: _react.PropTypes.number,
        style: _react.PropTypes.object,
      };
      ScaleInChild.defaultProps = {
        enterDelay: 0,
        maxScale: 1,
        minScale: 0,
      };
      ScaleInChild.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = ScaleInChild;

      /***/
    },
    /* 558 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _reactAddonsTransitionGroup = __webpack_require__(554);

      var _reactAddonsTransitionGroup2 = _interopRequireDefault(
        _reactAddonsTransitionGroup,
      );

      var _dom = __webpack_require__(559);

      var _dom2 = _interopRequireDefault(_dom);

      var _CircleRipple = __webpack_require__(560);

      var _CircleRipple2 = _interopRequireDefault(_CircleRipple);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _toConsumableArray(arr) {
        if (Array.isArray(arr)) {
          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
            arr2[i] = arr[i];
          }
          return arr2;
        } else {
          return Array.from(arr);
        }
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function _toArray(arr) {
        return Array.isArray(arr) ? arr : Array.from(arr);
      }

      // Remove the first element of the array
      var shift = function shift(_ref) {
        var _ref2 = _toArray(_ref);

        var newArray = _ref2.slice(1);

        return newArray;
      };

      var TouchRipple = (function (_Component) {
        _inherits(TouchRipple, _Component);

        function TouchRipple(props, context) {
          _classCallCheck(this, TouchRipple);

          // Touch start produces a mouse down event for compat reasons. To avoid
          // showing ripples twice we skip showing a ripple for the first mouse down
          // after a touch start. Note we don't store ignoreNextMouseDown in this.state
          // to avoid re-rendering when we change it.
          var _this = _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(TouchRipple).call(this, props, context),
          );

          _this.handleMouseDown = function (event) {
            // only listen to left clicks
            if (event.button === 0) {
              _this.start(event, false);
            }
          };

          _this.handleMouseUp = function () {
            _this.end();
          };

          _this.handleMouseLeave = function () {
            _this.end();
          };

          _this.handleTouchStart = function (event) {
            event.stopPropagation();
            // If the user is swiping (not just tapping), save the position so we can
            // abort ripples if the user appears to be scrolling.
            if (_this.props.abortOnScroll && event.touches) {
              _this.startListeningForScrollAbort(event);
              _this.startTime = Date.now();
            }
            _this.start(event, true);
          };

          _this.handleTouchEnd = function () {
            _this.end();
          };

          _this.handleTouchMove = function (event) {
            // Stop trying to abort if we're already 300ms into the animation
            var timeSinceStart = Math.abs(Date.now() - _this.startTime);
            if (timeSinceStart > 300) {
              _this.stopListeningForScrollAbort();
              return;
            }

            // If the user is scrolling...
            var deltaY = Math.abs(event.touches[0].clientY - _this.firstTouchY);
            var deltaX = Math.abs(event.touches[0].clientX - _this.firstTouchX);
            // Call it a scroll after an arbitrary 6px (feels reasonable in testing)
            if (deltaY > 6 || deltaX > 6) {
              var currentRipples = _this.state.ripples;
              var ripple = currentRipples[0];
              // This clone will replace the ripple in ReactTransitionGroup with a
              // version that will disappear immediately when removed from the DOM
              var abortedRipple = _react2.default.cloneElement(ripple, {
                aborted: true,
              });
              // Remove the old ripple and replace it with the new updated one
              currentRipples = shift(currentRipples);
              currentRipples = [].concat(_toConsumableArray(currentRipples), [
                abortedRipple,
              ]);
              _this.setState({ ripples: currentRipples }, function () {
                // Call end after we've set the ripple to abort otherwise the setState
                // in end() merges with this and the ripple abort fails
                _this.end();
              });
            }
          };

          _this.ignoreNextMouseDown = false;

          _this.state = {
            // This prop allows us to only render the ReactTransitionGroup
            // on the first click of the component, making the inital render faster.
            hasRipples: false,
            nextKey: 0,
            ripples: [],
          };
          return _this;
        }

        _createClass(TouchRipple, [
          {
            key: 'start',
            value: function start(event, isRippleTouchGenerated) {
              var theme = this.context.muiTheme.ripple;

              if (this.ignoreNextMouseDown && !isRippleTouchGenerated) {
                this.ignoreNextMouseDown = false;
                return;
              }

              var ripples = this.state.ripples;

              // Add a ripple to the ripples array
              ripples = [].concat(_toConsumableArray(ripples), [
                _react2.default.createElement(_CircleRipple2.default, {
                  key: this.state.nextKey,
                  style: !this.props.centerRipple
                    ? this.getRippleStyle(event)
                    : {},
                  color: this.props.color || theme.color,
                  opacity: this.props.opacity,
                  touchGenerated: isRippleTouchGenerated,
                }),
              ]);

              this.ignoreNextMouseDown = isRippleTouchGenerated;
              this.setState({
                hasRipples: true,
                nextKey: this.state.nextKey + 1,
                ripples: ripples,
              });
            },
          },
          {
            key: 'end',
            value: function end() {
              var currentRipples = this.state.ripples;
              this.setState({
                ripples: shift(currentRipples),
              });
              if (this.props.abortOnScroll) {
                this.stopListeningForScrollAbort();
              }
            },

            // Check if the user seems to be scrolling and abort the animation if so
          },
          {
            key: 'startListeningForScrollAbort',
            value: function startListeningForScrollAbort(event) {
              this.firstTouchY = event.touches[0].clientY;
              this.firstTouchX = event.touches[0].clientX;
              // Note that when scolling Chrome throttles this event to every 200ms
              // Also note we don't listen for scroll events directly as there's no general
              // way to cover cases like scrolling within containers on the page
              document.body.addEventListener('touchmove', this.handleTouchMove);
            },
          },
          {
            key: 'stopListeningForScrollAbort',
            value: function stopListeningForScrollAbort() {
              document.body.removeEventListener(
                'touchmove',
                this.handleTouchMove,
              );
            },
          },
          {
            key: 'getRippleStyle',
            value: function getRippleStyle(event) {
              var style = {};
              var el = _reactDom2.default.findDOMNode(this);
              var elHeight = el.offsetHeight;
              var elWidth = el.offsetWidth;
              var offset = _dom2.default.offset(el);
              var isTouchEvent = event.touches && event.touches.length;
              var pageX = isTouchEvent ? event.touches[0].pageX : event.pageX;
              var pageY = isTouchEvent ? event.touches[0].pageY : event.pageY;
              var pointerX = pageX - offset.left;
              var pointerY = pageY - offset.top;
              var topLeftDiag = this.calcDiag(pointerX, pointerY);
              var topRightDiag = this.calcDiag(elWidth - pointerX, pointerY);
              var botRightDiag = this.calcDiag(
                elWidth - pointerX,
                elHeight - pointerY,
              );
              var botLeftDiag = this.calcDiag(pointerX, elHeight - pointerY);
              var rippleRadius = Math.max(
                topLeftDiag,
                topRightDiag,
                botRightDiag,
                botLeftDiag,
              );
              var rippleSize = rippleRadius * 2;
              var left = pointerX - rippleRadius;
              var top = pointerY - rippleRadius;

              style.height = rippleSize + 'px';
              style.width = rippleSize + 'px';
              style.top = top + 'px';
              style.left = left + 'px';

              return style;
            },
          },
          {
            key: 'calcDiag',
            value: function calcDiag(a, b) {
              return Math.sqrt(a * a + b * b);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var children = _props.children;
              var style = _props.style;
              var _state = this.state;
              var hasRipples = _state.hasRipples;
              var ripples = _state.ripples;
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var rippleGroup = void 0;

              if (hasRipples) {
                var mergedStyles = (0, _simpleAssign2.default)(
                  {
                    height: '100%',
                    width: '100%',
                    position: 'absolute',
                    top: 0,
                    left: 0,
                    overflow: 'hidden',
                  },
                  style,
                );

                rippleGroup = _react2.default.createElement(
                  _reactAddonsTransitionGroup2.default,
                  { style: prepareStyles(mergedStyles) },
                  ripples,
                );
              }

              return _react2.default.createElement(
                'div',
                {
                  onMouseUp: this.handleMouseUp,
                  onMouseDown: this.handleMouseDown,
                  onMouseLeave: this.handleMouseLeave,
                  onTouchStart: this.handleTouchStart,
                  onTouchEnd: this.handleTouchEnd,
                },
                rippleGroup,
                children,
              );
            },
          },
        ]);

        return TouchRipple;
      })(_react.Component);

      TouchRipple.propTypes = {
        abortOnScroll: _react.PropTypes.bool,
        centerRipple: _react.PropTypes.bool,
        children: _react.PropTypes.node,
        color: _react.PropTypes.string,
        opacity: _react.PropTypes.number,
        style: _react.PropTypes.object,
      };
      TouchRipple.defaultProps = {
        abortOnScroll: true,
      };
      TouchRipple.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = TouchRipple;

      /***/
    },
    /* 559 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = {
        isDescendant: function isDescendant(parent, child) {
          var node = child.parentNode;

          while (node !== null) {
            if (node === parent) return true;
            node = node.parentNode;
          }

          return false;
        },
        offset: function offset(el) {
          var rect = el.getBoundingClientRect();
          return {
            top: rect.top + document.body.scrollTop,
            left: rect.left + document.body.scrollLeft,
          };
        },
      };

      /***/
    },
    /* 560 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _shallowEqual = __webpack_require__(551);

      var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

      var _autoPrefix = __webpack_require__(552);

      var _autoPrefix2 = _interopRequireDefault(_autoPrefix);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CircleRipple = (function (_Component) {
        _inherits(CircleRipple, _Component);

        function CircleRipple() {
          _classCallCheck(this, CircleRipple);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(CircleRipple).apply(this, arguments),
          );
        }

        _createClass(CircleRipple, [
          {
            key: 'shouldComponentUpdate',
            value: function shouldComponentUpdate(nextProps) {
              return !(0, _shallowEqual2.default)(this.props, nextProps);
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              clearTimeout(this.enterTimer);
              clearTimeout(this.leaveTimer);
            },
          },
          {
            key: 'componentWillAppear',
            value: function componentWillAppear(callback) {
              this.initializeAnimation(callback);
            },
          },
          {
            key: 'componentWillEnter',
            value: function componentWillEnter(callback) {
              this.initializeAnimation(callback);
            },
          },
          {
            key: 'componentDidAppear',
            value: function componentDidAppear() {
              this.animate();
            },
          },
          {
            key: 'componentDidEnter',
            value: function componentDidEnter() {
              this.animate();
            },
          },
          {
            key: 'componentWillLeave',
            value: function componentWillLeave(callback) {
              var style = _reactDom2.default.findDOMNode(this).style;
              style.opacity = 0;
              // If the animation is aborted, remove from the DOM immediately
              var removeAfter = this.props.aborted ? 0 : 2000;
              this.enterTimer = setTimeout(callback, removeAfter);
            },
          },
          {
            key: 'animate',
            value: function animate() {
              var style = _reactDom2.default.findDOMNode(this).style;
              var transitionValue =
                _transitions2.default.easeOut('2s', 'opacity') +
                ', ' +
                _transitions2.default.easeOut('1s', 'transform');
              _autoPrefix2.default.set(style, 'transition', transitionValue);
              _autoPrefix2.default.set(style, 'transform', 'scale(1)');
            },
          },
          {
            key: 'initializeAnimation',
            value: function initializeAnimation(callback) {
              var style = _reactDom2.default.findDOMNode(this).style;
              style.opacity = this.props.opacity;
              _autoPrefix2.default.set(style, 'transform', 'scale(0)');
              this.leaveTimer = setTimeout(callback, 0);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var aborted = _props.aborted;
              var color = _props.color;
              var opacity = _props.opacity;
              var style = _props.style;
              var touchGenerated = _props.touchGenerated;

              var other = _objectWithoutProperties(_props, [
                'aborted',
                'color',
                'opacity',
                'style',
                'touchGenerated',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var mergedStyles = (0, _simpleAssign2.default)(
                {
                  position: 'absolute',
                  top: 0,
                  left: 0,
                  height: '100%',
                  width: '100%',
                  borderRadius: '50%',
                  backgroundColor: color,
                },
                style,
              );

              return _react2.default.createElement(
                'div',
                _extends({}, other, { style: prepareStyles(mergedStyles) }),
              );
            },
          },
        ]);

        return CircleRipple;
      })(_react.Component);

      CircleRipple.propTypes = {
        aborted: _react.PropTypes.bool,
        color: _react.PropTypes.string,
        opacity: _react.PropTypes.number,
        style: _react.PropTypes.object,
        touchGenerated: _react.PropTypes.bool,
      };
      CircleRipple.defaultProps = {
        opacity: 0.1,
        aborted: false,
      };
      CircleRipple.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = CircleRipple;

      /***/
    },
    /* 561 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = deprecated;

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var warned = {};
      /**
       * This module is taken from https://github.com/react-bootstrap/react-prop-types.
       * It's not a dependency to reduce build size / install time.
       * It should be pretty stable.
       */
      function deprecated(validator, reason) {
        return function validate(
          props,
          propName,
          componentName,
          location,
          propFullName,
        ) {
          var componentNameSafe = componentName || '<<anonymous>>';
          var propFullNameSafe = propFullName || propName;

          if (props[propName] != null) {
            var messageKey = componentName + '.' + propName;

            true
              ? (0, _warning2.default)(
                  warned[messageKey],
                  'The ' +
                    location +
                    ' `' +
                    propFullNameSafe +
                    '` of ' +
                    ('`' + componentNameSafe + '` is deprecated. ' + reason),
                )
              : void 0;

            warned[messageKey] = true;
          }

          for (
            var _len = arguments.length,
              args = Array(_len > 5 ? _len - 5 : 0),
              _key = 5;
            _key < _len;
            _key++
          ) {
            args[_key - 5] = arguments[_key];
          }

          return validator.apply(
            undefined,
            [props, propName, componentName, location, propFullName].concat(
              args,
            ),
          );
        };
      }

      /***/
    },
    /* 562 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _FontIcon = __webpack_require__(563);

      var _FontIcon2 = _interopRequireDefault(_FontIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _FontIcon2.default;

      /***/
    },
    /* 563 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context, state) {
        var color = props.color;
        var hoverColor = props.hoverColor;
        var baseTheme = context.muiTheme.baseTheme;

        var offColor = color || baseTheme.palette.textColor;
        var onColor = hoverColor || offColor;

        return {
          root: {
            color: state.hovered ? onColor : offColor,
            position: 'relative',
            fontSize: baseTheme.spacing.iconSize,
            display: 'inline-block',
            userSelect: 'none',
            transition: _transitions2.default.easeOut(),
          },
        };
      }

      var FontIcon = (function (_Component) {
        _inherits(FontIcon, _Component);

        function FontIcon() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, FontIcon);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    FontIcon,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                hovered: false,
              }),
              (_this.handleMouseLeave = function (event) {
                // hover is needed only when a hoverColor is defined
                if (_this.props.hoverColor !== undefined) {
                  _this.setState({ hovered: false });
                }
                if (_this.props.onMouseLeave) {
                  _this.props.onMouseLeave(event);
                }
              }),
              (_this.handleMouseEnter = function (event) {
                // hover is needed only when a hoverColor is defined
                if (_this.props.hoverColor !== undefined) {
                  _this.setState({ hovered: true });
                }
                if (_this.props.onMouseEnter) {
                  _this.props.onMouseEnter(event);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(FontIcon, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var hoverColor = _props.hoverColor;
              var onMouseLeave = _props.onMouseLeave;
              var onMouseEnter = _props.onMouseEnter;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'hoverColor',
                'onMouseLeave',
                'onMouseEnter',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);

              return _react2.default.createElement(
                'span',
                _extends({}, other, {
                  onMouseLeave: this.handleMouseLeave,
                  onMouseEnter: this.handleMouseEnter,
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(styles.root, style),
                  ),
                }),
              );
            },
          },
        ]);

        return FontIcon;
      })(_react.Component);

      FontIcon.muiName = 'FontIcon';
      FontIcon.propTypes = {
        /**
         * This is the font color of the font icon. If not specified,
         * this component will default to muiTheme.palette.textColor.
         */
        color: _react.PropTypes.string,
        /**
         * This is the icon color when the mouse hovers over the icon.
         */
        hoverColor: _react.PropTypes.string,
        /** @ignore */
        onMouseEnter: _react.PropTypes.func,
        /** @ignore */
        onMouseLeave: _react.PropTypes.func,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      FontIcon.defaultProps = {
        onMouseEnter: function onMouseEnter() {},
        onMouseLeave: function onMouseLeave() {},
      };
      FontIcon.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = FontIcon;

      /***/
    },
    /* 564 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context, state) {
        var verticalPosition = props.verticalPosition;
        var horizontalPosition = props.horizontalPosition;
        var touchMarginOffset = props.touch ? 10 : 0;
        var touchOffsetTop = props.touch ? -20 : -10;
        var offset =
          verticalPosition === 'bottom'
            ? 14 + touchMarginOffset
            : -14 - touchMarginOffset;

        var _context$muiTheme = context.muiTheme;
        var baseTheme = _context$muiTheme.baseTheme;
        var zIndex = _context$muiTheme.zIndex;
        var tooltip = _context$muiTheme.tooltip;

        var styles = {
          root: {
            position: 'absolute',
            fontFamily: baseTheme.fontFamily,
            fontSize: '10px',
            lineHeight: '22px',
            padding: '0 8px',
            zIndex: zIndex.tooltip,
            color: tooltip.color,
            overflow: 'hidden',
            top: -10000,
            borderRadius: 2,
            userSelect: 'none',
            opacity: 0,
            right: horizontalPosition === 'left' ? 12 : null,
            left:
              horizontalPosition === 'center'
                ? ((state.offsetWidth - 48) / 2) * -1
                : null,
            transition:
              _transitions2.default.easeOut('0ms', 'top', '450ms') +
              ', ' +
              _transitions2.default.easeOut('450ms', 'transform', '0ms') +
              ', ' +
              _transitions2.default.easeOut('450ms', 'opacity', '0ms'),
          },
          label: {
            position: 'relative',
            whiteSpace: 'nowrap',
          },
          ripple: {
            position: 'absolute',
            left:
              horizontalPosition === 'center'
                ? '50%'
                : horizontalPosition === 'left'
                ? '100%'
                : '0%',
            top: verticalPosition === 'bottom' ? 0 : '100%',
            transform: 'translate(-50%, -50%)',
            borderRadius: '50%',
            backgroundColor: 'transparent',
            transition:
              _transitions2.default.easeOut('0ms', 'width', '450ms') +
              ', ' +
              _transitions2.default.easeOut('0ms', 'height', '450ms') +
              ', ' +
              _transitions2.default.easeOut('450ms', 'backgroundColor', '0ms'),
          },
          rootWhenShown: {
            top: verticalPosition === 'top' ? touchOffsetTop : 36,
            opacity: 0.9,
            transform: 'translate(0px, ' + offset + 'px)',
            transition:
              _transitions2.default.easeOut('0ms', 'top', '0ms') +
              ', ' +
              _transitions2.default.easeOut('450ms', 'transform', '0ms') +
              ', ' +
              _transitions2.default.easeOut('450ms', 'opacity', '0ms'),
          },
          rootWhenTouched: {
            fontSize: '14px',
            lineHeight: '32px',
            padding: '0 16px',
          },
          rippleWhenShown: {
            backgroundColor: tooltip.rippleBackgroundColor,
            transition:
              _transitions2.default.easeOut('450ms', 'width', '0ms') +
              ', ' +
              _transitions2.default.easeOut('450ms', 'height', '0ms') +
              ', ' +
              _transitions2.default.easeOut('450ms', 'backgroundColor', '0ms'),
          },
        };

        return styles;
      }

      var Tooltip = (function (_Component) {
        _inherits(Tooltip, _Component);

        function Tooltip() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, Tooltip);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    Tooltip,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                offsetWidth: null,
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Tooltip, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.setRippleSize();
              this.setTooltipPosition();
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps() {
              this.setTooltipPosition();
            },
          },
          {
            key: 'componentDidUpdate',
            value: function componentDidUpdate() {
              this.setRippleSize();
            },
          },
          {
            key: 'setRippleSize',
            value: function setRippleSize() {
              var ripple = this.refs.ripple;
              var tooltip = this.refs.tooltip;
              var tooltipWidth =
                parseInt(tooltip.offsetWidth, 10) /
                (this.props.horizontalPosition === 'center' ? 2 : 1);
              var tooltipHeight = parseInt(tooltip.offsetHeight, 10);

              var rippleDiameter = Math.ceil(
                Math.sqrt(
                  Math.pow(tooltipHeight, 2) + Math.pow(tooltipWidth, 2),
                ) * 2,
              );
              if (this.props.show) {
                ripple.style.height = rippleDiameter + 'px';
                ripple.style.width = rippleDiameter + 'px';
              } else {
                ripple.style.width = '0px';
                ripple.style.height = '0px';
              }
            },
          },
          {
            key: 'setTooltipPosition',
            value: function setTooltipPosition() {
              this.setState({ offsetWidth: this.refs.tooltip.offsetWidth });
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var horizontalPosition = _props.horizontalPosition;
              var label = _props.label;
              var show = _props.show;
              var touch = _props.touch;
              var verticalPosition = _props.verticalPosition;

              var other = _objectWithoutProperties(_props, [
                'horizontalPosition',
                'label',
                'show',
                'touch',
                'verticalPosition',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  ref: 'tooltip',
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(
                      styles.root,
                      this.props.show && styles.rootWhenShown,
                      this.props.touch && styles.rootWhenTouched,
                      this.props.style,
                    ),
                  ),
                }),
                _react2.default.createElement('div', {
                  ref: 'ripple',
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(
                      styles.ripple,
                      this.props.show && styles.rippleWhenShown,
                    ),
                  ),
                }),
                _react2.default.createElement(
                  'span',
                  { style: prepareStyles(styles.label) },
                  label,
                ),
              );
            },
          },
        ]);

        return Tooltip;
      })(_react.Component);

      Tooltip.propTypes = {
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        horizontalPosition: _react.PropTypes.oneOf(['left', 'right', 'center']),
        label: _react.PropTypes.node.isRequired,
        show: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        touch: _react.PropTypes.bool,
        verticalPosition: _react.PropTypes.oneOf(['top', 'bottom']),
      };
      Tooltip.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Tooltip;

      /***/
    },
    /* 565 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var NavigationMenu = function NavigationMenu(props) {
        return _react2.default.createElement(
          _SvgIcon2.default,
          props,
          _react2.default.createElement('path', {
            d: 'M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z',
          }),
        );
      };
      NavigationMenu = (0, _pure2.default)(NavigationMenu);
      NavigationMenu.displayName = 'NavigationMenu';
      NavigationMenu.muiName = 'SvgIcon';

      exports.default = NavigationMenu;

      /***/
    },
    /* 566 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _shouldUpdate = __webpack_require__(567);

      var _shouldUpdate2 = _interopRequireDefault(_shouldUpdate);

      var _shallowEqual = __webpack_require__(551);

      var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

      var _createHelper = __webpack_require__(568);

      var _createHelper2 = _interopRequireDefault(_createHelper);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var pure = (0, _shouldUpdate2.default)(function (props, nextProps) {
        return !(0, _shallowEqual2.default)(props, nextProps);
      });

      exports.default = (0, _createHelper2.default)(pure, 'pure', true, true);

      /***/
    },
    /* 567 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _react = __webpack_require__(3);

      var _createHelper = __webpack_require__(568);

      var _createHelper2 = _interopRequireDefault(_createHelper);

      var _createEagerFactory = __webpack_require__(571);

      var _createEagerFactory2 = _interopRequireDefault(_createEagerFactory);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var shouldUpdate = function shouldUpdate(test) {
        return function (BaseComponent) {
          var factory = (0, _createEagerFactory2.default)(BaseComponent);
          return (function (_Component) {
            _inherits(_class, _Component);

            function _class() {
              _classCallCheck(this, _class);

              return _possibleConstructorReturn(
                this,
                _Component.apply(this, arguments),
              );
            }

            _class.prototype.shouldComponentUpdate = function shouldComponentUpdate(
              nextProps,
            ) {
              return test(this.props, nextProps);
            };

            _class.prototype.render = function render() {
              return factory(this.props);
            };

            return _class;
          })(_react.Component);
        };
      };

      exports.default = (0, _createHelper2.default)(
        shouldUpdate,
        'shouldUpdate',
      );

      /***/
    },
    /* 568 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;
      var createHelper = function createHelper(func, helperName) {
        var setDisplayName =
          arguments.length <= 2 || arguments[2] === undefined
            ? true
            : arguments[2];
        var noArgs =
          arguments.length <= 3 || arguments[3] === undefined
            ? false
            : arguments[3];

        if ('development' !== 'production' && setDisplayName) {
          var _ret = (function () {
            /* eslint-disable global-require */
            var wrapDisplayName = __webpack_require__(569).default;
            /* eslint-enable global-require */

            if (noArgs) {
              return {
                v: function v(BaseComponent) {
                  var Component = func(BaseComponent);
                  Component.displayName = wrapDisplayName(
                    BaseComponent,
                    helperName,
                  );
                  return Component;
                },
              };
            }

            return {
              v: function v() {
                for (
                  var _len = arguments.length, args = Array(_len), _key = 0;
                  _key < _len;
                  _key++
                ) {
                  args[_key] = arguments[_key];
                }

                if (args.length > func.length) {
                  /* eslint-disable */
                  console.error(
                    /* eslint-enable */
                    'Too many arguments passed to ' +
                      helperName +
                      '(). It should called ' +
                      ('like so: ' + helperName + '(...args)(BaseComponent).'),
                  );
                }

                return function (BaseComponent) {
                  var Component = func.apply(undefined, args)(BaseComponent);
                  Component.displayName = wrapDisplayName(
                    BaseComponent,
                    helperName,
                  );
                  return Component;
                };
              },
            };
          })();

          if (typeof _ret === 'object') return _ret.v;
        }

        return func;
      };

      exports.default = createHelper;

      /***/
    },
    /* 569 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _getDisplayName = __webpack_require__(570);

      var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {
        return (
          hocName + '(' + (0, _getDisplayName2.default)(BaseComponent) + ')'
        );
      };

      exports.default = wrapDisplayName;

      /***/
    },
    /* 570 */
    /***/ function (module, exports) {
      'use strict';

      exports.__esModule = true;
      var getDisplayName = function getDisplayName(Component) {
        if (typeof Component === 'string') {
          return Component;
        }

        if (!Component) {
          return undefined;
        }

        return Component.displayName || Component.name || 'Component';
      };

      exports.default = getDisplayName;

      /***/
    },
    /* 571 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _createEagerElementUtil = __webpack_require__(572);

      var _createEagerElementUtil2 = _interopRequireDefault(
        _createEagerElementUtil,
      );

      var _isReferentiallyTransparentFunctionComponent = __webpack_require__(
        573,
      );

      var _isReferentiallyTransparentFunctionComponent2 = _interopRequireDefault(
        _isReferentiallyTransparentFunctionComponent,
      );

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var createFactory = function createFactory(type) {
        var isReferentiallyTransparent = (0,
        _isReferentiallyTransparentFunctionComponent2.default)(type);
        return function (p, c) {
          return (0, _createEagerElementUtil2.default)(
            false,
            isReferentiallyTransparent,
            type,
            p,
            c,
          );
        };
      };

      exports.default = createFactory;

      /***/
    },
    /* 572 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var createEagerElementUtil = function createEagerElementUtil(
        hasKey,
        isReferentiallyTransparent,
        type,
        props,
        children,
      ) {
        if (!hasKey && isReferentiallyTransparent) {
          if (children) {
            return type(_extends({}, props, { children: children }));
          }
          return type(props);
        }

        var Component = type;

        if (children) {
          return _react2.default.createElement(Component, props, children);
        }

        return _react2.default.createElement(Component, props);
      };

      exports.default = createEagerElementUtil;

      /***/
    },
    /* 573 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      exports.__esModule = true;

      var _isClassComponent = __webpack_require__(574);

      var _isClassComponent2 = _interopRequireDefault(_isClassComponent);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var isReferentiallyTransparentFunctionComponent = function isReferentiallyTransparentFunctionComponent(
        Component,
      ) {
        return Boolean(
          typeof Component === 'function' &&
            !(0, _isClassComponent2.default)(Component) &&
            !Component.defaultProps &&
            !Component.contextTypes &&
            !Component.propTypes,
        );
      };

      exports.default = isReferentiallyTransparentFunctionComponent;

      /***/
    },
    /* 574 */
    /***/ function (module, exports) {
      'use strict';

      exports.__esModule = true;
      var isClassComponent = function isClassComponent(Component) {
        return Boolean(
          Component &&
            Component.prototype &&
            typeof Component.prototype.isReactComponent === 'object',
        );
      };

      exports.default = isClassComponent;

      /***/
    },
    /* 575 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _SvgIcon = __webpack_require__(576);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _SvgIcon2.default;

      /***/
    },
    /* 576 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var SvgIcon = (function (_Component) {
        _inherits(SvgIcon, _Component);

        function SvgIcon() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, SvgIcon);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    SvgIcon,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                hovered: false,
              }),
              (_this.handleMouseLeave = function (event) {
                _this.setState({ hovered: false });
                _this.props.onMouseLeave(event);
              }),
              (_this.handleMouseEnter = function (event) {
                _this.setState({ hovered: true });
                _this.props.onMouseEnter(event);
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(SvgIcon, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var children = _props.children;
              var color = _props.color;
              var hoverColor = _props.hoverColor;
              var onMouseEnter = _props.onMouseEnter;
              var onMouseLeave = _props.onMouseLeave;
              var style = _props.style;
              var viewBox = _props.viewBox;

              var other = _objectWithoutProperties(_props, [
                'children',
                'color',
                'hoverColor',
                'onMouseEnter',
                'onMouseLeave',
                'style',
                'viewBox',
              ]);

              var _context$muiTheme = this.context.muiTheme;
              var svgIcon = _context$muiTheme.svgIcon;
              var prepareStyles = _context$muiTheme.prepareStyles;

              var offColor = color ? color : 'currentColor';
              var onColor = hoverColor ? hoverColor : offColor;

              var mergedStyles = (0, _simpleAssign2.default)(
                {
                  display: 'inline-block',
                  color: svgIcon.color,
                  fill: this.state.hovered ? onColor : offColor,
                  height: 24,
                  width: 24,
                  userSelect: 'none',
                  transition: _transitions2.default.easeOut(),
                },
                style,
              );

              return _react2.default.createElement(
                'svg',
                _extends({}, other, {
                  onMouseEnter: this.handleMouseEnter,
                  onMouseLeave: this.handleMouseLeave,
                  style: prepareStyles(mergedStyles),
                  viewBox: viewBox,
                }),
                children,
              );
            },
          },
        ]);

        return SvgIcon;
      })(_react.Component);

      SvgIcon.muiName = 'SvgIcon';
      SvgIcon.propTypes = {
        /**
         * Elements passed into the SVG Icon.
         */
        children: _react.PropTypes.node,
        /**
         * This is the fill color of the svg icon.
         * If not specified, this component will default
         * to muiTheme.palette.textColor.
         */
        color: _react.PropTypes.string,
        /**
         * This is the icon color when the mouse hovers over the icon.
         */
        hoverColor: _react.PropTypes.string,
        /** @ignore */
        onMouseEnter: _react.PropTypes.func,
        /** @ignore */
        onMouseLeave: _react.PropTypes.func,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * Allows you to redefine what the coordinates
         * without units mean inside an svg element. For example,
         * if the SVG element is 500 (width) by 200 (height), and you
         * pass viewBox="0 0 50 20", this means that the coordinates inside
         * the svg will go from the top left corner (0,0) to bottom right (50,20)
         * and each unit will be worth 10px.
         */
        viewBox: _react.PropTypes.string,
      };
      SvgIcon.defaultProps = {
        onMouseEnter: function onMouseEnter() {},
        onMouseLeave: function onMouseLeave() {},
        viewBox: '0 0 24 24',
      };
      SvgIcon.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = SvgIcon;

      /***/
    },
    /* 577 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _Paper = __webpack_require__(578);

      var _Paper2 = _interopRequireDefault(_Paper);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _Paper2.default;

      /***/
    },
    /* 578 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(543);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var rounded = props.rounded;
        var circle = props.circle;
        var transitionEnabled = props.transitionEnabled;
        var zDepth = props.zDepth;
        var _context$muiTheme = context.muiTheme;
        var baseTheme = _context$muiTheme.baseTheme;
        var paper = _context$muiTheme.paper;

        return {
          root: {
            color: paper.color,
            backgroundColor: paper.backgroundColor,
            transition: transitionEnabled && _transitions2.default.easeOut(),
            boxSizing: 'border-box',
            fontFamily: baseTheme.fontFamily,
            WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
            boxShadow: paper.zDepthShadows[zDepth - 1], // No shadow for 0 depth papers
            borderRadius: circle ? '50%' : rounded ? '2px' : '0px',
          },
        };
      }

      var Paper = (function (_Component) {
        _inherits(Paper, _Component);

        function Paper() {
          _classCallCheck(this, Paper);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(Paper).apply(this, arguments),
          );
        }

        _createClass(Paper, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var children = _props.children;
              var circle = _props.circle;
              var rounded = _props.rounded;
              var style = _props.style;
              var transitionEnabled = _props.transitionEnabled;
              var zDepth = _props.zDepth;

              var other = _objectWithoutProperties(_props, [
                'children',
                'circle',
                'rounded',
                'style',
                'transitionEnabled',
                'zDepth',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(styles.root, style),
                  ),
                }),
                children,
              );
            },
          },
        ]);

        return Paper;
      })(_react.Component);

      Paper.propTypes = {
        /**
         * Children passed into the paper element.
         */
        children: _react.PropTypes.node,
        /**
         * Set to true to generate a circlular paper container.
         */
        circle: _react.PropTypes.bool,
        /**
         * By default, the paper container will have a border radius.
         * Set this to false to generate a container with sharp corners.
         */
        rounded: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * Set to false to disable CSS transitions for the paper element.
         */
        transitionEnabled: _react.PropTypes.bool,
        /**
         * This number represents the zDepth of the paper shadow.
         */
        zDepth: _propTypes2.default.zDepth,
      };
      Paper.defaultProps = {
        circle: false,
        rounded: true,
        transitionEnabled: true,
        zDepth: 1,
      };
      Paper.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Paper;

      /***/
    },
    /* 579 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _AutoComplete = __webpack_require__(580);

      var _AutoComplete2 = _interopRequireDefault(_AutoComplete);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _AutoComplete2.default;

      /***/
    },
    /* 580 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function (obj) {
              return typeof obj;
            }
          : function (obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol
                ? 'symbol'
                : typeof obj;
            };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _keycode = __webpack_require__(549);

      var _keycode2 = _interopRequireDefault(_keycode);

      var _TextField = __webpack_require__(581);

      var _TextField2 = _interopRequireDefault(_TextField);

      var _Menu = __webpack_require__(589);

      var _Menu2 = _interopRequireDefault(_Menu);

      var _MenuItem = __webpack_require__(596);

      var _MenuItem2 = _interopRequireDefault(_MenuItem);

      var _Divider = __webpack_require__(609);

      var _Divider2 = _interopRequireDefault(_Divider);

      var _Popover = __webpack_require__(598);

      var _Popover2 = _interopRequireDefault(_Popover);

      var _propTypes = __webpack_require__(543);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      var _deprecatedPropType = __webpack_require__(561);

      var _deprecatedPropType2 = _interopRequireDefault(_deprecatedPropType);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context, state) {
        var anchorEl = state.anchorEl;
        var fullWidth = props.fullWidth;

        var styles = {
          root: {
            display: 'inline-block',
            position: 'relative',
            width: fullWidth ? '100%' : 256,
          },
          menu: {
            width: '100%',
          },
          list: {
            display: 'block',
            width: fullWidth ? '100%' : 256,
          },
          innerDiv: {
            overflow: 'hidden',
          },
        };

        if (anchorEl && fullWidth) {
          styles.popover = {
            width: anchorEl.clientWidth,
          };
        }

        return styles;
      }

      var AutoComplete = (function (_Component) {
        _inherits(AutoComplete, _Component);

        function AutoComplete() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, AutoComplete);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    AutoComplete,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                anchorEl: null,
                focusTextField: true,
                open: false,
                searchText: undefined,
              }),
              (_this.handleRequestClose = function () {
                // Only take into account the Popover clickAway when we are
                // not focusing the TextField.
                if (!_this.state.focusTextField) {
                  _this.close();
                }
              }),
              (_this.handleMouseDown = function (event) {
                // Keep the TextField focused
                event.preventDefault();
              }),
              (_this.handleItemTouchTap = function (event, child) {
                var dataSource = _this.props.dataSource;

                var index = parseInt(child.key, 10);
                var chosenRequest = dataSource[index];
                var searchText = _this.chosenRequestText(chosenRequest);

                _this.timerTouchTapCloseId = setTimeout(function () {
                  _this.timerTouchTapCloseId = null;

                  _this.setState({
                    searchText: searchText,
                  });
                  _this.close();
                  _this.props.onNewRequest(chosenRequest, index);
                }, _this.props.menuCloseDelay);
              }),
              (_this.chosenRequestText = function (chosenRequest) {
                if (typeof chosenRequest === 'string') {
                  return chosenRequest;
                } else {
                  return chosenRequest[_this.props.dataSourceConfig.text];
                }
              }),
              (_this.handleEscKeyDown = function () {
                _this.close();
              }),
              (_this.handleKeyDown = function (event) {
                if (_this.props.onKeyDown) _this.props.onKeyDown(event);

                switch ((0, _keycode2.default)(event)) {
                  case 'enter':
                    _this.close();
                    var searchText = _this.state.searchText;
                    if (searchText !== '') {
                      _this.props.onNewRequest(searchText, -1);
                    }
                    break;

                  case 'esc':
                    _this.close();
                    break;

                  case 'down':
                    event.preventDefault();
                    _this.setState({
                      open: true,
                      focusTextField: false,
                      anchorEl: _reactDom2.default.findDOMNode(
                        _this.refs.searchTextField,
                      ),
                    });
                    break;

                  default:
                    break;
                }
              }),
              (_this.handleChange = function (event) {
                var searchText = event.target.value;

                // Make sure that we have a new searchText.
                // Fix an issue with a Cordova Webview
                if (searchText === _this.state.searchText) {
                  return;
                }

                _this.setState(
                  {
                    searchText: searchText,
                    open: true,
                    anchorEl: _reactDom2.default.findDOMNode(
                      _this.refs.searchTextField,
                    ),
                  },
                  function () {
                    _this.props.onUpdateInput(
                      searchText,
                      _this.props.dataSource,
                    );
                  },
                );
              }),
              (_this.handleBlur = function (event) {
                if (
                  _this.state.focusTextField &&
                  _this.timerTouchTapCloseId === null
                ) {
                  _this.close();
                }

                if (_this.props.onBlur) {
                  _this.props.onBlur(event);
                }
              }),
              (_this.handleFocus = function (event) {
                if (
                  !_this.state.open &&
                  (_this.props.triggerUpdateOnFocus || _this.props.openOnFocus)
                ) {
                  _this.setState({
                    open: true,
                    anchorEl: _reactDom2.default.findDOMNode(
                      _this.refs.searchTextField,
                    ),
                  });
                }

                _this.setState({
                  focusTextField: true,
                });

                if (_this.props.onFocus) {
                  _this.props.onFocus(event);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(AutoComplete, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              this.requestsList = [];
              this.setState({
                open: this.props.open,
                searchText: this.props.searchText,
              });
              this.timerTouchTapCloseId = null;
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (this.props.searchText !== nextProps.searchText) {
                this.setState({
                  searchText: nextProps.searchText,
                });
              }
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              clearTimeout(this.timerTouchTapCloseId);
            },
          },
          {
            key: 'close',
            value: function close() {
              this.setState({
                open: false,
                anchorEl: null,
              });
            },
          },
          {
            key: 'setValue',
            value: function setValue(textValue) {
              true
                ? (0, _warning2.default)(
                    false,
                    'setValue() is deprecated, use the searchText property.\n      It will be removed with v0.16.0.',
                  )
                : void 0;

              this.setState({
                searchText: textValue,
              });
            },
          },
          {
            key: 'getValue',
            value: function getValue() {
              true
                ? (0, _warning2.default)(
                    false,
                    'getValue() is deprecated. It will be removed with v0.16.0.',
                  )
                : void 0;

              return this.state.searchText;
            },
          },
          {
            key: 'blur',
            value: function blur() {
              this.refs.searchTextField.blur();
            },
          },
          {
            key: 'focus',
            value: function focus() {
              this.refs.searchTextField.focus();
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              var _props = this.props;
              var anchorOrigin = _props.anchorOrigin;
              var animated = _props.animated;
              var animation = _props.animation;
              var dataSource = _props.dataSource;
              var dataSourceConfig = _props.dataSourceConfig;
              var disableFocusRipple = _props.disableFocusRipple;
              var errorStyle = _props.errorStyle;
              var floatingLabelText = _props.floatingLabelText;
              var filter = _props.filter;
              var fullWidth = _props.fullWidth;
              var style = _props.style;
              var hintText = _props.hintText;
              var maxSearchResults = _props.maxSearchResults;
              var menuCloseDelay = _props.menuCloseDelay;
              var textFieldStyle = _props.textFieldStyle;
              var menuStyle = _props.menuStyle;
              var menuProps = _props.menuProps;
              var listStyle = _props.listStyle;
              var targetOrigin = _props.targetOrigin;
              var triggerUpdateOnFocus = _props.triggerUpdateOnFocus;
              var onNewRequest = _props.onNewRequest;
              var onUpdateInput = _props.onUpdateInput;
              var openOnFocus = _props.openOnFocus;
              var searchTextProp = _props.searchText;

              var other = _objectWithoutProperties(_props, [
                'anchorOrigin',
                'animated',
                'animation',
                'dataSource',
                'dataSourceConfig',
                'disableFocusRipple',
                'errorStyle',
                'floatingLabelText',
                'filter',
                'fullWidth',
                'style',
                'hintText',
                'maxSearchResults',
                'menuCloseDelay',
                'textFieldStyle',
                'menuStyle',
                'menuProps',
                'listStyle',
                'targetOrigin',
                'triggerUpdateOnFocus',
                'onNewRequest',
                'onUpdateInput',
                'openOnFocus',
                'searchText',
              ]);

              var _state = this.state;
              var open = _state.open;
              var anchorEl = _state.anchorEl;
              var searchText = _state.searchText;
              var focusTextField = _state.focusTextField;
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);

              var requestsList = [];

              dataSource.every(function (item, index) {
                switch (
                  typeof item === 'undefined' ? 'undefined' : _typeof(item)
                ) {
                  case 'string':
                    if (filter(searchText, item, item)) {
                      requestsList.push({
                        text: item,
                        value: _react2.default.createElement(
                          _MenuItem2.default,
                          {
                            innerDivStyle: styles.innerDiv,
                            value: item,
                            primaryText: item,
                            disableFocusRipple: disableFocusRipple,
                            key: index,
                          },
                        ),
                      });
                    }
                    break;

                  case 'object':
                    if (
                      item &&
                      typeof item[_this2.props.dataSourceConfig.text] ===
                        'string'
                    ) {
                      var itemText = item[_this2.props.dataSourceConfig.text];
                      if (!_this2.props.filter(searchText, itemText, item))
                        break;

                      var itemValue = item[_this2.props.dataSourceConfig.value];
                      if (
                        itemValue.type &&
                        (itemValue.type.muiName ===
                          _MenuItem2.default.muiName ||
                          itemValue.type.muiName === _Divider2.default.muiName)
                      ) {
                        requestsList.push({
                          text: itemText,
                          value: _react2.default.cloneElement(itemValue, {
                            key: index,
                            disableFocusRipple: disableFocusRipple,
                          }),
                        });
                      } else {
                        requestsList.push({
                          text: itemText,
                          value: _react2.default.createElement(
                            _MenuItem2.default,
                            {
                              innerDivStyle: styles.innerDiv,
                              primaryText: itemText,
                              disableFocusRipple: disableFocusRipple,
                              key: index,
                            },
                          ),
                        });
                      }
                    }
                    break;

                  default:
                  // Do nothing
                }

                return !(
                  maxSearchResults &&
                  maxSearchResults > 0 &&
                  requestsList.length === maxSearchResults
                );
              });

              this.requestsList = requestsList;

              var menu =
                open &&
                requestsList.length > 0 &&
                _react2.default.createElement(
                  _Menu2.default,
                  _extends({}, menuProps, {
                    ref: 'menu',
                    autoWidth: false,
                    disableAutoFocus: focusTextField,
                    onEscKeyDown: this.handleEscKeyDown,
                    initiallyKeyboardFocused: true,
                    onItemTouchTap: this.handleItemTouchTap,
                    onMouseDown: this.handleMouseDown,
                    style: (0, _simpleAssign2.default)(styles.menu, menuStyle),
                    listStyle: (0, _simpleAssign2.default)(
                      styles.list,
                      listStyle,
                    ),
                  }),
                  requestsList.map(function (i) {
                    return i.value;
                  }),
                );

              return _react2.default.createElement(
                'div',
                {
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(styles.root, style),
                  ),
                },
                _react2.default.createElement(
                  _TextField2.default,
                  _extends({}, other, {
                    ref: 'searchTextField',
                    autoComplete: 'off',
                    value: searchText,
                    onChange: this.handleChange,
                    onBlur: this.handleBlur,
                    onFocus: this.handleFocus,
                    onKeyDown: this.handleKeyDown,
                    floatingLabelText: floatingLabelText,
                    hintText: hintText,
                    fullWidth: fullWidth,
                    multiLine: false,
                    errorStyle: errorStyle,
                    style: textFieldStyle,
                  }),
                ),
                _react2.default.createElement(
                  _Popover2.default,
                  {
                    style: styles.popover,
                    canAutoPosition: false,
                    anchorOrigin: anchorOrigin,
                    targetOrigin: targetOrigin,
                    open: open,
                    anchorEl: anchorEl,
                    useLayerForClickAway: false,
                    onRequestClose: this.handleRequestClose,
                    animated: animated,
                    animation: animation,
                  },
                  menu,
                ),
              );
            },
          },
        ]);

        return AutoComplete;
      })(_react.Component);

      AutoComplete.propTypes = {
        /**
         * Location of the anchor for the auto complete.
         */
        anchorOrigin: _propTypes2.default.origin,
        /**
         * If true, the auto complete is animated as it is toggled.
         */
        animated: _react.PropTypes.bool,
        /**
         * Override the default animation component used.
         */
        animation: _react.PropTypes.func,
        /**
         * Array of strings or nodes used to populate the list.
         */
        dataSource: _react.PropTypes.array.isRequired,
        /**
         * Config for objects list dataSource.
         *
         * @typedef {Object} dataSourceConfig
         *
         * @property {string} text `dataSource` element key used to find a string to be matched for search
         * and shown as a `TextField` input value after choosing the result.
         * @property {string} value `dataSource` element key used to find a string to be shown in search results.
         */
        dataSourceConfig: _react.PropTypes.object,
        /**
         * Disables focus ripple when true.
         */
        disableFocusRipple: _react.PropTypes.bool,
        /**
         * Override style prop for error.
         */
        errorStyle: _react.PropTypes.object,
        /**
         * The error content to display.
         */
        errorText: _react.PropTypes.node,
        /**
         * Callback function used to filter the auto complete.
         *
         * @param {string} searchText The text to search for within `dataSource`.
         * @param {string} key `dataSource` element, or `text` property on that element if it's not a string.
         * @returns {boolean} `true` indicates the auto complete list will include `key` when the input is `searchText`.
         */
        filter: _react.PropTypes.func,
        /**
         * The content to use for adding floating label element.
         */
        floatingLabelText: _react.PropTypes.node,
        /**
         * If true, the field receives the property `width: 100%`.
         */
        fullWidth: _react.PropTypes.bool,
        /**
         * The hint content to display.
         */
        hintText: _react.PropTypes.node,
        /**
         * Override style for list.
         */
        listStyle: _react.PropTypes.object,
        /**
         * The max number of search results to be shown.
         * By default it shows all the items which matches filter.
         */
        maxSearchResults: _react.PropTypes.number,
        /**
         * Delay for closing time of the menu.
         */
        menuCloseDelay: _react.PropTypes.number,
        /**
         * Props to be passed to menu.
         */
        menuProps: _react.PropTypes.object,
        /**
         * Override style for menu.
         */
        menuStyle: _react.PropTypes.object,
        /** @ignore */
        onBlur: _react.PropTypes.func,
        /** @ignore */
        onFocus: _react.PropTypes.func,
        /** @ignore */
        onKeyDown: _react.PropTypes.func,
        /**
         * Callback function that is fired when a list item is selected, or enter is pressed in the `TextField`.
         *
         * @param {string} chosenRequest Either the `TextField` input value, if enter is pressed in the `TextField`,
         * or the text value of the corresponding list item that was selected.
         * @param {number} index The index in `dataSource` of the list item selected, or `-1` if enter is pressed in the
         * `TextField`.
         */
        onNewRequest: _react.PropTypes.func,
        /**
         * Callback function that is fired when the user updates the `TextField`.
         *
         * @param {string} searchText The auto-complete's `searchText` value.
         * @param {array} dataSource The auto-complete's `dataSource` array.
         */
        onUpdateInput: _react.PropTypes.func,
        /**
         * Auto complete menu is open if true.
         */
        open: _react.PropTypes.bool,
        /**
         * If true, the list item is showed when a focus event triggers.
         */
        openOnFocus: _react.PropTypes.bool,
        /**
         * Text being input to auto complete.
         */
        searchText: _react.PropTypes.string,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * Origin for location of target.
         */
        targetOrigin: _propTypes2.default.origin,
        /**
         * Override the inline-styles of AutoComplete's TextField element.
         */
        textFieldStyle: _react.PropTypes.object,
        /**
         * If true, will update when focus event triggers.
         */
        triggerUpdateOnFocus: (0, _deprecatedPropType2.default)(
          _react.PropTypes.bool,
          'Instead, use openOnFocus. It will be removed with v0.16.0.',
        ),
      };
      AutoComplete.defaultProps = {
        anchorOrigin: {
          vertical: 'bottom',
          horizontal: 'left',
        },
        animated: true,
        dataSourceConfig: {
          text: 'text',
          value: 'value',
        },
        disableFocusRipple: true,
        filter: function filter(searchText, key) {
          return searchText !== '' && key.indexOf(searchText) !== -1;
        },
        fullWidth: false,
        open: false,
        openOnFocus: false,
        onUpdateInput: function onUpdateInput() {},
        onNewRequest: function onNewRequest() {},
        searchText: '',
        menuCloseDelay: 300,
        targetOrigin: {
          vertical: 'top',
          horizontal: 'left',
        },
      };
      AutoComplete.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };

      AutoComplete.levenshteinDistance = function (searchText, key) {
        var current = [];
        var prev = void 0;
        var value = void 0;

        for (var i = 0; i <= key.length; i++) {
          for (var j = 0; j <= searchText.length; j++) {
            if (i && j) {
              if (searchText.charAt(j - 1) === key.charAt(i - 1)) value = prev;
              else value = Math.min(current[j], current[j - 1], prev) + 1;
            } else {
              value = i + j;
            }
            prev = current[j];
            current[j] = value;
          }
        }
        return current.pop();
      };

      AutoComplete.noFilter = function () {
        return true;
      };

      AutoComplete.defaultFilter = AutoComplete.caseSensitiveFilter = function (
        searchText,
        key,
      ) {
        return searchText !== '' && key.indexOf(searchText) !== -1;
      };

      AutoComplete.caseInsensitiveFilter = function (searchText, key) {
        return key.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;
      };

      AutoComplete.levenshteinDistanceFilter = function (distanceLessThan) {
        if (distanceLessThan === undefined) {
          return AutoComplete.levenshteinDistance;
        } else if (typeof distanceLessThan !== 'number') {
          throw 'Error: AutoComplete.levenshteinDistanceFilter is a filter generator, not a filter!';
        }

        return function (s, k) {
          return AutoComplete.levenshteinDistance(s, k) < distanceLessThan;
        };
      };

      AutoComplete.fuzzyFilter = function (searchText, key) {
        var compareString = key.toLowerCase();
        searchText = searchText.toLowerCase();

        var searchTextIndex = 0;
        for (var index = 0; index < key.length; index++) {
          if (compareString[index] === searchText[searchTextIndex]) {
            searchTextIndex += 1;
          }
        }

        return searchTextIndex === searchText.length;
      };

      AutoComplete.Item = _MenuItem2.default;
      AutoComplete.Divider = _Divider2.default;

      exports.default = AutoComplete;

      /***/
    },
    /* 581 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _TextField = __webpack_require__(582);

      var _TextField2 = _interopRequireDefault(_TextField);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _TextField2.default;

      /***/
    },
    /* 582 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _keycode = __webpack_require__(549);

      var _keycode2 = _interopRequireDefault(_keycode);

      var _shallowEqual = __webpack_require__(551);

      var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

      var _colorManipulator = __webpack_require__(583);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _deprecatedPropType = __webpack_require__(561);

      var _deprecatedPropType2 = _interopRequireDefault(_deprecatedPropType);

      var _EnhancedTextarea = __webpack_require__(584);

      var _EnhancedTextarea2 = _interopRequireDefault(_EnhancedTextarea);

      var _TextFieldHint = __webpack_require__(586);

      var _TextFieldHint2 = _interopRequireDefault(_TextFieldHint);

      var _TextFieldLabel = __webpack_require__(587);

      var _TextFieldLabel2 = _interopRequireDefault(_TextFieldLabel);

      var _TextFieldUnderline = __webpack_require__(588);

      var _TextFieldUnderline2 = _interopRequireDefault(_TextFieldUnderline);

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var getStyles = function getStyles(props, context, state) {
        var _context$muiTheme = context.muiTheme;
        var baseTheme = _context$muiTheme.baseTheme;
        var _context$muiTheme$tex = _context$muiTheme.textField;
        var floatingLabelColor = _context$muiTheme$tex.floatingLabelColor;
        var focusColor = _context$muiTheme$tex.focusColor;
        var textColor = _context$muiTheme$tex.textColor;
        var disabledTextColor = _context$muiTheme$tex.disabledTextColor;
        var backgroundColor = _context$muiTheme$tex.backgroundColor;
        var hintColor = _context$muiTheme$tex.hintColor;
        var errorColor = _context$muiTheme$tex.errorColor;

        var styles = {
          root: {
            fontSize: 16,
            lineHeight: '24px',
            width: props.fullWidth ? '100%' : 256,
            height: (props.rows - 1) * 24 + (props.floatingLabelText ? 72 : 48),
            display: 'inline-block',
            position: 'relative',
            backgroundColor: backgroundColor,
            fontFamily: baseTheme.fontFamily,
            transition: _transitions2.default.easeOut('200ms', 'height'),
          },
          error: {
            position: 'relative',
            bottom: 2,
            fontSize: 12,
            lineHeight: '12px',
            color: errorColor,
            transition: _transitions2.default.easeOut(),
          },
          floatingLabel: {
            color: hintColor,
            pointerEvents: 'none',
          },
          input: {
            WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated style)
            padding: 0,
            position: 'relative',
            width: '100%',
            border: 'none',
            outline: 'none',
            backgroundColor: 'rgba(0,0,0,0)',
            color: props.disabled ? disabledTextColor : textColor,
            cursor: props.disabled ? 'not-allowed' : 'initial',
            font: 'inherit',
          },
          textarea: {},
        };

        (0, _simpleAssign2.default)(styles.error, props.errorStyle);

        (0, _simpleAssign2.default)(styles.textarea, styles.input, {
          marginTop: props.floatingLabelText ? 36 : 12,
          marginBottom: props.floatingLabelText ? -36 : -12,
          boxSizing: 'border-box',
          font: 'inherit',
        });

        // Do not assign a height to the textarea as he handles it on his own.
        styles.input.height = '100%';

        if (state.hasValue) {
          styles.floatingLabel.color = (0, _colorManipulator.fade)(
            props.disabled ? disabledTextColor : floatingLabelColor,
            0.5,
          );
        }

        if (state.isFocused) {
          styles.floatingLabel.color = focusColor;
        }

        if (props.floatingLabelText) {
          styles.input.boxSizing = 'border-box';

          if (!props.multiLine) {
            styles.input.marginTop = 14;
          }

          if (state.errorText) {
            styles.error.bottom = !props.multiLine
              ? styles.error.fontSize + 3
              : 3;
          }
        }

        if (state.errorText) {
          if (state.isFocused) {
            styles.floatingLabel.color = styles.error.color;
          }
        }

        return styles;
      };

      /**
       * Check if a value is valid to be displayed inside an input.
       *
       * @param The value to check.
       * @returns True if the string provided is valid, false otherwise.
       */
      function isValid(value) {
        return value !== '' && value !== undefined && value !== null;
      }

      var TextField = (function (_Component) {
        _inherits(TextField, _Component);

        function TextField() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, TextField);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    TextField,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                isFocused: false,
                errorText: undefined,
                hasValue: false,
                isClean: true,
              }),
              (_this.handleInputBlur = function (event) {
                _this.setState({ isFocused: false });
                if (_this.props.onBlur) _this.props.onBlur(event);
              }),
              (_this.handleInputChange = function (event) {
                _this.setState({
                  hasValue: isValid(event.target.value),
                  isClean: false,
                });
                if (_this.props.onChange)
                  _this.props.onChange(event, event.target.value);
              }),
              (_this.handleInputFocus = function (event) {
                if (_this.props.disabled) return;
                _this.setState({ isFocused: true });
                if (_this.props.onFocus) _this.props.onFocus(event);
              }),
              (_this.handleInputKeyDown = function (event) {
                if (
                  (0, _keycode2.default)(event) === 'enter' &&
                  _this.props.onEnterKeyDown
                )
                  _this.props.onEnterKeyDown(event);
                if (_this.props.onKeyDown) _this.props.onKeyDown(event);
              }),
              (_this.handleHeightChange = function (event, height) {
                var newHeight = height + 24;
                if (_this.props.floatingLabelText) {
                  newHeight += 24;
                }
                _reactDom2.default.findDOMNode(_this).style.height =
                  newHeight + 'px';
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(TextField, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              var _props = this.props;
              var children = _props.children;
              var name = _props.name;
              var hintText = _props.hintText;
              var floatingLabelText = _props.floatingLabelText;
              var id = _props.id;

              var propsLeaf = children ? children.props : this.props;

              this.setState({
                errorText: this.props.errorText,
                hasValue:
                  isValid(propsLeaf.value) || isValid(propsLeaf.defaultValue),
              });

              true
                ? (0, _warning2.default)(
                    name || hintText || floatingLabelText || id,
                    "We don't have enough information\n      to build a robust unique id for the TextField component. Please provide an id or a name.",
                  )
                : void 0;

              var uniqueId =
                name +
                '-' +
                hintText +
                '-' +
                floatingLabelText +
                '-' +
                Math.floor(Math.random() * 0xffff);
              this.uniqueId = uniqueId.replace(/[^A-Za-z0-9-]/gi, '');
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (nextProps.errorText !== this.props.errorText) {
                this.setState({
                  errorText: nextProps.errorText,
                });
              }

              if (nextProps.children && nextProps.children.props) {
                nextProps = nextProps.children.props;
              }

              if (nextProps.hasOwnProperty('value')) {
                var hasValue =
                  isValid(nextProps.value) ||
                  (this.state.isClean && isValid(nextProps.defaultValue));

                if (hasValue !== this.state.hasValue) {
                  this.setState({
                    hasValue: hasValue,
                  });
                }
              }
            },
          },
          {
            key: 'shouldComponentUpdate',
            value: function shouldComponentUpdate(
              nextProps,
              nextState,
              nextContext,
            ) {
              return (
                !(0, _shallowEqual2.default)(this.props, nextProps) ||
                !(0, _shallowEqual2.default)(this.state, nextState) ||
                !(0, _shallowEqual2.default)(this.context, nextContext)
              );
            },
          },
          {
            key: 'blur',
            value: function blur() {
              if (this.input) this.getInputNode().blur();
            },
          },
          {
            key: 'focus',
            value: function focus() {
              if (this.input) this.getInputNode().focus();
            },
          },
          {
            key: 'select',
            value: function select() {
              if (this.input) this.getInputNode().select();
            },
          },
          {
            key: 'getValue',
            value: function getValue() {
              return this.input ? this.getInputNode().value : undefined;
            },
          },
          {
            key: 'getInputNode',
            value: function getInputNode() {
              return this.props.children || this.props.multiLine
                ? this.input.getInputNode()
                : _reactDom2.default.findDOMNode(this.input);
            },
          },
          {
            key: '_isControlled',
            value: function _isControlled() {
              return this.props.hasOwnProperty('value');
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              var _props2 = this.props;
              var children = _props2.children;
              var className = _props2.className;
              var disabled = _props2.disabled;
              var errorStyle = _props2.errorStyle;
              var errorText = _props2.errorText;
              var floatingLabelFixed = _props2.floatingLabelFixed;
              var floatingLabelFocusStyle = _props2.floatingLabelFocusStyle;
              var floatingLabelStyle = _props2.floatingLabelStyle;
              var floatingLabelText = _props2.floatingLabelText;
              var fullWidth = _props2.fullWidth;
              var hintText = _props2.hintText;
              var hintStyle = _props2.hintStyle;
              var id = _props2.id;
              var inputStyle = _props2.inputStyle;
              var multiLine = _props2.multiLine;
              var onBlur = _props2.onBlur;
              var onChange = _props2.onChange;
              var onFocus = _props2.onFocus;
              var style = _props2.style;
              var type = _props2.type;
              var underlineDisabledStyle = _props2.underlineDisabledStyle;
              var underlineFocusStyle = _props2.underlineFocusStyle;
              var underlineShow = _props2.underlineShow;
              var underlineStyle = _props2.underlineStyle;
              var rows = _props2.rows;
              var rowsMax = _props2.rowsMax;
              var textareaStyle = _props2.textareaStyle;

              var other = _objectWithoutProperties(_props2, [
                'children',
                'className',
                'disabled',
                'errorStyle',
                'errorText',
                'floatingLabelFixed',
                'floatingLabelFocusStyle',
                'floatingLabelStyle',
                'floatingLabelText',
                'fullWidth',
                'hintText',
                'hintStyle',
                'id',
                'inputStyle',
                'multiLine',
                'onBlur',
                'onChange',
                'onFocus',
                'style',
                'type',
                'underlineDisabledStyle',
                'underlineFocusStyle',
                'underlineShow',
                'underlineStyle',
                'rows',
                'rowsMax',
                'textareaStyle',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);
              var inputId = id || this.uniqueId;

              var errorTextElement =
                this.state.errorText &&
                _react2.default.createElement(
                  'div',
                  { style: prepareStyles(styles.error) },
                  this.state.errorText,
                );

              var floatingLabelTextElement =
                floatingLabelText &&
                _react2.default.createElement(
                  _TextFieldLabel2.default,
                  {
                    muiTheme: this.context.muiTheme,
                    style: (0, _simpleAssign2.default)(
                      styles.floatingLabel,
                      this.props.floatingLabelStyle,
                    ),
                    shrinkStyle: this.props.floatingLabelFocusStyle,
                    htmlFor: inputId,
                    shrink:
                      this.state.hasValue ||
                      this.state.isFocused ||
                      floatingLabelFixed,
                    disabled: disabled,
                  },
                  floatingLabelText,
                );

              var inputProps = {
                id: inputId,
                ref: function ref(elem) {
                  return (_this2.input = elem);
                },
                disabled: this.props.disabled,
                onBlur: this.handleInputBlur,
                onChange: this.handleInputChange,
                onFocus: this.handleInputFocus,
                onKeyDown: this.handleInputKeyDown,
              };

              var inputStyleMerged = (0, _simpleAssign2.default)(
                styles.input,
                inputStyle,
              );

              var inputElement = void 0;
              if (children) {
                inputElement = _react2.default.cloneElement(
                  children,
                  _extends({}, inputProps, children.props, {
                    style: (0, _simpleAssign2.default)(
                      inputStyleMerged,
                      children.props.style,
                    ),
                  }),
                );
              } else {
                inputElement = multiLine
                  ? _react2.default.createElement(
                      _EnhancedTextarea2.default,
                      _extends({}, other, inputProps, {
                        style: inputStyleMerged,
                        rows: rows,
                        rowsMax: rowsMax,
                        onHeightChange: this.handleHeightChange,
                        textareaStyle: (0, _simpleAssign2.default)(
                          styles.textarea,
                          textareaStyle,
                        ),
                      }),
                    )
                  : _react2.default.createElement(
                      'input',
                      _extends({}, other, inputProps, {
                        style: prepareStyles(inputStyleMerged),
                        type: type,
                      }),
                    );
              }

              var rootProps = {};

              if (children) {
                rootProps = other;
              }

              return _react2.default.createElement(
                'div',
                _extends({}, rootProps, {
                  className: className,
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(styles.root, style),
                  ),
                }),
                floatingLabelTextElement,
                hintText
                  ? _react2.default.createElement(_TextFieldHint2.default, {
                      muiTheme: this.context.muiTheme,
                      show:
                        !(
                          this.state.hasValue ||
                          (floatingLabelText && !this.state.isFocused)
                        ) ||
                        (!this.state.hasValue &&
                          floatingLabelText &&
                          floatingLabelFixed &&
                          !this.state.isFocused),
                      style: hintStyle,
                      text: hintText,
                    })
                  : null,
                inputElement,
                underlineShow
                  ? _react2.default.createElement(
                      _TextFieldUnderline2.default,
                      {
                        disabled: disabled,
                        disabledStyle: underlineDisabledStyle,
                        error: !!this.state.errorText,
                        errorStyle: errorStyle,
                        focus: this.state.isFocused,
                        focusStyle: underlineFocusStyle,
                        muiTheme: this.context.muiTheme,
                        style: underlineStyle,
                      },
                    )
                  : null,
                errorTextElement,
              );
            },
          },
        ]);

        return TextField;
      })(_react.Component);

      TextField.propTypes = {
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * The text string to use for the default value.
         */
        defaultValue: _react.PropTypes.any,
        /**
         * Disables the text field if set to true.
         */
        disabled: _react.PropTypes.bool,
        /**
         * The style object to use to override error styles.
         */
        errorStyle: _react.PropTypes.object,
        /**
         * The error content to display.
         */
        errorText: _react.PropTypes.node,
        /**
         * If true, the floating label will float even when there is no value.
         */
        floatingLabelFixed: _react.PropTypes.bool,
        /**
         * The style object to use to override floating label styles when focused.
         */
        floatingLabelFocusStyle: _react.PropTypes.object,
        /**
         * The style object to use to override floating label styles.
         */
        floatingLabelStyle: _react.PropTypes.object,
        /**
         * The content to use for the floating label element.
         */
        floatingLabelText: _react.PropTypes.node,
        /**
         * If true, the field receives the property width 100%.
         */
        fullWidth: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the TextField's hint text element.
         */
        hintStyle: _react.PropTypes.object,
        /**
         * The hint content to display.
         */
        hintText: _react.PropTypes.node,
        /**
         * The id prop for the text field.
         */
        id: _react.PropTypes.string,
        /**
         * Override the inline-styles of the TextField's input element.
         * When multiLine is false: define the style of the input element.
         * When multiLine is true: define the style of the container of the textarea.
         */
        inputStyle: _react.PropTypes.object,
        /**
         * If true, a textarea element will be rendered.
         * The textarea also grows and shrinks according to the number of lines.
         */
        multiLine: _react.PropTypes.bool,
        /**
         * Name applied to the input.
         */
        name: _react.PropTypes.string,
        /** @ignore */
        onBlur: _react.PropTypes.func,
        /**
         * Callback function that is fired when the textfield's value changes.
         */
        onChange: _react.PropTypes.func,
        /**
         * The function to call when the user presses the Enter key.
         */
        onEnterKeyDown: (0, _deprecatedPropType2.default)(
          _react.PropTypes.func,
          'Use onKeyDown and check for keycode instead. It will be removed with v0.16.0.',
        ),
        /** @ignore */
        onFocus: _react.PropTypes.func,
        /** @ignore */
        onKeyDown: _react.PropTypes.func,
        /**
         * Number of rows to display when multiLine option is set to true.
         */
        rows: _react.PropTypes.number,
        /**
         * Maximum number of rows to display when
         * multiLine option is set to true.
         */
        rowsMax: _react.PropTypes.number,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * Override the inline-styles of the TextField's textarea element.
         * The TextField use either a textarea or an input,
         * this property has effects only when multiLine is true.
         */
        textareaStyle: _react.PropTypes.object,
        /**
         * Specifies the type of input to display
         * such as "password" or "text".
         */
        type: _react.PropTypes.string,
        /**
         * Override the inline-styles of the
         * TextField's underline element when disabled.
         */
        underlineDisabledStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of the TextField's
         * underline element when focussed.
         */
        underlineFocusStyle: _react.PropTypes.object,
        /**
         * If true, shows the underline for the text field.
         */
        underlineShow: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the TextField's underline element.
         */
        underlineStyle: _react.PropTypes.object,
        /**
         * The value of the text field.
         */
        value: _react.PropTypes.any,
      };
      TextField.defaultProps = {
        disabled: false,
        floatingLabelFixed: false,
        multiLine: false,
        fullWidth: false,
        type: 'text',
        underlineShow: true,
        rows: 1,
      };
      TextField.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = TextField;

      /***/
    },
    /* 583 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.convertColorToString = convertColorToString;
      exports.convertHexToRGB = convertHexToRGB;
      exports.decomposeColor = decomposeColor;
      exports.getContrastRatio = getContrastRatio;
      exports.getLuminance = getLuminance;
      exports.emphasize = emphasize;
      exports.fade = fade;
      exports.darken = darken;
      exports.lighten = lighten;
      /**
       * Returns a number whose value is limited to the given range.
       *
       * @param {number} value The value to be clamped
       * @param {number} min The lower boundary of the output range
       * @param {number} max The upper boundary of the output range
       * @returns {number} A number in the range [min, max]
       */
      function clamp(value, min, max) {
        if (value < min) {
          return min;
        }
        if (value > max) {
          return max;
        }
        return value;
      }

      /**
       * Converts a color object with type and values to a string.
       *
       * @param {object} color - Decomposed color
       * @param {string} color.type - One of, 'rgb', 'rgba', 'hsl', 'hsla'
       * @param {array} color.values - [n,n,n] or [n,n,n,n]
       * @returns {string} A CSS color string
       */
      function convertColorToString(color) {
        var type = color.type;
        var values = color.values;

        if (type.indexOf('rgb') > -1) {
          // Only convert the first 3 values to int (i.e. not alpha)
          for (var i = 0; i < 3; i++) {
            values[i] = parseInt(values[i]);
          }
        }

        var colorString = void 0;

        if (type.indexOf('hsl') > -1) {
          colorString =
            color.type +
            '(' +
            values[0] +
            ', ' +
            values[1] +
            '%, ' +
            values[2] +
            '%';
        } else {
          colorString =
            color.type + '(' + values[0] + ', ' + values[1] + ', ' + values[2];
        }

        if (values.length === 4) {
          colorString += ', ' + color.values[3] + ')';
        } else {
          colorString += ')';
        }

        return colorString;
      }

      /**
       * Converts a color from CSS hex format to CSS rgb format.
       *
       *  @param {string} color - Hex color, i.e. #nnn or #nnnnnn
       *  @returns {string} A CSS rgb color string
       */
      function convertHexToRGB(color) {
        if (color.length === 4) {
          var extendedColor = '#';
          for (var i = 1; i < color.length; i++) {
            extendedColor += color.charAt(i) + color.charAt(i);
          }
          color = extendedColor;
        }

        var values = {
          r: parseInt(color.substr(1, 2), 16),
          g: parseInt(color.substr(3, 2), 16),
          b: parseInt(color.substr(5, 2), 16),
        };

        return 'rgb(' + values.r + ', ' + values.g + ', ' + values.b + ')';
      }

      /**
       * Returns an object with the type and values of a color.
       *
       * Note: Does not support rgb % values.
       *
       * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
       * @returns {{type: string, values: number[]}} A MUI color object
       */
      function decomposeColor(color) {
        if (color.charAt(0) === '#') {
          return decomposeColor(convertHexToRGB(color));
        }

        var marker = color.indexOf('(');
        var type = color.substring(0, marker);
        var values = color.substring(marker + 1, color.length - 1).split(',');
        values = values.map(function (value) {
          return parseFloat(value);
        });

        return { type: type, values: values };
      }

      /**
       * Calculates the contrast ratio between two colors.
       *
       * Formula: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef
       *
       * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
       * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
       * @returns {number} A contrast ratio value in the range 0 - 21 with 2 digit precision.
       */
      function getContrastRatio(foreground, background) {
        var lumA = getLuminance(foreground);
        var lumB = getLuminance(background);
        var contrastRatio =
          (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);

        return Number(contrastRatio.toFixed(2)); // Truncate at two digits
      }

      /**
       * The relative brightness of any point in a color space,
       * normalized to 0 for darkest black and 1 for lightest white.
       *
       * Formula: https://www.w3.org/WAI/GL/wiki/Relative_luminance
       *
       * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
       * @returns {number} The relative brightness of the color in the range 0 - 1
       */
      function getLuminance(color) {
        color = decomposeColor(color);

        if (color.type.indexOf('rgb') > -1) {
          var rgb = color.values.map(function (val) {
            val /= 255; // normalized
            return val <= 0.03928
              ? val / 12.92
              : Math.pow((val + 0.055) / 1.055, 2.4);
          });
          return Number(
            (0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3),
          ); // Truncate at 3 digits
        } else if (color.type.indexOf('hsl') > -1) {
          return color.values[2] / 100;
        }
      }

      /**
       * Darken or lighten a colour, depending on its luminance.
       * Light colors are darkened, dark colors are lightened.
       *
       * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
       * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
       * @returns {string} A CSS color string. Hex input values are returned as rgb
       */
      function emphasize(color) {
        var coefficient =
          arguments.length <= 1 || arguments[1] === undefined
            ? 0.15
            : arguments[1];

        return getLuminance(color) > 0.5
          ? darken(color, coefficient)
          : lighten(color, coefficient);
      }

      /**
       * Set the absolute transparency of a color.
       * Any existing alpha values are overwritten.
       *
       * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
       * @param {number} value - value to set the alpha channel to in the range 0 -1
       * @returns {string} A CSS color string. Hex input values are returned as rgb
       */
      function fade(color, value) {
        color = decomposeColor(color);
        value = clamp(value, 0, 1);

        if (color.type === 'rgb' || color.type === 'hsl') {
          color.type += 'a';
        }
        color.values[3] = value;

        return convertColorToString(color);
      }

      /**
       * Darkens a color.
       *
       * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
       * @param {number} coefficient - multiplier in the range 0 - 1
       * @returns {string} A CSS color string. Hex input values are returned as rgb
       */
      function darken(color, coefficient) {
        color = decomposeColor(color);
        coefficient = clamp(coefficient, 0, 1);

        if (color.type.indexOf('hsl') > -1) {
          color.values[2] *= 1 - coefficient;
        } else if (color.type.indexOf('rgb') > -1) {
          for (var i = 0; i < 3; i++) {
            color.values[i] *= 1 - coefficient;
          }
        }
        return convertColorToString(color);
      }

      /**
       * Lightens a color.
       *
       * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
       * @param {number} coefficient - multiplier in the range 0 - 1
       * @returns {string} A CSS color string. Hex input values are returned as rgb
       */
      function lighten(color, coefficient) {
        color = decomposeColor(color);
        coefficient = clamp(coefficient, 0, 1);

        if (color.type.indexOf('hsl') > -1) {
          color.values[2] += (100 - color.values[2]) * coefficient;
        } else if (color.type.indexOf('rgb') > -1) {
          for (var i = 0; i < 3; i++) {
            color.values[i] += (255 - color.values[i]) * coefficient;
          }
        }

        return convertColorToString(color);
      }

      /***/
    },
    /* 584 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactEventListener = __webpack_require__(585);

      var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var rowsHeight = 24;

      function getStyles(props, context, state) {
        return {
          root: {
            position: 'relative',
          },
          textarea: {
            height: state.height,
            width: '100%',
            resize: 'none',
            font: 'inherit',
            padding: 0,
            cursor: props.disabled ? 'not-allowed' : 'initial',
          },
          shadow: {
            resize: 'none',
            // Overflow also needed to here to remove the extra row
            // added to textareas in Firefox.
            overflow: 'hidden',
            // Visibility needed to hide the extra text area on ipads
            visibility: 'hidden',
            position: 'absolute',
            height: 'initial',
          },
        };
      }

      var EnhancedTextarea = (function (_Component) {
        _inherits(EnhancedTextarea, _Component);

        function EnhancedTextarea() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, EnhancedTextarea);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    EnhancedTextarea,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                height: null,
              }),
              (_this.handleResize = function (event) {
                _this.syncHeightWithShadow(undefined, event);
              }),
              (_this.handleChange = function (event) {
                _this.syncHeightWithShadow(event.target.value);

                if (_this.props.hasOwnProperty('valueLink')) {
                  _this.props.valueLink.requestChange(event.target.value);
                }

                if (_this.props.onChange) {
                  _this.props.onChange(event);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(EnhancedTextarea, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              this.setState({
                height: this.props.rows * rowsHeight,
              });
            },
          },
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.syncHeightWithShadow();
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (nextProps.value !== this.props.value) {
                this.syncHeightWithShadow(nextProps.value);
              }
            },
          },
          {
            key: 'getInputNode',
            value: function getInputNode() {
              return this.refs.input;
            },
          },
          {
            key: 'setValue',
            value: function setValue(value) {
              this.getInputNode().value = value;
              this.syncHeightWithShadow(value);
            },
          },
          {
            key: 'syncHeightWithShadow',
            value: function syncHeightWithShadow(newValue, event) {
              var shadow = this.refs.shadow;

              if (newValue !== undefined) {
                shadow.value = newValue;
              }

              var newHeight = shadow.scrollHeight;

              if (this.props.rowsMax >= this.props.rows) {
                newHeight = Math.min(
                  this.props.rowsMax * rowsHeight,
                  newHeight,
                );
              }

              newHeight = Math.max(newHeight, rowsHeight);

              if (this.state.height !== newHeight) {
                this.setState({
                  height: newHeight,
                });

                if (this.props.onHeightChange) {
                  this.props.onHeightChange(event, newHeight);
                }
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var onChange = _props.onChange;
              var onHeightChange = _props.onHeightChange;
              var rows = _props.rows;
              var rowsMax = _props.rowsMax;
              var shadowStyle = _props.shadowStyle;
              var style = _props.style;
              var textareaStyle = _props.textareaStyle;
              var valueLink = _props.valueLink;

              var other = _objectWithoutProperties(_props, [
                'onChange',
                'onHeightChange',
                'rows',
                'rowsMax',
                'shadowStyle',
                'style',
                'textareaStyle',
                'valueLink',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);
              var rootStyles = (0, _simpleAssign2.default)(styles.root, style);
              var textareaStyles = (0, _simpleAssign2.default)(
                styles.textarea,
                textareaStyle,
              );
              var shadowStyles = (0, _simpleAssign2.default)(
                {},
                textareaStyles,
                styles.shadow,
                shadowStyle,
              );

              if (this.props.hasOwnProperty('valueLink')) {
                other.value = this.props.valueLink.value;
              }

              return _react2.default.createElement(
                'div',
                { style: prepareStyles(rootStyles) },
                _react2.default.createElement(_reactEventListener2.default, {
                  target: 'window',
                  onResize: this.handleResize,
                }),
                _react2.default.createElement('textarea', {
                  ref: 'shadow',
                  style: prepareStyles(shadowStyles),
                  tabIndex: '-1',
                  rows: this.props.rows,
                  defaultValue: this.props.defaultValue,
                  readOnly: true,
                  value: this.props.value,
                  valueLink: this.props.valueLink,
                }),
                _react2.default.createElement(
                  'textarea',
                  _extends({}, other, {
                    ref: 'input',
                    rows: this.props.rows,
                    style: prepareStyles(textareaStyles),
                    onChange: this.handleChange,
                  }),
                ),
              );
            },
          },
        ]);

        return EnhancedTextarea;
      })(_react.Component);

      EnhancedTextarea.propTypes = {
        defaultValue: _react.PropTypes.any,
        disabled: _react.PropTypes.bool,
        onChange: _react.PropTypes.func,
        onHeightChange: _react.PropTypes.func,
        rows: _react.PropTypes.number,
        rowsMax: _react.PropTypes.number,
        shadowStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        textareaStyle: _react.PropTypes.object,
        value: _react.PropTypes.string,
        valueLink: _react.PropTypes.object,
      };
      EnhancedTextarea.defaultProps = {
        rows: 1,
      };
      EnhancedTextarea.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = EnhancedTextarea;

      /***/
    },
    /* 585 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _shallowEqual = __webpack_require__(220);

      var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function on(target, eventName, callback, capture) {
        if (target.addEventListener) {
          target.addEventListener(eventName, callback, capture);
        } else if (target.attachEvent) {
          // IE8+ Support
          target.attachEvent('on' + eventName, function () {
            callback.call(target);
          });
        }
      }
      function off(target, eventName, callback, capture) {
        if (target.removeEventListener) {
          target.removeEventListener(eventName, callback, capture);
        } else if (target.detachEvent) {
          // IE8+ Support
          target.detachEvent('on' + eventName, callback);
        }
      }

      function forEachListener(props, iteratee) {
        for (var name in props) {
          if (
            name.substring(0, 2) === 'on' &&
            props[name] instanceof Function
          ) {
            var _eventName = name.substring(2).toLowerCase();
            iteratee(_eventName, props[name]);
          }
        }
      }

      var EventListener = (function (_Component) {
        _inherits(EventListener, _Component);

        function EventListener() {
          _classCallCheck(this, EventListener);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(EventListener).apply(this, arguments),
          );
        }

        _createClass(EventListener, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.addListeners();
            },
          },
          {
            key: 'shouldComponentUpdate',
            value: function shouldComponentUpdate(nextProps) {
              return !(0, _shallowEqual2.default)(this.props, nextProps);
            },
          },
          {
            key: 'componentWillUpdate',
            value: function componentWillUpdate() {
              this.removeListeners();
            },
          },
          {
            key: 'componentDidUpdate',
            value: function componentDidUpdate() {
              this.addListeners();
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              this.removeListeners();
            },
          },
          {
            key: 'addListeners',
            value: function addListeners() {
              var _this2 = this;

              var _props = this.props;
              var capture = _props.capture;
              var target = _props.target;

              if (target) {
                (function () {
                  var element = target;

                  if (typeof target === 'string') {
                    element = window[target];
                  }

                  forEachListener(_this2.props, function (eventName, listener) {
                    return on(element, eventName, listener, capture);
                  });
                })();
              }
            },
          },
          {
            key: 'removeListeners',
            value: function removeListeners() {
              var _this3 = this;

              var _props2 = this.props;
              var capture = _props2.capture;
              var target = _props2.target;

              if (target) {
                (function () {
                  var element = target;

                  if (typeof target === 'string') {
                    element = window[target];
                  }

                  forEachListener(_this3.props, function (eventName, listener) {
                    return off(element, eventName, listener, capture);
                  });
                })();
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              return this.props.children || null;
            },
          },
        ]);

        return EventListener;
      })(_react.Component);

      EventListener.propTypes = {
        /**
         * Whether to use capturing listeners.
         */
        capture: _react.PropTypes.bool.isRequired,
        /**
         * You can provide a children too.
         */
        children: _react.PropTypes.node,
        /**
         * The DOM target to listen to.
         */
        target: _react2.default.PropTypes.oneOfType([
          _react2.default.PropTypes.object,
          _react2.default.PropTypes.string,
        ]),
      };
      EventListener.defaultProps = {
        capture: false,
      };
      exports.default = EventListener;

      /***/
    },
    /* 586 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function getStyles(props) {
        var hintColor = props.muiTheme.textField.hintColor;
        var show = props.show;

        return {
          root: {
            position: 'absolute',
            opacity: show ? 1 : 0,
            color: hintColor,
            transition: _transitions2.default.easeOut(),
            bottom: 12,
          },
        };
      }

      var TextFieldHint = function TextFieldHint(props) {
        var prepareStyles = props.muiTheme.prepareStyles;
        var style = props.style;
        var text = props.text;

        var styles = getStyles(props);

        return _react2.default.createElement(
          'div',
          {
            style: prepareStyles(
              (0, _simpleAssign2.default)(styles.root, style),
            ),
          },
          text,
        );
      };

      TextFieldHint.propTypes = {
        /**
         * @ignore
         * The material-ui theme applied to this component.
         */
        muiTheme: _react.PropTypes.object.isRequired,
        /**
         * True if the hint text should be visible.
         */
        show: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The hint text displayed.
         */
        text: _react.PropTypes.node,
      };

      TextFieldHint.defaultProps = {
        show: true,
      };

      exports.default = TextFieldHint;

      /***/
    },
    /* 587 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function getStyles(props) {
        var defaultStyles = {
          position: 'absolute',
          lineHeight: '22px',
          top: 38,
          transition: _transitions2.default.easeOut(),
          zIndex: 1, // Needed to display label above Chrome's autocomplete field background
          cursor: props.disabled ? 'not-allowed' : 'text',
          transform: 'scale(1) translate(0, 0)',
          transformOrigin: 'left top',
          pointerEvents: 'auto',
          userSelect: 'none',
        };

        var shrinkStyles = props.shrink
          ? (0, _simpleAssign2.default)(
              {
                transform: 'scale(0.75) translate(0, -28px)',
                pointerEvents: 'none',
              },
              props.shrinkStyle,
            )
          : null;

        return {
          root: (0, _simpleAssign2.default)(
            defaultStyles,
            props.style,
            shrinkStyles,
          ),
        };
      }

      var TextFieldLabel = function TextFieldLabel(props) {
        var muiTheme = props.muiTheme;
        var className = props.className;
        var children = props.children;
        var htmlFor = props.htmlFor;
        var onTouchTap = props.onTouchTap;
        var prepareStyles = muiTheme.prepareStyles;

        var styles = getStyles(props);

        return _react2.default.createElement(
          'label',
          {
            className: className,
            style: prepareStyles(styles.root),
            htmlFor: htmlFor,
            onTouchTap: onTouchTap,
          },
          children,
        );
      };

      TextFieldLabel.propTypes = {
        /**
         * The label contents.
         */
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * Disables the label if set to true.
         */
        disabled: _react.PropTypes.bool,
        /**
         * The id of the target element that this label should refer to.
         */
        htmlFor: _react.PropTypes.string,
        /**
         * @ignore
         * The material-ui theme applied to this component.
         */
        muiTheme: _react.PropTypes.object.isRequired,
        /**
         * Callback function for when the label is selected via a touch tap.
         */
        onTouchTap: _react.PropTypes.func,
        /**
         * True if the floating label should shrink.
         */
        shrink: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element when focused.
         */
        shrinkStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };

      TextFieldLabel.defaultProps = {
        disabled: false,
        shrink: false,
      };

      exports.default = TextFieldLabel;

      /***/
    },
    /* 588 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var propTypes = {
        /**
         * True if the parent `TextField` is disabled.
         */
        disabled: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the underline when parent `TextField` is disabled.
         */
        disabledStyle: _react.PropTypes.object,
        /**
         * True if the parent `TextField` has an error.
         */
        error: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the underline when parent `TextField` has an error.
         */
        errorStyle: _react.PropTypes.object,
        /**
         * True if the parent `TextField` is focused.
         */
        focus: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the underline when parent `TextField` is focused.
         */
        focusStyle: _react.PropTypes.object,
        /**
         * @ignore
         * The material-ui theme applied to this component.
         */
        muiTheme: _react.PropTypes.object.isRequired,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };

      var defaultProps = {
        disabled: false,
        disabledStyle: {},
        error: false,
        errorStyle: {},
        focus: false,
        focusStyle: {},
        style: {},
      };

      var TextFieldUnderline = function TextFieldUnderline(props) {
        var disabled = props.disabled;
        var disabledStyle = props.disabledStyle;
        var error = props.error;
        var errorStyle = props.errorStyle;
        var focus = props.focus;
        var focusStyle = props.focusStyle;
        var muiTheme = props.muiTheme;
        var style = props.style;
        var errorStyleColor = errorStyle.color;
        var prepareStyles = muiTheme.prepareStyles;
        var _muiTheme$textField = muiTheme.textField;
        var borderColor = _muiTheme$textField.borderColor;
        var disabledTextColor = _muiTheme$textField.disabledTextColor;
        var errorColor = _muiTheme$textField.errorColor;
        var focusColor = _muiTheme$textField.focusColor;

        var styles = {
          root: {
            border: 'none',
            borderBottom: 'solid 1px',
            borderColor: borderColor,
            bottom: 8,
            boxSizing: 'content-box',
            margin: 0,
            position: 'absolute',
            width: '100%',
          },
          disabled: {
            borderBottom: 'dotted 2px',
            borderColor: disabledTextColor,
            cursor: 'not-allowed',
          },
          focus: {
            borderBottom: 'solid 2px',
            borderColor: focusColor,
            transform: 'scaleX(0)',
            transition: _transitions2.default.easeOut(),
          },
          error: {
            borderColor: errorStyleColor ? errorStyleColor : errorColor,
            transform: 'scaleX(1)',
          },
        };

        var underline = (0, _simpleAssign2.default)({}, styles.root, style);
        var focusedUnderline = (0, _simpleAssign2.default)(
          {},
          underline,
          styles.focus,
          focusStyle,
        );

        if (disabled)
          underline = (0, _simpleAssign2.default)(
            {},
            underline,
            styles.disabled,
            disabledStyle,
          );
        if (focus)
          focusedUnderline = (0, _simpleAssign2.default)({}, focusedUnderline, {
            transform: 'scaleX(1)',
          });
        if (error)
          focusedUnderline = (0, _simpleAssign2.default)(
            {},
            focusedUnderline,
            styles.error,
          );

        return _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement('hr', {
            style: prepareStyles(underline),
          }),
          _react2.default.createElement('hr', {
            style: prepareStyles(focusedUnderline),
          }),
        );
      };

      TextFieldUnderline.propTypes = propTypes;
      TextFieldUnderline.defaultProps = defaultProps;

      exports.default = TextFieldUnderline;

      /***/
    },
    /* 589 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = exports.MenuItem = exports.Menu = undefined;

      var _Menu2 = __webpack_require__(590);

      var _Menu3 = _interopRequireDefault(_Menu2);

      var _MenuItem2 = __webpack_require__(596);

      var _MenuItem3 = _interopRequireDefault(_MenuItem2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.Menu = _Menu3.default;
      exports.MenuItem = _MenuItem3.default;
      exports.default = _Menu3.default;

      /***/
    },
    /* 590 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _shallowEqual = __webpack_require__(551);

      var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

      var _ClickAwayListener = __webpack_require__(591);

      var _ClickAwayListener2 = _interopRequireDefault(_ClickAwayListener);

      var _autoPrefix = __webpack_require__(552);

      var _autoPrefix2 = _interopRequireDefault(_autoPrefix);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _keycode = __webpack_require__(549);

      var _keycode2 = _interopRequireDefault(_keycode);

      var _propTypes = __webpack_require__(543);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _List = __webpack_require__(592);

      var _List2 = _interopRequireDefault(_List);

      var _deprecatedPropType = __webpack_require__(561);

      var _deprecatedPropType2 = _interopRequireDefault(_deprecatedPropType);

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      var _menuUtils = __webpack_require__(595);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _toArray(arr) {
        return Array.isArray(arr) ? arr : Array.from(arr);
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var animated = props.animated;
        var desktop = props.desktop;
        var maxHeight = props.maxHeight;
        var _props$openDirection = props.openDirection;
        var openDirection =
          _props$openDirection === undefined
            ? 'bottom-left'
            : _props$openDirection;
        var width = props.width;

        var openDown = openDirection.split('-')[0] === 'bottom';
        var openLeft = openDirection.split('-')[1] === 'left';

        var muiTheme = context.muiTheme;

        var styles = {
          root: {
            // Nested div bacause the List scales x faster than it scales y
            transition: animated
              ? _transitions2.default.easeOut('250ms', 'transform')
              : null,
            zIndex: muiTheme.zIndex.menu,
            top: openDown ? 0 : null,
            bottom: !openDown ? 0 : null,
            left: !openLeft ? 0 : null,
            right: openLeft ? 0 : null,
            transform: animated ? 'scaleX(0)' : null,
            transformOrigin: openLeft ? 'right' : 'left',
            opacity: 0,
            maxHeight: maxHeight,
            overflowY: maxHeight ? 'auto' : null,
          },
          divider: {
            marginTop: 7,
            marginBottom: 8,
          },
          list: {
            display: 'table-cell',
            paddingBottom: desktop ? 16 : 8,
            paddingTop: desktop ? 16 : 8,
            userSelect: 'none',
            width: width,
          },
          menuItemContainer: {
            transition: animated
              ? _transitions2.default.easeOut(null, 'opacity')
              : null,
            opacity: 0,
          },
          selectedMenuItem: {
            color: muiTheme.baseTheme.palette.accent1Color,
          },
        };

        return styles;
      }

      var Menu = (function (_Component) {
        _inherits(Menu, _Component);

        function Menu(props, context) {
          _classCallCheck(this, Menu);

          var _this = _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(Menu).call(this, props, context),
          );

          _initialiseProps.call(_this);

          var filteredChildren = _this.getFilteredChildren(props.children);
          var selectedIndex = _this.getSelectedIndex(props, filteredChildren);

          _this.state = {
            focusIndex: props.disableAutoFocus
              ? -1
              : selectedIndex >= 0
              ? selectedIndex
              : 0,
            isKeyboardFocused: props.initiallyKeyboardFocused,
            keyWidth: props.desktop ? 64 : 56,
          };

          _this.hotKeyHolder = new _menuUtils.HotKeyHolder();
          return _this;
        }

        _createClass(Menu, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              if (this.props.autoWidth) {
                this.setWidth();
              }
              if (!this.props.animated) {
                this.animateOpen();
              }
              this.setScollPosition();
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              var filteredChildren = this.getFilteredChildren(
                nextProps.children,
              );
              var selectedIndex = this.getSelectedIndex(
                nextProps,
                filteredChildren,
              );

              this.setState({
                focusIndex: nextProps.disableAutoFocus
                  ? -1
                  : selectedIndex >= 0
                  ? selectedIndex
                  : 0,
                keyWidth: nextProps.desktop ? 64 : 56,
              });
            },
          },
          {
            key: 'shouldComponentUpdate',
            value: function shouldComponentUpdate(
              nextProps,
              nextState,
              nextContext,
            ) {
              return (
                !(0, _shallowEqual2.default)(this.props, nextProps) ||
                !(0, _shallowEqual2.default)(this.state, nextState) ||
                !(0, _shallowEqual2.default)(this.context, nextContext)
              );
            },
          },
          {
            key: 'componentDidUpdate',
            value: function componentDidUpdate() {
              if (this.props.autoWidth) this.setWidth();
            },
          },
          {
            key: 'getValueLink',

            // Do not use outside of this component, it will be removed once valueLink is deprecated
            value: function getValueLink(props) {
              return (
                props.valueLink || {
                  value: props.value,
                  requestChange: props.onChange,
                }
              );
            },
          },
          {
            key: 'setKeyboardFocused',
            value: function setKeyboardFocused(keyboardFocused) {
              this.setState({
                isKeyboardFocused: keyboardFocused,
              });
            },
          },
          {
            key: 'getFilteredChildren',
            value: function getFilteredChildren(children) {
              var filteredChildren = [];
              _react2.default.Children.forEach(children, function (child) {
                if (child) {
                  filteredChildren.push(child);
                }
              });
              return filteredChildren;
            },
          },
          {
            key: 'animateOpen',
            value: function animateOpen() {
              var rootStyle = _reactDom2.default.findDOMNode(this).style;
              var scrollContainerStyle = _reactDom2.default.findDOMNode(
                this.refs.scrollContainer,
              ).style;
              var menuContainers = _reactDom2.default.findDOMNode(
                this.refs.list,
              ).childNodes;

              _autoPrefix2.default.set(rootStyle, 'transform', 'scaleX(1)');
              _autoPrefix2.default.set(
                scrollContainerStyle,
                'transform',
                'scaleY(1)',
              );
              scrollContainerStyle.opacity = 1;

              for (var i = 0; i < menuContainers.length; ++i) {
                menuContainers[i].style.opacity = 1;
              }
            },
          },
          {
            key: 'cloneMenuItem',
            value: function cloneMenuItem(child, childIndex, styles, index) {
              var _this2 = this;

              var _props = this.props;
              var desktop = _props.desktop;
              var selectedMenuItemStyle = _props.selectedMenuItemStyle;

              var selected = this.isChildSelected(child, this.props);
              var selectedChildrenStyles = {};

              if (selected) {
                selectedChildrenStyles = (0, _simpleAssign2.default)(
                  styles.selectedMenuItem,
                  selectedMenuItemStyle,
                );
              }

              var mergedChildrenStyles = (0, _simpleAssign2.default)(
                {},
                child.props.style,
                selectedChildrenStyles,
              );

              var isFocused = childIndex === this.state.focusIndex;
              var focusState = 'none';
              if (isFocused) {
                focusState = this.state.isKeyboardFocused
                  ? 'keyboard-focused'
                  : 'focused';
              }

              return _react2.default.cloneElement(child, {
                desktop: desktop,
                focusState: focusState,
                onTouchTap: function onTouchTap(event) {
                  _this2.handleMenuItemTouchTap(event, child, index);
                  if (child.props.onTouchTap) child.props.onTouchTap(event);
                },
                ref: isFocused ? 'focusedMenuItem' : null,
                style: mergedChildrenStyles,
              });
            },
          },
          {
            key: 'decrementKeyboardFocusIndex',
            value: function decrementKeyboardFocusIndex() {
              var index = this.state.focusIndex;

              index--;
              if (index < 0) index = 0;

              this.setFocusIndex(index, true);
            },
          },
          {
            key: 'getCascadeChildrenCount',
            value: function getCascadeChildrenCount(filteredChildren) {
              var _props2 = this.props;
              var desktop = _props2.desktop;
              var maxHeight = _props2.maxHeight;

              var count = 1;
              var currentHeight = desktop ? 16 : 8;
              var menuItemHeight = desktop ? 32 : 48;

              // MaxHeight isn't set - cascade all of the children
              if (!maxHeight) return filteredChildren.length;

              // Count all the children that will fit inside the max menu height
              filteredChildren.forEach(function (child) {
                if (currentHeight < maxHeight) {
                  var childIsADivider =
                    child.type && child.type.muiName === 'Divider';

                  currentHeight += childIsADivider ? 16 : menuItemHeight;
                  count++;
                }
              });

              return count;
            },
          },
          {
            key: 'getMenuItemCount',
            value: function getMenuItemCount(filteredChildren) {
              var menuItemCount = 0;
              filteredChildren.forEach(function (child) {
                var childIsADivider =
                  child.type && child.type.muiName === 'Divider';
                var childIsDisabled = child.props.disabled;
                if (!childIsADivider && !childIsDisabled) menuItemCount++;
              });
              return menuItemCount;
            },
          },
          {
            key: 'getSelectedIndex',
            value: function getSelectedIndex(props, filteredChildren) {
              var _this3 = this;

              var selectedIndex = -1;
              var menuItemIndex = 0;

              filteredChildren.forEach(function (child) {
                var childIsADivider =
                  child.type && child.type.muiName === 'Divider';

                if (_this3.isChildSelected(child, props))
                  selectedIndex = menuItemIndex;
                if (!childIsADivider) menuItemIndex++;
              });

              return selectedIndex;
            },
          },
          {
            key: 'setFocusIndexStartsWith',
            value: function setFocusIndexStartsWith(keys) {
              var foundIndex = -1;
              _react2.default.Children.forEach(this.props.children, function (
                child,
                index,
              ) {
                if (foundIndex >= 0) {
                  return;
                }
                var primaryText = child.props.primaryText;

                if (
                  typeof primaryText === 'string' &&
                  new RegExp('^' + keys, 'i').test(primaryText)
                ) {
                  foundIndex = index;
                }
              });
              if (foundIndex >= 0) {
                this.setFocusIndex(foundIndex, true);
                return true;
              }
              return false;
            },
          },
          {
            key: 'handleMenuItemTouchTap',
            value: function handleMenuItemTouchTap(event, item, index) {
              var children = this.props.children;
              var multiple = this.props.multiple;
              var valueLink = this.getValueLink(this.props);
              var menuValue = valueLink.value;
              var itemValue = item.props.value;
              var focusIndex = _react2.default.isValidElement(children)
                ? 0
                : children.indexOf(item);

              this.setFocusIndex(focusIndex, false);

              if (multiple) {
                var itemIndex = menuValue.indexOf(itemValue);

                var _menuValue = _toArray(menuValue);

                var newMenuValue = _menuValue;

                if (itemIndex === -1) {
                  newMenuValue.push(itemValue);
                } else {
                  newMenuValue.splice(itemIndex, 1);
                }

                valueLink.requestChange(event, newMenuValue);
              } else if (!multiple && itemValue !== menuValue) {
                valueLink.requestChange(event, itemValue);
              }

              this.props.onItemTouchTap(event, item, index);
            },
          },
          {
            key: 'incrementKeyboardFocusIndex',
            value: function incrementKeyboardFocusIndex(filteredChildren) {
              var index = this.state.focusIndex;
              var maxIndex = this.getMenuItemCount(filteredChildren) - 1;

              index++;
              if (index > maxIndex) index = maxIndex;

              this.setFocusIndex(index, true);
            },
          },
          {
            key: 'isChildSelected',
            value: function isChildSelected(child, props) {
              var menuValue = this.getValueLink(props).value;
              var childValue = child.props.value;

              if (props.multiple) {
                return menuValue.length && menuValue.indexOf(childValue) !== -1;
              } else {
                return (
                  child.props.hasOwnProperty('value') &&
                  menuValue === childValue
                );
              }
            },
          },
          {
            key: 'setFocusIndex',
            value: function setFocusIndex(newIndex, isKeyboardFocused) {
              this.setState({
                focusIndex: newIndex,
                isKeyboardFocused: isKeyboardFocused,
              });
            },
          },
          {
            key: 'setScollPosition',
            value: function setScollPosition() {
              var desktop = this.props.desktop;
              var focusedMenuItem = this.refs.focusedMenuItem;
              var menuItemHeight = desktop ? 32 : 48;

              if (focusedMenuItem) {
                var selectedOffSet = _reactDom2.default.findDOMNode(
                  focusedMenuItem,
                ).offsetTop;

                // Make the focused item be the 2nd item in the list the user sees
                var scrollTop = selectedOffSet - menuItemHeight;
                if (scrollTop < menuItemHeight) scrollTop = 0;

                _reactDom2.default.findDOMNode(
                  this.refs.scrollContainer,
                ).scrollTop = scrollTop;
              }
            },
          },
          {
            key: 'setWidth',
            value: function setWidth() {
              var el = _reactDom2.default.findDOMNode(this);
              var listEl = _reactDom2.default.findDOMNode(this.refs.list);
              var elWidth = el.offsetWidth;
              var keyWidth = this.state.keyWidth;
              var minWidth = keyWidth * 1.5;
              var keyIncrements = elWidth / keyWidth;
              var newWidth = void 0;

              keyIncrements =
                keyIncrements <= 1.5 ? 1.5 : Math.ceil(keyIncrements);
              newWidth = keyIncrements * keyWidth;

              if (newWidth < minWidth) newWidth = minWidth;

              el.style.width = newWidth + 'px';
              listEl.style.width = newWidth + 'px';
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this4 = this;

              var _props3 = this.props;
              var animated = _props3.animated;
              var autoWidth = _props3.autoWidth;
              var children = _props3.children;
              var desktop = _props3.desktop;
              var disableAutoFocus = _props3.disableAutoFocus;
              var initiallyKeyboardFocused = _props3.initiallyKeyboardFocused;
              var listStyle = _props3.listStyle;
              var maxHeight = _props3.maxHeight;
              var multiple = _props3.multiple;
              var _props3$openDirection = _props3.openDirection;
              var openDirection =
                _props3$openDirection === undefined
                  ? 'bottom-left'
                  : _props3$openDirection;
              var onItemTouchTap = _props3.onItemTouchTap;
              var onEscKeyDown = _props3.onEscKeyDown;
              var selectedMenuItemStyle = _props3.selectedMenuItemStyle;
              var style = _props3.style;
              var value = _props3.value;
              var valueLink = _props3.valueLink;
              var width = _props3.width;
              var zDepth = _props3.zDepth;

              var other = _objectWithoutProperties(_props3, [
                'animated',
                'autoWidth',
                'children',
                'desktop',
                'disableAutoFocus',
                'initiallyKeyboardFocused',
                'listStyle',
                'maxHeight',
                'multiple',
                'openDirection',
                'onItemTouchTap',
                'onEscKeyDown',
                'selectedMenuItemStyle',
                'style',
                'value',
                'valueLink',
                'width',
                'zDepth',
              ]);

              true
                ? (0, _warning2.default)(
                    typeof zDepth === 'undefined',
                    'Menu no longer supports `zDepth`. Instead, wrap it in `Paper` ' +
                      'or another component that provides `zDepth`. It will be removed with v0.16.0.',
                  )
                : void 0;

              var focusIndex = this.state.focusIndex;
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              var mergedRootStyles = (0, _simpleAssign2.default)(
                styles.root,
                style,
              );
              var mergedListStyles = (0, _simpleAssign2.default)(
                styles.list,
                listStyle,
              );

              var openDown = openDirection.split('-')[0] === 'bottom';
              var filteredChildren = this.getFilteredChildren(children);

              // Cascade children opacity
              var cumulativeDelay = openDown ? 175 : 325;
              var cascadeChildrenCount = this.getCascadeChildrenCount(
                filteredChildren,
              );
              var cumulativeDelayIncrement = Math.ceil(
                150 / cascadeChildrenCount,
              );

              var menuItemIndex = 0;
              var newChildren = _react2.default.Children.map(
                filteredChildren,
                function (child, index) {
                  var childIsADivider =
                    child.type && child.type.muiName === 'Divider';
                  var childIsDisabled = child.props.disabled;
                  var childrenContainerStyles = {};

                  if (animated) {
                    var transitionDelay = 0;

                    // Only cascade the visible menu items
                    if (
                      menuItemIndex >= focusIndex - 1 &&
                      menuItemIndex <= focusIndex + cascadeChildrenCount - 1
                    ) {
                      cumulativeDelay = openDown
                        ? cumulativeDelay + cumulativeDelayIncrement
                        : cumulativeDelay - cumulativeDelayIncrement;
                      transitionDelay = cumulativeDelay;
                    }

                    childrenContainerStyles = (0, _simpleAssign2.default)(
                      {},
                      styles.menuItemContainer,
                      {
                        transitionDelay: transitionDelay + 'ms',
                      },
                    );
                  }

                  var clonedChild = childIsADivider
                    ? _react2.default.cloneElement(child, {
                        style: styles.divider,
                      })
                    : childIsDisabled
                    ? _react2.default.cloneElement(child, { desktop: desktop })
                    : _this4.cloneMenuItem(child, menuItemIndex, styles, index);

                  if (!childIsADivider && !childIsDisabled) menuItemIndex++;

                  return animated
                    ? _react2.default.createElement(
                        'div',
                        { style: prepareStyles(childrenContainerStyles) },
                        clonedChild,
                      )
                    : clonedChild;
                },
              );

              return _react2.default.createElement(
                _ClickAwayListener2.default,
                { onClickAway: this.handleClickAway },
                _react2.default.createElement(
                  'div',
                  {
                    onKeyDown: this.handleKeyDown,
                    style: prepareStyles(mergedRootStyles),
                    ref: 'scrollContainer',
                  },
                  _react2.default.createElement(
                    _List2.default,
                    _extends({}, other, {
                      ref: 'list',
                      style: mergedListStyles,
                    }),
                    newChildren,
                  ),
                ),
              );
            },
          },
        ]);

        return Menu;
      })(_react.Component);

      Menu.propTypes = {
        /**
         * If true, the menu will apply transitions when it
         * is added to the DOM. In order for transitions to
         * work, wrap the menu inside a `ReactTransitionGroup`.
         */
        animated: (0, _deprecatedPropType2.default)(
          _react.PropTypes.bool,
          'Instead, use a [Popover](/#/components/popover).\n      It will be removed with v0.16.0.',
        ),
        /**
         * If true, the width of the menu will be set automatically
         * according to the widths of its children,
         * using proper keyline increments (64px for desktop,
         * 56px otherwise).
         */
        autoWidth: _react.PropTypes.bool,
        /**
         * The content of the menu. This is usually used to pass `MenuItem`
         * elements.
         */
        children: _react.PropTypes.node,
        /**
         * If true, the menu item will render with compact desktop styles.
         */
        desktop: _react.PropTypes.bool,
        /**
         * If true, the menu will not be auto-focused.
         */
        disableAutoFocus: _react.PropTypes.bool,
        /**
         * If true, the menu will be keyboard-focused initially.
         */
        initiallyKeyboardFocused: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the underlying `List` element.
         */
        listStyle: _react.PropTypes.object,
        /**
         * The maximum height of the menu in pixels. If specified,
         * the menu will be scrollable if it is taller than the provided
         * height.
         */
        maxHeight: _react.PropTypes.number,
        /**
         * If true, `value` must be an array and the menu will support
         * multiple selections.
         */
        multiple: _react.PropTypes.bool,
        /**
         * Callback function fired when a menu item with `value` not
         * equal to the current `value` of the menu is touch-tapped.
         *
         * @param {object} event TouchTap event targeting the menu item.
         * @param {any}  value If `multiple` is true, the menu's `value`
         * array with either the menu item's `value` added (if
         * it wasn't already selected) or omitted (if it was already selected).
         * Otherwise, the `value` of the menu item.
         */
        onChange: _react.PropTypes.func,
        /**
         * Callback function fired when the menu is focused and the *Esc* key
         * is pressed.
         *
         * @param {object} event `keydown` event targeting the menu.
         */
        onEscKeyDown: _react.PropTypes.func,
        /**
         * Callback function fired when a menu item is touch-tapped.
         *
         * @param {object} event TouchTap event targeting the menu item.
         * @param {object} menuItem The menu item.
         * @param {number} index The index of the menu item.
         */
        onItemTouchTap: _react.PropTypes.func,
        /** @ignore */
        onKeyDown: _react.PropTypes.func,
        /**
         * This is the placement of the menu relative to the `IconButton`.
         */
        openDirection: (0, _deprecatedPropType2.default)(
          _propTypes2.default.corners,
          'Instead, use a [Popover](/#/components/popover).\n      It will be removed with v0.16.0.',
        ),
        /**
         * Override the inline-styles of selected menu items.
         */
        selectedMenuItemStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * If `multiple` is true, an array of the `value`s of the selected
         * menu items. Otherwise, the `value` of the selected menu item.
         * If provided, the menu will be a controlled component.
         * This component also supports valueLink.
         */
        value: _react.PropTypes.any,
        /**
         * ValueLink for the menu's `value`.
         */
        valueLink: _react.PropTypes.object,
        /**
         * The width of the menu. If not specified, the menu's width
         * will be set according to the widths of its children, using
         * proper keyline increments (64px for desktop, 56px otherwise).
         */
        width: _propTypes2.default.stringOrNumber,
        /**
         * @ignore
         * Menu no longer supports `zDepth`. Instead, wrap it in `Paper`
         * or another component that provides zDepth.
         */
        zDepth: _propTypes2.default.zDepth,
      };
      Menu.defaultProps = {
        autoWidth: true,
        desktop: false,
        disableAutoFocus: false,
        initiallyKeyboardFocused: false,
        maxHeight: null,
        multiple: false,
        onChange: function onChange() {},
        onEscKeyDown: function onEscKeyDown() {},
        onItemTouchTap: function onItemTouchTap() {},
        onKeyDown: function onKeyDown() {},
      };
      Menu.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };

      var _initialiseProps = function _initialiseProps() {
        var _this5 = this;

        this.handleClickAway = function (event) {
          if (event.defaultPrevented) {
            return;
          }

          _this5.setFocusIndex(-1, false);
        };

        this.handleKeyDown = function (event) {
          var filteredChildren = _this5.getFilteredChildren(
            _this5.props.children,
          );
          var key = (0, _keycode2.default)(event);
          switch (key) {
            case 'down':
              event.preventDefault();
              _this5.incrementKeyboardFocusIndex(filteredChildren);
              break;
            case 'esc':
              _this5.props.onEscKeyDown(event);
              break;
            case 'tab':
              event.preventDefault();
              if (event.shiftKey) {
                _this5.decrementKeyboardFocusIndex();
              } else {
                _this5.incrementKeyboardFocusIndex(filteredChildren);
              }
              break;
            case 'up':
              event.preventDefault();
              _this5.decrementKeyboardFocusIndex();
              break;
            default:
              if (key && key.length === 1) {
                var hotKeys = _this5.hotKeyHolder.append(key);
                if (_this5.setFocusIndexStartsWith(hotKeys)) {
                  event.preventDefault();
                }
              }
          }
          _this5.props.onKeyDown(event);
        };
      };

      exports.default = Menu;

      /***/
    },
    /* 591 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _events = __webpack_require__(548);

      var _events2 = _interopRequireDefault(_events);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var isDescendant = function isDescendant(el, target) {
        if (target !== null) {
          return el === target || isDescendant(el, target.parentNode);
        }
        return false;
      };

      var clickAwayEvents = ['mouseup', 'touchend'];
      var bind = function bind(callback) {
        return clickAwayEvents.forEach(function (event) {
          return _events2.default.on(document, event, callback);
        });
      };
      var unbind = function unbind(callback) {
        return clickAwayEvents.forEach(function (event) {
          return _events2.default.off(document, event, callback);
        });
      };

      var ClickAwayListener = (function (_Component) {
        _inherits(ClickAwayListener, _Component);

        function ClickAwayListener() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, ClickAwayListener);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    ClickAwayListener,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.handleClickAway = function (event) {
                if (event.defaultPrevented) {
                  return;
                }

                // IE11 support, which trigger the handleClickAway even after the unbind
                if (_this.isCurrentlyMounted) {
                  var el = _reactDom2.default.findDOMNode(_this);

                  if (
                    document.documentElement.contains(event.target) &&
                    !isDescendant(el, event.target)
                  ) {
                    _this.props.onClickAway(event);
                  }
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(ClickAwayListener, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.isCurrentlyMounted = true;
              if (this.props.onClickAway) {
                bind(this.handleClickAway);
              }
            },
          },
          {
            key: 'componentDidUpdate',
            value: function componentDidUpdate(prevProps) {
              if (prevProps.onClickAway !== this.props.onClickAway) {
                unbind(this.handleClickAway);
                if (this.props.onClickAway) {
                  bind(this.handleClickAway);
                }
              }
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              this.isCurrentlyMounted = false;
              unbind(this.handleClickAway);
            },
          },
          {
            key: 'render',
            value: function render() {
              return this.props.children;
            },
          },
        ]);

        return ClickAwayListener;
      })(_react.Component);

      ClickAwayListener.propTypes = {
        children: _react.PropTypes.node,
        onClickAway: _react.PropTypes.any,
      };
      exports.default = ClickAwayListener;

      /***/
    },
    /* 592 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(543);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _Subheader = __webpack_require__(593);

      var _Subheader2 = _interopRequireDefault(_Subheader);

      var _deprecatedPropType = __webpack_require__(561);

      var _deprecatedPropType2 = _interopRequireDefault(_deprecatedPropType);

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var List = (function (_Component) {
        _inherits(List, _Component);

        function List() {
          _classCallCheck(this, List);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(List).apply(this, arguments),
          );
        }

        _createClass(List, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var children = _props.children;
              var _props$insetSubheader = _props.insetSubheader;
              var insetSubheader =
                _props$insetSubheader === undefined
                  ? false
                  : _props$insetSubheader;
              var style = _props.style;
              var subheader = _props.subheader;
              var subheaderStyle = _props.subheaderStyle;
              var zDepth = _props.zDepth;

              var other = _objectWithoutProperties(_props, [
                'children',
                'insetSubheader',
                'style',
                'subheader',
                'subheaderStyle',
                'zDepth',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              true
                ? (0, _warning2.default)(
                    typeof zDepth === 'undefined',
                    'List no longer supports `zDepth`. Instead, wrap it in `Paper` ' +
                      'or another component that provides zDepth. It will be removed with v0.16.0.',
                  )
                : void 0;

              var hasSubheader = false;

              if (subheader) {
                hasSubheader = true;
              } else {
                var firstChild = _react.Children.toArray(children)[0];
                if (
                  (0, _react.isValidElement)(firstChild) &&
                  firstChild.type === _Subheader2.default
                ) {
                  hasSubheader = true;
                }
              }

              var styles = {
                root: {
                  padding: 0,
                  paddingBottom: 8,
                  paddingTop: hasSubheader ? 0 : 8,
                },
              };

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(styles.root, style),
                  ),
                }),
                subheader &&
                  _react2.default.createElement(
                    _Subheader2.default,
                    { inset: insetSubheader, style: subheaderStyle },
                    subheader,
                  ),
                children,
              );
            },
          },
        ]);

        return List;
      })(_react.Component);

      List.propTypes = {
        /**
         * These are usually `ListItem`s that are passed to
         * be part of the list.
         */
        children: _react.PropTypes.node,
        /**
         * If true, the subheader will be indented by 72px.
         */
        insetSubheader: (0, _deprecatedPropType2.default)(
          _react.PropTypes.bool,
          'Refer to the `subheader` property. It will be removed with v0.16.0.',
        ),
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The subheader string that will be displayed at the top of the list.
         */
        subheader: (0, _deprecatedPropType2.default)(
          _react.PropTypes.node,
          'Instead, nest the `Subheader` component directly inside the `List`. It will be removed with v0.16.0.',
        ),
        /**
         * Override the inline-styles of the subheader element.
         */
        subheaderStyle: (0, _deprecatedPropType2.default)(
          _react.PropTypes.object,
          'Refer to the `subheader` property. It will be removed with v0.16.0.',
        ),
        /**
         * @ignore
         * ** Breaking change ** List no longer supports `zDepth`. Instead, wrap it in `Paper`
         * or another component that provides zDepth.
         */
        zDepth: _propTypes2.default.zDepth,
      };
      List.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = List;

      /***/
    },
    /* 593 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _Subheader = __webpack_require__(594);

      var _Subheader2 = _interopRequireDefault(_Subheader);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _Subheader2.default;

      /***/
    },
    /* 594 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      var propTypes = {
        /**
         * Node that will be placed inside the `Subheader`.
         */
        children: _react.PropTypes.node,
        /**
         * If true, the `Subheader` will be indented by `72px`.
         */
        inset: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };

      var defaultProps = {
        inset: false,
      };

      var contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };

      var Subheader = function Subheader(props, context) {
        var children = props.children;
        var inset = props.inset;
        var style = props.style;

        var other = _objectWithoutProperties(props, [
          'children',
          'inset',
          'style',
        ]);

        var _context$muiTheme = context.muiTheme;
        var prepareStyles = _context$muiTheme.prepareStyles;
        var subheader = _context$muiTheme.subheader;

        var styles = {
          root: {
            boxSizing: 'border-box',
            color: subheader.color,
            fontSize: 14,
            fontWeight: subheader.fontWeight,
            lineHeight: '48px',
            paddingLeft: inset ? 72 : 16,
            width: '100%',
          },
        };

        return _react2.default.createElement(
          'div',
          _extends({}, other, {
            style: prepareStyles(
              (0, _simpleAssign2.default)({}, styles.root, style),
            ),
          }),
          children,
        );
      };

      Subheader.muiName = 'Subheader';
      Subheader.propTypes = propTypes;
      Subheader.defaultProps = defaultProps;
      Subheader.contextTypes = contextTypes;

      exports.default = Subheader;

      /***/
    },
    /* 595 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      var HotKeyHolder = (exports.HotKeyHolder = (function () {
        function HotKeyHolder() {
          var _this = this;

          _classCallCheck(this, HotKeyHolder);

          this.clear = function () {
            _this.timerId = null;
            _this.lastKeys = null;
          };
        }

        _createClass(HotKeyHolder, [
          {
            key: 'append',
            value: function append(key) {
              clearTimeout(this.timerId);
              this.timerId = setTimeout(this.clear, 500);
              return (this.lastKeys = (this.lastKeys || '') + key);
            },
          },
        ]);

        return HotKeyHolder;
      })());

      /***/
    },
    /* 596 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _MenuItem = __webpack_require__(597);

      var _MenuItem2 = _interopRequireDefault(_MenuItem);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _MenuItem2.default;

      /***/
    },
    /* 597 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _shallowEqual = __webpack_require__(551);

      var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

      var _Popover = __webpack_require__(598);

      var _Popover2 = _interopRequireDefault(_Popover);

      var _check = __webpack_require__(604);

      var _check2 = _interopRequireDefault(_check);

      var _ListItem = __webpack_require__(605);

      var _ListItem2 = _interopRequireDefault(_ListItem);

      var _Menu = __webpack_require__(590);

      var _Menu2 = _interopRequireDefault(_Menu);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var nestedMenuStyle = {
        position: 'relative',
      };

      function getStyles(props, context) {
        var disabledColor = context.muiTheme.baseTheme.palette.disabledColor;
        var textColor = context.muiTheme.baseTheme.palette.textColor;
        var leftIndent = props.desktop ? 64 : 72;
        var sidePadding = props.desktop ? 24 : 16;

        var styles = {
          root: {
            color: props.disabled ? disabledColor : textColor,
            cursor: props.disabled ? 'not-allowed' : 'pointer',
            lineHeight: props.desktop ? '32px' : '48px',
            fontSize: props.desktop ? 15 : 16,
            whiteSpace: 'nowrap',
          },

          innerDivStyle: {
            paddingLeft:
              props.leftIcon || props.insetChildren || props.checked
                ? leftIndent
                : sidePadding,
            paddingRight: sidePadding,
            paddingBottom: 0,
            paddingTop: 0,
          },

          secondaryText: {
            float: 'right',
          },

          leftIconDesktop: {
            margin: 0,
            left: 24,
            top: 4,
          },

          rightIconDesktop: {
            margin: 0,
            right: 24,
            top: 4,
            fill: context.muiTheme.menuItem.rightIconDesktopFill,
          },
        };

        return styles;
      }

      var MenuItem = (function (_Component) {
        _inherits(MenuItem, _Component);

        function MenuItem() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, MenuItem);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    MenuItem,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                open: false,
              }),
              (_this.cloneMenuItem = function (item) {
                return _react2.default.cloneElement(item, {
                  onTouchTap: function onTouchTap(event) {
                    if (!item.props.menuItems) {
                      _this.handleRequestClose();
                    }

                    if (item.props.onTouchTap) {
                      item.props.onTouchTap(event);
                    }
                  },
                });
              }),
              (_this.handleTouchTap = function (event) {
                event.preventDefault();

                _this.setState({
                  open: true,
                  anchorEl: _reactDom2.default.findDOMNode(_this),
                });

                if (_this.props.onTouchTap) {
                  _this.props.onTouchTap(event);
                }
              }),
              (_this.handleRequestClose = function () {
                _this.setState({
                  open: false,
                  anchorEl: null,
                });
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(MenuItem, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.applyFocusState();
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (this.state.open && nextProps.focusState === 'none') {
                this.handleRequestClose();
              }
            },
          },
          {
            key: 'shouldComponentUpdate',
            value: function shouldComponentUpdate(
              nextProps,
              nextState,
              nextContext,
            ) {
              return (
                !(0, _shallowEqual2.default)(this.props, nextProps) ||
                !(0, _shallowEqual2.default)(this.state, nextState) ||
                !(0, _shallowEqual2.default)(this.context, nextContext)
              );
            },
          },
          {
            key: 'componentDidUpdate',
            value: function componentDidUpdate() {
              this.applyFocusState();
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              if (this.state.open) {
                this.setState({
                  open: false,
                });
              }
            },
          },
          {
            key: 'applyFocusState',
            value: function applyFocusState() {
              this.refs.listItem.applyFocusState(this.props.focusState);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var checked = _props.checked;
              var children = _props.children;
              var desktop = _props.desktop;
              var disabled = _props.disabled;
              var focusState = _props.focusState;
              var innerDivStyle = _props.innerDivStyle;
              var insetChildren = _props.insetChildren;
              var leftIcon = _props.leftIcon;
              var menuItems = _props.menuItems;
              var rightIcon = _props.rightIcon;
              var secondaryText = _props.secondaryText;
              var style = _props.style;
              var animation = _props.animation;
              var value = _props.value;

              var other = _objectWithoutProperties(_props, [
                'checked',
                'children',
                'desktop',
                'disabled',
                'focusState',
                'innerDivStyle',
                'insetChildren',
                'leftIcon',
                'menuItems',
                'rightIcon',
                'secondaryText',
                'style',
                'animation',
                'value',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);
              var mergedRootStyles = (0, _simpleAssign2.default)(
                styles.root,
                style,
              );
              var mergedInnerDivStyles = (0, _simpleAssign2.default)(
                styles.innerDivStyle,
                innerDivStyle,
              );

              // Left Icon
              var leftIconElement = leftIcon
                ? leftIcon
                : checked
                ? _react2.default.createElement(_check2.default, null)
                : null;
              if (leftIconElement) {
                var mergedLeftIconStyles = desktop
                  ? (0, _simpleAssign2.default)(
                      styles.leftIconDesktop,
                      leftIconElement.props.style,
                    )
                  : leftIconElement.props.style;
                leftIconElement = _react2.default.cloneElement(
                  leftIconElement,
                  { style: mergedLeftIconStyles },
                );
              }

              // Right Icon
              var rightIconElement = void 0;
              if (rightIcon) {
                var mergedRightIconStyles = desktop
                  ? (0, _simpleAssign2.default)(
                      styles.rightIconDesktop,
                      rightIcon.props.style,
                    )
                  : rightIcon.props.style;
                rightIconElement = _react2.default.cloneElement(rightIcon, {
                  style: mergedRightIconStyles,
                });
              }

              // Secondary Text
              var secondaryTextElement = void 0;
              if (secondaryText) {
                var secondaryTextIsAnElement = _react2.default.isValidElement(
                  secondaryText,
                );
                var mergedSecondaryTextStyles = secondaryTextIsAnElement
                  ? (0, _simpleAssign2.default)(
                      styles.secondaryText,
                      secondaryText.props.style,
                    )
                  : null;

                secondaryTextElement = secondaryTextIsAnElement
                  ? _react2.default.cloneElement(secondaryText, {
                      style: mergedSecondaryTextStyles,
                    })
                  : _react2.default.createElement(
                      'div',
                      { style: prepareStyles(styles.secondaryText) },
                      secondaryText,
                    );
              }
              var childMenuPopover = void 0;
              if (menuItems) {
                childMenuPopover = _react2.default.createElement(
                  _Popover2.default,
                  {
                    animation: animation,
                    anchorOrigin: { horizontal: 'right', vertical: 'top' },
                    anchorEl: this.state.anchorEl,
                    open: this.state.open,
                    useLayerForClickAway: false,
                    onRequestClose: this.handleRequestClose,
                  },
                  _react2.default.createElement(
                    _Menu2.default,
                    {
                      desktop: desktop,
                      disabled: disabled,
                      style: nestedMenuStyle,
                    },
                    _react2.default.Children.map(menuItems, this.cloneMenuItem),
                  ),
                );
                other.onTouchTap = this.handleTouchTap;
              }

              return _react2.default.createElement(
                _ListItem2.default,
                _extends({}, other, {
                  disabled: disabled,
                  innerDivStyle: mergedInnerDivStyles,
                  insetChildren: insetChildren,
                  leftIcon: leftIconElement,
                  ref: 'listItem',
                  rightIcon: rightIconElement,
                  style: mergedRootStyles,
                }),
                children,
                secondaryTextElement,
                childMenuPopover,
              );
            },
          },
        ]);

        return MenuItem;
      })(_react.Component);

      MenuItem.muiName = 'MenuItem';
      MenuItem.propTypes = {
        /**
         * Override the default animation component used.
         */
        animation: _react.PropTypes.func,
        /**
         * If true, a left check mark will be rendered.
         */
        checked: _react.PropTypes.bool,
        /**
         * Elements passed as children to the underlying `ListItem`.
         */
        children: _react.PropTypes.node,
        /**
         * @ignore
         * If true, the menu item will render with compact desktop
         * styles.
         */
        desktop: _react.PropTypes.bool,
        /**
         * If true, the menu item will be disabled.
         */
        disabled: _react.PropTypes.bool,
        /**
         * The focus state of the menu item. This prop is used to set the focus
         * state of the underlying `ListItem`.
         */
        focusState: _react.PropTypes.oneOf([
          'none',
          'focused',
          'keyboard-focused',
        ]),
        /**
         * Override the inline-styles of the inner div.
         */
        innerDivStyle: _react.PropTypes.object,
        /**
         * If true, the children will be indented.
         * This is only needed when there is no `leftIcon`.
         */
        insetChildren: _react.PropTypes.bool,
        /**
         * The `SvgIcon` or `FontIcon` to be displayed on the left side.
         */
        leftIcon: _react.PropTypes.element,
        /**
         * `MenuItem` elements to nest within the menu item.
         */
        menuItems: _react.PropTypes.node,
        /**
         * Callback function fired when the menu item is touch-tapped.
         *
         * @param {object} event TouchTap event targeting the menu item.
         */
        onTouchTap: _react.PropTypes.func,
        /**
         * Can be used to render primary text within the menu item.
         */
        primaryText: _react.PropTypes.node,
        /**
         * The `SvgIcon` or `FontIcon` to be displayed on the right side.
         */
        rightIcon: _react.PropTypes.element,
        /**
         * Can be used to render secondary text within the menu item.
         */
        secondaryText: _react.PropTypes.node,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The value of the menu item.
         */
        value: _react.PropTypes.any,
      };
      MenuItem.defaultProps = {
        checked: false,
        desktop: false,
        disabled: false,
        focusState: 'none',
        insetChildren: false,
      };
      MenuItem.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = MenuItem;

      /***/
    },
    /* 598 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _reactEventListener = __webpack_require__(585);

      var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

      var _RenderToLayer = __webpack_require__(599);

      var _RenderToLayer2 = _interopRequireDefault(_RenderToLayer);

      var _propTypes = __webpack_require__(543);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _Paper = __webpack_require__(577);

      var _Paper2 = _interopRequireDefault(_Paper);

      var _throttle = __webpack_require__(600);

      var _throttle2 = _interopRequireDefault(_throttle);

      var _PopoverAnimationDefault = __webpack_require__(603);

      var _PopoverAnimationDefault2 = _interopRequireDefault(
        _PopoverAnimationDefault,
      );

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Popover = (function (_Component) {
        _inherits(Popover, _Component);

        function Popover(props, context) {
          _classCallCheck(this, Popover);

          var _this = _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(Popover).call(this, props, context),
          );

          _this.renderLayer = function () {
            var _this$props = _this.props;
            var animated = _this$props.animated;
            var animation = _this$props.animation;
            var children = _this$props.children;
            var style = _this$props.style;

            var other = _objectWithoutProperties(_this$props, [
              'animated',
              'animation',
              'children',
              'style',
            ]);

            var Animation = animation || _PopoverAnimationDefault2.default;
            var styleRoot = style;

            if (!Animation) {
              Animation = _Paper2.default;
              styleRoot = {
                position: 'fixed',
              };
              if (!_this.state.open) {
                return null;
              }
            }

            return _react2.default.createElement(
              Animation,
              _extends({}, other, {
                style: styleRoot,
                open: _this.state.open && !_this.state.closing,
              }),
              children,
            );
          };

          _this.componentClickAway = function () {
            _this.requestClose('clickAway');
          };

          _this.setPlacement = function (scrolling) {
            if (!_this.state.open) {
              return;
            }

            var anchorEl = _this.props.anchorEl || _this.anchorEl;

            if (!_this.refs.layer.getLayer()) {
              return;
            }

            var targetEl = _this.refs.layer.getLayer().children[0];
            if (!targetEl) {
              return;
            }

            var _this$props2 = _this.props;
            var targetOrigin = _this$props2.targetOrigin;
            var anchorOrigin = _this$props2.anchorOrigin;

            var anchor = _this.getAnchorPosition(anchorEl);
            var target = _this.getTargetPosition(targetEl);

            var targetPosition = {
              top:
                anchor[anchorOrigin.vertical] - target[targetOrigin.vertical],
              left:
                anchor[anchorOrigin.horizontal] -
                target[targetOrigin.horizontal],
            };

            if (scrolling && _this.props.autoCloseWhenOffScreen) {
              _this.autoCloseWhenOffScreen(anchor);
            }

            if (_this.props.canAutoPosition) {
              target = _this.getTargetPosition(targetEl); // update as height may have changed
              targetPosition = _this.applyAutoPositionIfNeeded(
                anchor,
                target,
                targetOrigin,
                anchorOrigin,
                targetPosition,
              );
            }

            targetEl.style.top = Math.max(0, targetPosition.top) + 'px';
            targetEl.style.left = Math.max(0, targetPosition.left) + 'px';
            targetEl.style.maxHeight = window.innerHeight + 'px';
          };

          _this.handleResize = (0, _throttle2.default)(_this.setPlacement, 100);
          _this.handleScroll = (0, _throttle2.default)(
            _this.setPlacement.bind(_this, true),
            50,
          );

          _this.state = {
            open: props.open,
            closing: false,
          };
          return _this;
        }

        _createClass(Popover, [
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              var _this2 = this;

              if (nextProps.open !== this.state.open) {
                if (nextProps.open) {
                  this.anchorEl = nextProps.anchorEl || this.props.anchorEl;
                  this.setState({
                    open: true,
                    closing: false,
                  });
                } else {
                  if (nextProps.animated) {
                    this.setState({ closing: true });
                    this.timeout = setTimeout(function () {
                      _this2.setState({
                        open: false,
                      });
                    }, 500);
                  } else {
                    this.setState({
                      open: false,
                    });
                  }
                }
              }
            },
          },
          {
            key: 'componentDidUpdate',
            value: function componentDidUpdate() {
              this.setPlacement();
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              clearTimeout(this.timeout);
            },
          },
          {
            key: 'requestClose',
            value: function requestClose(reason) {
              if (this.props.onRequestClose) {
                this.props.onRequestClose(reason);
              }
            },
          },
          {
            key: '_resizeAutoPosition',
            value: function _resizeAutoPosition() {
              this.setPlacement();
            },
          },
          {
            key: 'getAnchorPosition',
            value: function getAnchorPosition(el) {
              if (!el) {
                el = _reactDom2.default.findDOMNode(this);
              }

              var rect = el.getBoundingClientRect();
              var a = {
                top: rect.top,
                left: rect.left,
                width: el.offsetWidth,
                height: el.offsetHeight,
              };

              a.right = rect.right || a.left + a.width;
              a.bottom = rect.bottom || a.top + a.height;
              a.middle = a.left + (a.right - a.left) / 2;
              a.center = a.top + (a.bottom - a.top) / 2;

              return a;
            },
          },
          {
            key: 'getTargetPosition',
            value: function getTargetPosition(targetEl) {
              return {
                top: 0,
                center: targetEl.offsetHeight / 2,
                bottom: targetEl.offsetHeight,
                left: 0,
                middle: targetEl.offsetWidth / 2,
                right: targetEl.offsetWidth,
              };
            },
          },
          {
            key: 'autoCloseWhenOffScreen',
            value: function autoCloseWhenOffScreen(anchorPosition) {
              if (
                anchorPosition.top < 0 ||
                anchorPosition.top > window.innerHeight ||
                anchorPosition.left < 0 ||
                anchorPosition.left > window.innerWidth
              ) {
                this.requestClose('offScreen');
              }
            },
          },
          {
            key: 'getOverlapMode',
            value: function getOverlapMode(anchor, target, median) {
              if ([anchor, target].indexOf(median) >= 0) return 'auto';
              if (anchor === target) return 'inclusive';
              return 'exclusive';
            },
          },
          {
            key: 'getPositions',
            value: function getPositions(anchor, target) {
              var a = _extends({}, anchor);
              var t = _extends({}, target);

              var positions = {
                x: ['left', 'right'].filter(function (p) {
                  return p !== t.horizontal;
                }),
                y: ['top', 'bottom'].filter(function (p) {
                  return p !== t.vertical;
                }),
              };

              var overlap = {
                x: this.getOverlapMode(a.horizontal, t.horizontal, 'middle'),
                y: this.getOverlapMode(a.vertical, t.vertical, 'center'),
              };

              positions.x.splice(overlap.x === 'auto' ? 0 : 1, 0, 'middle');
              positions.y.splice(overlap.y === 'auto' ? 0 : 1, 0, 'center');

              if (overlap.y !== 'auto') {
                a.vertical = a.vertical === 'top' ? 'bottom' : 'top';
                if (overlap.y === 'inclusive') {
                  t.vertical = t.vertical;
                }
              }

              if (overlap.x !== 'auto') {
                a.horizontal = a.horizontal === 'left' ? 'right' : 'left';
                if (overlap.y === 'inclusive') {
                  t.horizontal = t.horizontal;
                }
              }

              return {
                positions: positions,
                anchorPos: a,
              };
            },
          },
          {
            key: 'applyAutoPositionIfNeeded',
            value: function applyAutoPositionIfNeeded(
              anchor,
              target,
              targetOrigin,
              anchorOrigin,
              targetPosition,
            ) {
              var _getPositions = this.getPositions(anchorOrigin, targetOrigin);

              var positions = _getPositions.positions;
              var anchorPos = _getPositions.anchorPos;

              if (
                targetPosition.top < 0 ||
                targetPosition.top + target.bottom > window.innerHeight
              ) {
                var newTop =
                  anchor[anchorPos.vertical] - target[positions.y[0]];
                if (newTop + target.bottom <= window.innerHeight)
                  targetPosition.top = Math.max(0, newTop);
                else {
                  newTop = anchor[anchorPos.vertical] - target[positions.y[1]];
                  if (newTop + target.bottom <= window.innerHeight)
                    targetPosition.top = Math.max(0, newTop);
                }
              }
              if (
                targetPosition.left < 0 ||
                targetPosition.left + target.right > window.innerWidth
              ) {
                var newLeft =
                  anchor[anchorPos.horizontal] - target[positions.x[0]];
                if (newLeft + target.right <= window.innerWidth)
                  targetPosition.left = Math.max(0, newLeft);
                else {
                  newLeft =
                    anchor[anchorPos.horizontal] - target[positions.x[1]];
                  if (newLeft + target.right <= window.innerWidth)
                    targetPosition.left = Math.max(0, newLeft);
                }
              }
              return targetPosition;
            },
          },
          {
            key: 'render',
            value: function render() {
              return _react2.default.createElement(
                'div',
                { style: { display: 'none' } },
                _react2.default.createElement(_reactEventListener2.default, {
                  target: 'window',
                  onScroll: this.handleScroll,
                  onResize: this.handleResize,
                }),
                _react2.default.createElement(_RenderToLayer2.default, {
                  ref: 'layer',
                  open: this.state.open,
                  componentClickAway: this.componentClickAway,
                  useLayerForClickAway: this.props.useLayerForClickAway,
                  render: this.renderLayer,
                }),
              );
            },
          },
        ]);

        return Popover;
      })(_react.Component);

      Popover.propTypes = {
        /**
         * This is the DOM element that will be used to set the position of the
         * popover.
         */
        anchorEl: _react.PropTypes.object,
        /**
         * This is the point on the anchor where the popover's
         * `targetOrigin` will attach to.
         * Options:
         * vertical: [top, middle, bottom];
         * horizontal: [left, center, right].
         */
        anchorOrigin: _propTypes2.default.origin,
        /**
         * If true, the popover will apply transitions when
         * it is added to the DOM.
         */
        animated: _react.PropTypes.bool,
        /**
         * Override the default animation component used.
         */
        animation: _react.PropTypes.func,
        /**
         * If true, the popover will hide when the anchor is scrolled off the screen.
         */
        autoCloseWhenOffScreen: _react.PropTypes.bool,
        /**
         * If true, the popover (potentially) ignores `targetOrigin`
         * and `anchorOrigin` to make itself fit on screen,
         * which is useful for mobile devices.
         */
        canAutoPosition: _react.PropTypes.bool,
        /**
         * The content of the popover.
         */
        children: _react.PropTypes.node,
        /**
         * The CSS class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * Callback function fired when the popover is requested to be closed.
         *
         * @param {string} reason The reason for the close request. Possibles values
         * are 'clickAway' and 'offScreen'.
         */
        onRequestClose: _react.PropTypes.func,
        /**
         * If true, the popover is visible.
         */
        open: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * This is the point on the popover which will attach to
         * the anchor's origin.
         * Options:
         * vertical: [top, middle, bottom];
         * horizontal: [left, center, right].
         */
        targetOrigin: _propTypes2.default.origin,
        /**
         * If true, the popover will render on top of an invisible
         * layer, which will prevent clicks to the underlying
         * elements, and trigger an `onRequestClose('clickAway')` call.
         */
        useLayerForClickAway: _react.PropTypes.bool,
        /**
         * The zDepth of the popover.
         */
        zDepth: _propTypes2.default.zDepth,
      };
      Popover.defaultProps = {
        anchorOrigin: {
          vertical: 'bottom',
          horizontal: 'left',
        },
        animated: true,
        autoCloseWhenOffScreen: true,
        canAutoPosition: true,
        onRequestClose: function onRequestClose() {},
        open: false,
        style: {
          overflowY: 'auto',
        },
        targetOrigin: {
          vertical: 'top',
          horizontal: 'left',
        },
        useLayerForClickAway: true,
        zDepth: 1,
      };
      Popover.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Popover;

      /***/
    },
    /* 599 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _reactDom = __webpack_require__(130);

      var _dom = __webpack_require__(559);

      var _dom2 = _interopRequireDefault(_dom);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      // heavily inspired by https://github.com/Khan/react-components/blob/master/js/layered-component-mixin.jsx
      var RenderToLayer = (function (_Component) {
        _inherits(RenderToLayer, _Component);

        function RenderToLayer() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, RenderToLayer);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    RenderToLayer,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.onClickAway = function (event) {
                if (event.defaultPrevented) {
                  return;
                }

                if (!_this.props.componentClickAway) {
                  return;
                }

                if (!_this.props.open) {
                  return;
                }

                var el = _this.layer;
                if (
                  (event.target !== el && event.target === window) ||
                  (document.documentElement.contains(event.target) &&
                    !_dom2.default.isDescendant(el, event.target))
                ) {
                  _this.props.componentClickAway(event);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(RenderToLayer, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.renderLayer();
            },
          },
          {
            key: 'componentDidUpdate',
            value: function componentDidUpdate() {
              this.renderLayer();
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              this.unrenderLayer();
            },
          },
          {
            key: 'getLayer',
            value: function getLayer() {
              return this.layer;
            },
          },
          {
            key: 'unrenderLayer',
            value: function unrenderLayer() {
              if (!this.layer) {
                return;
              }

              if (this.props.useLayerForClickAway) {
                this.layer.style.position = 'relative';
                this.layer.removeEventListener('touchstart', this.onClickAway);
                this.layer.removeEventListener('click', this.onClickAway);
              } else {
                window.removeEventListener('touchstart', this.onClickAway);
                window.removeEventListener('click', this.onClickAway);
              }

              (0, _reactDom.unmountComponentAtNode)(this.layer);
              document.body.removeChild(this.layer);
              this.layer = null;
            },

            /**
             * By calling this method in componentDidMount() and
             * componentDidUpdate(), you're effectively creating a "wormhole" that
             * funnels React's hierarchical updates through to a DOM node on an
             * entirely different part of the page.
             */
          },
          {
            key: 'renderLayer',
            value: function renderLayer() {
              var _this2 = this;

              var _props = this.props;
              var open = _props.open;
              var render = _props.render;

              if (open) {
                if (!this.layer) {
                  this.layer = document.createElement('div');
                  document.body.appendChild(this.layer);

                  if (this.props.useLayerForClickAway) {
                    this.layer.addEventListener('touchstart', this.onClickAway);
                    this.layer.addEventListener('click', this.onClickAway);
                    this.layer.style.position = 'fixed';
                    this.layer.style.top = 0;
                    this.layer.style.bottom = 0;
                    this.layer.style.left = 0;
                    this.layer.style.right = 0;
                    this.layer.style.zIndex = this.context.muiTheme.zIndex.layer;
                  } else {
                    setTimeout(function () {
                      window.addEventListener('touchstart', _this2.onClickAway);
                      window.addEventListener('click', _this2.onClickAway);
                    }, 0);
                  }
                }

                var layerElement = render();
                this.layerElement = (0,
                _reactDom.unstable_renderSubtreeIntoContainer)(
                  this,
                  layerElement,
                  this.layer,
                );
              } else {
                this.unrenderLayer();
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              return null;
            },
          },
        ]);

        return RenderToLayer;
      })(_react.Component);

      RenderToLayer.propTypes = {
        componentClickAway: _react.PropTypes.func,
        open: _react.PropTypes.bool.isRequired,
        render: _react.PropTypes.func.isRequired,
        useLayerForClickAway: _react.PropTypes.bool,
      };
      RenderToLayer.defaultProps = {
        useLayerForClickAway: true,
      };
      RenderToLayer.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = RenderToLayer;

      /***/
    },
    /* 600 */
    /***/ function (module, exports, __webpack_require__) {
      var debounce = __webpack_require__(601),
        isObject = __webpack_require__(345);

      /** Error message constants. */
      var FUNC_ERROR_TEXT = 'Expected a function';

      /**
       * Creates a throttled function that only invokes `func` at most once per
       * every `wait` milliseconds. The throttled function comes with a `cancel`
       * method to cancel delayed `func` invocations and a `flush` method to
       * immediately invoke them. Provide `options` to indicate whether `func`
       * should be invoked on the leading and/or trailing edge of the `wait`
       * timeout. The `func` is invoked with the last arguments provided to the
       * throttled function. Subsequent calls to the throttled function return the
       * result of the last `func` invocation.
       *
       * **Note:** If `leading` and `trailing` options are `true`, `func` is
       * invoked on the trailing edge of the timeout only if the throttled function
       * is invoked more than once during the `wait` timeout.
       *
       * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
       * until to the next tick, similar to `setTimeout` with a timeout of `0`.
       *
       * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
       * for details over the differences between `_.throttle` and `_.debounce`.
       *
       * @static
       * @memberOf _
       * @since 0.1.0
       * @category Function
       * @param {Function} func The function to throttle.
       * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
       * @param {Object} [options={}] The options object.
       * @param {boolean} [options.leading=true]
       *  Specify invoking on the leading edge of the timeout.
       * @param {boolean} [options.trailing=true]
       *  Specify invoking on the trailing edge of the timeout.
       * @returns {Function} Returns the new throttled function.
       * @example
       *
       * // Avoid excessively updating the position while scrolling.
       * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
       *
       * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
       * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
       * jQuery(element).on('click', throttled);
       *
       * // Cancel the trailing throttled invocation.
       * jQuery(window).on('popstate', throttled.cancel);
       */
      function throttle(func, wait, options) {
        var leading = true,
          trailing = true;

        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        if (isObject(options)) {
          leading = 'leading' in options ? !!options.leading : leading;
          trailing = 'trailing' in options ? !!options.trailing : trailing;
        }
        return debounce(func, wait, {
          leading: leading,
          maxWait: wait,
          trailing: trailing,
        });
      }

      module.exports = throttle;

      /***/
    },
    /* 601 */
    /***/ function (module, exports, __webpack_require__) {
      var isObject = __webpack_require__(345),
        now = __webpack_require__(602),
        toNumber = __webpack_require__(358);

      /** Error message constants. */
      var FUNC_ERROR_TEXT = 'Expected a function';

      /* Built-in method references for those with the same name as other `lodash` methods. */
      var nativeMax = Math.max,
        nativeMin = Math.min;

      /**
       * Creates a debounced function that delays invoking `func` until after `wait`
       * milliseconds have elapsed since the last time the debounced function was
       * invoked. The debounced function comes with a `cancel` method to cancel
       * delayed `func` invocations and a `flush` method to immediately invoke them.
       * Provide `options` to indicate whether `func` should be invoked on the
       * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
       * with the last arguments provided to the debounced function. Subsequent
       * calls to the debounced function return the result of the last `func`
       * invocation.
       *
       * **Note:** If `leading` and `trailing` options are `true`, `func` is
       * invoked on the trailing edge of the timeout only if the debounced function
       * is invoked more than once during the `wait` timeout.
       *
       * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
       * until to the next tick, similar to `setTimeout` with a timeout of `0`.
       *
       * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
       * for details over the differences between `_.debounce` and `_.throttle`.
       *
       * @static
       * @memberOf _
       * @since 0.1.0
       * @category Function
       * @param {Function} func The function to debounce.
       * @param {number} [wait=0] The number of milliseconds to delay.
       * @param {Object} [options={}] The options object.
       * @param {boolean} [options.leading=false]
       *  Specify invoking on the leading edge of the timeout.
       * @param {number} [options.maxWait]
       *  The maximum time `func` is allowed to be delayed before it's invoked.
       * @param {boolean} [options.trailing=true]
       *  Specify invoking on the trailing edge of the timeout.
       * @returns {Function} Returns the new debounced function.
       * @example
       *
       * // Avoid costly calculations while the window size is in flux.
       * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
       *
       * // Invoke `sendMail` when clicked, debouncing subsequent calls.
       * jQuery(element).on('click', _.debounce(sendMail, 300, {
       *   'leading': true,
       *   'trailing': false
       * }));
       *
       * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
       * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
       * var source = new EventSource('/stream');
       * jQuery(source).on('message', debounced);
       *
       * // Cancel the trailing debounced invocation.
       * jQuery(window).on('popstate', debounced.cancel);
       */
      function debounce(func, wait, options) {
        var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        wait = toNumber(wait) || 0;
        if (isObject(options)) {
          leading = !!options.leading;
          maxing = 'maxWait' in options;
          maxWait = maxing
            ? nativeMax(toNumber(options.maxWait) || 0, wait)
            : maxWait;
          trailing = 'trailing' in options ? !!options.trailing : trailing;
        }

        function invokeFunc(time) {
          var args = lastArgs,
            thisArg = lastThis;

          lastArgs = lastThis = undefined;
          lastInvokeTime = time;
          result = func.apply(thisArg, args);
          return result;
        }

        function leadingEdge(time) {
          // Reset any `maxWait` timer.
          lastInvokeTime = time;
          // Start the timer for the trailing edge.
          timerId = setTimeout(timerExpired, wait);
          // Invoke the leading edge.
          return leading ? invokeFunc(time) : result;
        }

        function remainingWait(time) {
          var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            result = wait - timeSinceLastCall;

          return maxing
            ? nativeMin(result, maxWait - timeSinceLastInvoke)
            : result;
        }

        function shouldInvoke(time) {
          var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

          // Either this is the first call, activity has stopped and we're at the
          // trailing edge, the system time has gone backwards and we're treating
          // it as the trailing edge, or we've hit the `maxWait` limit.
          return (
            lastCallTime === undefined ||
            timeSinceLastCall >= wait ||
            timeSinceLastCall < 0 ||
            (maxing && timeSinceLastInvoke >= maxWait)
          );
        }

        function timerExpired() {
          var time = now();
          if (shouldInvoke(time)) {
            return trailingEdge(time);
          }
          // Restart the timer.
          timerId = setTimeout(timerExpired, remainingWait(time));
        }

        function trailingEdge(time) {
          timerId = undefined;

          // Only invoke if we have `lastArgs` which means `func` has been
          // debounced at least once.
          if (trailing && lastArgs) {
            return invokeFunc(time);
          }
          lastArgs = lastThis = undefined;
          return result;
        }

        function cancel() {
          if (timerId !== undefined) {
            clearTimeout(timerId);
          }
          lastInvokeTime = 0;
          lastArgs = lastCallTime = lastThis = timerId = undefined;
        }

        function flush() {
          return timerId === undefined ? result : trailingEdge(now());
        }

        function debounced() {
          var time = now(),
            isInvoking = shouldInvoke(time);

          lastArgs = arguments;
          lastThis = this;
          lastCallTime = time;

          if (isInvoking) {
            if (timerId === undefined) {
              return leadingEdge(lastCallTime);
            }
            if (maxing) {
              // Handle invocations in a tight loop.
              timerId = setTimeout(timerExpired, wait);
              return invokeFunc(lastCallTime);
            }
          }
          if (timerId === undefined) {
            timerId = setTimeout(timerExpired, wait);
          }
          return result;
        }
        debounced.cancel = cancel;
        debounced.flush = flush;
        return debounced;
      }

      module.exports = debounce;

      /***/
    },
    /* 602 */
    /***/ function (module, exports, __webpack_require__) {
      var root = __webpack_require__(114);

      /**
       * Gets the timestamp of the number of milliseconds that have elapsed since
       * the Unix epoch (1 January 1970 00:00:00 UTC).
       *
       * @static
       * @memberOf _
       * @since 2.4.0
       * @category Date
       * @returns {number} Returns the timestamp.
       * @example
       *
       * _.defer(function(stamp) {
       *   console.log(_.now() - stamp);
       * }, _.now());
       * // => Logs the number of milliseconds it took for the deferred invocation.
       */
      var now = function () {
        return root.Date.now();
      };

      module.exports = now;

      /***/
    },
    /* 603 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _propTypes = __webpack_require__(543);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _Paper = __webpack_require__(577);

      var _Paper2 = _interopRequireDefault(_Paper);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context, state) {
        var targetOrigin = props.targetOrigin;
        var open = state.open;
        var muiTheme = context.muiTheme;

        var horizontal = targetOrigin.horizontal.replace('middle', 'vertical');

        return {
          root: {
            opacity: open ? 1 : 0,
            transform: open ? 'scale(1, 1)' : 'scale(0, 0)',
            transformOrigin: horizontal + ' ' + targetOrigin.vertical,
            position: 'fixed',
            zIndex: muiTheme.zIndex.popover,
            transition: _transitions2.default.easeOut('250ms', [
              'transform',
              'opacity',
            ]),
            maxHeight: '100%',
          },
          horizontal: {
            maxHeight: '100%',
            overflowY: 'auto',
            transform: open ? 'scaleX(1)' : 'scaleX(0)',
            opacity: open ? 1 : 0,
            transformOrigin: horizontal + ' ' + targetOrigin.vertical,
            transition: _transitions2.default.easeOut('250ms', [
              'transform',
              'opacity',
            ]),
          },
          vertical: {
            opacity: open ? 1 : 0,
            transform: open ? 'scaleY(1)' : 'scaleY(0)',
            transformOrigin: horizontal + ' ' + targetOrigin.vertical,
            transition: _transitions2.default.easeOut('500ms', [
              'transform',
              'opacity',
            ]),
          },
        };
      }

      var PopoverDefaultAnimation = (function (_Component) {
        _inherits(PopoverDefaultAnimation, _Component);

        function PopoverDefaultAnimation() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, PopoverDefaultAnimation);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    PopoverDefaultAnimation,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                open: false,
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(PopoverDefaultAnimation, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.setState({ open: true }); // eslint-disable-line react/no-did-mount-set-state
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              this.setState({
                open: nextProps.open,
              });
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var className = _props.className;
              var style = _props.style;
              var zDepth = _props.zDepth;
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);

              return _react2.default.createElement(
                _Paper2.default,
                {
                  style: (0, _simpleAssign2.default)(styles.root, style),
                  zDepth: zDepth,
                  className: className,
                },
                _react2.default.createElement(
                  'div',
                  { style: prepareStyles(styles.horizontal) },
                  _react2.default.createElement(
                    'div',
                    { style: prepareStyles(styles.vertical) },
                    this.props.children,
                  ),
                ),
              );
            },
          },
        ]);

        return PopoverDefaultAnimation;
      })(_react.Component);

      PopoverDefaultAnimation.propTypes = {
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        open: _react.PropTypes.bool.isRequired,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        targetOrigin: _propTypes2.default.origin,
        zDepth: _propTypes2.default.zDepth,
      };
      PopoverDefaultAnimation.defaultProps = {
        style: {},
        zDepth: 1,
      };
      PopoverDefaultAnimation.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = PopoverDefaultAnimation;

      /***/
    },
    /* 604 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var NavigationCheck = function NavigationCheck(props) {
        return _react2.default.createElement(
          _SvgIcon2.default,
          props,
          _react2.default.createElement('path', {
            d: 'M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z',
          }),
        );
      };
      NavigationCheck = (0, _pure2.default)(NavigationCheck);
      NavigationCheck.displayName = 'NavigationCheck';
      NavigationCheck.muiName = 'SvgIcon';

      exports.default = NavigationCheck;

      /***/
    },
    /* 605 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _shallowEqual = __webpack_require__(551);

      var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

      var _colorManipulator = __webpack_require__(583);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _EnhancedButton = __webpack_require__(544);

      var _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);

      var _IconButton = __webpack_require__(540);

      var _IconButton2 = _interopRequireDefault(_IconButton);

      var _expandLess = __webpack_require__(606);

      var _expandLess2 = _interopRequireDefault(_expandLess);

      var _expandMore = __webpack_require__(607);

      var _expandMore2 = _interopRequireDefault(_expandMore);

      var _NestedList = __webpack_require__(608);

      var _NestedList2 = _interopRequireDefault(_NestedList);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context, state) {
        var insetChildren = props.insetChildren;
        var leftAvatar = props.leftAvatar;
        var leftCheckbox = props.leftCheckbox;
        var leftIcon = props.leftIcon;
        var nestedLevel = props.nestedLevel;
        var rightAvatar = props.rightAvatar;
        var rightIcon = props.rightIcon;
        var rightIconButton = props.rightIconButton;
        var rightToggle = props.rightToggle;
        var secondaryText = props.secondaryText;
        var secondaryTextLines = props.secondaryTextLines;
        var muiTheme = context.muiTheme;
        var listItem = muiTheme.listItem;

        var textColor = muiTheme.baseTheme.palette.textColor;
        var hoverColor = (0, _colorManipulator.fade)(textColor, 0.1);
        var singleAvatar = !secondaryText && (leftAvatar || rightAvatar);
        var singleNoAvatar = !secondaryText && !(leftAvatar || rightAvatar);
        var twoLine = secondaryText && secondaryTextLines === 1;
        var threeLine = secondaryText && secondaryTextLines > 1;

        var styles = {
          root: {
            backgroundColor:
              (state.isKeyboardFocused || state.hovered) &&
              !state.rightIconButtonHovered &&
              !state.rightIconButtonKeyboardFocused
                ? hoverColor
                : null,
            color: textColor,
            display: 'block',
            fontSize: 16,
            lineHeight: '16px',
            position: 'relative',
            transition: _transitions2.default.easeOut(),
          },

          // This inner div is needed so that ripples will span the entire container
          innerDiv: {
            marginLeft: nestedLevel * listItem.nestedLevelDepth,
            paddingLeft:
              leftIcon || leftAvatar || leftCheckbox || insetChildren ? 72 : 16,
            paddingRight:
              rightIcon || rightAvatar || rightIconButton
                ? 56
                : rightToggle
                ? 72
                : 16,
            paddingBottom: singleAvatar ? 20 : 16,
            paddingTop: singleNoAvatar || threeLine ? 16 : 20,
            position: 'relative',
          },

          icons: {
            height: 24,
            width: 24,
            display: 'block',
            position: 'absolute',
            top: twoLine ? 12 : singleAvatar ? 4 : 0,
            margin: 12,
          },

          leftIcon: {
            left: 4,
          },

          rightIcon: {
            right: 4,
          },

          avatars: {
            position: 'absolute',
            top: singleAvatar ? 8 : 16,
          },

          label: {
            cursor: 'pointer',
          },

          leftAvatar: {
            left: 16,
          },

          rightAvatar: {
            right: 16,
          },

          leftCheckbox: {
            position: 'absolute',
            display: 'block',
            width: 24,
            top: twoLine ? 24 : singleAvatar ? 16 : 12,
            left: 16,
          },

          primaryText: {},

          rightIconButton: {
            position: 'absolute',
            display: 'block',
            top: twoLine ? 12 : singleAvatar ? 4 : 0,
            right: 4,
          },

          rightToggle: {
            position: 'absolute',
            display: 'block',
            width: 54,
            top: twoLine ? 25 : singleAvatar ? 17 : 13,
            right: 8,
          },

          secondaryText: {
            fontSize: 14,
            lineHeight: threeLine ? '18px' : '16px',
            height: threeLine ? 36 : 16,
            margin: 0,
            marginTop: 4,
            color: listItem.secondaryTextColor,

            // needed for 2 and 3 line ellipsis
            overflow: 'hidden',
            textOverflow: 'ellipsis',
            whiteSpace: threeLine ? null : 'nowrap',
            display: threeLine ? '-webkit-box' : null,
            WebkitLineClamp: threeLine ? 2 : null,
            WebkitBoxOrient: threeLine ? 'vertical' : null,
          },
        };

        return styles;
      }

      var ListItem = (function (_Component) {
        _inherits(ListItem, _Component);

        function ListItem() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, ListItem);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    ListItem,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                hovered: false,
                isKeyboardFocused: false,
                open: false,
                rightIconButtonHovered: false,
                rightIconButtonKeyboardFocused: false,
                touch: false,
              }),
              (_this.handleKeyboardFocus = function (event, isKeyboardFocused) {
                _this.setState({ isKeyboardFocused: isKeyboardFocused });
                _this.props.onKeyboardFocus(event, isKeyboardFocused);
              }),
              (_this.handleMouseEnter = function (event) {
                if (!_this.state.touch) _this.setState({ hovered: true });
                _this.props.onMouseEnter(event);
              }),
              (_this.handleMouseLeave = function (event) {
                _this.setState({ hovered: false });
                _this.props.onMouseLeave(event);
              }),
              (_this.handleNestedListToggle = function (event) {
                event.stopPropagation();
                _this.setState({ open: !_this.state.open }, function () {
                  _this.props.onNestedListToggle(_this);
                });
              }),
              (_this.handleRightIconButtonKeyboardFocus = function (
                event,
                isKeyboardFocused,
              ) {
                if (isKeyboardFocused) {
                  _this.setState({
                    isKeyboardFocused: false,
                    rightIconButtonKeyboardFocused: isKeyboardFocused,
                  });
                }

                var iconButton = _this.props.rightIconButton;

                if (iconButton && iconButton.props.onKeyboardFocus)
                  iconButton.props.onKeyboardFocus(event, isKeyboardFocused);
              }),
              (_this.handleRightIconButtonMouseLeave = function (event) {
                var iconButton = _this.props.rightIconButton;
                _this.setState({ rightIconButtonHovered: false });
                if (iconButton && iconButton.props.onMouseLeave)
                  iconButton.props.onMouseLeave(event);
              }),
              (_this.handleRightIconButtonMouseEnter = function (event) {
                var iconButton = _this.props.rightIconButton;
                _this.setState({ rightIconButtonHovered: true });
                if (iconButton && iconButton.props.onMouseEnter)
                  iconButton.props.onMouseEnter(event);
              }),
              (_this.handleRightIconButtonMouseUp = function (event) {
                var iconButton = _this.props.rightIconButton;
                event.stopPropagation();
                if (iconButton && iconButton.props.onMouseUp)
                  iconButton.props.onMouseUp(event);
              }),
              (_this.handleRightIconButtonTouchTap = function (event) {
                var iconButton = _this.props.rightIconButton;

                // Stop the event from bubbling up to the list-item
                event.stopPropagation();
                if (iconButton && iconButton.props.onTouchTap)
                  iconButton.props.onTouchTap(event);
              }),
              (_this.handleTouchStart = function (event) {
                _this.setState({ touch: true });
                _this.props.onTouchStart(event);
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(ListItem, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              this.setState({
                open:
                  this.props.open === null
                    ? this.props.initiallyOpen === true
                    : this.props.open,
              });
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              // update the state when the component is controlled.
              if (nextProps.open !== null)
                this.setState({ open: nextProps.open });
            },
          },
          {
            key: 'shouldComponentUpdate',
            value: function shouldComponentUpdate(
              nextProps,
              nextState,
              nextContext,
            ) {
              return (
                !(0, _shallowEqual2.default)(this.props, nextProps) ||
                !(0, _shallowEqual2.default)(this.state, nextState) ||
                !(0, _shallowEqual2.default)(this.context, nextContext)
              );
            },

            // This method is needed by the `MenuItem` component.
          },
          {
            key: 'applyFocusState',
            value: function applyFocusState(focusState) {
              var button = this.refs.enhancedButton;

              if (button) {
                var buttonEl = _reactDom2.default.findDOMNode(button);

                switch (focusState) {
                  case 'none':
                    buttonEl.blur();
                    break;
                  case 'focused':
                    buttonEl.focus();
                    break;
                  case 'keyboard-focused':
                    button.setKeyboardFocus();
                    buttonEl.focus();
                    break;
                }
              }
            },
          },
          {
            key: 'createDisabledElement',
            value: function createDisabledElement(
              styles,
              contentChildren,
              additionalProps,
            ) {
              var _props = this.props;
              var innerDivStyle = _props.innerDivStyle;
              var style = _props.style;

              var mergedDivStyles = (0, _simpleAssign2.default)(
                {},
                styles.root,
                styles.innerDiv,
                innerDivStyle,
                style,
              );

              return _react2.default.createElement(
                'div',
                _extends({}, additionalProps, {
                  style: this.context.muiTheme.prepareStyles(mergedDivStyles),
                }),
                contentChildren,
              );
            },
          },
          {
            key: 'createLabelElement',
            value: function createLabelElement(
              styles,
              contentChildren,
              additionalProps,
            ) {
              var _props2 = this.props;
              var innerDivStyle = _props2.innerDivStyle;
              var style = _props2.style;

              var mergedLabelStyles = (0, _simpleAssign2.default)(
                {},
                styles.root,
                styles.innerDiv,
                innerDivStyle,
                styles.label,
                style,
              );

              return _react2.default.createElement(
                'label',
                _extends({}, additionalProps, {
                  style: this.context.muiTheme.prepareStyles(mergedLabelStyles),
                }),
                contentChildren,
              );
            },
          },
          {
            key: 'createTextElement',
            value: function createTextElement(styles, data, key) {
              var prepareStyles = this.context.muiTheme.prepareStyles;

              if (_react2.default.isValidElement(data)) {
                var style = (0, _simpleAssign2.default)(
                  {},
                  styles,
                  data.props.style,
                );
                if (typeof data.type === 'string') {
                  // if element is a native dom node
                  style = prepareStyles(style);
                }
                return _react2.default.cloneElement(data, {
                  key: key,
                  style: style,
                });
              }

              return _react2.default.createElement(
                'div',
                { key: key, style: prepareStyles(styles) },
                data,
              );
            },
          },
          {
            key: 'pushElement',
            value: function pushElement(
              children,
              element,
              baseStyles,
              additionalProps,
            ) {
              if (element) {
                var styles = (0, _simpleAssign2.default)(
                  {},
                  baseStyles,
                  element.props.style,
                );
                children.push(
                  _react2.default.cloneElement(
                    element,
                    _extends(
                      {
                        key: children.length,
                        style: styles,
                      },
                      additionalProps,
                    ),
                  ),
                );
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props3 = this.props;
              var autoGenerateNestedIndicator =
                _props3.autoGenerateNestedIndicator;
              var children = _props3.children;
              var disabled = _props3.disabled;
              var disableKeyboardFocus = _props3.disableKeyboardFocus;
              var initiallyOpen = _props3.initiallyOpen;
              var innerDivStyle = _props3.innerDivStyle;
              var insetChildren = _props3.insetChildren;
              var leftAvatar = _props3.leftAvatar;
              var leftCheckbox = _props3.leftCheckbox;
              var leftIcon = _props3.leftIcon;
              var nestedItems = _props3.nestedItems;
              var nestedLevel = _props3.nestedLevel;
              var nestedListStyle = _props3.nestedListStyle;
              var onKeyboardFocus = _props3.onKeyboardFocus;
              var onMouseEnter = _props3.onMouseEnter;
              var onMouseLeave = _props3.onMouseLeave;
              var onNestedListToggle = _props3.onNestedListToggle;
              var onTouchStart = _props3.onTouchStart;
              var onTouchTap = _props3.onTouchTap;
              var rightAvatar = _props3.rightAvatar;
              var rightIcon = _props3.rightIcon;
              var rightIconButton = _props3.rightIconButton;
              var rightToggle = _props3.rightToggle;
              var primaryText = _props3.primaryText;
              var primaryTogglesNestedList = _props3.primaryTogglesNestedList;
              var secondaryText = _props3.secondaryText;
              var secondaryTextLines = _props3.secondaryTextLines;
              var style = _props3.style;

              var other = _objectWithoutProperties(_props3, [
                'autoGenerateNestedIndicator',
                'children',
                'disabled',
                'disableKeyboardFocus',
                'initiallyOpen',
                'innerDivStyle',
                'insetChildren',
                'leftAvatar',
                'leftCheckbox',
                'leftIcon',
                'nestedItems',
                'nestedLevel',
                'nestedListStyle',
                'onKeyboardFocus',
                'onMouseEnter',
                'onMouseLeave',
                'onNestedListToggle',
                'onTouchStart',
                'onTouchTap',
                'rightAvatar',
                'rightIcon',
                'rightIconButton',
                'rightToggle',
                'primaryText',
                'primaryTogglesNestedList',
                'secondaryText',
                'secondaryTextLines',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);
              var contentChildren = [children];

              if (leftIcon) {
                var additionalProps = {
                  color:
                    leftIcon.props.color ||
                    this.context.muiTheme.listItem.leftIconColor,
                };
                this.pushElement(
                  contentChildren,
                  leftIcon,
                  (0, _simpleAssign2.default)(
                    {},
                    styles.icons,
                    styles.leftIcon,
                  ),
                  additionalProps,
                );
              }

              if (rightIcon) {
                var _additionalProps = {
                  color:
                    rightIcon.props.color ||
                    this.context.muiTheme.listItem.rightIconColor,
                };
                this.pushElement(
                  contentChildren,
                  rightIcon,
                  (0, _simpleAssign2.default)(
                    {},
                    styles.icons,
                    styles.rightIcon,
                  ),
                  _additionalProps,
                );
              }

              if (leftAvatar) {
                this.pushElement(
                  contentChildren,
                  leftAvatar,
                  (0, _simpleAssign2.default)(
                    {},
                    styles.avatars,
                    styles.leftAvatar,
                  ),
                );
              }

              if (rightAvatar) {
                this.pushElement(
                  contentChildren,
                  rightAvatar,
                  (0, _simpleAssign2.default)(
                    {},
                    styles.avatars,
                    styles.rightAvatar,
                  ),
                );
              }

              if (leftCheckbox) {
                this.pushElement(
                  contentChildren,
                  leftCheckbox,
                  (0, _simpleAssign2.default)({}, styles.leftCheckbox),
                );
              }

              // RightIconButtonElement
              var hasNestListItems = nestedItems.length;
              var hasRightElement =
                rightAvatar || rightIcon || rightIconButton || rightToggle;
              var needsNestedIndicator =
                hasNestListItems &&
                autoGenerateNestedIndicator &&
                !hasRightElement;

              if (rightIconButton || needsNestedIndicator) {
                var rightIconButtonElement = rightIconButton;
                var rightIconButtonHandlers = {
                  onKeyboardFocus: this.handleRightIconButtonKeyboardFocus,
                  onMouseEnter: this.handleRightIconButtonMouseEnter,
                  onMouseLeave: this.handleRightIconButtonMouseLeave,
                  onTouchTap: this.handleRightIconButtonTouchTap,
                  onMouseDown: this.handleRightIconButtonMouseUp,
                  onMouseUp: this.handleRightIconButtonMouseUp,
                };

                // Create a nested list indicator icon if we don't have an icon on the right
                if (needsNestedIndicator) {
                  rightIconButtonElement = this.state.open
                    ? _react2.default.createElement(
                        _IconButton2.default,
                        null,
                        _react2.default.createElement(
                          _expandLess2.default,
                          null,
                        ),
                      )
                    : _react2.default.createElement(
                        _IconButton2.default,
                        null,
                        _react2.default.createElement(
                          _expandMore2.default,
                          null,
                        ),
                      );
                  rightIconButtonHandlers.onTouchTap = this.handleNestedListToggle;
                }

                this.pushElement(
                  contentChildren,
                  rightIconButtonElement,
                  (0, _simpleAssign2.default)({}, styles.rightIconButton),
                  rightIconButtonHandlers,
                );
              }

              if (rightToggle) {
                this.pushElement(
                  contentChildren,
                  rightToggle,
                  (0, _simpleAssign2.default)({}, styles.rightToggle),
                );
              }

              if (primaryText) {
                var primaryTextElement = this.createTextElement(
                  styles.primaryText,
                  primaryText,
                  'primaryText',
                );
                contentChildren.push(primaryTextElement);
              }

              if (secondaryText) {
                var secondaryTextElement = this.createTextElement(
                  styles.secondaryText,
                  secondaryText,
                  'secondaryText',
                );
                contentChildren.push(secondaryTextElement);
              }

              var nestedList = nestedItems.length
                ? _react2.default.createElement(
                    _NestedList2.default,
                    {
                      nestedLevel: nestedLevel,
                      open: this.state.open,
                      style: nestedListStyle,
                    },
                    nestedItems,
                  )
                : undefined;

              var hasCheckbox = leftCheckbox || rightToggle;

              return _react2.default.createElement(
                'div',
                null,
                hasCheckbox
                  ? this.createLabelElement(styles, contentChildren, other)
                  : disabled
                  ? this.createDisabledElement(styles, contentChildren, other)
                  : _react2.default.createElement(
                      _EnhancedButton2.default,
                      _extends(
                        {
                          containerElement: 'span',
                        },
                        other,
                        {
                          disabled: disabled,
                          disableKeyboardFocus:
                            disableKeyboardFocus ||
                            this.state.rightIconButtonKeyboardFocused,
                          onKeyboardFocus: this.handleKeyboardFocus,
                          onMouseLeave: this.handleMouseLeave,
                          onMouseEnter: this.handleMouseEnter,
                          onTouchStart: this.handleTouchStart,
                          onTouchTap: primaryTogglesNestedList
                            ? this.handleNestedListToggle
                            : onTouchTap,
                          ref: 'enhancedButton',
                          style: (0, _simpleAssign2.default)(
                            {},
                            styles.root,
                            style,
                          ),
                        },
                      ),
                      _react2.default.createElement(
                        'div',
                        {
                          style: prepareStyles(
                            (0, _simpleAssign2.default)(
                              styles.innerDiv,
                              innerDivStyle,
                            ),
                          ),
                        },
                        contentChildren,
                      ),
                    ),
                nestedList,
              );
            },
          },
        ]);

        return ListItem;
      })(_react.Component);

      ListItem.muiName = 'ListItem';
      ListItem.propTypes = {
        /**
         * If true, generate a nested-list-indicator icon when nested list
         * items are detected. Note that an indicator will not be created
         * if a `rightIcon` or `rightIconButton` has been provided to
         * the element.
         */
        autoGenerateNestedIndicator: _react.PropTypes.bool,
        /**
         * Children passed into the `ListItem`.
         */
        children: _react.PropTypes.node,
        /**
         * If true, the element will not be able to be focused by the keyboard.
         */
        disableKeyboardFocus: _react.PropTypes.bool,
        /**
         * If true, the element will not be clickable
         * and will not display hover effects.
         * This is automatically disabled if either `leftCheckbox`
         * or `rightToggle` is set.
         */
        disabled: _react.PropTypes.bool,
        /**
         * If true, the nested `ListItem`s are initially displayed.
         */
        initiallyOpen: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the inner div element.
         */
        innerDivStyle: _react.PropTypes.object,
        /**
         * If true, the children will be indented by 72px.
         * This is useful if there is no left avatar or left icon.
         */
        insetChildren: _react.PropTypes.bool,
        /**
         * This is the `Avatar` element to be displayed on the left side.
         */
        leftAvatar: _react.PropTypes.element,
        /**
         * This is the `Checkbox` element to be displayed on the left side.
         */
        leftCheckbox: _react.PropTypes.element,
        /**
         * This is the `SvgIcon` or `FontIcon` to be displayed on the left side.
         */
        leftIcon: _react.PropTypes.element,
        /**
         * An array of `ListItem`s to nest underneath the current `ListItem`.
         */
        nestedItems: _react.PropTypes.arrayOf(_react.PropTypes.element),
        /**
         * Controls how deep a `ListItem` appears.
         * This property is automatically managed, so modify at your own risk.
         */
        nestedLevel: _react.PropTypes.number,
        /**
         * Override the inline-styles of the nested items' `NestedList`.
         */
        nestedListStyle: _react.PropTypes.object,
        /**
         * Callback function fired when the `ListItem` is focused or blurred by the keyboard.
         *
         * @param {object} event `focus` or `blur` event targeting the `ListItem`.
         * @param {boolean} isKeyboardFocused If true, the `ListItem` is focused.
         */
        onKeyboardFocus: _react.PropTypes.func,
        /** @ignore */
        onMouseEnter: _react.PropTypes.func,
        /** @ignore */
        onMouseLeave: _react.PropTypes.func,
        /**
         * Callbak function fired when the `ListItem` toggles its nested list.
         *
         * @param {object} listItem The `ListItem`.
         */
        onNestedListToggle: _react.PropTypes.func,
        /** @ignore */
        onTouchStart: _react.PropTypes.func,
        /** @ignore */
        onTouchTap: _react.PropTypes.func,
        /**
         * Control toggle state of nested list.
         */
        open: _react.PropTypes.bool,
        /**
         * This is the block element that contains the primary text.
         * If a string is passed in, a div tag will be rendered.
         */
        primaryText: _react.PropTypes.node,
        /**
         * If true, clicking or tapping the primary text of the `ListItem`
         * toggles the nested list.
         */
        primaryTogglesNestedList: _react.PropTypes.bool,
        /**
         * This is the `Avatar` element to be displayed on the right side.
         */
        rightAvatar: _react.PropTypes.element,
        /**
         * This is the `SvgIcon` or `FontIcon` to be displayed on the right side.
         */
        rightIcon: _react.PropTypes.element,
        /**
         * This is the `IconButton` to be displayed on the right side.
         * Hovering over this button will remove the `ListItem` hover.
         * Also, clicking on this button will not trigger a
         * ripple on the `ListItem`; the event will be stopped and prevented
         * from bubbling up to cause a `ListItem` click.
         */
        rightIconButton: _react.PropTypes.element,
        /**
         * This is the `Toggle` element to display on the right side.
         */
        rightToggle: _react.PropTypes.element,
        /**
         * This is the block element that contains the secondary text.
         * If a string is passed in, a div tag will be rendered.
         */
        secondaryText: _react.PropTypes.node,
        /**
         * Can be 1 or 2. This is the number of secondary
         * text lines before ellipsis will show.
         */
        secondaryTextLines: _react.PropTypes.oneOf([1, 2]),
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      ListItem.defaultProps = {
        autoGenerateNestedIndicator: true,
        disableKeyboardFocus: false,
        disabled: false,
        initiallyOpen: false,
        insetChildren: false,
        nestedItems: [],
        nestedLevel: 0,
        onKeyboardFocus: function onKeyboardFocus() {},
        onMouseEnter: function onMouseEnter() {},
        onMouseLeave: function onMouseLeave() {},
        onNestedListToggle: function onNestedListToggle() {},
        onTouchStart: function onTouchStart() {},
        open: null,
        primaryTogglesNestedList: false,
        secondaryTextLines: 1,
      };
      ListItem.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = ListItem;

      /***/
    },
    /* 606 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var NavigationExpandLess = function NavigationExpandLess(props) {
        return _react2.default.createElement(
          _SvgIcon2.default,
          props,
          _react2.default.createElement('path', {
            d: 'M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z',
          }),
        );
      };
      NavigationExpandLess = (0, _pure2.default)(NavigationExpandLess);
      NavigationExpandLess.displayName = 'NavigationExpandLess';
      NavigationExpandLess.muiName = 'SvgIcon';

      exports.default = NavigationExpandLess;

      /***/
    },
    /* 607 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var NavigationExpandMore = function NavigationExpandMore(props) {
        return _react2.default.createElement(
          _SvgIcon2.default,
          props,
          _react2.default.createElement('path', {
            d: 'M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z',
          }),
        );
      };
      NavigationExpandMore = (0, _pure2.default)(NavigationExpandMore);
      NavigationExpandMore.displayName = 'NavigationExpandMore';
      NavigationExpandMore.muiName = 'SvgIcon';

      exports.default = NavigationExpandMore;

      /***/
    },
    /* 608 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _List = __webpack_require__(592);

      var _List2 = _interopRequireDefault(_List);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var NestedList = (function (_Component) {
        _inherits(NestedList, _Component);

        function NestedList() {
          _classCallCheck(this, NestedList);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(NestedList).apply(this, arguments),
          );
        }

        _createClass(NestedList, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var children = _props.children;
              var open = _props.open;
              var nestedLevel = _props.nestedLevel;
              var style = _props.style;

              var styles = {
                root: {
                  display: open ? null : 'none',
                },
              };

              return _react2.default.createElement(
                _List2.default,
                { style: (0, _simpleAssign2.default)({}, styles.root, style) },
                _react2.default.Children.map(children, function (child) {
                  return _react2.default.isValidElement(child)
                    ? _react2.default.cloneElement(child, {
                        nestedLevel: nestedLevel + 1,
                      })
                    : child;
                }),
              );
            },
          },
        ]);

        return NestedList;
      })(_react.Component);

      NestedList.propTypes = {
        children: _react.PropTypes.node,
        nestedLevel: _react.PropTypes.number.isRequired,
        open: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      NestedList.defaultProps = {
        open: false,
      };
      exports.default = NestedList;

      /***/
    },
    /* 609 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _Divider = __webpack_require__(610);

      var _Divider2 = _interopRequireDefault(_Divider);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _Divider2.default;

      /***/
    },
    /* 610 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      var propTypes = {
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * If true, the `Divider` will be indented `72px`.
         */
        inset: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };

      var defaultProps = {
        inset: false,
      };

      var contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };

      var Divider = function Divider(props, context) {
        var inset = props.inset;
        var style = props.style;

        var other = _objectWithoutProperties(props, ['inset', 'style']);

        var muiTheme = context.muiTheme;
        var prepareStyles = muiTheme.prepareStyles;

        var styles = {
          root: {
            margin: 0,
            marginTop: -1,
            marginLeft: inset ? 72 : 0,
            height: 1,
            border: 'none',
            backgroundColor: muiTheme.baseTheme.palette.borderColor,
          },
        };

        return _react2.default.createElement(
          'hr',
          _extends({}, other, {
            style: prepareStyles(
              (0, _simpleAssign2.default)({}, styles.root, style),
            ),
          }),
        );
      };

      Divider.muiName = 'Divider';
      Divider.propTypes = propTypes;
      Divider.defaultProps = defaultProps;
      Divider.contextTypes = contextTypes;

      exports.default = Divider;

      /***/
    },
    /* 611 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _Avatar = __webpack_require__(612);

      var _Avatar2 = _interopRequireDefault(_Avatar);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _Avatar2.default;

      /***/
    },
    /* 612 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var backgroundColor = props.backgroundColor;
        var color = props.color;
        var size = props.size;
        var avatar = context.muiTheme.avatar;

        var styles = {
          root: {
            color: color || avatar.color,
            backgroundColor: backgroundColor || avatar.backgroundColor,
            userSelect: 'none',
            display: 'inline-flex',
            alignItems: 'center',
            justifyContent: 'center',
            fontSize: size / 2,
            borderRadius: '50%',
            height: size,
            width: size,
          },
          icon: {
            color: color || avatar.color,
            width: size * 0.6,
            height: size * 0.6,
            fontSize: size * 0.6,
            margin: size * 0.2,
          },
        };

        return styles;
      }

      var Avatar = (function (_Component) {
        _inherits(Avatar, _Component);

        function Avatar() {
          _classCallCheck(this, Avatar);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(Avatar).apply(this, arguments),
          );
        }

        _createClass(Avatar, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var backgroundColor = _props.backgroundColor;
              var icon = _props.icon;
              var src = _props.src;
              var style = _props.style;
              var className = _props.className;

              var other = _objectWithoutProperties(_props, [
                'backgroundColor',
                'icon',
                'src',
                'style',
                'className',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              if (src) {
                return _react2.default.createElement(
                  'img',
                  _extends(
                    {
                      style: prepareStyles(
                        (0, _simpleAssign2.default)(styles.root, style),
                      ),
                    },
                    other,
                    {
                      src: src,
                      className: className,
                    },
                  ),
                );
              } else {
                return _react2.default.createElement(
                  'div',
                  _extends({}, other, {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(styles.root, style),
                    ),
                    className: className,
                  }),
                  icon &&
                    _react2.default.cloneElement(icon, {
                      color: styles.icon.color,
                      style: (0, _simpleAssign2.default)(
                        styles.icon,
                        icon.props.style,
                      ),
                    }),
                  this.props.children,
                );
              }
            },
          },
        ]);

        return Avatar;
      })(_react.Component);

      Avatar.muiName = 'Avatar';
      Avatar.propTypes = {
        /**
         * The backgroundColor of the avatar. Does not apply to image avatars.
         */
        backgroundColor: _react.PropTypes.string,
        /**
         * Can be used, for instance, to render a letter inside the avatar.
         */
        children: _react.PropTypes.node,
        /**
         * The css class name of the root `div` or `img` element.
         */
        className: _react.PropTypes.string,
        /**
         * The icon or letter's color.
         */
        color: _react.PropTypes.string,
        /**
         * This is the SvgIcon or FontIcon to be used inside the avatar.
         */
        icon: _react.PropTypes.element,
        /**
         * This is the size of the avatar in pixels.
         */
        size: _react.PropTypes.number,
        /**
         * If passed in, this component will render an img element. Otherwise, a div will be rendered.
         */
        src: _react.PropTypes.string,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      Avatar.defaultProps = {
        size: 40,
      };
      Avatar.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Avatar;

      /***/
    },
    /* 613 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _Badge = __webpack_require__(614);

      var _Badge2 = _interopRequireDefault(_Badge);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _Badge2.default;

      /***/
    },
    /* 614 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var primary = props.primary;
        var secondary = props.secondary;
        var badge = context.muiTheme.badge;

        var badgeBackgroundColor = void 0;
        var badgeTextColor = void 0;

        if (primary) {
          badgeBackgroundColor = badge.primaryColor;
          badgeTextColor = badge.primaryTextColor;
        } else if (secondary) {
          badgeBackgroundColor = badge.secondaryColor;
          badgeTextColor = badge.secondaryTextColor;
        } else {
          badgeBackgroundColor = badge.color;
          badgeTextColor = badge.textColor;
        }

        var radius = 12;
        var radius2x = Math.floor(2 * radius);

        return {
          root: {
            position: 'relative',
            display: 'inline-block',
            padding:
              radius2x +
              'px ' +
              radius2x +
              'px ' +
              radius +
              'px ' +
              radius +
              'px',
          },
          badge: {
            display: 'flex',
            flexDirection: 'row',
            flexWrap: 'wrap',
            justifyContent: 'center',
            alignContent: 'center',
            alignItems: 'center',
            position: 'absolute',
            top: 0,
            right: 0,
            fontWeight: badge.fontWeight,
            fontSize: radius,
            width: radius2x,
            height: radius2x,
            borderRadius: '50%',
            backgroundColor: badgeBackgroundColor,
            color: badgeTextColor,
          },
        };
      }

      var Badge = (function (_Component) {
        _inherits(Badge, _Component);

        function Badge() {
          _classCallCheck(this, Badge);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(Badge).apply(this, arguments),
          );
        }

        _createClass(Badge, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var badgeContent = _props.badgeContent;
              var badgeStyle = _props.badgeStyle;
              var children = _props.children;
              var primary = _props.primary;
              var secondary = _props.secondary;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'badgeContent',
                'badgeStyle',
                'children',
                'primary',
                'secondary',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  style: prepareStyles(
                    (0, _simpleAssign2.default)({}, styles.root, style),
                  ),
                }),
                children,
                _react2.default.createElement(
                  'span',
                  {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)({}, styles.badge, badgeStyle),
                    ),
                  },
                  badgeContent,
                ),
              );
            },
          },
        ]);

        return Badge;
      })(_react.Component);

      Badge.propTypes = {
        /**
         * This is the content rendered within the badge.
         */
        badgeContent: _react.PropTypes.node.isRequired,
        /**
         * Override the inline-styles of the badge element.
         */
        badgeStyle: _react.PropTypes.object,
        /**
         * The badge will be added relativelty to this node.
         */
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * If true, the badge will use the primary badge colors.
         */
        primary: _react.PropTypes.bool,
        /**
         * If true, the badge will use the secondary badge colors.
         */
        secondary: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      Badge.defaultProps = {
        primary: false,
        secondary: false,
      };
      Badge.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Badge;

      /***/
    },
    /* 615 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = exports.CardExpandable = exports.CardActions = exports.CardText = exports.CardMedia = exports.CardTitle = exports.CardHeader = exports.Card = undefined;

      var _Card2 = __webpack_require__(616);

      var _Card3 = _interopRequireDefault(_Card2);

      var _CardHeader2 = __webpack_require__(620);

      var _CardHeader3 = _interopRequireDefault(_CardHeader2);

      var _CardTitle2 = __webpack_require__(621);

      var _CardTitle3 = _interopRequireDefault(_CardTitle2);

      var _CardMedia2 = __webpack_require__(622);

      var _CardMedia3 = _interopRequireDefault(_CardMedia2);

      var _CardText2 = __webpack_require__(623);

      var _CardText3 = _interopRequireDefault(_CardText2);

      var _CardActions2 = __webpack_require__(624);

      var _CardActions3 = _interopRequireDefault(_CardActions2);

      var _CardExpandable2 = __webpack_require__(617);

      var _CardExpandable3 = _interopRequireDefault(_CardExpandable2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.Card = _Card3.default;
      exports.CardHeader = _CardHeader3.default;
      exports.CardTitle = _CardTitle3.default;
      exports.CardMedia = _CardMedia3.default;
      exports.CardText = _CardText3.default;
      exports.CardActions = _CardActions3.default;
      exports.CardExpandable = _CardExpandable3.default;
      exports.default = _Card3.default;

      /***/
    },
    /* 616 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _Paper = __webpack_require__(577);

      var _Paper2 = _interopRequireDefault(_Paper);

      var _CardExpandable = __webpack_require__(617);

      var _CardExpandable2 = _interopRequireDefault(_CardExpandable);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Card = (function (_Component) {
        _inherits(Card, _Component);

        function Card() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, Card);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    Card,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                expanded: null,
              }),
              (_this.handleExpanding = function (event) {
                event.preventDefault();
                var newExpandedState = !_this.state.expanded;
                // no automatic state update when the component is controlled
                if (_this.props.expanded === null) {
                  _this.setState({ expanded: newExpandedState });
                }
                if (_this.props.onExpandChange) {
                  _this.props.onExpandChange(newExpandedState);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Card, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              this.setState({
                expanded:
                  this.props.expanded === null
                    ? this.props.initiallyExpanded === true
                    : this.props.expanded,
              });
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              // update the state when the component is controlled.
              if (nextProps.expanded !== null)
                this.setState({ expanded: nextProps.expanded });
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              var _props = this.props;
              var style = _props.style;
              var containerStyle = _props.containerStyle;
              var children = _props.children;
              var expandable = _props.expandable;
              var expandedProp = _props.expanded;
              var initiallyExpanded = _props.initiallyExpanded;
              var onExpandChange = _props.onExpandChange;

              var other = _objectWithoutProperties(_props, [
                'style',
                'containerStyle',
                'children',
                'expandable',
                'expanded',
                'initiallyExpanded',
                'onExpandChange',
              ]);

              var lastElement = void 0;
              var expanded = this.state.expanded;
              var newChildren = _react2.default.Children.map(
                children,
                function (currentChild) {
                  var doClone = false;
                  var newChild = undefined;
                  var newProps = {};
                  var element = currentChild;
                  if (!currentChild || !currentChild.props) {
                    return null;
                  }
                  if (
                    expanded === false &&
                    currentChild.props.expandable === true
                  )
                    return;
                  if (currentChild.props.actAsExpander === true) {
                    doClone = true;
                    newProps.onTouchTap = _this2.handleExpanding;
                    newProps.style = (0, _simpleAssign2.default)(
                      { cursor: 'pointer' },
                      currentChild.props.style,
                    );
                  }
                  if (currentChild.props.showExpandableButton === true) {
                    doClone = true;
                    newChild = _react2.default.createElement(
                      _CardExpandable2.default,
                      {
                        expanded: expanded,
                        onExpanding: _this2.handleExpanding,
                      },
                    );
                  }
                  if (doClone) {
                    element = _react2.default.cloneElement(
                      currentChild,
                      newProps,
                      currentChild.props.children,
                      newChild,
                    );
                  }
                  lastElement = element;
                  return element;
                },
                this,
              );

              // If the last element is text or a title we should add
              // 8px padding to the bottom of the card
              var addBottomPadding =
                lastElement &&
                (lastElement.type.muiName === 'CardText' ||
                  lastElement.type.muiName === 'CardTitle');

              var mergedStyles = (0, _simpleAssign2.default)(
                {
                  zIndex: 1,
                },
                style,
              );
              var containerMergedStyles = (0, _simpleAssign2.default)(
                {
                  paddingBottom: addBottomPadding ? 8 : 0,
                },
                containerStyle,
              );

              return _react2.default.createElement(
                _Paper2.default,
                _extends({}, other, { style: mergedStyles }),
                _react2.default.createElement(
                  'div',
                  { style: containerMergedStyles },
                  newChildren,
                ),
              );
            },
          },
        ]);

        return Card;
      })(_react.Component);

      Card.propTypes = {
        /**
         * Can be used to render elements inside the Card.
         */
        children: _react.PropTypes.node,
        /**
         * Override the inline-styles of the container element.
         */
        containerStyle: _react.PropTypes.object,
        /**
         * If true, this card component is expandable. Can be set on any child of the `Card` component.
         */
        expandable: _react.PropTypes.bool,
        /**
         * Whether this card is expanded.
         * If `true` or `false` the component is controlled.
         * if `null` the component is uncontrolled.
         */
        expanded: _react.PropTypes.bool,
        /**
         * Whether this card is initially expanded.
         */
        initiallyExpanded: _react.PropTypes.bool,
        /**
         * Callback function fired when the `expandable` state of the card has changed.
         *
         * @param {boolean} newExpandedState Represents the new `expanded` state of the card.
         */
        onExpandChange: _react.PropTypes.func,
        /**
         * If true, this card component will include a button to expand the card. `CardTitle`,
         * `CardHeader` and `CardActions` implement `showExpandableButton`. Any child component
         * of `Card` can implements `showExpandableButton` or forwards the property to a child
         * component supporting it.
         */
        showExpandableButton: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      Card.defaultProps = {
        expandable: false,
        expanded: null,
        initiallyExpanded: false,
      };
      exports.default = Card;

      /***/
    },
    /* 617 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _keyboardArrowUp = __webpack_require__(618);

      var _keyboardArrowUp2 = _interopRequireDefault(_keyboardArrowUp);

      var _keyboardArrowDown = __webpack_require__(619);

      var _keyboardArrowDown2 = _interopRequireDefault(_keyboardArrowDown);

      var _IconButton = __webpack_require__(540);

      var _IconButton2 = _interopRequireDefault(_IconButton);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles() {
        return {
          root: {
            top: 0,
            bottom: 0,
            right: 4,
            margin: 'auto',
            position: 'absolute',
          },
        };
      }

      var CardExpandable = (function (_Component) {
        _inherits(CardExpandable, _Component);

        function CardExpandable() {
          _classCallCheck(this, CardExpandable);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(CardExpandable).apply(this, arguments),
          );
        }

        _createClass(CardExpandable, [
          {
            key: 'render',
            value: function render() {
              var styles = getStyles(this.props, this.context);

              return _react2.default.createElement(
                _IconButton2.default,
                {
                  style: (0, _simpleAssign2.default)(
                    styles.root,
                    this.props.style,
                  ),
                  onTouchTap: this.props.onExpanding,
                },
                this.props.expanded
                  ? _react2.default.createElement(
                      _keyboardArrowUp2.default,
                      null,
                    )
                  : _react2.default.createElement(
                      _keyboardArrowDown2.default,
                      null,
                    ),
              );
            },
          },
        ]);

        return CardExpandable;
      })(_react.Component);

      CardExpandable.propTypes = {
        expanded: _react.PropTypes.bool,
        onExpanding: _react.PropTypes.func.isRequired,
        style: _react.PropTypes.object,
      };
      CardExpandable.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = CardExpandable;

      /***/
    },
    /* 618 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var HardwareKeyboardArrowUp = function HardwareKeyboardArrowUp(props) {
        return _react2.default.createElement(
          _SvgIcon2.default,
          props,
          _react2.default.createElement('path', {
            d: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',
          }),
        );
      };
      HardwareKeyboardArrowUp = (0, _pure2.default)(HardwareKeyboardArrowUp);
      HardwareKeyboardArrowUp.displayName = 'HardwareKeyboardArrowUp';
      HardwareKeyboardArrowUp.muiName = 'SvgIcon';

      exports.default = HardwareKeyboardArrowUp;

      /***/
    },
    /* 619 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var HardwareKeyboardArrowDown = function HardwareKeyboardArrowDown(
        props,
      ) {
        return _react2.default.createElement(
          _SvgIcon2.default,
          props,
          _react2.default.createElement('path', {
            d: 'M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z',
          }),
        );
      };
      HardwareKeyboardArrowDown = (0, _pure2.default)(
        HardwareKeyboardArrowDown,
      );
      HardwareKeyboardArrowDown.displayName = 'HardwareKeyboardArrowDown';
      HardwareKeyboardArrowDown.muiName = 'SvgIcon';

      exports.default = HardwareKeyboardArrowDown;

      /***/
    },
    /* 620 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _Avatar = __webpack_require__(611);

      var _Avatar2 = _interopRequireDefault(_Avatar);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var card = context.muiTheme.card;

        return {
          root: {
            padding: 16,
            fontWeight: card.fontWeight,
            boxSizing: 'border-box',
            position: 'relative',
            whiteSpace: 'nowrap',
          },
          text: {
            display: 'inline-block',
            verticalAlign: 'top',
            whiteSpace: 'normal',
            paddingRight: '90px',
          },
          avatar: {
            marginRight: 16,
          },
          title: {
            color: props.titleColor || card.titleColor,
            display: 'block',
            fontSize: 15,
          },
          subtitle: {
            color: props.subtitleColor || card.subtitleColor,
            display: 'block',
            fontSize: 14,
          },
        };
      }

      var CardHeader = (function (_Component) {
        _inherits(CardHeader, _Component);

        function CardHeader() {
          _classCallCheck(this, CardHeader);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(CardHeader).apply(this, arguments),
          );
        }

        _createClass(CardHeader, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var actAsExpander = _props.actAsExpander;
              var avatarProp = _props.avatar;
              var children = _props.children;
              var expandable = _props.expandable;
              var showExpandableButton = _props.showExpandableButton;
              var style = _props.style;
              var subtitle = _props.subtitle;
              var subtitleStyle = _props.subtitleStyle;
              var textStyle = _props.textStyle;
              var title = _props.title;
              var titleStyle = _props.titleStyle;

              var other = _objectWithoutProperties(_props, [
                'actAsExpander',
                'avatar',
                'children',
                'expandable',
                'showExpandableButton',
                'style',
                'subtitle',
                'subtitleStyle',
                'textStyle',
                'title',
                'titleStyle',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              var avatar = avatarProp;

              if ((0, _react.isValidElement)(avatarProp)) {
                avatar = _react2.default.cloneElement(avatar, {
                  style: (0, _simpleAssign2.default)(
                    styles.avatar,
                    avatar.props.style,
                  ),
                });
              } else if (avatar !== null) {
                avatar = _react2.default.createElement(_Avatar2.default, {
                  src: avatarProp,
                  style: styles.avatar,
                });
              }

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(styles.root, style),
                  ),
                }),
                avatar,
                _react2.default.createElement(
                  'div',
                  {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(styles.text, textStyle),
                    ),
                  },
                  _react2.default.createElement(
                    'span',
                    {
                      style: prepareStyles(
                        (0, _simpleAssign2.default)(styles.title, titleStyle),
                      ),
                    },
                    title,
                  ),
                  _react2.default.createElement(
                    'span',
                    {
                      style: prepareStyles(
                        (0, _simpleAssign2.default)(
                          styles.subtitle,
                          subtitleStyle,
                        ),
                      ),
                    },
                    subtitle,
                  ),
                ),
                children,
              );
            },
          },
        ]);

        return CardHeader;
      })(_react.Component);

      CardHeader.muiName = 'CardHeader';
      CardHeader.propTypes = {
        /**
         * If true, a click on this card component expands the card.
         */
        actAsExpander: _react.PropTypes.bool,
        /**
         * This is the [Avatar](/#/components/avatar) element to be displayed on the Card Header.
         * If `avatar` is an `Avatar` or other element, it will be rendered.
         * If `avatar` is a string, it will be used as the image `src` for an `Avatar`.
         */
        avatar: _react.PropTypes.node,
        /**
         * Can be used to render elements inside the Card Header.
         */
        children: _react.PropTypes.node,
        /**
         * If true, this card component is expandable.
         */
        expandable: _react.PropTypes.bool,
        /**
         * If true, this card component will include a button to expand the card.
         */
        showExpandableButton: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * Can be used to render a subtitle in Card Header.
         */
        subtitle: _react.PropTypes.node,
        /**
         * Override the subtitle color.
         */
        subtitleColor: _react.PropTypes.string,
        /**
         * Override the inline-styles of the subtitle.
         */
        subtitleStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of the text.
         */
        textStyle: _react.PropTypes.object,
        /**
         * Can be used to render a title in Card Header.
         */
        title: _react.PropTypes.node,
        /**
         * Override the title color.
         */
        titleColor: _react.PropTypes.string,
        /**
         * Override the inline-styles of the title.
         */
        titleStyle: _react.PropTypes.object,
      };
      CardHeader.defaultProps = {
        avatar: null,
      };
      CardHeader.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = CardHeader;

      /***/
    },
    /* 621 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var card = context.muiTheme.card;

        return {
          root: {
            padding: 16,
            position: 'relative',
          },
          title: {
            fontSize: 24,
            color: props.titleColor || card.titleColor,
            display: 'block',
            lineHeight: '36px',
          },
          subtitle: {
            fontSize: 14,
            color: props.subtitleColor || card.subtitleColor,
            display: 'block',
          },
        };
      }

      var CardTitle = (function (_Component) {
        _inherits(CardTitle, _Component);

        function CardTitle() {
          _classCallCheck(this, CardTitle);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(CardTitle).apply(this, arguments),
          );
        }

        _createClass(CardTitle, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var actAsExpander = _props.actAsExpander;
              var children = _props.children;
              var expandable = _props.expandable;
              var showExpandableButton = _props.showExpandableButton;
              var style = _props.style;
              var subtitle = _props.subtitle;
              var subtitleColor = _props.subtitleColor;
              var subtitleStyle = _props.subtitleStyle;
              var title = _props.title;
              var titleColor = _props.titleColor;
              var titleStyle = _props.titleStyle;

              var other = _objectWithoutProperties(_props, [
                'actAsExpander',
                'children',
                'expandable',
                'showExpandableButton',
                'style',
                'subtitle',
                'subtitleColor',
                'subtitleStyle',
                'title',
                'titleColor',
                'titleStyle',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);
              var rootStyle = (0, _simpleAssign2.default)(
                {},
                styles.root,
                style,
              );
              var extendedTitleStyle = (0, _simpleAssign2.default)(
                {},
                styles.title,
                titleStyle,
              );
              var extendedSubtitleStyle = (0, _simpleAssign2.default)(
                {},
                styles.subtitle,
                subtitleStyle,
              );

              return _react2.default.createElement(
                'div',
                _extends({}, other, { style: prepareStyles(rootStyle) }),
                _react2.default.createElement(
                  'span',
                  { style: prepareStyles(extendedTitleStyle) },
                  title,
                ),
                _react2.default.createElement(
                  'span',
                  { style: prepareStyles(extendedSubtitleStyle) },
                  subtitle,
                ),
                children,
              );
            },
          },
        ]);

        return CardTitle;
      })(_react.Component);

      CardTitle.muiName = 'CardTitle';
      CardTitle.propTypes = {
        /**
         * If true, a click on this card component expands the card.
         */
        actAsExpander: _react.PropTypes.bool,
        /**
         * Can be used to render elements inside the Card Title.
         */
        children: _react.PropTypes.node,
        /**
         * If true, this card component is expandable.
         */
        expandable: _react.PropTypes.bool,
        /**
         * If true, this card component will include a button to expand the card.
         */
        showExpandableButton: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * Can be used to render a subtitle in the Card Title.
         */
        subtitle: _react.PropTypes.node,
        /**
         * Override the subtitle color.
         */
        subtitleColor: _react.PropTypes.string,
        /**
         * Override the inline-styles of the subtitle.
         */
        subtitleStyle: _react.PropTypes.object,
        /**
         * Can be used to render a title in the Card Title.
         */
        title: _react.PropTypes.node,
        /**
         * Override the title color.
         */
        titleColor: _react.PropTypes.string,
        /**
         * Override the inline-styles of the title.
         */
        titleStyle: _react.PropTypes.object,
      };
      CardTitle.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = CardTitle;

      /***/
    },
    /* 622 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var cardMedia = context.muiTheme.cardMedia;

        return {
          root: {
            position: 'relative',
          },
          overlayContainer: {
            position: 'absolute',
            top: 0,
            bottom: 0,
            right: 0,
            left: 0,
          },
          overlay: {
            height: '100%',
            position: 'relative',
          },
          overlayContent: {
            position: 'absolute',
            bottom: 0,
            right: 0,
            left: 0,
            paddingTop: 8,
            background: cardMedia.overlayContentBackground,
          },
          media: {},
          mediaChild: {
            verticalAlign: 'top',
            maxWidth: '100%',
            minWidth: '100%',
            width: '100%',
          },
        };
      }

      var CardMedia = (function (_Component) {
        _inherits(CardMedia, _Component);

        function CardMedia() {
          _classCallCheck(this, CardMedia);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(CardMedia).apply(this, arguments),
          );
        }

        _createClass(CardMedia, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var actAsExpander = _props.actAsExpander;
              var children = _props.children;
              var expandable = _props.expandable;
              var mediaStyle = _props.mediaStyle;
              var overlay = _props.overlay;
              var overlayContainerStyle = _props.overlayContainerStyle;
              var overlayContentStyle = _props.overlayContentStyle;
              var overlayStyle = _props.overlayStyle;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'actAsExpander',
                'children',
                'expandable',
                'mediaStyle',
                'overlay',
                'overlayContainerStyle',
                'overlayContentStyle',
                'overlayStyle',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);
              var rootStyle = (0, _simpleAssign2.default)(styles.root, style);
              var extendedMediaStyle = (0, _simpleAssign2.default)(
                styles.media,
                mediaStyle,
              );
              var extendedOverlayContainerStyle = (0, _simpleAssign2.default)(
                styles.overlayContainer,
                overlayContainerStyle,
              );
              var extendedOverlayContentStyle = (0, _simpleAssign2.default)(
                styles.overlayContent,
                overlayContentStyle,
              );
              var extendedOverlayStyle = (0, _simpleAssign2.default)(
                styles.overlay,
                overlayStyle,
              );
              var titleColor = this.context.muiTheme.cardMedia.titleColor;
              var subtitleColor = this.context.muiTheme.cardMedia.subtitleColor;
              var color = this.context.muiTheme.cardMedia.color;

              var styledChildren = _react2.default.Children.map(
                children,
                function (child) {
                  return _react2.default.cloneElement(child, {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(
                        {},
                        styles.mediaChild,
                        child.props.style,
                      ),
                    ),
                  });
                },
              );

              var overlayChildren = _react2.default.Children.map(
                overlay,
                function (child) {
                  if (
                    child.type.muiName === 'CardHeader' ||
                    child.type.muiName === 'CardTitle'
                  ) {
                    return _react2.default.cloneElement(child, {
                      titleColor: titleColor,
                      subtitleColor: subtitleColor,
                    });
                  } else if (child.type.muiName === 'CardText') {
                    return _react2.default.cloneElement(child, {
                      color: color,
                    });
                  } else {
                    return child;
                  }
                },
              );

              return _react2.default.createElement(
                'div',
                _extends({}, other, { style: prepareStyles(rootStyle) }),
                _react2.default.createElement(
                  'div',
                  { style: prepareStyles(extendedMediaStyle) },
                  styledChildren,
                ),
                overlay
                  ? _react2.default.createElement(
                      'div',
                      { style: prepareStyles(extendedOverlayContainerStyle) },
                      _react2.default.createElement(
                        'div',
                        { style: prepareStyles(extendedOverlayStyle) },
                        _react2.default.createElement(
                          'div',
                          { style: prepareStyles(extendedOverlayContentStyle) },
                          overlayChildren,
                        ),
                      ),
                    )
                  : '',
              );
            },
          },
        ]);

        return CardMedia;
      })(_react.Component);

      CardMedia.propTypes = {
        /**
         * If true, a click on this card component expands the card.
         */
        actAsExpander: _react.PropTypes.bool,
        /**
         * Can be used to render elements inside the Card Media.
         */
        children: _react.PropTypes.node,
        /**
         * If true, this card component is expandable.
         */
        expandable: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the Card Media.
         */
        mediaStyle: _react.PropTypes.object,
        /**
         * Can be used to render overlay element in Card Media.
         */
        overlay: _react.PropTypes.node,
        /**
         * Override the inline-styles of the overlay container.
         */
        overlayContainerStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of the overlay content.
         */
        overlayContentStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of the overlay element.
         */
        overlayStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      CardMedia.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = CardMedia;

      /***/
    },
    /* 623 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var cardText = context.muiTheme.cardText;

        return {
          root: {
            padding: 16,
            fontSize: 14,
            color: props.color || cardText.textColor,
          },
        };
      }

      var CardText = (function (_Component) {
        _inherits(CardText, _Component);

        function CardText() {
          _classCallCheck(this, CardText);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(CardText).apply(this, arguments),
          );
        }

        _createClass(CardText, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var actAsExpander = _props.actAsExpander;
              var children = _props.children;
              var color = _props.color;
              var expandable = _props.expandable;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'actAsExpander',
                'children',
                'color',
                'expandable',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);
              var rootStyle = (0, _simpleAssign2.default)(styles.root, style);

              return _react2.default.createElement(
                'div',
                _extends({}, other, { style: prepareStyles(rootStyle) }),
                children,
              );
            },
          },
        ]);

        return CardText;
      })(_react.Component);

      CardText.muiName = 'CardText';
      CardText.propTypes = {
        /**
         * If true, a click on this card component expands the card.
         */
        actAsExpander: _react.PropTypes.bool,
        /**
         * Can be used to render elements inside the Card Text.
         */
        children: _react.PropTypes.node,
        /**
         * Override the CardText color.
         */
        color: _react.PropTypes.string,
        /**
         * If true, this card component is expandable.
         */
        expandable: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      CardText.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = CardText;

      /***/
    },
    /* 624 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles() {
        return {
          root: {
            padding: 8,
            position: 'relative',
          },
          action: {
            marginRight: 8,
          },
        };
      }

      var CardActions = (function (_Component) {
        _inherits(CardActions, _Component);

        function CardActions() {
          _classCallCheck(this, CardActions);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(CardActions).apply(this, arguments),
          );
        }

        _createClass(CardActions, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var actAsExpander = _props.actAsExpander;
              var children = _props.children;
              var expandable = _props.expandable;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'actAsExpander',
                'children',
                'expandable',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              var styledChildren = _react2.default.Children.map(
                children,
                function (child) {
                  if (_react2.default.isValidElement(child)) {
                    return _react2.default.cloneElement(child, {
                      style: (0, _simpleAssign2.default)(
                        {},
                        styles.action,
                        child.props.style,
                      ),
                    });
                  }
                },
              );

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(styles.root, style),
                  ),
                }),
                styledChildren,
              );
            },
          },
        ]);

        return CardActions;
      })(_react.Component);

      CardActions.propTypes = {
        /**
         * If true, a click on this card component expands the card.
         */
        actAsExpander: _react.PropTypes.bool,
        /**
         * Can be used to render elements inside the Card Action.
         */
        children: _react.PropTypes.node,
        /**
         * If true, this card component is expandable.
         */
        expandable: _react.PropTypes.bool,
        /**
         * If true, this card component will include a button to expand the card.
         */
        showExpandableButton: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      CardActions.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = CardActions;

      /***/
    },
    /* 625 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _Checkbox = __webpack_require__(626);

      var _Checkbox2 = _interopRequireDefault(_Checkbox);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _Checkbox2.default;

      /***/
    },
    /* 626 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _EnhancedSwitch = __webpack_require__(627);

      var _EnhancedSwitch2 = _interopRequireDefault(_EnhancedSwitch);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _checkBoxOutlineBlank = __webpack_require__(628);

      var _checkBoxOutlineBlank2 = _interopRequireDefault(
        _checkBoxOutlineBlank,
      );

      var _checkBox = __webpack_require__(629);

      var _checkBox2 = _interopRequireDefault(_checkBox);

      var _deprecatedPropType = __webpack_require__(561);

      var _deprecatedPropType2 = _interopRequireDefault(_deprecatedPropType);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var checkbox = context.muiTheme.checkbox;

        var checkboxSize = 24;

        return {
          icon: {
            height: checkboxSize,
            width: checkboxSize,
          },
          check: {
            position: 'absolute',
            opacity: 0,
            transform: 'scale(0)',
            transitionOrigin: '50% 50%',
            transition:
              _transitions2.default.easeOut('450ms', 'opacity', '0ms') +
              ', ' +
              _transitions2.default.easeOut('0ms', 'transform', '450ms'),
            fill: checkbox.checkedColor,
          },
          box: {
            position: 'absolute',
            opacity: 1,
            fill: checkbox.boxColor,
            transition: _transitions2.default.easeOut('2s', null, '200ms'),
          },
          checkWhenSwitched: {
            opacity: 1,
            transform: 'scale(1)',
            transition:
              _transitions2.default.easeOut('0ms', 'opacity', '0ms') +
              ', ' +
              _transitions2.default.easeOut('800ms', 'transform', '0ms'),
          },
          boxWhenSwitched: {
            transition: _transitions2.default.easeOut('100ms', null, '0ms'),
            fill: checkbox.checkedColor,
          },
          checkWhenDisabled: {
            fill: checkbox.disabledColor,
            cursor: 'not-allowed',
          },
          boxWhenDisabled: {
            fill: props.checked ? 'transparent' : checkbox.disabledColor,
            cursor: 'not-allowed',
          },
          label: {
            color: props.disabled
              ? checkbox.labelDisabledColor
              : checkbox.labelColor,
          },
        };
      }

      var Checkbox = (function (_Component) {
        _inherits(Checkbox, _Component);

        function Checkbox() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, Checkbox);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    Checkbox,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                switched: false,
              }),
              (_this.handleStateChange = function (newSwitched) {
                _this.setState({
                  switched: newSwitched,
                });
              }),
              (_this.handleCheck = function (event, isInputChecked) {
                if (_this.props.onCheck) {
                  _this.props.onCheck(event, isInputChecked);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Checkbox, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              var _props = this.props;
              var checked = _props.checked;
              var defaultChecked = _props.defaultChecked;
              var valueLink = _props.valueLink;

              if (checked || defaultChecked || (valueLink && valueLink.value)) {
                this.setState({
                  switched: true,
                });
              }
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (this.props.checked !== nextProps.checked) {
                this.setState({
                  switched: nextProps.checked,
                });
              }
            },
          },
          {
            key: 'isChecked',
            value: function isChecked() {
              return this.refs.enhancedSwitch.isSwitched();
            },
          },
          {
            key: 'setChecked',
            value: function setChecked(newCheckedValue) {
              this.refs.enhancedSwitch.setSwitched(newCheckedValue);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props2 = this.props;
              var iconStyle = _props2.iconStyle;
              var onCheck = _props2.onCheck;
              var checkedIcon = _props2.checkedIcon;
              var uncheckedIcon = _props2.uncheckedIcon;
              var unCheckedIcon = _props2.unCheckedIcon;

              var other = _objectWithoutProperties(_props2, [
                'iconStyle',
                'onCheck',
                'checkedIcon',
                'uncheckedIcon',
                'unCheckedIcon',
              ]);

              var styles = getStyles(this.props, this.context);
              var boxStyles = (0, _simpleAssign2.default)(
                styles.box,
                this.state.switched && styles.boxWhenSwitched,
                iconStyle,
                this.props.disabled && styles.boxWhenDisabled,
              );
              var checkStyles = (0, _simpleAssign2.default)(
                styles.check,
                this.state.switched && styles.checkWhenSwitched,
                iconStyle,
                this.props.disabled && styles.checkWhenDisabled,
              );

              var checkedElement = checkedIcon
                ? _react2.default.cloneElement(checkedIcon, {
                    style: (0, _simpleAssign2.default)(
                      checkStyles,
                      checkedIcon.props.style,
                    ),
                  })
                : _react2.default.createElement(_checkBox2.default, {
                    style: checkStyles,
                  });

              var unCheckedElement =
                unCheckedIcon || uncheckedIcon
                  ? _react2.default.cloneElement(
                      unCheckedIcon || uncheckedIcon,
                      {
                        style: (0, _simpleAssign2.default)(
                          boxStyles,
                          (unCheckedIcon || uncheckedIcon).props.style,
                        ),
                      },
                    )
                  : _react2.default.createElement(
                      _checkBoxOutlineBlank2.default,
                      {
                        style: boxStyles,
                      },
                    );

              var checkboxElement = _react2.default.createElement(
                'div',
                null,
                unCheckedElement,
                checkedElement,
              );

              var rippleColor = this.state.switched
                ? checkStyles.fill
                : boxStyles.fill;
              var mergedIconStyle = (0, _simpleAssign2.default)(
                styles.icon,
                iconStyle,
              );

              var labelStyle = (0, _simpleAssign2.default)(
                styles.label,
                this.props.labelStyle,
              );

              var enhancedSwitchProps = {
                ref: 'enhancedSwitch',
                inputType: 'checkbox',
                switched: this.state.switched,
                switchElement: checkboxElement,
                rippleColor: rippleColor,
                iconStyle: mergedIconStyle,
                onSwitch: this.handleCheck,
                labelStyle: labelStyle,
                onParentShouldUpdate: this.handleStateChange,
                labelPosition: this.props.labelPosition,
              };

              return _react2.default.createElement(
                _EnhancedSwitch2.default,
                _extends({}, other, enhancedSwitchProps),
              );
            },
          },
        ]);

        return Checkbox;
      })(_react.Component);

      Checkbox.propTypes = {
        /**
         * Checkbox is checked if true.
         */
        checked: _react.PropTypes.bool,
        /**
         * The SvgIcon to use for the checked state.
         * This is useful to create icon toggles.
         */
        checkedIcon: _react.PropTypes.element,
        /**
         * The default state of our checkbox component.
         * **Warning:** This cannot be used in conjunction with `checked`.
         * Decide between using a controlled or uncontrolled input element and remove one of these props.
         * More info: https://fb.me/react-controlled-components
         */
        defaultChecked: _react.PropTypes.bool,
        /**
         * Disabled if true.
         */
        disabled: _react.PropTypes.bool,
        /**
         * Overrides the inline-styles of the icon element.
         */
        iconStyle: _react.PropTypes.object,
        /**
         * Overrides the inline-styles of the input element.
         */
        inputStyle: _react.PropTypes.object,
        /**
         * Where the label will be placed next to the checkbox.
         */
        labelPosition: _react.PropTypes.oneOf(['left', 'right']),
        /**
         * Overrides the inline-styles of the Checkbox element label.
         */
        labelStyle: _react.PropTypes.object,
        /**
         * Callback function that is fired when the checkbox is checked.
         *
         * @param {object} event `change` event targeting the underlying checkbox `input`.
         * @param {boolean} isInputChecked The `checked` value of the underlying checkbox `input`.
         */
        onCheck: _react.PropTypes.func,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The SvgIcon to use for the unchecked state.
         * This is useful to create icon toggles.
         */
        unCheckedIcon: (0, _deprecatedPropType2.default)(
          _react.PropTypes.element,
          'Use uncheckedIcon instead. It will be removed with v0.16.0.',
        ),
        /**
         * The SvgIcon to use for the unchecked state.
         * This is useful to create icon toggles.
         */
        uncheckedIcon: _react.PropTypes.element,
        /**
         * ValueLink for when using controlled checkbox.
         */
        valueLink: _react.PropTypes.object,
      };
      Checkbox.defaultProps = {
        labelPosition: 'right',
        disabled: false,
      };
      Checkbox.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Checkbox;

      /***/
    },
    /* 627 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactEventListener = __webpack_require__(585);

      var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

      var _keycode = __webpack_require__(549);

      var _keycode2 = _interopRequireDefault(_keycode);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _FocusRipple = __webpack_require__(550);

      var _FocusRipple2 = _interopRequireDefault(_FocusRipple);

      var _TouchRipple = __webpack_require__(558);

      var _TouchRipple2 = _interopRequireDefault(_TouchRipple);

      var _Paper = __webpack_require__(577);

      var _Paper2 = _interopRequireDefault(_Paper);

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var baseTheme = context.muiTheme.baseTheme;

        return {
          root: {
            position: 'relative',
            cursor: props.disabled ? 'default' : 'pointer',
            overflow: 'visible',
            display: 'table',
            height: 'auto',
            width: '100%',
          },
          input: {
            position: 'absolute',
            cursor: props.disabled ? 'default' : 'pointer',
            pointerEvents: 'all',
            opacity: 0,
            width: '100%',
            height: '100%',
            zIndex: 2,
            left: 0,
            boxSizing: 'border-box',
            padding: 0,
            margin: 0,
          },
          controls: {
            display: 'flex',
            width: '100%',
            height: '100%',
          },
          label: {
            float: 'left',
            position: 'relative',
            display: 'block',
            width: 'calc(100% - 60px)',
            lineHeight: '24px',
            color: baseTheme.palette.textColor,
            fontFamily: baseTheme.fontFamily,
          },
          wrap: {
            transition: _transitions2.default.easeOut(),
            float: 'left',
            position: 'relative',
            display: 'block',
            flexShrink: 0,
            width: 60 - baseTheme.spacing.desktopGutterLess,
            marginRight:
              props.labelPosition === 'right'
                ? baseTheme.spacing.desktopGutterLess
                : 0,
            marginLeft:
              props.labelPosition === 'left'
                ? baseTheme.spacing.desktopGutterLess
                : 0,
          },
          ripple: {
            color: props.rippleColor || baseTheme.palette.primary1Color,
            height: '200%',
            width: '200%',
            top: -12,
            left: -12,
          },
        };
      }

      var EnhancedSwitch = (function (_Component) {
        _inherits(EnhancedSwitch, _Component);

        function EnhancedSwitch() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, EnhancedSwitch);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    EnhancedSwitch,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                isKeyboardFocused: false,
              }),
              (_this.handleChange = function (event) {
                _this.tabPressed = false;
                _this.setState({
                  isKeyboardFocused: false,
                });

                var isInputChecked = _this.refs.checkbox.checked;

                if (
                  !_this.props.hasOwnProperty('checked') &&
                  _this.props.onParentShouldUpdate
                ) {
                  _this.props.onParentShouldUpdate(isInputChecked);
                }

                if (_this.props.onSwitch) {
                  _this.props.onSwitch(event, isInputChecked);
                }
              }),
              (_this.handleKeyDown = function (event) {
                var code = (0, _keycode2.default)(event);

                if (code === 'tab') {
                  _this.tabPressed = true;
                }
                if (_this.state.isKeyboardFocused && code === 'space') {
                  _this.handleChange(event);
                }
              }),
              (_this.handleKeyUp = function (event) {
                if (
                  _this.state.isKeyboardFocused &&
                  (0, _keycode2.default)(event) === 'space'
                ) {
                  _this.handleChange(event);
                }
              }),
              (_this.handleMouseDown = function (event) {
                // only listen to left clicks
                if (event.button === 0) {
                  _this.refs.touchRipple.start(event);
                }
              }),
              (_this.handleMouseUp = function () {
                _this.refs.touchRipple.end();
              }),
              (_this.handleMouseLeave = function () {
                _this.refs.touchRipple.end();
              }),
              (_this.handleTouchStart = function (event) {
                _this.refs.touchRipple.start(event);
              }),
              (_this.handleTouchEnd = function () {
                _this.refs.touchRipple.end();
              }),
              (_this.handleBlur = function (event) {
                _this.setState({
                  isKeyboardFocused: false,
                });

                if (_this.props.onBlur) {
                  _this.props.onBlur(event);
                }
              }),
              (_this.handleFocus = function (event) {
                // setTimeout is needed becuase the focus event fires first
                // Wait so that we can capture if this was a keyboard focus
                // or touch focus
                setTimeout(function () {
                  if (_this.tabPressed) {
                    _this.setState({
                      isKeyboardFocused: true,
                    });
                  }
                }, 150);

                if (_this.props.onFocus) {
                  _this.props.onFocus(event);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(EnhancedSwitch, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              var inputNode = this.refs.checkbox;
              if (
                (!this.props.switched ||
                  inputNode.checked !== this.props.switched) &&
                this.props.onParentShouldUpdate
              ) {
                this.props.onParentShouldUpdate(inputNode.checked);
              }
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              var hasCheckedProp = nextProps.hasOwnProperty('checked');
              var hasToggledProp = nextProps.hasOwnProperty('toggled');
              var hasNewDefaultProp =
                nextProps.hasOwnProperty('defaultChecked') &&
                nextProps.defaultChecked !== this.props.defaultChecked;

              if (hasCheckedProp || hasToggledProp || hasNewDefaultProp) {
                var switched =
                  nextProps.checked ||
                  nextProps.toggled ||
                  nextProps.defaultChecked ||
                  false;

                this.setState({
                  switched: switched,
                });

                if (
                  this.props.onParentShouldUpdate &&
                  switched !== this.props.switched
                ) {
                  this.props.onParentShouldUpdate(switched);
                }
              }
            },
          },
          {
            key: 'isSwitched',
            value: function isSwitched() {
              return this.refs.checkbox.checked;
            },

            // no callback here because there is no event
          },
          {
            key: 'setSwitched',
            value: function setSwitched(newSwitchedValue) {
              if (
                !this.props.hasOwnProperty('checked') ||
                this.props.checked === false
              ) {
                if (this.props.onParentShouldUpdate) {
                  this.props.onParentShouldUpdate(newSwitchedValue);
                }
                this.refs.checkbox.checked = newSwitchedValue;
              } else {
                true
                  ? (0, _warning2.default)(
                      false,
                      'Cannot call set method while checked is defined as a property.',
                    )
                  : void 0;
              }
            },
          },
          {
            key: 'getValue',
            value: function getValue() {
              return this.refs.checkbox.value;
            },

            // Checkbox inputs only use SPACE to change their state. Using ENTER will
            // update the ui but not the input.

            /**
             * Because both the ripples and the checkbox input cannot share pointer
             * events, the checkbox input takes control of pointer events and calls
             * ripple animations manually.
             */
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var name = _props.name;
              var value = _props.value;
              var iconStyle = _props.iconStyle;
              var inputStyle = _props.inputStyle;
              var inputType = _props.inputType;
              var label = _props.label;
              var labelStyle = _props.labelStyle;
              var labelPosition = _props.labelPosition;
              var onSwitch = _props.onSwitch;
              var onBlur = _props.onBlur;
              var onFocus = _props.onFocus;
              var onMouseUp = _props.onMouseUp;
              var onMouseDown = _props.onMouseDown;
              var onMouseLeave = _props.onMouseLeave;
              var onTouchStart = _props.onTouchStart;
              var onTouchEnd = _props.onTouchEnd;
              var onParentShouldUpdate = _props.onParentShouldUpdate;
              var disabled = _props.disabled;
              var disableTouchRipple = _props.disableTouchRipple;
              var disableFocusRipple = _props.disableFocusRipple;
              var className = _props.className;
              var rippleColor = _props.rippleColor;
              var rippleStyle = _props.rippleStyle;
              var style = _props.style;
              var switched = _props.switched;
              var switchElement = _props.switchElement;
              var thumbStyle = _props.thumbStyle;
              var trackStyle = _props.trackStyle;

              var other = _objectWithoutProperties(_props, [
                'name',
                'value',
                'iconStyle',
                'inputStyle',
                'inputType',
                'label',
                'labelStyle',
                'labelPosition',
                'onSwitch',
                'onBlur',
                'onFocus',
                'onMouseUp',
                'onMouseDown',
                'onMouseLeave',
                'onTouchStart',
                'onTouchEnd',
                'onParentShouldUpdate',
                'disabled',
                'disableTouchRipple',
                'disableFocusRipple',
                'className',
                'rippleColor',
                'rippleStyle',
                'style',
                'switched',
                'switchElement',
                'thumbStyle',
                'trackStyle',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);
              var wrapStyles = (0, _simpleAssign2.default)(
                styles.wrap,
                iconStyle,
              );
              var mergedRippleStyle = (0, _simpleAssign2.default)(
                styles.ripple,
                rippleStyle,
              );

              if (thumbStyle) {
                wrapStyles.marginLeft /= 2;
                wrapStyles.marginRight /= 2;
              }

              var labelElement =
                label &&
                _react2.default.createElement(
                  'label',
                  {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(styles.label, labelStyle),
                    ),
                  },
                  label,
                );

              var showTouchRipple = !disabled && !disableTouchRipple;
              var showFocusRipple = !disabled && !disableFocusRipple;

              var touchRipple = _react2.default.createElement(
                _TouchRipple2.default,
                {
                  ref: 'touchRipple',
                  key: 'touchRipple',
                  style: mergedRippleStyle,
                  color: mergedRippleStyle.color,
                  muiTheme: this.context.muiTheme,
                  centerRipple: true,
                },
              );

              var focusRipple = _react2.default.createElement(
                _FocusRipple2.default,
                {
                  key: 'focusRipple',
                  innerStyle: mergedRippleStyle,
                  color: mergedRippleStyle.color,
                  muiTheme: this.context.muiTheme,
                  show: this.state.isKeyboardFocused,
                },
              );

              var ripples = [
                showTouchRipple ? touchRipple : null,
                showFocusRipple ? focusRipple : null,
              ];

              var inputElement = _react2.default.createElement(
                'input',
                _extends({}, other, {
                  ref: 'checkbox',
                  type: inputType,
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(styles.input, inputStyle),
                  ),
                  name: name,
                  value: value,
                  disabled: disabled,
                  onBlur: this.handleBlur,
                  onFocus: this.handleFocus,
                  onChange: this.handleChange,
                  onMouseUp: showTouchRipple && this.handleMouseUp,
                  onMouseDown: showTouchRipple && this.handleMouseDown,
                  onMouseLeave: showTouchRipple && this.handleMouseLeave,
                  onTouchStart: showTouchRipple && this.handleTouchStart,
                  onTouchEnd: showTouchRipple && this.handleTouchEnd,
                }),
              );

              // If toggle component (indicated by whether the style includes thumb) manually lay out
              // elements in order to nest ripple elements
              var switchOrThumbElement = !thumbStyle
                ? _react2.default.createElement(
                    'div',
                    { style: prepareStyles(wrapStyles) },
                    switchElement,
                    ripples,
                  )
                : _react2.default.createElement(
                    'div',
                    { style: prepareStyles(wrapStyles) },
                    _react2.default.createElement('div', {
                      style: prepareStyles(
                        (0, _simpleAssign2.default)({}, trackStyle),
                      ),
                    }),
                    _react2.default.createElement(
                      _Paper2.default,
                      { style: thumbStyle, zDepth: 1, circle: true },
                      ' ',
                      ripples,
                      ' ',
                    ),
                  );

              var elementsInOrder =
                labelPosition === 'right'
                  ? _react2.default.createElement(
                      'div',
                      { style: styles.controls },
                      switchOrThumbElement,
                      labelElement,
                    )
                  : _react2.default.createElement(
                      'div',
                      { style: styles.controls },
                      labelElement,
                      switchOrThumbElement,
                    );

              return _react2.default.createElement(
                'div',
                {
                  ref: 'root',
                  className: className,
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(styles.root, style),
                  ),
                },
                _react2.default.createElement(_reactEventListener2.default, {
                  target: 'window',
                  onKeyDown: this.handleKeyDown,
                  onKeyUp: this.handleKeyUp,
                }),
                inputElement,
                elementsInOrder,
              );
            },
          },
        ]);

        return EnhancedSwitch;
      })(_react.Component);

      EnhancedSwitch.propTypes = {
        checked: _react.PropTypes.bool,
        className: _react.PropTypes.string,
        defaultChecked: _react.PropTypes.bool,
        disableFocusRipple: _react.PropTypes.bool,
        disableTouchRipple: _react.PropTypes.bool,
        disabled: _react.PropTypes.bool,
        iconStyle: _react.PropTypes.object,
        inputStyle: _react.PropTypes.object,
        inputType: _react.PropTypes.string.isRequired,
        label: _react.PropTypes.node,
        labelPosition: _react.PropTypes.oneOf(['left', 'right']),
        labelStyle: _react.PropTypes.object,
        name: _react.PropTypes.string,
        onBlur: _react.PropTypes.func,
        onFocus: _react.PropTypes.func,
        onMouseDown: _react.PropTypes.func,
        onMouseLeave: _react.PropTypes.func,
        onMouseUp: _react.PropTypes.func,
        onParentShouldUpdate: _react.PropTypes.func,
        onSwitch: _react.PropTypes.func,
        onTouchEnd: _react.PropTypes.func,
        onTouchStart: _react.PropTypes.func,
        rippleColor: _react.PropTypes.string,
        rippleStyle: _react.PropTypes.object,
        style: _react.PropTypes.object,
        switchElement: _react.PropTypes.element.isRequired,
        switched: _react.PropTypes.bool.isRequired,
        thumbStyle: _react.PropTypes.object,
        trackStyle: _react.PropTypes.object,
        value: _react.PropTypes.any,
      };
      EnhancedSwitch.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = EnhancedSwitch;

      /***/
    },
    /* 628 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var ToggleCheckBoxOutlineBlank = function ToggleCheckBoxOutlineBlank(
        props,
      ) {
        return _react2.default.createElement(
          _SvgIcon2.default,
          props,
          _react2.default.createElement('path', {
            d:
              'M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z',
          }),
        );
      };
      ToggleCheckBoxOutlineBlank = (0, _pure2.default)(
        ToggleCheckBoxOutlineBlank,
      );
      ToggleCheckBoxOutlineBlank.displayName = 'ToggleCheckBoxOutlineBlank';
      ToggleCheckBoxOutlineBlank.muiName = 'SvgIcon';

      exports.default = ToggleCheckBoxOutlineBlank;

      /***/
    },
    /* 629 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var ToggleCheckBox = function ToggleCheckBox(props) {
        return _react2.default.createElement(
          _SvgIcon2.default,
          props,
          _react2.default.createElement('path', {
            d:
              'M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z',
          }),
        );
      };
      ToggleCheckBox = (0, _pure2.default)(ToggleCheckBox);
      ToggleCheckBox.displayName = 'ToggleCheckBox';
      ToggleCheckBox.muiName = 'SvgIcon';

      exports.default = ToggleCheckBox;

      /***/
    },
    /* 630 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _Chip = __webpack_require__(631);

      var _Chip2 = _interopRequireDefault(_Chip);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _Chip2.default;

      /***/
    },
    /* 631 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _keycode = __webpack_require__(549);

      var _keycode2 = _interopRequireDefault(_keycode);

      var _colorManipulator = __webpack_require__(583);

      var _EnhancedButton = __webpack_require__(544);

      var _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);

      var _cancel = __webpack_require__(632);

      var _cancel2 = _interopRequireDefault(_cancel);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context, state) {
        var chip = context.muiTheme.chip;

        var backgroundColor = props.backgroundColor || chip.backgroundColor;
        var focusColor = (0, _colorManipulator.emphasize)(
          backgroundColor,
          0.08,
        );
        var pressedColor = (0, _colorManipulator.emphasize)(
          backgroundColor,
          0.12,
        );

        return {
          avatar: {
            marginRight: -4,
          },
          deleteIcon: {
            color: state.deleteHovered
              ? (0, _colorManipulator.fade)(chip.deleteIconColor, 0.4)
              : chip.deleteIconColor,
            cursor: 'pointer',
            margin: '4px 4px 0px -8px',
          },
          label: {
            color: props.labelColor || chip.textColor,
            fontSize: chip.fontSize,
            fontWeight: chip.fontWeight,
            lineHeight: '32px',
            paddingLeft: 12,
            paddingRight: 12,
            userSelect: 'none',
            whiteSpace: 'nowrap',
          },
          root: {
            backgroundColor: state.clicked
              ? pressedColor
              : state.focused || state.hovered
              ? focusColor
              : backgroundColor,
            borderRadius: 16,
            boxShadow: state.clicked ? chip.shadow : null,
            cursor: props.onTouchTap ? 'pointer' : 'default',
            display: 'flex',
            whiteSpace: 'nowrap',
            width: 'fit-content',
          },
        };
      }

      var Chip = (function (_Component) {
        _inherits(Chip, _Component);

        function Chip() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, Chip);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    Chip,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                clicked: false,
                deleteHovered: false,
                focused: false,
                hovered: false,
              }),
              (_this.handleBlur = function (event) {
                _this.setState({ clicked: false, focused: false });
                _this.props.onBlur(event);
              }),
              (_this.handleFocus = function (event) {
                if (_this.props.onTouchTap || _this.props.onRequestDelete) {
                  _this.setState({ focused: true });
                }
                _this.props.onFocus(event);
              }),
              (_this.handleKeyboardFocus = function (event, keyboardFocused) {
                if (keyboardFocused) {
                  _this.handleFocus();
                  _this.props.onFocus(event);
                } else {
                  _this.handleBlur();
                }

                _this.props.onKeyboardFocus(event, keyboardFocused);
              }),
              (_this.handleKeyDown = function (event) {
                if ((0, _keycode2.default)(event) === 'backspace') {
                  event.preventDefault();
                  if (_this.props.onRequestDelete) {
                    _this.props.onRequestDelete(event);
                  }
                }
                _this.props.onKeyDown(event);
              }),
              (_this.handleMouseDown = function (event) {
                // Only listen to left clicks
                if (event.button === 0) {
                  event.stopPropagation();
                  if (_this.props.onTouchTap) {
                    _this.setState({ clicked: true });
                  }
                }
                _this.props.onMouseDown(event);
              }),
              (_this.handleMouseEnter = function (event) {
                if (_this.props.onTouchTap) {
                  _this.setState({ hovered: true });
                }
                _this.props.onMouseEnter(event);
              }),
              (_this.handleMouseEnterDeleteIcon = function () {
                _this.setState({ deleteHovered: true });
              }),
              (_this.handleMouseLeave = function (event) {
                _this.setState({
                  clicked: false,
                  hovered: false,
                });
                _this.props.onMouseLeave(event);
              }),
              (_this.handleMouseLeaveDeleteIcon = function () {
                _this.setState({ deleteHovered: false });
              }),
              (_this.handleMouseUp = function (event) {
                _this.setState({ clicked: false });
                _this.props.onMouseUp(event);
              }),
              (_this.handleTouchTapDeleteIcon = function (event) {
                // Stop the event from bubbling up to the `Chip`
                event.stopPropagation();
                _this.props.onRequestDelete(event);
              }),
              (_this.handleTouchEnd = function (event) {
                _this.setState({ clicked: false });
                _this.props.onTouchEnd(event);
              }),
              (_this.handleTouchStart = function (event) {
                event.stopPropagation();
                if (_this.props.onTouchTap) {
                  _this.setState({ clicked: true });
                }
                _this.props.onTouchStart(event);
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Chip, [
          {
            key: 'render',
            value: function render() {
              var buttonEventHandlers = {
                onBlur: this.handleBlur,
                onFocus: this.handleFocus,
                onKeyDown: this.handleKeyDown,
                onMouseDown: this.handleMouseDown,
                onMouseEnter: this.handleMouseEnter,
                onMouseLeave: this.handleMouseLeave,
                onMouseUp: this.handleMouseUp,
                onTouchEnd: this.handleTouchEnd,
                onTouchStart: this.handleTouchStart,
                onKeyboardFocus: this.handleKeyboardFocus,
              };

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);

              var _props = this.props;
              var children = _props.children;
              var style = _props.style;
              var className = _props.className;
              var labelStyle = _props.labelStyle;
              var labelColor = _props.labelColor;
              var backgroundColor = _props.backgroundColor;
              var onRequestDelete = _props.onRequestDelete;

              var other = _objectWithoutProperties(_props, [
                'children',
                'style',
                'className',
                'labelStyle',
                'labelColor',
                'backgroundColor',
                'onRequestDelete',
              ]);

              var deletable = this.props.onRequestDelete;
              var avatar = null;

              style = (0, _simpleAssign2.default)(styles.root, style);
              labelStyle = prepareStyles(
                (0, _simpleAssign2.default)(styles.label, labelStyle),
              );

              var deleteIcon = deletable
                ? _react2.default.createElement(_cancel2.default, {
                    color: styles.deleteIcon.color,
                    style: styles.deleteIcon,
                    onTouchTap: this.handleTouchTapDeleteIcon,
                    onMouseEnter: this.handleMouseEnterDeleteIcon,
                    onMouseLeave: this.handleMouseLeaveDeleteIcon,
                  })
                : null;

              var childCount = _react2.default.Children.count(children);

              // If the first child is an avatar, extract it and style it
              if (childCount > 1) {
                children = _react2.default.Children.toArray(children);

                if (
                  _react2.default.isValidElement(children[0]) &&
                  children[0].type.muiName === 'Avatar'
                ) {
                  avatar = children.shift();

                  avatar = _react2.default.cloneElement(avatar, {
                    style: (0, _simpleAssign2.default)(
                      styles.avatar,
                      avatar.props.style,
                    ),
                    size: 32,
                  });
                }
              }

              return _react2.default.createElement(
                _EnhancedButton2.default,
                _extends({}, other, buttonEventHandlers, {
                  className: className,
                  containerElement: 'div', // Firefox doesn't support nested buttons
                  disableTouchRipple: true,
                  disableFocusRipple: true,
                  style: style,
                }),
                avatar,
                _react2.default.createElement(
                  'span',
                  { style: labelStyle },
                  children,
                ),
                deleteIcon,
              );
            },
          },
        ]);

        return Chip;
      })(_react.Component);

      Chip.propTypes = {
        /**
         * Override the background color of the chip.
         */
        backgroundColor: _react.PropTypes.string,
        /**
         * Used to render elements inside the Chip.
         */
        children: _react.PropTypes.node,
        /**
         * CSS `className` of the root element.
         */
        className: _react.PropTypes.node,
        /**
         * Override the label color.
         */
        labelColor: _react.PropTypes.string,
        /**
         * Override the inline-styles of the label.
         */
        labelStyle: _react.PropTypes.object,
        /** @ignore */
        onBlur: _react.PropTypes.func,
        /** @ignore */
        onFocus: _react.PropTypes.func,
        /** @ignore */
        onKeyDown: _react.PropTypes.func,
        /** @ignore */
        onKeyboardFocus: _react.PropTypes.func,
        /** @ignore */
        onMouseDown: _react.PropTypes.func,
        /** @ignore */
        onMouseEnter: _react.PropTypes.func,
        /** @ignore */
        onMouseLeave: _react.PropTypes.func,
        /** @ignore */
        onMouseUp: _react.PropTypes.func,
        /**
         * Callback function fired when the delete icon is clicked. If set, the delete icon will be shown.
         * @param {object} event `touchTap` event targeting the element.
         */
        onRequestDelete: _react.PropTypes.func,
        /** @ignore */
        onTouchEnd: _react.PropTypes.func,
        /** @ignore */
        onTouchStart: _react.PropTypes.func,
        /**
         * Callback function fired when the `Chip` element is touch-tapped.
         *
         * @param {object} event TouchTap event targeting the element.
         */
        onTouchTap: _react.PropTypes.func,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      Chip.defaultProps = {
        onBlur: function onBlur() {},
        onFocus: function onFocus() {},
        onKeyDown: function onKeyDown() {},
        onKeyboardFocus: function onKeyboardFocus() {},
        onMouseDown: function onMouseDown() {},
        onMouseEnter: function onMouseEnter() {},
        onMouseLeave: function onMouseLeave() {},
        onMouseUp: function onMouseUp() {},
        onTouchEnd: function onTouchEnd() {},
        onTouchStart: function onTouchStart() {},
      };
      Chip.contextTypes = { muiTheme: _react.PropTypes.object.isRequired };
      exports.default = Chip;

      /***/
    },
    /* 632 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var NavigationCancel = function NavigationCancel(props) {
        return _react2.default.createElement(
          _SvgIcon2.default,
          props,
          _react2.default.createElement('path', {
            d:
              'M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z',
          }),
        );
      };
      NavigationCancel = (0, _pure2.default)(NavigationCancel);
      NavigationCancel.displayName = 'NavigationCancel';
      NavigationCancel.muiName = 'SvgIcon';

      exports.default = NavigationCancel;

      /***/
    },
    /* 633 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _CircularProgress = __webpack_require__(634);

      var _CircularProgress2 = _interopRequireDefault(_CircularProgress);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _CircularProgress2.default;

      /***/
    },
    /* 634 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _autoPrefix = __webpack_require__(552);

      var _autoPrefix2 = _interopRequireDefault(_autoPrefix);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getRelativeValue(value, min, max) {
        var clampedValue = Math.min(Math.max(min, value), max);
        var rangeValue = max - min;
        var relValue = Math.round((clampedValue / rangeValue) * 10000) / 10000;
        return relValue * 100;
      }

      function getStyles(props, context) {
        var max = props.max;
        var min = props.min;
        var size = props.size;
        var value = props.value;
        var palette = context.muiTheme.baseTheme.palette;

        var zoom = size * 1.4;
        var baseSize = 50;
        var margin = Math.round((50 * zoom - 50) / 2);

        if (margin < 0) margin = 0;

        var styles = {
          root: {
            position: 'relative',
            margin: margin,
            display: 'inline-block',
            width: baseSize,
            height: baseSize,
          },
          wrapper: {
            width: baseSize,
            height: baseSize,
            display: 'inline-block',
            transition: _transitions2.default.create(
              'transform',
              '20s',
              null,
              'linear',
            ),
            transitionTimingFunction: 'linear',
          },
          svg: {
            height: baseSize,
            position: 'relative',
            transform: 'scale(' + zoom + ')',
            width: baseSize,
          },
          path: {
            strokeDasharray: '89, 200',
            strokeDashoffset: 0,
            stroke: props.color || palette.primary1Color,
            strokeLinecap: 'round',
            transition: _transitions2.default.create(
              'all',
              '1.5s',
              null,
              'ease-in-out',
            ),
          },
        };

        if (props.mode === 'determinate') {
          var relVal = getRelativeValue(value, min, max);
          styles.path.transition = _transitions2.default.create(
            'all',
            '0.3s',
            null,
            'linear',
          );
          styles.path.strokeDasharray = Math.round(relVal * 1.25) + ', 200';
        }

        return styles;
      }

      var CircularProgress = (function (_Component) {
        _inherits(CircularProgress, _Component);

        function CircularProgress() {
          _classCallCheck(this, CircularProgress);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(CircularProgress).apply(this, arguments),
          );
        }

        _createClass(CircularProgress, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.scalePath(this.refs.path);
              this.rotateWrapper(this.refs.wrapper);
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              clearTimeout(this.scalePathTimer);
              clearTimeout(this.rotateWrapperTimer);
            },
          },
          {
            key: 'scalePath',
            value: function scalePath(path, step) {
              var _this2 = this;

              if (this.props.mode !== 'indeterminate') return;

              step = step || 0;
              step %= 3;

              if (step === 0) {
                path.style.strokeDasharray = '1, 200';
                path.style.strokeDashoffset = 0;
                path.style.transitionDuration = '0ms';
              } else if (step === 1) {
                path.style.strokeDasharray = '89, 200';
                path.style.strokeDashoffset = -35;
                path.style.transitionDuration = '750ms';
              } else {
                path.style.strokeDasharray = '89, 200';
                path.style.strokeDashoffset = -124;
                path.style.transitionDuration = '850ms';
              }

              this.scalePathTimer = setTimeout(
                function () {
                  return _this2.scalePath(path, step + 1);
                },
                step ? 750 : 250,
              );
            },
          },
          {
            key: 'rotateWrapper',
            value: function rotateWrapper(wrapper) {
              var _this3 = this;

              if (this.props.mode !== 'indeterminate') return;

              _autoPrefix2.default.set(
                wrapper.style,
                'transform',
                'rotate(0deg)',
              );
              _autoPrefix2.default.set(
                wrapper.style,
                'transitionDuration',
                '0ms',
              );

              setTimeout(function () {
                _autoPrefix2.default.set(
                  wrapper.style,
                  'transform',
                  'rotate(1800deg)',
                );
                _autoPrefix2.default.set(
                  wrapper.style,
                  'transitionDuration',
                  '10s',
                );
                _autoPrefix2.default.set(
                  wrapper.style,
                  'transitionTimingFunction',
                  'linear',
                );
              }, 50);

              this.rotateWrapperTimer = setTimeout(function () {
                return _this3.rotateWrapper(wrapper);
              }, 10050);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var style = _props.style;
              var innerStyle = _props.innerStyle;
              var size = _props.size;

              var other = _objectWithoutProperties(_props, [
                'style',
                'innerStyle',
                'size',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(styles.root, style),
                  ),
                }),
                _react2.default.createElement(
                  'div',
                  {
                    ref: 'wrapper',
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(styles.wrapper, innerStyle),
                    ),
                  },
                  _react2.default.createElement(
                    'svg',
                    { style: prepareStyles(styles.svg) },
                    _react2.default.createElement('circle', {
                      ref: 'path',
                      style: prepareStyles(styles.path),
                      cx: '25',
                      cy: '25',
                      r: '20',
                      fill: 'none',
                      strokeWidth: '2.5',
                      strokeMiterlimit: '20',
                    }),
                  ),
                ),
              );
            },
          },
        ]);

        return CircularProgress;
      })(_react.Component);

      CircularProgress.propTypes = {
        /**
         * Override the progress's color.
         */
        color: _react.PropTypes.string,
        /**
         * Style for inner wrapper div.
         */
        innerStyle: _react.PropTypes.object,
        /**
         * The max value of progress, only works in determinate mode.
         */
        max: _react.PropTypes.number,
        /**
         * The min value of progress, only works in determinate mode.
         */
        min: _react.PropTypes.number,
        /**
         * The mode of show your progress, indeterminate
         * for when there is no value for progress.
         */
        mode: _react.PropTypes.oneOf(['determinate', 'indeterminate']),
        /**
         * The size of the progress.
         */
        size: _react.PropTypes.number,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The value of progress, only works in determinate mode.
         */
        value: _react.PropTypes.number,
      };
      CircularProgress.defaultProps = {
        mode: 'indeterminate',
        value: 0,
        min: 0,
        max: 100,
        size: 1,
      };
      CircularProgress.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = CircularProgress;

      /***/
    },
    /* 635 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _DatePicker = __webpack_require__(636);

      var _DatePicker2 = _interopRequireDefault(_DatePicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _DatePicker2.default;

      /***/
    },
    /* 636 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _dateUtils = __webpack_require__(637);

      var _DatePickerDialog = __webpack_require__(638);

      var _DatePickerDialog2 = _interopRequireDefault(_DatePickerDialog);

      var _TextField = __webpack_require__(581);

      var _TextField2 = _interopRequireDefault(_TextField);

      var _deprecatedPropType = __webpack_require__(561);

      var _deprecatedPropType2 = _interopRequireDefault(_deprecatedPropType);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var DatePicker = (function (_Component) {
        _inherits(DatePicker, _Component);

        function DatePicker() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, DatePicker);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    DatePicker,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                date: undefined,
              }),
              (_this.handleAccept = function (date) {
                if (!_this.isControlled()) {
                  _this.setState({
                    date: date,
                  });
                }
                if (_this.props.onChange) {
                  _this.props.onChange(null, date);
                }
              }),
              (_this.handleFocus = function (event) {
                event.target.blur();
                if (_this.props.onFocus) {
                  _this.props.onFocus(event);
                }
              }),
              (_this.handleTouchTap = function (event) {
                if (_this.props.onTouchTap) {
                  _this.props.onTouchTap(event);
                }

                if (!_this.props.disabled) {
                  setTimeout(function () {
                    _this.openDialog();
                  }, 0);
                }
              }),
              (_this.formatDate = function (date) {
                if (_this.props.locale) {
                  var DateTimeFormat =
                    _this.props.DateTimeFormat || _dateUtils.dateTimeFormat;
                  return new DateTimeFormat(_this.props.locale, {
                    day: 'numeric',
                    month: 'numeric',
                    year: 'numeric',
                  }).format(date);
                } else {
                  return (0, _dateUtils.formatIso)(date);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(DatePicker, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              this.setState({
                date: this.isControlled()
                  ? this.getControlledDate()
                  : this.props.defaultDate,
              });
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (this.isControlled()) {
                var newDate = this.getControlledDate(nextProps);
                if (!(0, _dateUtils.isEqualDate)(this.state.date, newDate)) {
                  this.setState({
                    date: newDate,
                  });
                }
              }
            },
          },
          {
            key: 'getDate',
            value: function getDate() {
              return this.state.date;
            },

            /**
             * Open the date-picker dialog programmatically from a parent.
             */
          },
          {
            key: 'openDialog',
            value: function openDialog() {
              /**
               * if the date is not selected then set it to new date
               * (get the current system date while doing so)
               * else set it to the currently selected date
               */
              if (this.state.date !== undefined) {
                this.setState(
                  {
                    dialogDate: this.getDate(),
                  },
                  this.refs.dialogWindow.show,
                );
              } else {
                this.setState(
                  {
                    dialogDate: new Date(),
                  },
                  this.refs.dialogWindow.show,
                );
              }
            },

            /**
             * Alias for `openDialog()` for an api consistent with TextField.
             */
          },
          {
            key: 'focus',
            value: function focus() {
              this.openDialog();
            },
          },
          {
            key: 'isControlled',
            value: function isControlled() {
              return this.props.hasOwnProperty('value');
            },
          },
          {
            key: 'getControlledDate',
            value: function getControlledDate() {
              var props =
                arguments.length <= 0 || arguments[0] === undefined
                  ? this.props
                  : arguments[0];

              if (props.value instanceof Date) {
                return props.value;
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var DateTimeFormat = _props.DateTimeFormat;
              var autoOk = _props.autoOk;
              var cancelLabel = _props.cancelLabel;
              var className = _props.className;
              var container = _props.container;
              var defaultDate = _props.defaultDate;
              var dialogContainerStyle = _props.dialogContainerStyle;
              var disableYearSelection = _props.disableYearSelection;
              var firstDayOfWeek = _props.firstDayOfWeek;
              var formatDateProp = _props.formatDate;
              var locale = _props.locale;
              var maxDate = _props.maxDate;
              var minDate = _props.minDate;
              var mode = _props.mode;
              var okLabel = _props.okLabel;
              var onDismiss = _props.onDismiss;
              var onFocus = _props.onFocus;
              var onShow = _props.onShow;
              var onTouchTap = _props.onTouchTap;
              var shouldDisableDate = _props.shouldDisableDate;
              var style = _props.style;
              var textFieldStyle = _props.textFieldStyle;
              var wordings = _props.wordings;

              var other = _objectWithoutProperties(_props, [
                'DateTimeFormat',
                'autoOk',
                'cancelLabel',
                'className',
                'container',
                'defaultDate',
                'dialogContainerStyle',
                'disableYearSelection',
                'firstDayOfWeek',
                'formatDate',
                'locale',
                'maxDate',
                'minDate',
                'mode',
                'okLabel',
                'onDismiss',
                'onFocus',
                'onShow',
                'onTouchTap',
                'shouldDisableDate',
                'style',
                'textFieldStyle',
                'wordings',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var formatDate = formatDateProp || this.formatDate;

              return _react2.default.createElement(
                'div',
                {
                  className: className,
                  style: prepareStyles((0, _simpleAssign2.default)({}, style)),
                },
                _react2.default.createElement(
                  _TextField2.default,
                  _extends({}, other, {
                    onFocus: this.handleFocus,
                    onTouchTap: this.handleTouchTap,
                    ref: 'input',
                    style: textFieldStyle,
                    value: this.state.date ? formatDate(this.state.date) : '',
                  }),
                ),
                _react2.default.createElement(_DatePickerDialog2.default, {
                  DateTimeFormat: DateTimeFormat,
                  autoOk: autoOk,
                  cancelLabel: cancelLabel,
                  container: container,
                  containerStyle: dialogContainerStyle,
                  disableYearSelection: disableYearSelection,
                  firstDayOfWeek: firstDayOfWeek,
                  initialDate: this.state.dialogDate,
                  locale: locale,
                  maxDate: maxDate,
                  minDate: minDate,
                  mode: mode,
                  okLabel: okLabel,
                  onAccept: this.handleAccept,
                  onShow: onShow,
                  onDismiss: onDismiss,
                  ref: 'dialogWindow',
                  shouldDisableDate: shouldDisableDate,
                  wordings: wordings,
                }),
              );
            },
          },
        ]);

        return DatePicker;
      })(_react.Component);

      DatePicker.propTypes = {
        /**
         * Constructor for date formatting for the specified `locale`.
         * The constructor must follow this specification: ECMAScript Internationalization API 1.0 (ECMA-402).
         * `Intl.DateTimeFormat` is supported by most modern browsers, see http://caniuse.com/#search=intl,
         * otherwise https://github.com/andyearnshaw/Intl.js is a good polyfill.
         *
         * By default, a built-in `DateTimeFormat` is used which supports the 'en-US' `locale`.
         */
        DateTimeFormat: _react.PropTypes.func,
        /**
         * If true, automatically accept and close the picker on select a date.
         */
        autoOk: _react.PropTypes.bool,
        /**
         * Override the default text of the 'Cancel' button.
         */
        cancelLabel: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * Used to control how the Date Picker will be displayed when the input field is focused.
         * `dialog` (default) displays the DatePicker as a dialog with a modal.
         * `inline` displays the DatePicker below the input field (similar to auto complete).
         */
        container: _react.PropTypes.oneOf(['dialog', 'inline']),
        /**
         * This is the initial date value of the component.
         * If either `value` or `valueLink` is provided they will override this
         * prop with `value` taking precedence.
         */
        defaultDate: _react.PropTypes.object,
        /**
         * Override the inline-styles of DatePickerDialog's Container element.
         */
        dialogContainerStyle: _react.PropTypes.object,
        /**
         * Disables the year selection in the date picker.
         */
        disableYearSelection: _react.PropTypes.bool,
        /**
         * Disables the DatePicker.
         */
        disabled: _react.PropTypes.bool,
        /**
         * Used to change the first day of week. It varies from
         * Saturday to Monday between different locales.
         * The allowed range is 0 (Sunday) to 6 (Saturday).
         * The default is `1`, Monday, as per ISO 8601.
         */
        firstDayOfWeek: _react.PropTypes.number,
        /**
         * This function is called to format the date displayed in the input field, and should return a string.
         * By default if no `locale` and `DateTimeFormat` is provided date objects are formatted to ISO 8601 YYYY-MM-DD.
         *
         * @param {object} date Date object to be formatted.
         * @returns {any} The formatted date.
         */
        formatDate: _react.PropTypes.func,
        /**
         * Locale used for formatting the `DatePicker` date strings. Other than for 'en-US', you
         * must provide a `DateTimeFormat` that supports the chosen `locale`.
         */
        locale: _react.PropTypes.string,
        /**
         * The ending of a range of valid dates. The range includes the endDate.
         * The default value is current date + 100 years.
         */
        maxDate: _react.PropTypes.object,
        /**
         * The beginning of a range of valid dates. The range includes the startDate.
         * The default value is current date - 100 years.
         */
        minDate: _react.PropTypes.object,
        /**
         * Tells the component to display the picker in portrait or landscape mode.
         */
        mode: _react.PropTypes.oneOf(['portrait', 'landscape']),
        /**
         * Override the default text of the 'OK' button.
         */
        okLabel: _react.PropTypes.node,
        /**
         * Callback function that is fired when the date value changes.
         *
         * @param {null} null Since there is no particular event associated with the change,
         * the first argument will always be null.
         * @param {object} date The new date.
         */
        onChange: _react.PropTypes.func,
        /**
         * Callback function that is fired when the Date Picker's dialog is dismissed.
         */
        onDismiss: _react.PropTypes.func,
        /**
         * Callback function that is fired when the Date Picker's `TextField` gains focus.
         */
        onFocus: _react.PropTypes.func,
        /**
         * Callback function that is fired when the Date Picker's dialog is shown.
         */
        onShow: _react.PropTypes.func,
        /**
         * Callback function that is fired when a touch tap event occurs on the Date Picker's `TextField`.
         *
         * @param {object} event TouchTap event targeting the `TextField`.
         */
        onTouchTap: _react.PropTypes.func,
        /**
         * Callback function used to determine if a day's entry should be disabled on the calendar.
         *
         * @param {object} day Date object of a day.
         * @returns {boolean} Indicates whether the day should be disabled.
         */
        shouldDisableDate: _react.PropTypes.func,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * Override the inline-styles of DatePicker's TextField element.
         */
        textFieldStyle: _react.PropTypes.object,
        /**
         * Sets the date for the Date Picker programmatically.
         */
        value: _react.PropTypes.object,
        /**
         * Wordings used inside the button of the dialog.
         */
        wordings: (0, _deprecatedPropType2.default)(
          _react.PropTypes.object,
          'Instead, use `cancelLabel` and `okLabel`.\n      It will be removed with v0.16.0.',
        ),
      };
      DatePicker.defaultProps = {
        autoOk: false,
        container: 'dialog',
        disabled: false,
        disableYearSelection: false,
        firstDayOfWeek: 1,
        style: {},
      };
      DatePicker.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = DatePicker;

      /***/
    },
    /* 637 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.dateTimeFormat = dateTimeFormat;
      exports.addDays = addDays;
      exports.addMonths = addMonths;
      exports.addYears = addYears;
      exports.cloneDate = cloneDate;
      exports.cloneAsDate = cloneAsDate;
      exports.getDaysInMonth = getDaysInMonth;
      exports.getFirstDayOfMonth = getFirstDayOfMonth;
      exports.getFirstDayOfWeek = getFirstDayOfWeek;
      exports.getWeekArray = getWeekArray;
      exports.localizedWeekday = localizedWeekday;
      exports.formatIso = formatIso;
      exports.isEqualDate = isEqualDate;
      exports.isBeforeDate = isBeforeDate;
      exports.isAfterDate = isAfterDate;
      exports.isBetweenDates = isBetweenDates;
      exports.monthDiff = monthDiff;
      exports.yearDiff = yearDiff;

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var dayAbbreviation = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];
      var dayList = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
      var monthList = [
        'Jan',
        'Feb',
        'Mar',
        'Apr',
        'May',
        'Jun',
        'Jul',
        'Aug',
        'Sep',
        'Oct',
        'Nov',
        'Dec',
      ];
      var monthLongList = [
        'January',
        'February',
        'March',
        'April',
        'May',
        'June',
        'July',
        'August',
        'September',
        'October',
        'November',
        'December',
      ];

      function dateTimeFormat(locale, options) {
        true
          ? (0, _warning2.default)(
              locale === 'en-US',
              'The ' +
                locale +
                ' locale is not supported by the built-in DateTimeFormat.\n  Use the `DateTimeFormat` prop to supply an alternative implementation.',
            )
          : void 0;

        this.format = function (date) {
          if (
            options.month === 'short' &&
            options.weekday === 'short' &&
            options.day === '2-digit'
          ) {
            return (
              dayList[date.getDay()] +
              ', ' +
              monthList[date.getMonth()] +
              ' ' +
              date.getDate()
            );
          } else if (
            options.day === 'numeric' &&
            options.month === 'numeric' &&
            options.year === 'numeric'
          ) {
            return (
              date.getMonth() +
              1 +
              '/' +
              date.getDate() +
              '/' +
              date.getFullYear()
            );
          } else if (options.month === 'long' && options.year === 'numeric') {
            return monthLongList[date.getMonth()] + ' ' + date.getFullYear();
          } else if (options.weekday === 'narrow') {
            return dayAbbreviation[date.getDay()];
          } else {
            true
              ? (0, _warning2.default)(false, 'Wrong usage of DateTimeFormat')
              : void 0;
          }
        };
      }

      function addDays(d, days) {
        var newDate = cloneDate(d);
        newDate.setDate(d.getDate() + days);
        return newDate;
      }

      function addMonths(d, months) {
        var newDate = cloneDate(d);
        newDate.setMonth(d.getMonth() + months);
        return newDate;
      }

      function addYears(d, years) {
        var newDate = cloneDate(d);
        newDate.setFullYear(d.getFullYear() + years);
        return newDate;
      }

      function cloneDate(d) {
        return new Date(d.getTime());
      }

      function cloneAsDate(d) {
        var clonedDate = cloneDate(d);
        clonedDate.setHours(0, 0, 0, 0);
        return clonedDate;
      }

      function getDaysInMonth(d) {
        var resultDate = getFirstDayOfMonth(d);

        resultDate.setMonth(resultDate.getMonth() + 1);
        resultDate.setDate(resultDate.getDate() - 1);

        return resultDate.getDate();
      }

      function getFirstDayOfMonth(d) {
        return new Date(d.getFullYear(), d.getMonth(), 1);
      }

      function getFirstDayOfWeek() {
        var now = new Date();
        return new Date(now.setDate(now.getDate() - now.getDay()));
      }

      function getWeekArray(d, firstDayOfWeek) {
        var dayArray = [];
        var daysInMonth = getDaysInMonth(d);
        var weekArray = [];
        var week = [];

        for (var i = 1; i <= daysInMonth; i++) {
          dayArray.push(new Date(d.getFullYear(), d.getMonth(), i));
        }

        var addWeek = function addWeek(week) {
          var emptyDays = 7 - week.length;
          for (var _i = 0; _i < emptyDays; ++_i) {
            week[weekArray.length ? 'push' : 'unshift'](null);
          }
          weekArray.push(week);
        };

        dayArray.forEach(function (day) {
          if (week.length > 0 && day.getDay() === firstDayOfWeek) {
            addWeek(week);
            week = [];
          }
          week.push(day);
          if (dayArray.indexOf(day) === dayArray.length - 1) {
            addWeek(week);
          }
        });

        return weekArray;
      }

      function localizedWeekday(DateTimeFormat, locale, day, firstDayOfWeek) {
        var weekdayFormatter = new DateTimeFormat(locale, {
          weekday: 'narrow',
        });
        var firstDayDate = getFirstDayOfWeek();

        return weekdayFormatter.format(
          addDays(firstDayDate, day + firstDayOfWeek),
        );
      }

      // Convert date to ISO 8601 (YYYY-MM-DD) date string, accounting for current timezone
      function formatIso(date) {
        return new Date(date.toDateString() + ' 12:00:00 +0000')
          .toISOString()
          .substring(0, 10);
      }

      function isEqualDate(d1, d2) {
        return (
          d1 &&
          d2 &&
          d1.getFullYear() === d2.getFullYear() &&
          d1.getMonth() === d2.getMonth() &&
          d1.getDate() === d2.getDate()
        );
      }

      function isBeforeDate(d1, d2) {
        var date1 = cloneAsDate(d1);
        var date2 = cloneAsDate(d2);

        return date1.getTime() < date2.getTime();
      }

      function isAfterDate(d1, d2) {
        var date1 = cloneAsDate(d1);
        var date2 = cloneAsDate(d2);

        return date1.getTime() > date2.getTime();
      }

      function isBetweenDates(dateToCheck, startDate, endDate) {
        return (
          !isBeforeDate(dateToCheck, startDate) &&
          !isAfterDate(dateToCheck, endDate)
        );
      }

      function monthDiff(d1, d2) {
        var m = void 0;
        m = (d1.getFullYear() - d2.getFullYear()) * 12;
        m += d1.getMonth();
        m -= d2.getMonth();
        return m;
      }

      function yearDiff(d1, d2) {
        return ~~(monthDiff(d1, d2) / 12);
      }

      /***/
    },
    /* 638 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactEventListener = __webpack_require__(585);

      var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

      var _keycode = __webpack_require__(549);

      var _keycode2 = _interopRequireDefault(_keycode);

      var _Calendar = __webpack_require__(639);

      var _Calendar2 = _interopRequireDefault(_Calendar);

      var _Dialog = __webpack_require__(654);

      var _Dialog2 = _interopRequireDefault(_Dialog);

      var _Popover = __webpack_require__(598);

      var _Popover2 = _interopRequireDefault(_Popover);

      var _PopoverAnimationVertical = __webpack_require__(658);

      var _PopoverAnimationVertical2 = _interopRequireDefault(
        _PopoverAnimationVertical,
      );

      var _dateUtils = __webpack_require__(637);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var DatePickerDialog = (function (_Component) {
        _inherits(DatePickerDialog, _Component);

        function DatePickerDialog() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, DatePickerDialog);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    DatePickerDialog,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                open: false,
              }),
              (_this.show = function () {
                if (_this.props.onShow && !_this.state.open) {
                  _this.props.onShow();
                }

                _this.setState({
                  open: true,
                });
              }),
              (_this.dismiss = function () {
                if (_this.props.onDismiss && _this.state.open) {
                  _this.props.onDismiss();
                }

                _this.setState({
                  open: false,
                });
              }),
              (_this.handleTouchTapDay = function () {
                if (_this.props.autoOk) {
                  setTimeout(_this.handleTouchTapOk, 300);
                }
              }),
              (_this.handleTouchTapCancel = function () {
                _this.dismiss();
              }),
              (_this.handleRequestClose = function () {
                _this.dismiss();
              }),
              (_this.handleTouchTapOk = function () {
                if (
                  _this.props.onAccept &&
                  !_this.refs.calendar.isSelectedDateDisabled()
                ) {
                  _this.props.onAccept(_this.refs.calendar.getSelectedDate());
                }

                _this.setState({
                  open: false,
                });
              }),
              (_this.handleWindowKeyUp = function (event) {
                switch ((0, _keycode2.default)(event)) {
                  case 'enter':
                    _this.handleTouchTapOk();
                    break;
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(DatePickerDialog, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var DateTimeFormat = _props.DateTimeFormat;
              var autoOk = _props.autoOk;
              var cancelLabel = _props.cancelLabel;
              var container = _props.container;
              var containerStyle = _props.containerStyle;
              var disableYearSelection = _props.disableYearSelection;
              var initialDate = _props.initialDate;
              var firstDayOfWeek = _props.firstDayOfWeek;
              var locale = _props.locale;
              var maxDate = _props.maxDate;
              var minDate = _props.minDate;
              var mode = _props.mode;
              var okLabel = _props.okLabel;
              var onAccept = _props.onAccept;
              var onDismiss = _props.onDismiss;
              var onShow = _props.onShow;
              var shouldDisableDate = _props.shouldDisableDate;
              var style = _props.style;
              var wordings = _props.wordings;
              var animation = _props.animation;

              var other = _objectWithoutProperties(_props, [
                'DateTimeFormat',
                'autoOk',
                'cancelLabel',
                'container',
                'containerStyle',
                'disableYearSelection',
                'initialDate',
                'firstDayOfWeek',
                'locale',
                'maxDate',
                'minDate',
                'mode',
                'okLabel',
                'onAccept',
                'onDismiss',
                'onShow',
                'shouldDisableDate',
                'style',
                'wordings',
                'animation',
              ]);

              var open = this.state.open;

              var styles = {
                dialogContent: {
                  width: mode === 'landscape' ? 479 : 310,
                },
                dialogBodyContent: {
                  padding: 0,
                  minHeight: mode === 'landscape' ? 330 : 434,
                  minWidth: mode === 'landscape' ? 479 : 310,
                },
              };

              var Container =
                container === 'inline' ? _Popover2.default : _Dialog2.default;

              return _react2.default.createElement(
                'div',
                _extends({}, other, { ref: 'root' }),
                _react2.default.createElement(
                  Container,
                  {
                    anchorEl: this.refs.root, // For Popover
                    animation: animation || _PopoverAnimationVertical2.default, // For Popover
                    bodyStyle: styles.dialogBodyContent,
                    contentStyle: styles.dialogContent,
                    ref: 'dialog',
                    repositionOnUpdate: true,
                    open: open,
                    onRequestClose: this.handleRequestClose,
                    style: (0, _simpleAssign2.default)(
                      styles.dialogBodyContent,
                      containerStyle,
                    ),
                  },
                  _react2.default.createElement(_reactEventListener2.default, {
                    target: 'window',
                    onKeyUp: this.handleWindowKeyUp,
                  }),
                  _react2.default.createElement(_Calendar2.default, {
                    autoOk: autoOk,
                    DateTimeFormat: DateTimeFormat,
                    cancelLabel: cancelLabel,
                    disableYearSelection: disableYearSelection,
                    firstDayOfWeek: firstDayOfWeek,
                    initialDate: initialDate,
                    locale: locale,
                    onTouchTapDay: this.handleTouchTapDay,
                    maxDate: maxDate,
                    minDate: minDate,
                    mode: mode,
                    open: open,
                    ref: 'calendar',
                    onTouchTapCancel: this.handleTouchTapCancel,
                    onTouchTapOk: this.handleTouchTapOk,
                    okLabel: okLabel,
                    shouldDisableDate: shouldDisableDate,
                    wordings: wordings,
                  }),
                ),
              );
            },
          },
        ]);

        return DatePickerDialog;
      })(_react.Component);

      DatePickerDialog.propTypes = {
        DateTimeFormat: _react.PropTypes.func,
        animation: _react.PropTypes.func,
        autoOk: _react.PropTypes.bool,
        cancelLabel: _react.PropTypes.node,
        container: _react.PropTypes.oneOf(['dialog', 'inline']),
        containerStyle: _react.PropTypes.object,
        disableYearSelection: _react.PropTypes.bool,
        firstDayOfWeek: _react.PropTypes.number,
        initialDate: _react.PropTypes.object,
        locale: _react.PropTypes.string,
        maxDate: _react.PropTypes.object,
        minDate: _react.PropTypes.object,
        mode: _react.PropTypes.oneOf(['portrait', 'landscape']),
        okLabel: _react.PropTypes.node,
        onAccept: _react.PropTypes.func,
        onDismiss: _react.PropTypes.func,
        onShow: _react.PropTypes.func,
        open: _react.PropTypes.bool,
        shouldDisableDate: _react.PropTypes.func,
        style: _react.PropTypes.object,
        wordings: _react.PropTypes.object,
      };
      DatePickerDialog.defaultProps = {
        DateTimeFormat: _dateUtils.dateTimeFormat,
        cancelLabel: 'Cancel',
        container: 'dialog',
        locale: 'en-US',
        okLabel: 'OK',
      };
      DatePickerDialog.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = DatePickerDialog;

      /***/
    },
    /* 639 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactEventListener = __webpack_require__(585);

      var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

      var _keycode = __webpack_require__(549);

      var _keycode2 = _interopRequireDefault(_keycode);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _CalendarActionButtons = __webpack_require__(640);

      var _CalendarActionButtons2 = _interopRequireDefault(
        _CalendarActionButtons,
      );

      var _CalendarMonth = __webpack_require__(644);

      var _CalendarMonth2 = _interopRequireDefault(_CalendarMonth);

      var _CalendarYear = __webpack_require__(646);

      var _CalendarYear2 = _interopRequireDefault(_CalendarYear);

      var _CalendarToolbar = __webpack_require__(648);

      var _CalendarToolbar2 = _interopRequireDefault(_CalendarToolbar);

      var _DateDisplay = __webpack_require__(653);

      var _DateDisplay2 = _interopRequireDefault(_DateDisplay);

      var _SlideIn = __webpack_require__(651);

      var _SlideIn2 = _interopRequireDefault(_SlideIn);

      var _dateUtils = __webpack_require__(637);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function _toConsumableArray(arr) {
        if (Array.isArray(arr)) {
          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
            arr2[i] = arr[i];
          }
          return arr2;
        } else {
          return Array.from(arr);
        }
      }

      var daysArray = [].concat(_toConsumableArray(Array(7)));

      var Calendar = (function (_Component) {
        _inherits(Calendar, _Component);

        function Calendar() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, Calendar);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    Calendar,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                displayDate: undefined,
                displayMonthDay: true,
                selectedDate: undefined,
                transitionDirection: 'left',
                transitionEnter: true,
              }),
              (_this.handleTouchTapDay = function (event, date) {
                _this.setSelectedDate(date);
                if (_this.props.onTouchTapDay)
                  _this.props.onTouchTapDay(event, date);
              }),
              (_this.handleMonthChange = function (months) {
                _this.setState({
                  transitionDirection: months >= 0 ? 'left' : 'right',
                  displayDate: (0, _dateUtils.addMonths)(
                    _this.state.displayDate,
                    months,
                  ),
                });
              }),
              (_this.handleTouchTapYear = function (event, year) {
                var date = (0, _dateUtils.cloneDate)(_this.state.selectedDate);
                date.setFullYear(year);
                _this.setSelectedDate(date, event);
              }),
              (_this.handleTouchTapDateDisplayMonthDay = function () {
                _this.setState({
                  displayMonthDay: true,
                });
              }),
              (_this.handleTouchTapDateDisplayYear = function () {
                _this.setState({
                  displayMonthDay: false,
                });
              }),
              (_this.handleWindowKeyDown = function (event) {
                if (_this.props.open) {
                  switch ((0, _keycode2.default)(event)) {
                    case 'up':
                      if (event.altKey && event.shiftKey) {
                        _this.addSelectedYears(-1);
                      } else if (event.shiftKey) {
                        _this.addSelectedMonths(-1);
                      } else {
                        _this.addSelectedDays(-7);
                      }
                      break;

                    case 'down':
                      if (event.altKey && event.shiftKey) {
                        _this.addSelectedYears(1);
                      } else if (event.shiftKey) {
                        _this.addSelectedMonths(1);
                      } else {
                        _this.addSelectedDays(7);
                      }
                      break;

                    case 'right':
                      if (event.altKey && event.shiftKey) {
                        _this.addSelectedYears(1);
                      } else if (event.shiftKey) {
                        _this.addSelectedMonths(1);
                      } else {
                        _this.addSelectedDays(1);
                      }
                      break;

                    case 'left':
                      if (event.altKey && event.shiftKey) {
                        _this.addSelectedYears(-1);
                      } else if (event.shiftKey) {
                        _this.addSelectedMonths(-1);
                      } else {
                        _this.addSelectedDays(-1);
                      }
                      break;
                  }
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Calendar, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              this.setState({
                displayDate: (0, _dateUtils.getFirstDayOfMonth)(
                  this.props.initialDate,
                ),
                selectedDate: this.props.initialDate,
              });
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (nextProps.initialDate !== this.props.initialDate) {
                var date = nextProps.initialDate || new Date();
                this.setState({
                  displayDate: (0, _dateUtils.getFirstDayOfMonth)(date),
                  selectedDate: date,
                });
              }
            },
          },
          {
            key: 'getSelectedDate',
            value: function getSelectedDate() {
              return this.state.selectedDate;
            },
          },
          {
            key: 'isSelectedDateDisabled',
            value: function isSelectedDateDisabled() {
              if (!this.state.displayMonthDay) {
                return false;
              }

              return this.refs.calendar.isSelectedDateDisabled();
            },
          },
          {
            key: 'addSelectedDays',
            value: function addSelectedDays(days) {
              this.setSelectedDate(
                (0, _dateUtils.addDays)(this.state.selectedDate, days),
              );
            },
          },
          {
            key: 'addSelectedMonths',
            value: function addSelectedMonths(months) {
              this.setSelectedDate(
                (0, _dateUtils.addMonths)(this.state.selectedDate, months),
              );
            },
          },
          {
            key: 'addSelectedYears',
            value: function addSelectedYears(years) {
              this.setSelectedDate(
                (0, _dateUtils.addYears)(this.state.selectedDate, years),
              );
            },
          },
          {
            key: 'setDisplayDate',
            value: function setDisplayDate(date, newSelectedDate) {
              var newDisplayDate = (0, _dateUtils.getFirstDayOfMonth)(date);
              var direction =
                newDisplayDate > this.state.displayDate ? 'left' : 'right';

              if (newDisplayDate !== this.state.displayDate) {
                this.setState({
                  displayDate: newDisplayDate,
                  transitionDirection: direction,
                  selectedDate: newSelectedDate || this.state.selectedDate,
                });
              }
            },
          },
          {
            key: 'setSelectedDate',
            value: function setSelectedDate(date) {
              var adjustedDate = date;
              if ((0, _dateUtils.isBeforeDate)(date, this.props.minDate)) {
                adjustedDate = this.props.minDate;
              } else if (
                (0, _dateUtils.isAfterDate)(date, this.props.maxDate)
              ) {
                adjustedDate = this.props.maxDate;
              }

              var newDisplayDate = (0, _dateUtils.getFirstDayOfMonth)(
                adjustedDate,
              );
              if (newDisplayDate !== this.state.displayDate) {
                this.setDisplayDate(newDisplayDate, adjustedDate);
              } else {
                this.setState({
                  selectedDate: adjustedDate,
                });
              }
            },
          },
          {
            key: 'getToolbarInteractions',
            value: function getToolbarInteractions() {
              return {
                prevMonth:
                  (0, _dateUtils.monthDiff)(
                    this.state.displayDate,
                    this.props.minDate,
                  ) > 0,
                nextMonth:
                  (0, _dateUtils.monthDiff)(
                    this.state.displayDate,
                    this.props.maxDate,
                  ) < 0,
              };
            },
          },
          {
            key: 'yearSelector',
            value: function yearSelector() {
              if (!this.props.disableYearSelection)
                return _react2.default.createElement(_CalendarYear2.default, {
                  key: 'years',
                  displayDate: this.state.displayDate,
                  onTouchTapYear: this.handleTouchTapYear,
                  selectedDate: this.state.selectedDate,
                  minDate: this.props.minDate,
                  maxDate: this.props.maxDate,
                });
            },
          },
          {
            key: 'render',
            value: function render() {
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var weekCount = (0, _dateUtils.getWeekArray)(
                this.state.displayDate,
                this.props.firstDayOfWeek,
              ).length;
              var toolbarInteractions = this.getToolbarInteractions();
              var isLandscape = this.props.mode === 'landscape';
              var calendarTextColor = this.context.muiTheme.datePicker
                .calendarTextColor;

              var styles = {
                root: {
                  color: calendarTextColor,
                  userSelect: 'none',
                  width: isLandscape ? 479 : 310,
                },
                calendar: {
                  display: 'flex',
                  flexDirection: 'column',
                },
                calendarContainer: {
                  display: 'flex',
                  alignContent: 'space-between',
                  justifyContent: 'space-between',
                  flexDirection: 'column',
                  fontSize: 12,
                  fontWeight: 400,
                  padding: '0px 8px',
                  transition: _transitions2.default.easeOut(),
                },
                yearContainer: {
                  display: 'flex',
                  justifyContent: 'space-between',
                  flexDirection: 'column',
                  height: 272,
                  marginTop: 10,
                  overflow: 'hidden',
                  width: 310,
                },
                weekTitle: {
                  display: 'flex',
                  flexDirection: 'row',
                  justifyContent: 'space-between',
                  fontWeight: '500',
                  height: 20,
                  lineHeight: '15px',
                  opacity: '0.5',
                  textAlign: 'center',
                },
                weekTitleDay: {
                  width: 42,
                },
                transitionSlide: {
                  height: 214,
                },
              };

              var weekTitleDayStyle = prepareStyles(styles.weekTitleDay);

              var _props = this.props;
              var cancelLabel = _props.cancelLabel;
              var DateTimeFormat = _props.DateTimeFormat;
              var firstDayOfWeek = _props.firstDayOfWeek;
              var locale = _props.locale;
              var okLabel = _props.okLabel;
              var onTouchTapCancel = _props.onTouchTapCancel;
              var onTouchTapOk = _props.onTouchTapOk;
              var wordings = _props.wordings;

              return _react2.default.createElement(
                'div',
                { style: prepareStyles(styles.root) },
                _react2.default.createElement(_reactEventListener2.default, {
                  target: 'window',
                  onKeyDown: this.handleWindowKeyDown,
                }),
                _react2.default.createElement(_DateDisplay2.default, {
                  DateTimeFormat: DateTimeFormat,
                  disableYearSelection: this.props.disableYearSelection,
                  onTouchTapMonthDay: this.handleTouchTapDateDisplayMonthDay,
                  onTouchTapYear: this.handleTouchTapDateDisplayYear,
                  locale: locale,
                  monthDaySelected: this.state.displayMonthDay,
                  mode: this.props.mode,
                  selectedDate: this.state.selectedDate,
                  weekCount: weekCount,
                }),
                _react2.default.createElement(
                  'div',
                  { style: prepareStyles(styles.calendar) },
                  this.state.displayMonthDay &&
                    _react2.default.createElement(
                      'div',
                      { style: prepareStyles(styles.calendarContainer) },
                      _react2.default.createElement(_CalendarToolbar2.default, {
                        DateTimeFormat: DateTimeFormat,
                        locale: locale,
                        displayDate: this.state.displayDate,
                        onMonthChange: this.handleMonthChange,
                        prevMonth: toolbarInteractions.prevMonth,
                        nextMonth: toolbarInteractions.nextMonth,
                      }),
                      _react2.default.createElement(
                        'div',
                        { style: prepareStyles(styles.weekTitle) },
                        daysArray.map(function (event, i) {
                          return _react2.default.createElement(
                            'span',
                            { key: i, style: weekTitleDayStyle },
                            (0, _dateUtils.localizedWeekday)(
                              DateTimeFormat,
                              locale,
                              i,
                              firstDayOfWeek,
                            ),
                          );
                        }),
                      ),
                      _react2.default.createElement(
                        _SlideIn2.default,
                        {
                          direction: this.state.transitionDirection,
                          style: styles.transitionSlide,
                        },
                        _react2.default.createElement(_CalendarMonth2.default, {
                          displayDate: this.state.displayDate,
                          firstDayOfWeek: this.props.firstDayOfWeek,
                          key: this.state.displayDate.toDateString(),
                          minDate: this.props.minDate,
                          maxDate: this.props.maxDate,
                          onTouchTapDay: this.handleTouchTapDay,
                          ref: 'calendar',
                          selectedDate: this.state.selectedDate,
                          shouldDisableDate: this.props.shouldDisableDate,
                        }),
                      ),
                    ),
                  !this.state.displayMonthDay &&
                    _react2.default.createElement(
                      'div',
                      { style: prepareStyles(styles.yearContainer) },
                      this.yearSelector(),
                    ),
                  okLabel &&
                    _react2.default.createElement(
                      _CalendarActionButtons2.default,
                      {
                        autoOk: this.props.autoOk,
                        cancelLabel: cancelLabel,
                        okLabel: okLabel,
                        onTouchTapCancel: onTouchTapCancel,
                        onTouchTapOk: onTouchTapOk,
                        wordings: wordings,
                      },
                    ),
                ),
              );
            },
          },
        ]);

        return Calendar;
      })(_react.Component);

      Calendar.propTypes = {
        DateTimeFormat: _react.PropTypes.func.isRequired,
        autoOk: _react.PropTypes.bool,
        cancelLabel: _react.PropTypes.node,
        disableYearSelection: _react.PropTypes.bool,
        firstDayOfWeek: _react.PropTypes.number,
        initialDate: _react.PropTypes.object,
        locale: _react.PropTypes.string.isRequired,
        maxDate: _react.PropTypes.object,
        minDate: _react.PropTypes.object,
        mode: _react.PropTypes.oneOf(['portrait', 'landscape']),
        okLabel: _react.PropTypes.node,
        onTouchTapCancel: _react.PropTypes.func,
        onTouchTapDay: _react.PropTypes.func,
        onTouchTapOk: _react.PropTypes.func,
        open: _react.PropTypes.bool,
        shouldDisableDate: _react.PropTypes.func,
        wordings: _react.PropTypes.object,
      };
      Calendar.defaultProps = {
        DateTimeFormat: _dateUtils.dateTimeFormat,
        disableYearSelection: false,
        initialDate: new Date(),
        locale: 'en-US',
        minDate: (0, _dateUtils.addYears)(new Date(), -100),
        maxDate: (0, _dateUtils.addYears)(new Date(), 100),
      };
      Calendar.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Calendar;

      /***/
    },
    /* 640 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _FlatButton = __webpack_require__(641);

      var _FlatButton2 = _interopRequireDefault(_FlatButton);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CalendarActionButton = (function (_Component) {
        _inherits(CalendarActionButton, _Component);

        function CalendarActionButton() {
          _classCallCheck(this, CalendarActionButton);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(CalendarActionButton).apply(this, arguments),
          );
        }

        _createClass(CalendarActionButton, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var cancelLabel = _props.cancelLabel;
              var okLabel = _props.okLabel;
              var wordings = _props.wordings;

              var styles = {
                root: {
                  display: 'flex',
                  flexDirection: 'row',
                  justifyContent: 'flex-end',
                  margin: 0,
                  maxHeight: 48,
                  padding: 0,
                },
                flatButtons: {
                  fontsize: 14,
                  margin: '4px 8px 8px 0px',
                  maxHeight: 36,
                  minWidth: 64,
                  padding: 0,
                },
              };

              return _react2.default.createElement(
                'div',
                { style: styles.root },
                _react2.default.createElement(_FlatButton2.default, {
                  label: wordings ? wordings.cancel : cancelLabel,
                  onTouchTap: this.props.onTouchTapCancel,
                  primary: true,
                  style: styles.flatButtons,
                }),
                !this.props.autoOk &&
                  _react2.default.createElement(_FlatButton2.default, {
                    disabled:
                      this.refs.calendar !== undefined &&
                      this.refs.calendar.isSelectedDateDisabled(),
                    label: wordings ? wordings.ok : okLabel,
                    onTouchTap: this.props.onTouchTapOk,
                    primary: true,
                    style: styles.flatButtons,
                  }),
              );
            },
          },
        ]);

        return CalendarActionButton;
      })(_react.Component);

      CalendarActionButton.propTypes = {
        autoOk: _react.PropTypes.bool,
        cancelLabel: _react.PropTypes.node,
        okLabel: _react.PropTypes.node,
        onTouchTapCancel: _react.PropTypes.func,
        onTouchTapOk: _react.PropTypes.func,
        wordings: _react.PropTypes.object,
      };
      exports.default = CalendarActionButton;

      /***/
    },
    /* 641 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _FlatButton = __webpack_require__(642);

      var _FlatButton2 = _interopRequireDefault(_FlatButton);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _FlatButton2.default;

      /***/
    },
    /* 642 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _childUtils = __webpack_require__(545);

      var _colorManipulator = __webpack_require__(583);

      var _EnhancedButton = __webpack_require__(544);

      var _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);

      var _FlatButtonLabel = __webpack_require__(643);

      var _FlatButtonLabel2 = _interopRequireDefault(_FlatButtonLabel);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function validateLabel(props, propName, componentName) {
        if (true) {
          if (
            !props.children &&
            props.label !== 0 &&
            !props.label &&
            !props.icon
          ) {
            return new Error(
              'Required prop label or children or icon was not specified in ' +
                componentName +
                '.',
            );
          }
        }
      }

      var FlatButton = (function (_Component) {
        _inherits(FlatButton, _Component);

        function FlatButton() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, FlatButton);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    FlatButton,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                hovered: false,
                isKeyboardFocused: false,
                touch: false,
              }),
              (_this.handleKeyboardFocus = function (event, isKeyboardFocused) {
                _this.setState({ isKeyboardFocused: isKeyboardFocused });
                _this.props.onKeyboardFocus(event, isKeyboardFocused);
              }),
              (_this.handleMouseEnter = function (event) {
                // Cancel hover styles for touch devices
                if (!_this.state.touch) _this.setState({ hovered: true });
                _this.props.onMouseEnter(event);
              }),
              (_this.handleMouseLeave = function (event) {
                _this.setState({ hovered: false });
                _this.props.onMouseLeave(event);
              }),
              (_this.handleTouchStart = function (event) {
                _this.setState({ touch: true });
                _this.props.onTouchStart(event);
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(FlatButton, [
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (nextProps.disabled && this.state.hovered) {
                this.setState({
                  hovered: false,
                });
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var children = _props.children;
              var disabled = _props.disabled;
              var hoverColor = _props.hoverColor;
              var backgroundColor = _props.backgroundColor;
              var icon = _props.icon;
              var label = _props.label;
              var labelStyle = _props.labelStyle;
              var labelPosition = _props.labelPosition;
              var primary = _props.primary;
              var rippleColor = _props.rippleColor;
              var secondary = _props.secondary;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'children',
                'disabled',
                'hoverColor',
                'backgroundColor',
                'icon',
                'label',
                'labelStyle',
                'labelPosition',
                'primary',
                'rippleColor',
                'secondary',
                'style',
              ]);

              var _context$muiTheme = this.context.muiTheme;
              var _context$muiTheme$but = _context$muiTheme.button;
              var buttonHeight = _context$muiTheme$but.height;
              var buttonMinWidth = _context$muiTheme$but.minWidth;
              var buttonTextTransform = _context$muiTheme$but.textTransform;
              var _context$muiTheme$fla = _context$muiTheme.flatButton;
              var buttonFilterColor = _context$muiTheme$fla.buttonFilterColor;
              var buttonColor = _context$muiTheme$fla.color;
              var disabledTextColor = _context$muiTheme$fla.disabledTextColor;
              var fontSize = _context$muiTheme$fla.fontSize;
              var fontWeight = _context$muiTheme$fla.fontWeight;
              var primaryTextColor = _context$muiTheme$fla.primaryTextColor;
              var secondaryTextColor = _context$muiTheme$fla.secondaryTextColor;
              var textColor = _context$muiTheme$fla.textColor;
              var _context$muiTheme$fla2 = _context$muiTheme$fla.textTransform;
              var textTransform =
                _context$muiTheme$fla2 === undefined
                  ? buttonTextTransform || 'uppercase'
                  : _context$muiTheme$fla2;

              var defaultTextColor = disabled
                ? disabledTextColor
                : primary
                ? primaryTextColor
                : secondary
                ? secondaryTextColor
                : textColor;

              var defaultHoverColor = (0, _colorManipulator.fade)(
                buttonFilterColor,
                0.2,
              );
              var defaultRippleColor = buttonFilterColor;
              var buttonHoverColor = hoverColor || defaultHoverColor;
              var buttonRippleColor = rippleColor || defaultRippleColor;
              var buttonBackgroundColor = backgroundColor || buttonColor;
              var hovered =
                (this.state.hovered || this.state.isKeyboardFocused) &&
                !disabled;

              var mergedRootStyles = (0, _simpleAssign2.default)(
                {},
                {
                  height: buttonHeight,
                  lineHeight: buttonHeight + 'px',
                  minWidth: buttonMinWidth,
                  color: defaultTextColor,
                  transition: _transitions2.default.easeOut(),
                  borderRadius: 2,
                  userSelect: 'none',
                  position: 'relative',
                  overflow: 'hidden',
                  backgroundColor: hovered
                    ? buttonHoverColor
                    : buttonBackgroundColor,
                  padding: 0,
                  margin: 0,
                  textAlign: 'center',
                },
                style,
              );

              var iconCloned = void 0;
              var labelStyleIcon = {};

              if (icon) {
                var iconStyles = (0, _simpleAssign2.default)(
                  {
                    verticalAlign: 'middle',
                    marginLeft: label && labelPosition !== 'before' ? 12 : 0,
                    marginRight: label && labelPosition === 'before' ? 12 : 0,
                  },
                  icon.props.style,
                );
                iconCloned = _react2.default.cloneElement(icon, {
                  color: icon.props.color || mergedRootStyles.color,
                  style: iconStyles,
                });

                if (labelPosition === 'before') {
                  labelStyleIcon.paddingRight = 8;
                } else {
                  labelStyleIcon.paddingLeft = 8;
                }
              }

              var mergedLabelStyles = (0, _simpleAssign2.default)(
                {
                  letterSpacing: 0,
                  textTransform: textTransform,
                  fontWeight: fontWeight,
                  fontSize: fontSize,
                },
                labelStyleIcon,
                labelStyle,
              );

              var labelElement = label
                ? _react2.default.createElement(_FlatButtonLabel2.default, {
                    label: label,
                    style: mergedLabelStyles,
                  })
                : undefined;

              // Place label before or after children.
              var childrenFragment =
                labelPosition === 'before'
                  ? {
                      labelElement: labelElement,
                      iconCloned: iconCloned,
                      children: children,
                    }
                  : {
                      children: children,
                      iconCloned: iconCloned,
                      labelElement: labelElement,
                    };

              var enhancedButtonChildren = (0, _childUtils.createChildFragment)(
                childrenFragment,
              );

              return _react2.default.createElement(
                _EnhancedButton2.default,
                _extends({}, other, {
                  disabled: disabled,
                  focusRippleColor: buttonRippleColor,
                  focusRippleOpacity: 0.3,
                  onKeyboardFocus: this.handleKeyboardFocus,
                  onMouseLeave: this.handleMouseLeave,
                  onMouseEnter: this.handleMouseEnter,
                  onTouchStart: this.handleTouchStart,
                  style: mergedRootStyles,
                  touchRippleColor: buttonRippleColor,
                  touchRippleOpacity: 0.3,
                }),
                enhancedButtonChildren,
              );
            },
          },
        ]);

        return FlatButton;
      })(_react.Component);

      FlatButton.muiName = 'FlatButton';
      FlatButton.propTypes = {
        /**
         * Color of button when mouse is not hovering over it.
         */
        backgroundColor: _react.PropTypes.string,
        /**
         * This is what will be displayed inside the button.
         * If a label is specified, the text within the label prop will
         * be displayed. Otherwise, the component will expect children
         * which will then be displayed. (In our example,
         * we are nesting an `<input type="file" />` and a `span`
         * that acts as our label to be displayed.) This only
         * applies to flat and raised buttons.
         */
        children: _react.PropTypes.node,
        /**
         * Disables the button if set to true.
         */
        disabled: _react.PropTypes.bool,
        /**
         * Color of button when mouse hovers over.
         */
        hoverColor: _react.PropTypes.string,
        /**
         * The URL to link to when the button is clicked.
         */
        href: _react.PropTypes.string,
        /**
         * Use this property to display an icon.
         */
        icon: _react.PropTypes.node,
        /**
         * Label for the button.
         */
        label: validateLabel,
        /**
         * Place label before or after the passed children.
         */
        labelPosition: _react.PropTypes.oneOf(['before', 'after']),
        /**
         * Override the inline-styles of the button's label element.
         */
        labelStyle: _react.PropTypes.object,
        /**
         * Callback function fired when the element is focused or blurred by the keyboard.
         *
         * @param {object} event `focus` or `blur` event targeting the element.
         * @param {boolean} isKeyboardFocused Indicates whether the element is focused.
         */
        onKeyboardFocus: _react.PropTypes.func,
        /** @ignore */
        onMouseEnter: _react.PropTypes.func,
        /** @ignore */
        onMouseLeave: _react.PropTypes.func,
        /** @ignore */
        onTouchStart: _react.PropTypes.func,
        /**
         * If true, colors button according to
         * primaryTextColor from the Theme.
         */
        primary: _react.PropTypes.bool,
        /**
         * Color for the ripple after button is clicked.
         */
        rippleColor: _react.PropTypes.string,
        /**
         * If true, colors button according to secondaryTextColor from the theme.
         * The primary prop has precendent if set to true.
         */
        secondary: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      FlatButton.defaultProps = {
        disabled: false,
        labelStyle: {},
        labelPosition: 'after',
        onKeyboardFocus: function onKeyboardFocus() {},
        onMouseEnter: function onMouseEnter() {},
        onMouseLeave: function onMouseLeave() {},
        onTouchStart: function onTouchStart() {},
        primary: false,
        secondary: false,
      };
      FlatButton.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = FlatButton;

      /***/
    },
    /* 643 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var baseTheme = context.muiTheme.baseTheme;

        return {
          root: {
            position: 'relative',
            paddingLeft: baseTheme.spacing.desktopGutterLess,
            paddingRight: baseTheme.spacing.desktopGutterLess,
            verticalAlign: 'middle',
          },
        };
      }

      var FlatButtonLabel = (function (_Component) {
        _inherits(FlatButtonLabel, _Component);

        function FlatButtonLabel() {
          _classCallCheck(this, FlatButtonLabel);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(FlatButtonLabel).apply(this, arguments),
          );
        }

        _createClass(FlatButtonLabel, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var label = _props.label;
              var style = _props.style;
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              return _react2.default.createElement(
                'span',
                {
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(styles.root, style),
                  ),
                },
                label,
              );
            },
          },
        ]);

        return FlatButtonLabel;
      })(_react.Component);

      FlatButtonLabel.propTypes = {
        label: _react.PropTypes.node,
        style: _react.PropTypes.object,
      };
      FlatButtonLabel.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = FlatButtonLabel;

      /***/
    },
    /* 644 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _dateUtils = __webpack_require__(637);

      var _DayButton = __webpack_require__(645);

      var _DayButton2 = _interopRequireDefault(_DayButton);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CalendarMonth = (function (_Component) {
        _inherits(CalendarMonth, _Component);

        function CalendarMonth() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, CalendarMonth);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    CalendarMonth,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.handleTouchTapDay = function (event, date) {
                if (_this.props.onTouchTapDay)
                  _this.props.onTouchTapDay(event, date);
              }),
              (_this.styles = {
                root: {
                  display: 'flex',
                  flexDirection: 'column',
                  justifyContent: 'flex-start',
                  fontWeight: 400,
                  height: 228,
                  lineHeight: 2,
                  position: 'relative',
                  textAlign: 'center',
                  MozPaddingStart: 0,
                },
                week: {
                  display: 'flex',
                  flexDirection: 'row',
                  justifyContent: 'space-around',
                  height: 34,
                  marginBottom: 2,
                },
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(CalendarMonth, [
          {
            key: 'isSelectedDateDisabled',
            value: function isSelectedDateDisabled() {
              return this.selectedDateDisabled;
            },
          },
          {
            key: 'shouldDisableDate',
            value: function shouldDisableDate(day) {
              if (day === null) return false;
              var disabled = !(0, _dateUtils.isBetweenDates)(
                day,
                this.props.minDate,
                this.props.maxDate,
              );
              if (!disabled && this.props.shouldDisableDate)
                disabled = this.props.shouldDisableDate(day);

              return disabled;
            },
          },
          {
            key: 'getWeekElements',
            value: function getWeekElements() {
              var _this2 = this;

              var weekArray = (0, _dateUtils.getWeekArray)(
                this.props.displayDate,
                this.props.firstDayOfWeek,
              );

              return weekArray.map(function (week, i) {
                return _react2.default.createElement(
                  'div',
                  { key: i, style: _this2.styles.week },
                  _this2.getDayElements(week, i),
                );
              }, this);
            },
          },
          {
            key: 'getDayElements',
            value: function getDayElements(week, i) {
              var _this3 = this;

              return week.map(function (day, j) {
                var isSameDate = (0, _dateUtils.isEqualDate)(
                  _this3.props.selectedDate,
                  day,
                );
                var disabled = _this3.shouldDisableDate(day);
                var selected = !disabled && isSameDate;

                if (isSameDate) {
                  _this3.selectedDateDisabled = disabled;
                }

                return _react2.default.createElement(_DayButton2.default, {
                  date: day,
                  disabled: disabled,
                  key: 'db' + (i + j),
                  onTouchTap: _this3.handleTouchTapDay,
                  selected: selected,
                });
              }, this);
            },
          },
          {
            key: 'render',
            value: function render() {
              return _react2.default.createElement(
                'div',
                { style: this.styles.root },
                this.getWeekElements(),
              );
            },
          },
        ]);

        return CalendarMonth;
      })(_react.Component);

      CalendarMonth.propTypes = {
        autoOk: _react.PropTypes.bool,
        displayDate: _react.PropTypes.object.isRequired,
        firstDayOfWeek: _react.PropTypes.number,
        maxDate: _react.PropTypes.object,
        minDate: _react.PropTypes.object,
        onTouchTapDay: _react.PropTypes.func,
        selectedDate: _react.PropTypes.object.isRequired,
        shouldDisableDate: _react.PropTypes.func,
      };
      exports.default = CalendarMonth;

      /***/
    },
    /* 645 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _dateUtils = __webpack_require__(637);

      var _EnhancedButton = __webpack_require__(544);

      var _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context, state) {
        var date = props.date;
        var disabled = props.disabled;
        var selected = props.selected;
        var hover = state.hover;
        var _context$muiTheme = context.muiTheme;
        var baseTheme = _context$muiTheme.baseTheme;
        var datePicker = _context$muiTheme.datePicker;

        var labelColor = baseTheme.palette.textColor;
        var buttonStateOpacity = 0;
        var buttonStateTransform = 'scale(0)';

        if (hover || selected) {
          labelColor = datePicker.selectTextColor;
          buttonStateOpacity = selected ? 1 : 0.6;
          buttonStateTransform = 'scale(1)';
        } else if ((0, _dateUtils.isEqualDate)(date, new Date())) {
          labelColor = datePicker.color;
        }

        return {
          root: {
            boxSizing: 'border-box',
            fontWeight: '400',
            opacity: disabled && '0.6',
            padding: '4px 0px',
            position: 'relative',
            WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
            width: 42,
          },
          label: {
            color: labelColor,
            fontWeight: '400',
            position: 'relative',
          },
          buttonState: {
            backgroundColor: datePicker.selectColor,
            borderRadius: '50%',
            height: 34,
            left: 4,
            opacity: buttonStateOpacity,
            position: 'absolute',
            top: 0,
            transform: buttonStateTransform,
            transition: _transitions2.default.easeOut(),
            width: 34,
          },
        };
      }

      var DayButton = (function (_Component) {
        _inherits(DayButton, _Component);

        function DayButton() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, DayButton);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    DayButton,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                hover: false,
              }),
              (_this.handleMouseEnter = function () {
                if (!_this.props.disabled) _this.setState({ hover: true });
              }),
              (_this.handleMouseLeave = function () {
                if (!_this.props.disabled) _this.setState({ hover: false });
              }),
              (_this.handleTouchTap = function (event) {
                if (!_this.props.disabled && _this.props.onTouchTap)
                  _this.props.onTouchTap(event, _this.props.date);
              }),
              (_this.handleKeyboardFocus = function (event, keyboardFocused) {
                if (!_this.props.disabled && _this.props.onKeyboardFocus) {
                  _this.props.onKeyboardFocus(
                    event,
                    keyboardFocused,
                    _this.props.date,
                  );
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(DayButton, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var date = _props.date;
              var onTouchTap = _props.onTouchTap;
              var selected = _props.selected;

              var other = _objectWithoutProperties(_props, [
                'date',
                'onTouchTap',
                'selected',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);

              return this.props.date
                ? _react2.default.createElement(
                    _EnhancedButton2.default,
                    _extends({}, other, {
                      disabled: this.props.disabled,
                      disableFocusRipple: true,
                      disableTouchRipple: true,
                      onKeyboardFocus: this.handleKeyboardFocus,
                      onMouseEnter: this.handleMouseEnter,
                      onMouseLeave: this.handleMouseLeave,
                      onTouchTap: this.handleTouchTap,
                      style: styles.root,
                    }),
                    _react2.default.createElement('div', {
                      style: prepareStyles(styles.buttonState),
                    }),
                    _react2.default.createElement(
                      'span',
                      { style: prepareStyles(styles.label) },
                      this.props.date.getDate(),
                    ),
                  )
                : _react2.default.createElement('span', {
                    style: prepareStyles(styles.root),
                  });
            },
          },
        ]);

        return DayButton;
      })(_react.Component);

      DayButton.propTypes = {
        date: _react.PropTypes.object,
        disabled: _react.PropTypes.bool,
        onKeyboardFocus: _react.PropTypes.func,
        onTouchTap: _react.PropTypes.func,
        selected: _react.PropTypes.bool,
      };
      DayButton.defaultProps = {
        selected: false,
        disabled: false,
      };
      DayButton.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = DayButton;

      /***/
    },
    /* 646 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _YearButton = __webpack_require__(647);

      var _YearButton2 = _interopRequireDefault(_YearButton);

      var _dateUtils = __webpack_require__(637);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var CalendarYear = (function (_Component) {
        _inherits(CalendarYear, _Component);

        function CalendarYear() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, CalendarYear);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    CalendarYear,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.handleTouchTapYear = function (event, year) {
                if (_this.props.onTouchTapYear)
                  _this.props.onTouchTapYear(event, year);
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(CalendarYear, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.scrollToSelectedYear();
            },
          },
          {
            key: 'componentDidUpdate',
            value: function componentDidUpdate() {
              this.scrollToSelectedYear();
            },
          },
          {
            key: 'getYears',
            value: function getYears() {
              var minYear = this.props.minDate.getFullYear();
              var maxYear = this.props.maxDate.getFullYear();

              var years = [];
              var dateCheck = (0, _dateUtils.cloneDate)(
                this.props.selectedDate,
              );
              for (var year = minYear; year <= maxYear; year++) {
                dateCheck.setFullYear(year);
                var selected = this.props.selectedDate.getFullYear() === year;
                var selectedProps = {};
                if (selected) {
                  selectedProps = { ref: 'selectedYearButton' };
                }

                var yearButton = _react2.default.createElement(
                  _YearButton2.default,
                  _extends(
                    {
                      key: 'yb' + year,
                      onTouchTap: this.handleTouchTapYear,
                      selected: selected,
                      year: year,
                    },
                    selectedProps,
                  ),
                );

                years.push(yearButton);
              }

              return years;
            },
          },
          {
            key: 'scrollToSelectedYear',
            value: function scrollToSelectedYear() {
              if (this.refs.selectedYearButton === undefined) return;

              var container = _reactDom2.default.findDOMNode(this);
              var yearButtonNode = _reactDom2.default.findDOMNode(
                this.refs.selectedYearButton,
              );

              var containerHeight = container.clientHeight;
              var yearButtonNodeHeight = yearButtonNode.clientHeight || 32;

              var scrollYOffset =
                yearButtonNode.offsetTop +
                yearButtonNodeHeight / 2 -
                containerHeight / 2;
              container.scrollTop = scrollYOffset;
            },
          },
          {
            key: 'render',
            value: function render() {
              var years = this.getYears();
              var backgroundColor = this.context.muiTheme.datePicker
                .calendarYearBackgroundColor;
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = {
                root: {
                  backgroundColor: backgroundColor,
                  height: 'inherit',
                  lineHeight: '35px',
                  overflowX: 'hidden',
                  overflowY: 'scroll',
                  position: 'relative',
                },
                child: {
                  display: 'flex',
                  flexDirection: 'column',
                  justifyContent: 'center',
                  minHeight: '100%',
                },
              };

              return _react2.default.createElement(
                'div',
                { style: prepareStyles(styles.root) },
                _react2.default.createElement(
                  'div',
                  { style: prepareStyles(styles.child) },
                  years,
                ),
              );
            },
          },
        ]);

        return CalendarYear;
      })(_react.Component);

      CalendarYear.propTypes = {
        displayDate: _react.PropTypes.object.isRequired,
        maxDate: _react.PropTypes.object,
        minDate: _react.PropTypes.object,
        onTouchTapYear: _react.PropTypes.func,
        selectedDate: _react.PropTypes.object.isRequired,
        wordings: _react.PropTypes.object,
      };
      CalendarYear.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = CalendarYear;

      /***/
    },
    /* 647 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _EnhancedButton = __webpack_require__(544);

      var _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context, state) {
        var selected = props.selected;
        var year = props.year;
        var _context$muiTheme = context.muiTheme;
        var baseTheme = _context$muiTheme.baseTheme;
        var datePicker = _context$muiTheme.datePicker;
        var hover = state.hover;

        return {
          root: {
            boxSizing: 'border-box',
            color: year === new Date().getFullYear() && datePicker.color,
            display: 'block',
            fontSize: 14,
            margin: '0 auto',
            position: 'relative',
            textAlign: 'center',
            lineHeight: 'inherit',
            WebkitTapHighlightColor: 'rgba(0,0,0,0)',
          },
          label: {
            alignSelf: 'center',
            color:
              hover || selected
                ? datePicker.color
                : baseTheme.palette.textColor,
            fontSize: selected ? 26 : 17,
            fontWeight: hover ? 450 : selected ? 500 : 400,
            position: 'relative',
            top: -1,
          },
        };
      }

      var YearButton = (function (_Component) {
        _inherits(YearButton, _Component);

        function YearButton() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, YearButton);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    YearButton,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                hover: false,
              }),
              (_this.handleMouseEnter = function () {
                _this.setState({ hover: true });
              }),
              (_this.handleMouseLeave = function () {
                _this.setState({ hover: false });
              }),
              (_this.handleTouchTap = function (event) {
                if (_this.props.onTouchTap)
                  _this.props.onTouchTap(event, _this.props.year);
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(YearButton, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var className = _props.className;
              var year = _props.year;
              var onTouchTap = _props.onTouchTap;
              var selected = _props.selected;

              var other = _objectWithoutProperties(_props, [
                'className',
                'year',
                'onTouchTap',
                'selected',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);

              return _react2.default.createElement(
                _EnhancedButton2.default,
                _extends({}, other, {
                  disableFocusRipple: true,
                  disableTouchRipple: true,
                  onMouseEnter: this.handleMouseEnter,
                  onMouseLeave: this.handleMouseLeave,
                  onTouchTap: this.handleTouchTap,
                  style: styles.root,
                }),
                _react2.default.createElement(
                  'span',
                  { style: prepareStyles(styles.label) },
                  year,
                ),
              );
            },
          },
        ]);

        return YearButton;
      })(_react.Component);

      YearButton.propTypes = {
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        onTouchTap: _react.PropTypes.func,
        selected: _react.PropTypes.bool,
        year: _react.PropTypes.number,
      };
      YearButton.defaultProps = {
        selected: false,
      };
      YearButton.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = YearButton;

      /***/
    },
    /* 648 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _IconButton = __webpack_require__(540);

      var _IconButton2 = _interopRequireDefault(_IconButton);

      var _chevronLeft = __webpack_require__(649);

      var _chevronLeft2 = _interopRequireDefault(_chevronLeft);

      var _chevronRight = __webpack_require__(650);

      var _chevronRight2 = _interopRequireDefault(_chevronRight);

      var _SlideIn = __webpack_require__(651);

      var _SlideIn2 = _interopRequireDefault(_SlideIn);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var styles = {
        root: {
          display: 'flex',
          justifyContent: 'space-between',
          backgroundColor: 'inherit',
          height: 48,
        },
        titleDiv: {
          fontSize: 14,
          fontWeight: '500',
          textAlign: 'center',
          width: '100%',
        },
        titleText: {
          height: 'inherit',
          paddingTop: 12,
        },
      };

      var CalendarToolbar = (function (_Component) {
        _inherits(CalendarToolbar, _Component);

        function CalendarToolbar() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, CalendarToolbar);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    CalendarToolbar,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                transitionDirection: 'up',
              }),
              (_this.handleTouchTapPrevMonth = function () {
                if (_this.props.onMonthChange && _this.props.prevMonth)
                  _this.props.onMonthChange(-1);
              }),
              (_this.handleTouchTapNextMonth = function () {
                if (_this.props.onMonthChange && _this.props.nextMonth)
                  _this.props.onMonthChange(1);
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(CalendarToolbar, [
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (nextProps.displayDate !== this.props.displayDate) {
                var direction =
                  nextProps.displayDate > this.props.displayDate
                    ? 'left'
                    : 'right';
                this.setState({
                  transitionDirection: direction,
                });
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var DateTimeFormat = _props.DateTimeFormat;
              var locale = _props.locale;
              var displayDate = _props.displayDate;

              var dateTimeFormatted = new DateTimeFormat(locale, {
                month: 'long',
                year: 'numeric',
              }).format(displayDate);

              var nextButtonIcon = this.context.muiTheme.isRtl
                ? _react2.default.createElement(_chevronLeft2.default, null)
                : _react2.default.createElement(_chevronRight2.default, null);
              var prevButtonIcon = this.context.muiTheme.isRtl
                ? _react2.default.createElement(_chevronRight2.default, null)
                : _react2.default.createElement(_chevronLeft2.default, null);

              return _react2.default.createElement(
                'div',
                { style: styles.root },
                _react2.default.createElement(
                  _IconButton2.default,
                  {
                    disabled: !this.props.prevMonth,
                    onTouchTap: this.handleTouchTapPrevMonth,
                  },
                  prevButtonIcon,
                ),
                _react2.default.createElement(
                  _SlideIn2.default,
                  {
                    direction: this.state.transitionDirection,
                    style: styles.titleDiv,
                  },
                  _react2.default.createElement(
                    'div',
                    { key: dateTimeFormatted, style: styles.titleText },
                    dateTimeFormatted,
                  ),
                ),
                _react2.default.createElement(
                  _IconButton2.default,
                  {
                    disabled: !this.props.nextMonth,
                    onTouchTap: this.handleTouchTapNextMonth,
                  },
                  nextButtonIcon,
                ),
              );
            },
          },
        ]);

        return CalendarToolbar;
      })(_react.Component);

      CalendarToolbar.propTypes = {
        DateTimeFormat: _react.PropTypes.func.isRequired,
        displayDate: _react.PropTypes.object.isRequired,
        locale: _react.PropTypes.string.isRequired,
        nextMonth: _react.PropTypes.bool,
        onMonthChange: _react.PropTypes.func,
        prevMonth: _react.PropTypes.bool,
      };
      CalendarToolbar.defaultProps = {
        nextMonth: true,
        prevMonth: true,
      };
      CalendarToolbar.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = CalendarToolbar;

      /***/
    },
    /* 649 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var NavigationChevronLeft = function NavigationChevronLeft(props) {
        return _react2.default.createElement(
          _SvgIcon2.default,
          props,
          _react2.default.createElement('path', {
            d: 'M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z',
          }),
        );
      };
      NavigationChevronLeft = (0, _pure2.default)(NavigationChevronLeft);
      NavigationChevronLeft.displayName = 'NavigationChevronLeft';
      NavigationChevronLeft.muiName = 'SvgIcon';

      exports.default = NavigationChevronLeft;

      /***/
    },
    /* 650 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var NavigationChevronRight = function NavigationChevronRight(props) {
        return _react2.default.createElement(
          _SvgIcon2.default,
          props,
          _react2.default.createElement('path', {
            d: 'M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z',
          }),
        );
      };
      NavigationChevronRight = (0, _pure2.default)(NavigationChevronRight);
      NavigationChevronRight.displayName = 'NavigationChevronRight';
      NavigationChevronRight.muiName = 'SvgIcon';

      exports.default = NavigationChevronRight;

      /***/
    },
    /* 651 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactAddonsTransitionGroup = __webpack_require__(554);

      var _reactAddonsTransitionGroup2 = _interopRequireDefault(
        _reactAddonsTransitionGroup,
      );

      var _SlideInChild = __webpack_require__(652);

      var _SlideInChild2 = _interopRequireDefault(_SlideInChild);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var SlideIn = (function (_Component) {
        _inherits(SlideIn, _Component);

        function SlideIn() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, SlideIn);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    SlideIn,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.getLeaveDirection = function () {
                return _this.props.direction;
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(SlideIn, [
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              var _props = this.props;
              var enterDelay = _props.enterDelay;
              var children = _props.children;
              var childStyle = _props.childStyle;
              var direction = _props.direction;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'enterDelay',
                'children',
                'childStyle',
                'direction',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var mergedRootStyles = (0, _simpleAssign2.default)(
                {},
                {
                  position: 'relative',
                  overflow: 'hidden',
                  height: '100%',
                },
                style,
              );

              var newChildren = _react2.default.Children.map(
                children,
                function (child) {
                  return _react2.default.createElement(
                    _SlideInChild2.default,
                    {
                      key: child.key,
                      direction: direction,
                      enterDelay: enterDelay,
                      getLeaveDirection: _this2.getLeaveDirection,
                      style: childStyle,
                    },
                    child,
                  );
                },
                this,
              );

              return _react2.default.createElement(
                _reactAddonsTransitionGroup2.default,
                _extends({}, other, {
                  style: prepareStyles(mergedRootStyles),
                  component: 'div',
                }),
                newChildren,
              );
            },
          },
        ]);

        return SlideIn;
      })(_react.Component);

      SlideIn.propTypes = {
        childStyle: _react.PropTypes.object,
        children: _react.PropTypes.node,
        direction: _react.PropTypes.oneOf(['left', 'right', 'up', 'down']),
        enterDelay: _react.PropTypes.number,
        style: _react.PropTypes.object,
      };
      SlideIn.defaultProps = {
        enterDelay: 0,
        direction: 'left',
      };
      SlideIn.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = SlideIn;

      /***/
    },
    /* 652 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _autoPrefix = __webpack_require__(552);

      var _autoPrefix2 = _interopRequireDefault(_autoPrefix);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var SlideInChild = (function (_Component) {
        _inherits(SlideInChild, _Component);

        function SlideInChild() {
          _classCallCheck(this, SlideInChild);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(SlideInChild).apply(this, arguments),
          );
        }

        _createClass(SlideInChild, [
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              clearTimeout(this.enterTimer);
              clearTimeout(this.leaveTimer);
            },
          },
          {
            key: 'componentWillEnter',
            value: function componentWillEnter(callback) {
              var style = _reactDom2.default.findDOMNode(this).style;
              var x =
                this.props.direction === 'left'
                  ? '100%'
                  : this.props.direction === 'right'
                  ? '-100%'
                  : '0';
              var y =
                this.props.direction === 'up'
                  ? '100%'
                  : this.props.direction === 'down'
                  ? '-100%'
                  : '0';

              style.opacity = '0';
              _autoPrefix2.default.set(
                style,
                'transform',
                'translate(' + x + ', ' + y + ')',
              );

              this.enterTimer = setTimeout(callback, this.props.enterDelay);
            },
          },
          {
            key: 'componentDidEnter',
            value: function componentDidEnter() {
              var style = _reactDom2.default.findDOMNode(this).style;
              style.opacity = '1';
              _autoPrefix2.default.set(style, 'transform', 'translate(0,0)');
            },
          },
          {
            key: 'componentWillLeave',
            value: function componentWillLeave(callback) {
              var style = _reactDom2.default.findDOMNode(this).style;
              var direction = this.props.getLeaveDirection();
              var x =
                direction === 'left'
                  ? '-100%'
                  : direction === 'right'
                  ? '100%'
                  : '0';
              var y =
                direction === 'up'
                  ? '-100%'
                  : direction === 'down'
                  ? '100%'
                  : '0';

              style.opacity = '0';
              _autoPrefix2.default.set(
                style,
                'transform',
                'translate(' + x + ', ' + y + ')',
              );

              this.leaveTimer = setTimeout(callback, 450);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var children = _props.children;
              var enterDelay = _props.enterDelay;
              var getLeaveDirection = _props.getLeaveDirection;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'children',
                'enterDelay',
                'getLeaveDirection',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var mergedRootStyles = (0, _simpleAssign2.default)(
                {},
                {
                  position: 'absolute',
                  height: '100%',
                  width: '100%',
                  top: 0,
                  left: 0,
                  transition: _transitions2.default.easeOut(null, [
                    'transform',
                    'opacity',
                  ]),
                },
                style,
              );

              return _react2.default.createElement(
                'div',
                _extends({}, other, { style: prepareStyles(mergedRootStyles) }),
                children,
              );
            },
          },
        ]);

        return SlideInChild;
      })(_react.Component);

      SlideInChild.propTypes = {
        children: _react.PropTypes.node,
        direction: _react.PropTypes.string,
        enterDelay: _react.PropTypes.number,
        // This callback is needed bacause the direction could change when leaving the DOM
        getLeaveDirection: _react.PropTypes.func.isRequired,
        style: _react.PropTypes.object,
      };
      SlideInChild.defaultProps = {
        enterDelay: 0,
      };
      SlideInChild.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = SlideInChild;

      /***/
    },
    /* 653 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _SlideIn = __webpack_require__(651);

      var _SlideIn2 = _interopRequireDefault(_SlideIn);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context, state) {
        var datePicker = context.muiTheme.datePicker;
        var selectedYear = state.selectedYear;

        var isLandscape = props.mode === 'landscape';

        var styles = {
          root: {
            width: isLandscape ? 165 : '100%',
            height: isLandscape ? 330 : 'auto',
            float: isLandscape ? 'left' : 'none',
            fontWeight: 700,
            display: 'inline-block',
            backgroundColor: datePicker.selectColor,
            borderTopLeftRadius: 2,
            borderTopRightRadius: isLandscape ? 0 : 2,
            borderBottomLeftRadius: isLandscape ? 2 : 0,
            color: datePicker.textColor,
            padding: 20,
            boxSizing: 'border-box',
          },
          monthDay: {
            display: 'block',
            fontSize: 36,
            lineHeight: '36px',
            height: props.mode === 'landscape' ? '100%' : 38,
            opacity: selectedYear ? 0.7 : 1,
            transition: _transitions2.default.easeOut(),
            width: '100%',
            fontWeight: '500',
          },
          monthDayTitle: {
            cursor: !selectedYear ? 'default' : 'pointer',
            width: '100%',
            display: 'block',
          },
          year: {
            margin: 0,
            fontSize: 16,
            fontWeight: '500',
            lineHeight: '16px',
            height: 16,
            opacity: selectedYear ? 1 : 0.7,
            transition: _transitions2.default.easeOut(),
            marginBottom: 10,
          },
          yearTitle: {
            cursor: props.disableYearSelection
              ? 'not-allowed'
              : !selectedYear
              ? 'pointer'
              : 'default',
          },
        };

        return styles;
      }

      var DateDisplay = (function (_Component) {
        _inherits(DateDisplay, _Component);

        function DateDisplay() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, DateDisplay);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    DateDisplay,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                selectedYear: false,
                transitionDirection: 'up',
              }),
              (_this.handleTouchTapMonthDay = function () {
                if (
                  _this.props.onTouchTapMonthDay &&
                  _this.state.selectedYear
                ) {
                  _this.props.onTouchTapMonthDay();
                }

                _this.setState({ selectedYear: false });
              }),
              (_this.handleTouchTapYear = function () {
                if (
                  _this.props.onTouchTapYear &&
                  !_this.props.disableYearSelection &&
                  !_this.state.selectedYear
                ) {
                  _this.props.onTouchTapYear();
                }

                if (!_this.props.disableYearSelection) {
                  _this.setState({ selectedYear: true });
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(DateDisplay, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              if (!this.props.monthDaySelected) {
                this.setState({ selectedYear: true });
              }
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (nextProps.selectedDate !== this.props.selectedDate) {
                var direction =
                  nextProps.selectedDate > this.props.selectedDate
                    ? 'up'
                    : 'down';
                this.setState({
                  transitionDirection: direction,
                });
              }

              if (nextProps.monthDaySelected !== undefined) {
                this.setState({
                  selectedYear: !nextProps.monthDaySelected,
                });
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var DateTimeFormat = _props.DateTimeFormat;
              var disableYearSelection = _props.disableYearSelection;
              var locale = _props.locale;
              var mode = _props.mode;
              var monthDaySelected = _props.monthDaySelected;
              var onTouchTapMonthDay = _props.onTouchTapMonthDay;
              var onTouchTapYear = _props.onTouchTapYear;
              var selectedDate = _props.selectedDate;
              var style = _props.style;
              var weekCount = _props.weekCount;

              var other = _objectWithoutProperties(_props, [
                'DateTimeFormat',
                'disableYearSelection',
                'locale',
                'mode',
                'monthDaySelected',
                'onTouchTapMonthDay',
                'onTouchTapYear',
                'selectedDate',
                'style',
                'weekCount',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);
              var year = selectedDate.getFullYear();

              var dateTimeFormatted = new DateTimeFormat(locale, {
                month: 'short',
                weekday: 'short',
                day: '2-digit',
              }).format(selectedDate);

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  style: prepareStyles(styles.root, style),
                }),
                _react2.default.createElement(
                  _SlideIn2.default,
                  {
                    style: styles.year,
                    direction: this.state.transitionDirection,
                  },
                  _react2.default.createElement(
                    'div',
                    {
                      key: year,
                      style: styles.yearTitle,
                      onTouchTap: this.handleTouchTapYear,
                    },
                    year,
                  ),
                ),
                _react2.default.createElement(
                  _SlideIn2.default,
                  {
                    style: styles.monthDay,
                    direction: this.state.transitionDirection,
                  },
                  _react2.default.createElement(
                    'div',
                    {
                      key: dateTimeFormatted,
                      onTouchTap: this.handleTouchTapMonthDay,
                      style: styles.monthDayTitle,
                    },
                    dateTimeFormatted,
                  ),
                ),
              );
            },
          },
        ]);

        return DateDisplay;
      })(_react.Component);

      DateDisplay.propTypes = {
        DateTimeFormat: _react.PropTypes.func.isRequired,
        disableYearSelection: _react.PropTypes.bool,
        locale: _react.PropTypes.string.isRequired,
        mode: _react.PropTypes.oneOf(['portrait', 'landscape']),
        monthDaySelected: _react.PropTypes.bool,
        onTouchTapMonthDay: _react.PropTypes.func,
        onTouchTapYear: _react.PropTypes.func,
        selectedDate: _react.PropTypes.object.isRequired,
        style: _react.PropTypes.object,
        weekCount: _react.PropTypes.number,
      };
      DateDisplay.defaultProps = {
        disableYearSelection: false,
        monthDaySelected: true,
        weekCount: 4,
      };
      DateDisplay.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = DateDisplay;

      /***/
    },
    /* 654 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _Dialog = __webpack_require__(655);

      var _Dialog2 = _interopRequireDefault(_Dialog);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _Dialog2.default;

      /***/
    },
    /* 655 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _reactEventListener = __webpack_require__(585);

      var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

      var _keycode = __webpack_require__(549);

      var _keycode2 = _interopRequireDefault(_keycode);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _Overlay = __webpack_require__(656);

      var _Overlay2 = _interopRequireDefault(_Overlay);

      var _RenderToLayer = __webpack_require__(599);

      var _RenderToLayer2 = _interopRequireDefault(_RenderToLayer);

      var _Paper = __webpack_require__(577);

      var _Paper2 = _interopRequireDefault(_Paper);

      var _reactAddonsTransitionGroup = __webpack_require__(554);

      var _reactAddonsTransitionGroup2 = _interopRequireDefault(
        _reactAddonsTransitionGroup,
      );

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var TransitionItem = (function (_Component) {
        _inherits(TransitionItem, _Component);

        function TransitionItem() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, TransitionItem);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    TransitionItem,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                style: {},
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(TransitionItem, [
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              clearTimeout(this.enterTimeout);
              clearTimeout(this.leaveTimeout);
            },
          },
          {
            key: 'componentWillEnter',
            value: function componentWillEnter(callback) {
              this.componentWillAppear(callback);
            },
          },
          {
            key: 'componentWillAppear',
            value: function componentWillAppear(callback) {
              var spacing = this.context.muiTheme.baseTheme.spacing;

              this.setState({
                style: {
                  opacity: 1,
                  transform:
                    'translate(0, ' + spacing.desktopKeylineIncrement + 'px)',
                },
              });

              this.enterTimeout = setTimeout(callback, 450); // matches transition duration
            },
          },
          {
            key: 'componentWillLeave',
            value: function componentWillLeave(callback) {
              this.setState({
                style: {
                  opacity: 0,
                  transform: 'translate(0, 0)',
                },
              });

              this.leaveTimeout = setTimeout(callback, 450); // matches transition duration
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var style = _props.style;
              var children = _props.children;

              var other = _objectWithoutProperties(_props, [
                'style',
                'children',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  style: prepareStyles(
                    (0, _simpleAssign2.default)({}, this.state.style, style),
                  ),
                }),
                children,
              );
            },
          },
        ]);

        return TransitionItem;
      })(_react.Component);

      TransitionItem.propTypes = {
        children: _react.PropTypes.node,
        style: _react.PropTypes.object,
      };
      TransitionItem.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };

      function getStyles(props, context) {
        var autoScrollBodyContent = props.autoScrollBodyContent;
        var open = props.open;
        var _context$muiTheme = context.muiTheme;
        var _context$muiTheme$bas = _context$muiTheme.baseTheme;
        var spacing = _context$muiTheme$bas.spacing;
        var palette = _context$muiTheme$bas.palette;
        var dialog = _context$muiTheme.dialog;
        var zIndex = _context$muiTheme.zIndex;

        var gutter = spacing.desktopGutter;
        var borderScroll = '1px solid ' + palette.borderColor;

        return {
          root: {
            position: 'fixed',
            boxSizing: 'border-box',
            WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
            zIndex: zIndex.dialog,
            top: 0,
            left: open ? 0 : -10000,
            width: '100%',
            height: '100%',
            transition: open
              ? _transitions2.default.easeOut('0ms', 'left', '0ms')
              : _transitions2.default.easeOut('0ms', 'left', '450ms'),
          },
          content: {
            boxSizing: 'border-box',
            WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
            transition: _transitions2.default.easeOut(),
            position: 'relative',
            width: '75%',
            maxWidth: spacing.desktopKeylineIncrement * 12,
            margin: '0 auto',
            zIndex: zIndex.dialog,
          },
          actionsContainer: {
            boxSizing: 'border-box',
            WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
            padding: 8,
            width: '100%',
            textAlign: 'right',
            marginTop: autoScrollBodyContent ? -1 : 0,
            borderTop: autoScrollBodyContent ? borderScroll : 'none',
          },
          overlay: {
            zIndex: zIndex.dialogOverlay,
          },
          title: {
            margin: 0,
            padding: gutter + 'px ' + gutter + 'px 20px ' + gutter + 'px',
            color: palette.textColor,
            fontSize: dialog.titleFontSize,
            lineHeight: '32px',
            fontWeight: 400,
            marginBottom: autoScrollBodyContent ? -1 : 0,
            borderBottom: autoScrollBodyContent ? borderScroll : 'none',
          },
          body: {
            fontSize: dialog.bodyFontSize,
            color: dialog.bodyColor,
            padding:
              (props.title ? 0 : gutter) +
              'px ' +
              gutter +
              'px ' +
              gutter +
              'px',
            boxSizing: 'border-box',
            overflowY: autoScrollBodyContent ? 'auto' : 'hidden',
          },
        };
      }

      var DialogInline = (function (_Component2) {
        _inherits(DialogInline, _Component2);

        function DialogInline() {
          var _Object$getPrototypeO2;

          var _temp2, _this2, _ret2;

          _classCallCheck(this, DialogInline);

          for (
            var _len2 = arguments.length, args = Array(_len2), _key2 = 0;
            _key2 < _len2;
            _key2++
          ) {
            args[_key2] = arguments[_key2];
          }

          return (
            (_ret2 =
              ((_temp2 =
                ((_this2 = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO2 = Object.getPrototypeOf(
                    DialogInline,
                  )).call.apply(_Object$getPrototypeO2, [this].concat(args)),
                )),
                _this2)),
              (_this2.handleTouchTapOverlay = function () {
                _this2.requestClose(false);
              }),
              (_this2.handleKeyUp = function (event) {
                if ((0, _keycode2.default)(event) === 'esc') {
                  _this2.requestClose(false);
                }
              }),
              (_this2.handleResize = function () {
                _this2.positionDialog();
              }),
              _temp2)),
            _possibleConstructorReturn(_this2, _ret2)
          );
        }

        _createClass(DialogInline, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.positionDialog();
            },
          },
          {
            key: 'componentDidUpdate',
            value: function componentDidUpdate() {
              this.positionDialog();
            },
          },
          {
            key: 'positionDialog',
            value: function positionDialog() {
              var _props2 = this.props;
              var actions = _props2.actions;
              var autoDetectWindowHeight = _props2.autoDetectWindowHeight;
              var autoScrollBodyContent = _props2.autoScrollBodyContent;
              var bodyStyle = _props2.bodyStyle;
              var open = _props2.open;
              var repositionOnUpdate = _props2.repositionOnUpdate;
              var title = _props2.title;

              if (!open) {
                return;
              }

              var clientHeight =
                window.innerHeight ||
                document.documentElement.clientHeight ||
                document.body.clientHeight;
              var container = _reactDom2.default.findDOMNode(this);
              var dialogWindow = _reactDom2.default.findDOMNode(
                this.refs.dialogWindow,
              );
              var dialogContent = _reactDom2.default.findDOMNode(
                this.refs.dialogContent,
              );
              var minPaddingTop = 16;

              // Reset the height in case the window was resized.
              dialogWindow.style.height = '';
              dialogContent.style.height = '';

              var dialogWindowHeight = dialogWindow.offsetHeight;
              var paddingTop = (clientHeight - dialogWindowHeight) / 2 - 64;
              if (paddingTop < minPaddingTop) paddingTop = minPaddingTop;

              // Vertically center the dialog window, but make sure it doesn't
              // transition to that position.
              if (repositionOnUpdate || !container.style.paddingTop) {
                container.style.paddingTop = paddingTop + 'px';
              }

              // Force a height if the dialog is taller than clientHeight
              if (autoDetectWindowHeight || autoScrollBodyContent) {
                var styles = getStyles(this.props, this.context);
                styles.body = (0, _simpleAssign2.default)(
                  styles.body,
                  bodyStyle,
                );
                var maxDialogContentHeight = clientHeight - 2 * 64;

                if (title)
                  maxDialogContentHeight -=
                    dialogContent.previousSibling.offsetHeight;

                if (_react2.default.Children.count(actions)) {
                  maxDialogContentHeight -=
                    dialogContent.nextSibling.offsetHeight;
                }

                dialogContent.style.maxHeight = maxDialogContentHeight + 'px';
              }
            },
          },
          {
            key: 'requestClose',
            value: function requestClose(buttonClicked) {
              if (!buttonClicked && this.props.modal) {
                return;
              }

              if (this.props.onRequestClose) {
                this.props.onRequestClose(!!buttonClicked);
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props3 = this.props;
              var actions = _props3.actions;
              var actionsContainerClassName = _props3.actionsContainerClassName;
              var actionsContainerStyle = _props3.actionsContainerStyle;
              var bodyClassName = _props3.bodyClassName;
              var bodyStyle = _props3.bodyStyle;
              var children = _props3.children;
              var className = _props3.className;
              var contentClassName = _props3.contentClassName;
              var contentStyle = _props3.contentStyle;
              var overlayClassName = _props3.overlayClassName;
              var overlayStyle = _props3.overlayStyle;
              var open = _props3.open;
              var titleClassName = _props3.titleClassName;
              var titleStyle = _props3.titleStyle;
              var title = _props3.title;
              var style = _props3.style;
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              styles.root = (0, _simpleAssign2.default)(styles.root, style);
              styles.content = (0, _simpleAssign2.default)(
                styles.content,
                contentStyle,
              );
              styles.body = (0, _simpleAssign2.default)(styles.body, bodyStyle);
              styles.actionsContainer = (0, _simpleAssign2.default)(
                styles.actionsContainer,
                actionsContainerStyle,
              );
              styles.overlay = (0, _simpleAssign2.default)(
                styles.overlay,
                overlayStyle,
              );
              styles.title = (0, _simpleAssign2.default)(
                styles.title,
                titleStyle,
              );

              var actionsContainer =
                _react2.default.Children.count(actions) > 0 &&
                _react2.default.createElement(
                  'div',
                  {
                    className: actionsContainerClassName,
                    style: prepareStyles(styles.actionsContainer),
                  },
                  _react2.default.Children.toArray(actions),
                );

              var titleElement = title;
              if (_react2.default.isValidElement(title)) {
                titleElement = _react2.default.cloneElement(title, {
                  className: title.props.className || titleClassName,
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(
                      styles.title,
                      title.props.style,
                    ),
                  ),
                });
              } else if (typeof title === 'string') {
                titleElement = _react2.default.createElement(
                  'h3',
                  {
                    className: titleClassName,
                    style: prepareStyles(styles.title),
                  },
                  title,
                );
              }

              return _react2.default.createElement(
                'div',
                { className: className, style: prepareStyles(styles.root) },
                open &&
                  _react2.default.createElement(_reactEventListener2.default, {
                    target: 'window',
                    onKeyUp: this.handleKeyUp,
                    onResize: this.handleResize,
                  }),
                _react2.default.createElement(
                  _reactAddonsTransitionGroup2.default,
                  {
                    component: 'div',
                    ref: 'dialogWindow',
                    transitionAppear: true,
                    transitionAppearTimeout: 450,
                    transitionEnter: true,
                    transitionEnterTimeout: 450,
                  },
                  open &&
                    _react2.default.createElement(
                      TransitionItem,
                      {
                        className: contentClassName,
                        style: styles.content,
                      },
                      _react2.default.createElement(
                        _Paper2.default,
                        { zDepth: 4 },
                        titleElement,
                        _react2.default.createElement(
                          'div',
                          {
                            ref: 'dialogContent',
                            className: bodyClassName,
                            style: prepareStyles(styles.body),
                          },
                          children,
                        ),
                        actionsContainer,
                      ),
                    ),
                ),
                _react2.default.createElement(_Overlay2.default, {
                  show: open,
                  className: overlayClassName,
                  style: styles.overlay,
                  onTouchTap: this.handleTouchTapOverlay,
                }),
              );
            },
          },
        ]);

        return DialogInline;
      })(_react.Component);

      DialogInline.propTypes = {
        actions: _react.PropTypes.node,
        actionsContainerClassName: _react.PropTypes.string,
        actionsContainerStyle: _react.PropTypes.object,
        autoDetectWindowHeight: _react.PropTypes.bool,
        autoScrollBodyContent: _react.PropTypes.bool,
        bodyClassName: _react.PropTypes.string,
        bodyStyle: _react.PropTypes.object,
        children: _react.PropTypes.node,
        className: _react.PropTypes.string,
        contentClassName: _react.PropTypes.string,
        contentStyle: _react.PropTypes.object,
        modal: _react.PropTypes.bool,
        onRequestClose: _react.PropTypes.func,
        open: _react.PropTypes.bool.isRequired,
        overlayClassName: _react.PropTypes.string,
        overlayStyle: _react.PropTypes.object,
        repositionOnUpdate: _react.PropTypes.bool,
        style: _react.PropTypes.object,
        title: _react.PropTypes.node,
        titleClassName: _react.PropTypes.string,
        titleStyle: _react.PropTypes.object,
      };
      DialogInline.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };

      var Dialog = (function (_Component3) {
        _inherits(Dialog, _Component3);

        function Dialog() {
          var _Object$getPrototypeO3;

          var _temp3, _this3, _ret3;

          _classCallCheck(this, Dialog);

          for (
            var _len3 = arguments.length, args = Array(_len3), _key3 = 0;
            _key3 < _len3;
            _key3++
          ) {
            args[_key3] = arguments[_key3];
          }

          return (
            (_ret3 =
              ((_temp3 =
                ((_this3 = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO3 = Object.getPrototypeOf(
                    Dialog,
                  )).call.apply(_Object$getPrototypeO3, [this].concat(args)),
                )),
                _this3)),
              (_this3.renderLayer = function () {
                return _react2.default.createElement(
                  DialogInline,
                  _this3.props,
                );
              }),
              _temp3)),
            _possibleConstructorReturn(_this3, _ret3)
          );
        }

        _createClass(Dialog, [
          {
            key: 'render',
            value: function render() {
              return _react2.default.createElement(_RenderToLayer2.default, {
                render: this.renderLayer,
                open: true,
                useLayerForClickAway: false,
              });
            },
          },
        ]);

        return Dialog;
      })(_react.Component);

      Dialog.propTypes = {
        /**
         * Action buttons to display below the Dialog content (`children`).
         * This property accepts either a React element, or an array of React elements.
         */
        actions: _react.PropTypes.node,
        /**
         * The `className` to add to the actions container's root element.
         */
        actionsContainerClassName: _react.PropTypes.string,
        /**
         * Overrides the inline-styles of the actions container's root element.
         */
        actionsContainerStyle: _react.PropTypes.object,
        /**
         * If set to true, the height of the `Dialog` will be auto detected. A max height
         * will be enforced so that the content does not extend beyond the viewport.
         */
        autoDetectWindowHeight: _react.PropTypes.bool,
        /**
         * If set to true, the body content of the `Dialog` will be scrollable.
         */
        autoScrollBodyContent: _react.PropTypes.bool,
        /**
         * The `className` to add to the content's root element under the title.
         */
        bodyClassName: _react.PropTypes.string,
        /**
         * Overrides the inline-styles of the content's root element under the title.
         */
        bodyStyle: _react.PropTypes.object,
        /**
         * The contents of the `Dialog`.
         */
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * The `className` to add to the content container.
         */
        contentClassName: _react.PropTypes.string,
        /**
         * Overrides the inline-styles of the content container.
         */
        contentStyle: _react.PropTypes.object,
        /**
         * Force the user to use one of the actions in the `Dialog`.
         * Clicking outside the `Dialog` will not trigger the `onRequestClose`.
         */
        modal: _react.PropTypes.bool,
        /**
         * Fired when the `Dialog` is requested to be closed by a click outside the `Dialog` or on the buttons.
         *
         * @param {bool} buttonClicked Determines whether a button click triggered this request.
         */
        onRequestClose: _react.PropTypes.func,
        /**
         * Controls whether the Dialog is opened or not.
         */
        open: _react.PropTypes.bool.isRequired,
        /**
         * The `className` to add to the `Overlay` component that is rendered behind the `Dialog`.
         */
        overlayClassName: _react.PropTypes.string,
        /**
         * Overrides the inline-styles of the `Overlay` component that is rendered behind the `Dialog`.
         */
        overlayStyle: _react.PropTypes.object,
        /**
         * Determines whether the `Dialog` should be repositioned when it's contents are updated.
         */
        repositionOnUpdate: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The title to display on the `Dialog`. Could be number, string, element or an array containing these types.
         */
        title: _react.PropTypes.node,
        /**
         * The `className` to add to the title's root container element.
         */
        titleClassName: _react.PropTypes.string,
        /**
         * Overrides the inline-styles of the title's root container element.
         */
        titleStyle: _react.PropTypes.object,
      };
      Dialog.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      Dialog.defaultProps = {
        autoDetectWindowHeight: true,
        autoScrollBodyContent: false,
        modal: false,
        repositionOnUpdate: true,
      };
      exports.default = Dialog;

      /***/
    },
    /* 656 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _AutoLockScrolling = __webpack_require__(657);

      var _AutoLockScrolling2 = _interopRequireDefault(_AutoLockScrolling);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var overlay = context.muiTheme.overlay;

        var style = {
          root: {
            position: 'fixed',
            height: '100%',
            width: '100%',
            top: 0,
            left: '-100%',
            opacity: 0,
            backgroundColor: overlay.backgroundColor,
            WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)', // Remove mobile color flashing (deprecated)

            // Two ways to promote overlay to its own render layer
            willChange: 'opacity',
            transform: 'translateZ(0)',

            transition:
              props.transitionEnabled &&
              _transitions2.default.easeOut('0ms', 'left', '400ms') +
                ', ' +
                _transitions2.default.easeOut('400ms', 'opacity'),
          },
        };

        if (props.show) {
          (0, _simpleAssign2.default)(style.root, {
            left: 0,
            opacity: 1,
            transition:
              _transitions2.default.easeOut('0ms', 'left') +
              ', ' +
              _transitions2.default.easeOut('400ms', 'opacity'),
          });
        }

        return style;
      }

      var Overlay = (function (_Component) {
        _inherits(Overlay, _Component);

        function Overlay() {
          _classCallCheck(this, Overlay);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(Overlay).apply(this, arguments),
          );
        }

        _createClass(Overlay, [
          {
            key: 'setOpacity',
            value: function setOpacity(opacity) {
              this.refs.overlay.style.opacity = opacity;
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var autoLockScrolling = _props.autoLockScrolling;
              var show = _props.show;
              var style = _props.style;
              var transitionEnabled = _props.transitionEnabled;

              var other = _objectWithoutProperties(_props, [
                'autoLockScrolling',
                'show',
                'style',
                'transitionEnabled',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  ref: 'overlay',
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(styles.root, style),
                  ),
                }),
                autoLockScrolling &&
                  _react2.default.createElement(_AutoLockScrolling2.default, {
                    lock: show,
                  }),
              );
            },
          },
        ]);

        return Overlay;
      })(_react.Component);

      Overlay.propTypes = {
        autoLockScrolling: _react.PropTypes.bool,
        show: _react.PropTypes.bool.isRequired,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        transitionEnabled: _react.PropTypes.bool,
      };
      Overlay.defaultProps = {
        autoLockScrolling: true,
        style: {},
        transitionEnabled: true,
      };
      Overlay.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Overlay;

      /***/
    },
    /* 657 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var originalBodyOverflow = null;
      var lockingCounter = 0;

      var AutoLockScrolling = (function (_Component) {
        _inherits(AutoLockScrolling, _Component);

        function AutoLockScrolling() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, AutoLockScrolling);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    AutoLockScrolling,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.locked = false),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(AutoLockScrolling, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              if (this.props.lock === true) this.preventScrolling();
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (this.props.lock !== nextProps.lock) {
                if (nextProps.lock) {
                  this.preventScrolling();
                } else {
                  this.allowScrolling();
                }
              }
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              this.allowScrolling();
            },

            // force to only lock/unlock once
          },
          {
            key: 'preventScrolling',
            value: function preventScrolling() {
              if (this.locked === true) return;
              lockingCounter = lockingCounter + 1;
              this.locked = true;

              // only lock the first time the component is mounted.
              if (lockingCounter === 1) {
                var body = document.getElementsByTagName('body')[0];
                originalBodyOverflow = body.style.overflow;
                body.style.overflow = 'hidden';
              }
            },
          },
          {
            key: 'allowScrolling',
            value: function allowScrolling() {
              if (this.locked === true) {
                lockingCounter = lockingCounter - 1;
                this.locked = false;
              }

              if (lockingCounter === 0 && originalBodyOverflow !== null) {
                var body = document.getElementsByTagName('body')[0];
                body.style.overflow = originalBodyOverflow || '';
                originalBodyOverflow = null;
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              return null;
            },
          },
        ]);

        return AutoLockScrolling;
      })(_react.Component);

      AutoLockScrolling.propTypes = {
        lock: _react.PropTypes.bool.isRequired,
      };
      exports.default = AutoLockScrolling;

      /***/
    },
    /* 658 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _Paper = __webpack_require__(577);

      var _Paper2 = _interopRequireDefault(_Paper);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _propTypes = __webpack_require__(543);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context, state) {
        var targetOrigin = props.targetOrigin;
        var open = state.open;
        var muiTheme = context.muiTheme;

        var horizontal = targetOrigin.horizontal.replace('middle', 'vertical');

        return {
          root: {
            opacity: open ? 1 : 0,
            transform: open ? 'scaleY(1)' : 'scaleY(0)',
            transformOrigin: horizontal + ' ' + targetOrigin.vertical,
            position: 'fixed',
            zIndex: muiTheme.zIndex.popover,
            transition: _transitions2.default.easeOut('450ms', [
              'transform',
              'opacity',
            ]),
            maxHeight: '100%',
          },
        };
      }

      var PopoverAnimationVertical = (function (_Component) {
        _inherits(PopoverAnimationVertical, _Component);

        function PopoverAnimationVertical() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, PopoverAnimationVertical);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    PopoverAnimationVertical,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                open: false,
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(PopoverAnimationVertical, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.setState({ open: true }); // eslint-disable-line react/no-did-mount-set-state
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              this.setState({
                open: nextProps.open,
              });
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var className = _props.className;
              var style = _props.style;
              var zDepth = _props.zDepth;

              var styles = getStyles(this.props, this.context, this.state);

              return _react2.default.createElement(
                _Paper2.default,
                {
                  style: (0, _simpleAssign2.default)(styles.root, style),
                  zDepth: zDepth,
                  className: className,
                },
                this.props.children,
              );
            },
          },
        ]);

        return PopoverAnimationVertical;
      })(_react.Component);

      PopoverAnimationVertical.propTypes = {
        children: _react.PropTypes.node,
        className: _react.PropTypes.string,
        open: _react.PropTypes.bool.isRequired,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        targetOrigin: _propTypes2.default.origin,
        zDepth: _propTypes2.default.zDepth,
      };
      PopoverAnimationVertical.defaultProps = {
        style: {},
        zDepth: 1,
      };
      PopoverAnimationVertical.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = PopoverAnimationVertical;

      /***/
    },
    /* 659 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _Drawer = __webpack_require__(660);

      var _Drawer2 = _interopRequireDefault(_Drawer);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _Drawer2.default;

      /***/
    },
    /* 660 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _reactEventListener = __webpack_require__(585);

      var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

      var _keycode = __webpack_require__(549);

      var _keycode2 = _interopRequireDefault(_keycode);

      var _autoPrefix = __webpack_require__(552);

      var _autoPrefix2 = _interopRequireDefault(_autoPrefix);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _Overlay = __webpack_require__(656);

      var _Overlay2 = _interopRequireDefault(_Overlay);

      var _Paper = __webpack_require__(577);

      var _Paper2 = _interopRequireDefault(_Paper);

      var _propTypes = __webpack_require__(543);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var openNavEventHandler = null;

      var Drawer = (function (_Component) {
        _inherits(Drawer, _Component);

        function Drawer() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, Drawer);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    Drawer,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.handleTouchTapOverlay = function (event) {
                event.preventDefault();
                _this.close('clickaway');
              }),
              (_this.handleKeyUp = function (event) {
                if (
                  _this.state.open &&
                  !_this.props.docked &&
                  (0, _keycode2.default)(event) === 'esc'
                ) {
                  _this.close('escape');
                }
              }),
              (_this.onBodyTouchStart = function (event) {
                var swipeAreaWidth = _this.props.swipeAreaWidth;

                var touchStartX = event.touches[0].pageX;
                var touchStartY = event.touches[0].pageY;

                // Open only if swiping from far left (or right) while closed
                if (swipeAreaWidth !== null && !_this.state.open) {
                  if (_this.props.openSecondary) {
                    // If openSecondary is true calculate from the far right
                    if (
                      touchStartX <
                      document.body.offsetWidth - swipeAreaWidth
                    )
                      return;
                  } else {
                    // If openSecondary is false calculate from the far left
                    if (touchStartX > swipeAreaWidth) return;
                  }
                }

                if (
                  !_this.state.open &&
                  (openNavEventHandler !== _this.onBodyTouchStart ||
                    _this.props.disableSwipeToOpen)
                ) {
                  return;
                }

                _this.maybeSwiping = true;
                _this.touchStartX = touchStartX;
                _this.touchStartY = touchStartY;

                document.body.addEventListener(
                  'touchmove',
                  _this.onBodyTouchMove,
                );
                document.body.addEventListener(
                  'touchend',
                  _this.onBodyTouchEnd,
                );
                document.body.addEventListener(
                  'touchcancel',
                  _this.onBodyTouchEnd,
                );
              }),
              (_this.onBodyTouchMove = function (event) {
                var currentX = event.touches[0].pageX;
                var currentY = event.touches[0].pageY;

                if (_this.state.swiping) {
                  event.preventDefault();
                  _this.setPosition(_this.getTranslateX(currentX));
                } else if (_this.maybeSwiping) {
                  var dXAbs = Math.abs(currentX - _this.touchStartX);
                  var dYAbs = Math.abs(currentY - _this.touchStartY);
                  // If the user has moved his thumb ten pixels in either direction,
                  // we can safely make an assumption about whether he was intending
                  // to swipe or scroll.
                  var threshold = 10;

                  if (dXAbs > threshold && dYAbs <= threshold) {
                    _this.swipeStartX = currentX;
                    _this.setState({
                      swiping: _this.state.open ? 'closing' : 'opening',
                    });
                    _this.setPosition(_this.getTranslateX(currentX));
                  } else if (dXAbs <= threshold && dYAbs > threshold) {
                    _this.onBodyTouchEnd();
                  }
                }
              }),
              (_this.onBodyTouchEnd = function (event) {
                if (_this.state.swiping) {
                  var currentX = event.changedTouches[0].pageX;
                  var translateRatio =
                    _this.getTranslateX(currentX) / _this.getMaxTranslateX();

                  _this.maybeSwiping = false;
                  var swiping = _this.state.swiping;
                  _this.setState({
                    swiping: null,
                  });

                  // We have to open or close after setting swiping to null,
                  // because only then CSS transition is enabled.
                  if (translateRatio > 0.5) {
                    if (swiping === 'opening') {
                      _this.setPosition(_this.getMaxTranslateX());
                    } else {
                      _this.close('swipe');
                    }
                  } else {
                    if (swiping === 'opening') {
                      _this.open('swipe');
                    } else {
                      _this.setPosition(0);
                    }
                  }
                } else {
                  _this.maybeSwiping = false;
                }

                document.body.removeEventListener(
                  'touchmove',
                  _this.onBodyTouchMove,
                );
                document.body.removeEventListener(
                  'touchend',
                  _this.onBodyTouchEnd,
                );
                document.body.removeEventListener(
                  'touchcancel',
                  _this.onBodyTouchEnd,
                );
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Drawer, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              this.maybeSwiping = false;
              this.touchStartX = null;
              this.touchStartY = null;
              this.swipeStartX = null;

              this.setState({
                open:
                  this.props.open !== null
                    ? this.props.open
                    : this.props.docked,
                swiping: null,
              });
            },
          },
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.enableSwipeHandling();
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              // If controlled then the open prop takes precedence.
              if (nextProps.open !== null) {
                this.setState({
                  open: nextProps.open,
                });
                // Otherwise, if docked is changed, change the open state for when uncontrolled.
              } else if (this.props.docked !== nextProps.docked) {
                this.setState({
                  open: nextProps.docked,
                });
              }
            },
          },
          {
            key: 'componentDidUpdate',
            value: function componentDidUpdate() {
              this.enableSwipeHandling();
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              this.disableSwipeHandling();
            },
          },
          {
            key: 'getStyles',
            value: function getStyles() {
              var muiTheme = this.context.muiTheme;
              var theme = muiTheme.drawer;

              var x =
                this.getTranslateMultiplier() *
                (this.state.open ? 0 : this.getMaxTranslateX());

              var styles = {
                root: {
                  height: '100%',
                  width: this.props.width || theme.width,
                  position: 'fixed',
                  zIndex: muiTheme.zIndex.drawer,
                  left: 0,
                  top: 0,
                  transform: 'translate(' + x + 'px, 0)',
                  transition:
                    !this.state.swiping &&
                    _transitions2.default.easeOut(null, 'transform', null),
                  backgroundColor: theme.color,
                  overflow: 'auto',
                  WebkitOverflowScrolling: 'touch',
                },
                overlay: {
                  zIndex: muiTheme.zIndex.drawerOverlay,
                  pointerEvents: this.state.open ? 'auto' : 'none',
                },
                rootWhenOpenRight: {
                  left: 'auto',
                  right: 0,
                },
              };

              return styles;
            },
          },
          {
            key: 'shouldShow',
            value: function shouldShow() {
              return this.state.open || !!this.state.swiping; // component is swiping
            },
          },
          {
            key: 'close',
            value: function close(reason) {
              if (this.props.open === null) this.setState({ open: false });
              if (this.props.onRequestChange)
                this.props.onRequestChange(false, reason);
              return this;
            },
          },
          {
            key: 'open',
            value: function open(reason) {
              if (this.props.open === null) this.setState({ open: true });
              if (this.props.onRequestChange)
                this.props.onRequestChange(true, reason);
              return this;
            },
          },
          {
            key: 'getMaxTranslateX',
            value: function getMaxTranslateX() {
              var width =
                this.props.width || this.context.muiTheme.drawer.width;
              return width + 10;
            },
          },
          {
            key: 'getTranslateMultiplier',
            value: function getTranslateMultiplier() {
              return this.props.openSecondary ? 1 : -1;
            },
          },
          {
            key: 'enableSwipeHandling',
            value: function enableSwipeHandling() {
              if (!this.props.docked) {
                document.body.addEventListener(
                  'touchstart',
                  this.onBodyTouchStart,
                );
                if (!openNavEventHandler) {
                  openNavEventHandler = this.onBodyTouchStart;
                }
              } else {
                this.disableSwipeHandling();
              }
            },
          },
          {
            key: 'disableSwipeHandling',
            value: function disableSwipeHandling() {
              document.body.removeEventListener(
                'touchstart',
                this.onBodyTouchStart,
              );
              if (openNavEventHandler === this.onBodyTouchStart) {
                openNavEventHandler = null;
              }
            },
          },
          {
            key: 'setPosition',
            value: function setPosition(translateX) {
              var drawer = _reactDom2.default.findDOMNode(
                this.refs.clickAwayableElement,
              );
              var transformCSS =
                'translate(' +
                this.getTranslateMultiplier() * translateX +
                'px, 0)';
              this.refs.overlay.setOpacity(
                1 - translateX / this.getMaxTranslateX(),
              );
              _autoPrefix2.default.set(drawer.style, 'transform', transformCSS);
            },
          },
          {
            key: 'getTranslateX',
            value: function getTranslateX(currentX) {
              return Math.min(
                Math.max(
                  this.state.swiping === 'closing'
                    ? this.getTranslateMultiplier() *
                        (currentX - this.swipeStartX)
                    : this.getMaxTranslateX() -
                        this.getTranslateMultiplier() *
                          (this.swipeStartX - currentX),
                  0,
                ),
                this.getMaxTranslateX(),
              );
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var children = _props.children;
              var className = _props.className;
              var containerClassName = _props.containerClassName;
              var containerStyle = _props.containerStyle;
              var docked = _props.docked;
              var openSecondary = _props.openSecondary;
              var overlayClassName = _props.overlayClassName;
              var overlayStyle = _props.overlayStyle;
              var style = _props.style;
              var zDepth = _props.zDepth;

              var styles = this.getStyles();

              var overlay = void 0;
              if (!docked) {
                overlay = _react2.default.createElement(_Overlay2.default, {
                  ref: 'overlay',
                  show: this.shouldShow(),
                  className: overlayClassName,
                  style: (0, _simpleAssign2.default)(
                    styles.overlay,
                    overlayStyle,
                  ),
                  transitionEnabled: !this.state.swiping,
                  onTouchTap: this.handleTouchTapOverlay,
                });
              }

              return _react2.default.createElement(
                'div',
                {
                  className: className,
                  style: style,
                },
                _react2.default.createElement(_reactEventListener2.default, {
                  target: 'window',
                  onKeyUp: this.handleKeyUp,
                }),
                overlay,
                _react2.default.createElement(
                  _Paper2.default,
                  {
                    ref: 'clickAwayableElement',
                    zDepth: zDepth,
                    rounded: false,
                    transitionEnabled: !this.state.swiping,
                    className: containerClassName,
                    style: (0, _simpleAssign2.default)(
                      styles.root,
                      openSecondary && styles.rootWhenOpenRight,
                      containerStyle,
                    ),
                  },
                  children,
                ),
              );
            },
          },
        ]);

        return Drawer;
      })(_react.Component);

      Drawer.propTypes = {
        /**
         * The contents of the `Drawer`
         */
        children: _react.PropTypes.node,
        /**
         * The CSS class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * The CSS class name of the container element.
         */
        containerClassName: _react.PropTypes.string,
        /**
         * Override the inline-styles of the container element.
         */
        containerStyle: _react.PropTypes.object,
        /**
         * If true, swiping sideways when the `Drawer` is closed will not open it.
         */
        disableSwipeToOpen: _react.PropTypes.bool,
        /**
         * If true, the `Drawer` will be docked. In this state, the overlay won't show and
         * clicking on a menu item will not close the `Drawer`.
         */
        docked: _react.PropTypes.bool,
        /**
         * Callback function fired when the `open` state of the `Drawer` is requested to be changed.
         *
         * @param {boolean} open If true, the `Drawer` was requested to be opened.
         * @param {string} reason The reason for the open or close request. Possible values are
         * 'swipe' for open requests; 'clickaway' (on overlay clicks),
         * 'escape' (on escape key press), and 'swipe' for close requests.
         */
        onRequestChange: _react.PropTypes.func,
        /**
         * If true, the `Drawer` is opened.  Providing a value will turn the `Drawer`
         * into a controlled component.
         */
        open: _react.PropTypes.bool,
        /**
         * If true, the `Drawer` is positioned to open from the opposite side.
         */
        openSecondary: _react.PropTypes.bool,
        /**
         * The CSS class name to add to the `Overlay` component that is rendered behind the `Drawer`.
         */
        overlayClassName: _react.PropTypes.string,
        /**
         * Override the inline-styles of the `Overlay` component that is rendered behind the `Drawer`.
         */
        overlayStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The width of the left most (or right most) area in pixels where the `Drawer` can be
         * swiped open from. Setting this to `null` spans that area to the entire page
         * (**CAUTION!** Setting this property to `null` might cause issues with sliders and
         * swipeable `Tabs`: use at your own risk).
         */
        swipeAreaWidth: _react.PropTypes.number,
        /**
         * The width of the `Drawer` in pixels. Defaults to using the values from theme.
         */
        width: _react.PropTypes.number,
        /**
         * The zDepth of the `Drawer`.
         */
        zDepth: _propTypes2.default.zDepth,
      };
      Drawer.defaultProps = {
        disableSwipeToOpen: false,
        docked: true,
        open: null,
        openSecondary: false,
        swipeAreaWidth: 30,
        width: null,
        zDepth: 2,
      };
      Drawer.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Drawer;

      /***/
    },
    /* 661 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = exports.MenuItem = exports.DropDownMenu = undefined;

      var _DropDownMenu2 = __webpack_require__(662);

      var _DropDownMenu3 = _interopRequireDefault(_DropDownMenu2);

      var _MenuItem2 = __webpack_require__(597);

      var _MenuItem3 = _interopRequireDefault(_MenuItem2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.DropDownMenu = _DropDownMenu3.default;
      exports.MenuItem = _MenuItem3.default;
      exports.default = _DropDownMenu3.default;

      /***/
    },
    /* 662 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _arrowDropDown = __webpack_require__(663);

      var _arrowDropDown2 = _interopRequireDefault(_arrowDropDown);

      var _Menu = __webpack_require__(590);

      var _Menu2 = _interopRequireDefault(_Menu);

      var _ClearFix = __webpack_require__(664);

      var _ClearFix2 = _interopRequireDefault(_ClearFix);

      var _Popover = __webpack_require__(598);

      var _Popover2 = _interopRequireDefault(_Popover);

      var _PopoverAnimationVertical = __webpack_require__(658);

      var _PopoverAnimationVertical2 = _interopRequireDefault(
        _PopoverAnimationVertical,
      );

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var anchorOrigin = {
        vertical: 'top',
        horizontal: 'left',
      };

      function getStyles(props, context) {
        var disabled = props.disabled;

        var spacing = context.muiTheme.baseTheme.spacing;
        var palette = context.muiTheme.baseTheme.palette;
        var accentColor = context.muiTheme.dropDownMenu.accentColor;
        return {
          control: {
            cursor: disabled ? 'not-allowed' : 'pointer',
            height: '100%',
            position: 'relative',
            width: '100%',
          },
          icon: {
            fill: accentColor,
            position: 'absolute',
            right: spacing.desktopGutterLess,
            top: (spacing.desktopToolbarHeight - 24) / 2,
          },
          label: {
            color: disabled ? palette.disabledColor : palette.textColor,
            lineHeight: spacing.desktopToolbarHeight + 'px',
            opacity: 1,
            position: 'relative',
            paddingLeft: spacing.desktopGutter,
            paddingRight:
              spacing.iconSize +
              spacing.desktopGutterLess +
              spacing.desktopGutterMini,
            top: 0,
          },
          labelWhenOpen: {
            opacity: 0,
            top: spacing.desktopToolbarHeight / 8,
          },
          root: {
            display: 'inline-block',
            fontSize: spacing.desktopDropDownMenuFontSize,
            height: spacing.desktopSubheaderHeight,
            fontFamily: context.muiTheme.baseTheme.fontFamily,
            outline: 'none',
            position: 'relative',
            transition: _transitions2.default.easeOut(),
          },
          rootWhenOpen: {
            opacity: 1,
          },
          underline: {
            borderTop: 'solid 1px ' + accentColor,
            bottom: 1,
            left: 0,
            margin: '-1px ' + spacing.desktopGutter + 'px',
            right: 0,
            position: 'absolute',
          },
        };
      }

      var DropDownMenu = (function (_Component) {
        _inherits(DropDownMenu, _Component);

        function DropDownMenu() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, DropDownMenu);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    DropDownMenu,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                open: false,
              }),
              (_this.handleTouchTapControl = function (event) {
                event.preventDefault();
                if (!_this.props.disabled) {
                  _this.setState({
                    open: !_this.state.open,
                    anchorEl: _this.refs.root,
                  });
                }
              }),
              (_this.handleRequestCloseMenu = function () {
                _this.setState({
                  open: false,
                  anchorEl: null,
                });
              }),
              (_this.handleItemTouchTap = function (event, child, index) {
                event.persist();
                _this.setState(
                  {
                    open: false,
                  },
                  function () {
                    if (_this.props.onChange) {
                      _this.props.onChange(event, index, child.props.value);
                    }
                  },
                );
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        // The nested styles for drop-down-menu are modified by toolbar and possibly
        // other user components, so it will give full access to its js styles rather
        // than just the parent.

        _createClass(DropDownMenu, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              var _this2 = this;

              if (this.props.autoWidth) {
                this.setWidth();
              }
              if (this.props.openImmediately) {
                // TODO: Temporary fix to make openImmediately work with popover.
                /* eslint-disable react/no-did-mount-set-state */
                setTimeout(function () {
                  return _this2.setState({
                    open: true,
                    anchorEl: _this2.refs.root,
                  });
                });
                setTimeout(function () {
                  return _this2.setState({
                    open: true,
                    anchorEl: _this2.refs.root,
                  });
                }, 0);
                /* eslint-enable react/no-did-mount-set-state */
              }
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps() {
              if (this.props.autoWidth) {
                this.setWidth();
              }
            },

            /**
             * This method is deprecated but still here because the TextField
             * need it in order to work. TODO: That will be addressed later.
             */
          },
          {
            key: 'getInputNode',
            value: function getInputNode() {
              var _this3 = this;

              var root = this.refs.root;

              root.focus = function () {
                if (!_this3.props.disabled) {
                  _this3.setState({
                    open: !_this3.state.open,
                    anchorEl: _this3.refs.root,
                  });
                }
              };

              return root;
            },
          },
          {
            key: 'setWidth',
            value: function setWidth() {
              var el = this.refs.root;
              if (
                !this.props.style ||
                !this.props.style.hasOwnProperty('width')
              ) {
                el.style.width = 'auto';
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var animated = _props.animated;
              var animation = _props.animation;
              var autoWidth = _props.autoWidth;
              var children = _props.children;
              var className = _props.className;
              var iconStyle = _props.iconStyle;
              var labelStyle = _props.labelStyle;
              var listStyle = _props.listStyle;
              var maxHeight = _props.maxHeight;
              var menuStyleProp = _props.menuStyle;
              var openImmediately = _props.openImmediately;
              var style = _props.style;
              var underlineStyle = _props.underlineStyle;
              var value = _props.value;

              var other = _objectWithoutProperties(_props, [
                'animated',
                'animation',
                'autoWidth',
                'children',
                'className',
                'iconStyle',
                'labelStyle',
                'listStyle',
                'maxHeight',
                'menuStyle',
                'openImmediately',
                'style',
                'underlineStyle',
                'value',
              ]);

              var _state = this.state;
              var anchorEl = _state.anchorEl;
              var open = _state.open;
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              var displayValue = '';
              _react2.default.Children.forEach(children, function (child) {
                if (value === child.props.value) {
                  // This will need to be improved (in case primaryText is a node)
                  displayValue = child.props.label || child.props.primaryText;
                }
              });

              var menuStyle = void 0;
              if (anchorEl && !autoWidth) {
                menuStyle = (0, _simpleAssign2.default)(
                  {
                    width: anchorEl.clientWidth,
                  },
                  menuStyleProp,
                );
              } else {
                menuStyle = menuStyleProp;
              }

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  ref: 'root',
                  className: className,
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(
                      {},
                      styles.root,
                      open && styles.rootWhenOpen,
                      style,
                    ),
                  ),
                }),
                _react2.default.createElement(
                  _ClearFix2.default,
                  {
                    style: styles.control,
                    onTouchTap: this.handleTouchTapControl,
                  },
                  _react2.default.createElement(
                    'div',
                    {
                      style: prepareStyles(
                        (0, _simpleAssign2.default)(
                          {},
                          styles.label,
                          open && styles.labelWhenOpen,
                          labelStyle,
                        ),
                      ),
                    },
                    displayValue,
                  ),
                  _react2.default.createElement(_arrowDropDown2.default, {
                    style: (0, _simpleAssign2.default)(
                      {},
                      styles.icon,
                      iconStyle,
                    ),
                  }),
                  _react2.default.createElement('div', {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(
                        {},
                        styles.underline,
                        underlineStyle,
                      ),
                    ),
                  }),
                ),
                _react2.default.createElement(
                  _Popover2.default,
                  {
                    anchorOrigin: anchorOrigin,
                    anchorEl: anchorEl,
                    animation: animation || _PopoverAnimationVertical2.default,
                    open: open,
                    animated: animated,
                    onRequestClose: this.handleRequestCloseMenu,
                  },
                  _react2.default.createElement(
                    _Menu2.default,
                    {
                      maxHeight: maxHeight,
                      desktop: true,
                      value: value,
                      style: menuStyle,
                      listStyle: listStyle,
                      onItemTouchTap: this.handleItemTouchTap,
                    },
                    children,
                  ),
                ),
              );
            },
          },
        ]);

        return DropDownMenu;
      })(_react.Component);

      DropDownMenu.muiName = 'DropDownMenu';
      DropDownMenu.propTypes = {
        /**
         * If true, the popover will apply transitions when
         * it gets added to the DOM.
         */
        animated: _react.PropTypes.bool,
        /**
         * Override the default animation component used.
         */
        animation: _react.PropTypes.func,
        /**
         * The width will automatically be set according to the items inside the menu.
         * To control this width in css instead, set this prop to `false`.
         */
        autoWidth: _react.PropTypes.bool,
        /**
         * The `MenuItem`s to populate the `Menu` with. If the `MenuItems` have the
         * prop `label` that value will be used to render the representation of that
         * item within the field.
         */
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * Disables the menu.
         */
        disabled: _react.PropTypes.bool,
        /**
         * Overrides the styles of icon element.
         */
        iconStyle: _react.PropTypes.object,
        /**
         * Overrides the styles of label when the `DropDownMenu` is inactive.
         */
        labelStyle: _react.PropTypes.object,
        /**
         * The style object to use to override underlying list style.
         */
        listStyle: _react.PropTypes.object,
        /**
         * The maximum height of the `Menu` when it is displayed.
         */
        maxHeight: _react.PropTypes.number,
        /**
         * Overrides the styles of `Menu` when the `DropDownMenu` is displayed.
         */
        menuStyle: _react.PropTypes.object,
        /**
         * Callback function fired when a menu item is clicked, other than the one currently selected.
         *
         * @param {object} event TouchTap event targeting the menu item that was clicked.
         * @param {number} key The index of the clicked menu item in the `children` collection.
         * @param {any} payload The `value` prop of the clicked menu item.
         */
        onChange: _react.PropTypes.func,
        /**
         * Set to true to have the `DropDownMenu` automatically open on mount.
         */
        openImmediately: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * Overrides the inline-styles of the underline.
         */
        underlineStyle: _react.PropTypes.object,
        /**
         * The value that is currently selected.
         */
        value: _react.PropTypes.any,
      };
      DropDownMenu.defaultProps = {
        animated: true,
        autoWidth: true,
        disabled: false,
        openImmediately: false,
        maxHeight: 500,
      };
      DropDownMenu.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = DropDownMenu;

      /***/
    },
    /* 663 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var NavigationArrowDropDown = function NavigationArrowDropDown(props) {
        return _react2.default.createElement(
          _SvgIcon2.default,
          props,
          _react2.default.createElement('path', { d: 'M7 10l5 5 5-5z' }),
        );
      };
      NavigationArrowDropDown = (0, _pure2.default)(NavigationArrowDropDown);
      NavigationArrowDropDown.displayName = 'NavigationArrowDropDown';
      NavigationArrowDropDown.muiName = 'SvgIcon';

      exports.default = NavigationArrowDropDown;

      /***/
    },
    /* 664 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _BeforeAfterWrapper = __webpack_require__(665);

      var _BeforeAfterWrapper2 = _interopRequireDefault(_BeforeAfterWrapper);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      var styles = {
        before: {
          content: "' '",
          display: 'table',
        },
        after: {
          content: "' '",
          clear: 'both',
          display: 'table',
        },
      };

      var ClearFix = function ClearFix(_ref) {
        var style = _ref.style;
        var children = _ref.children;

        var other = _objectWithoutProperties(_ref, ['style', 'children']);

        return _react2.default.createElement(
          _BeforeAfterWrapper2.default,
          _extends({}, other, {
            beforeStyle: styles.before,
            afterStyle: styles.after,
            style: style,
          }),
          children,
        );
      };

      ClearFix.muiName = 'ClearFix';

      ClearFix.propTypes = {
        children: _react.PropTypes.node,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };

      exports.default = ClearFix;

      /***/
    },
    /* 665 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      /**
       *  BeforeAfterWrapper
       *    An alternative for the ::before and ::after css pseudo-elements for
       *    components whose styles are defined in javascript instead of css.
       *
       *  Usage: For the element that we want to apply before and after elements to,
       *    wrap its children with BeforeAfterWrapper. For example:
       *
       *                                            <Paper>
       *  <Paper>                                     <div> // See notice
       *    <BeforeAfterWrapper>        renders         <div/> // before element
       *      [children of paper]       ------>         [children of paper]
       *    </BeforeAfterWrapper>                       <div/> // after element
       *  </Paper>                                    </div>
       *                                            </Paper>
       *
       *  Notice: Notice that this div bundles together our elements. If the element
       *    that we want to apply before and after elements is a HTML tag (i.e. a
       *    div, p, or button tag), we can avoid this extra nesting by passing using
       *    the BeforeAfterWrapper in place of said tag like so:
       *
       *  <p>
       *    <BeforeAfterWrapper>   do this instead   <BeforeAfterWrapper elementType='p'>
       *      [children of p]          ------>         [children of p]
       *    </BeforeAfterWrapper>                    </BeforeAfterWrapper>
       *  </p>
       *
       *  BeforeAfterWrapper features spread functionality. This means that we can
       *  pass HTML tag properties directly into the BeforeAfterWrapper tag.
       *
       *  When using BeforeAfterWrapper, ensure that the parent of the beforeElement
       *  and afterElement have a defined style position.
       */

      var styles = {
        box: {
          boxSizing: 'border-box',
        },
      };

      var BeforeAfterWrapper = (function (_Component) {
        _inherits(BeforeAfterWrapper, _Component);

        function BeforeAfterWrapper() {
          _classCallCheck(this, BeforeAfterWrapper);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(BeforeAfterWrapper).apply(this, arguments),
          );
        }

        _createClass(BeforeAfterWrapper, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var beforeStyle = _props.beforeStyle;
              var afterStyle = _props.afterStyle;
              var beforeElementType = _props.beforeElementType;
              var afterElementType = _props.afterElementType;
              var elementType = _props.elementType;

              var other = _objectWithoutProperties(_props, [
                'beforeStyle',
                'afterStyle',
                'beforeElementType',
                'afterElementType',
                'elementType',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var beforeElement = void 0;
              var afterElement = void 0;

              if (beforeStyle) {
                beforeElement = _react2.default.createElement(
                  this.props.beforeElementType,
                  {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)({}, styles.box, beforeStyle),
                    ),
                    key: '::before',
                  },
                );
              }

              if (afterStyle) {
                afterElement = _react2.default.createElement(
                  this.props.afterElementType,
                  {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)({}, styles.box, afterStyle),
                    ),
                    key: '::after',
                  },
                );
              }

              var children = [beforeElement, this.props.children, afterElement];

              var props = other;
              props.style = prepareStyles(
                (0, _simpleAssign2.default)({}, this.props.style),
              );

              return _react2.default.createElement(
                this.props.elementType,
                props,
                children,
              );
            },
          },
        ]);

        return BeforeAfterWrapper;
      })(_react.Component);

      BeforeAfterWrapper.propTypes = {
        afterElementType: _react.PropTypes.string,
        afterStyle: _react.PropTypes.object,
        beforeElementType: _react.PropTypes.string,
        beforeStyle: _react.PropTypes.object,
        children: _react.PropTypes.node,
        elementType: _react.PropTypes.string,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      BeforeAfterWrapper.defaultProps = {
        beforeElementType: 'div',
        afterElementType: 'div',
        elementType: 'div',
      };
      BeforeAfterWrapper.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = BeforeAfterWrapper;

      /***/
    },
    /* 666 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _FloatingActionButton = __webpack_require__(667);

      var _FloatingActionButton2 = _interopRequireDefault(
        _FloatingActionButton,
      );

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _FloatingActionButton2.default;

      /***/
    },
    /* 667 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _colorManipulator = __webpack_require__(583);

      var _EnhancedButton = __webpack_require__(544);

      var _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);

      var _FontIcon = __webpack_require__(562);

      var _FontIcon2 = _interopRequireDefault(_FontIcon);

      var _Paper = __webpack_require__(577);

      var _Paper2 = _interopRequireDefault(_Paper);

      var _childUtils = __webpack_require__(545);

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      var _propTypes = __webpack_require__(543);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var floatingActionButton = context.muiTheme.floatingActionButton;

        var backgroundColor =
          props.backgroundColor || floatingActionButton.color;
        var iconColor = floatingActionButton.iconColor;

        if (props.disabled) {
          backgroundColor =
            props.disabledColor || floatingActionButton.disabledColor;
          iconColor = floatingActionButton.disabledTextColor;
        } else if (props.secondary) {
          backgroundColor = floatingActionButton.secondaryColor;
          iconColor = floatingActionButton.secondaryIconColor;
        }

        return {
          root: {
            transition: _transitions2.default.easeOut(),
            display: 'inline-block',
          },
          container: {
            backgroundColor: backgroundColor,
            transition: _transitions2.default.easeOut(),
            position: 'relative',
            height: floatingActionButton.buttonSize,
            width: floatingActionButton.buttonSize,
            padding: 0,
            overflow: 'hidden',
            borderRadius: '50%',
            textAlign: 'center',
            verticalAlign: 'bottom',
          },
          containerWhenMini: {
            height: floatingActionButton.miniSize,
            width: floatingActionButton.miniSize,
          },
          overlay: {
            transition: _transitions2.default.easeOut(),
            top: 0,
          },
          overlayWhenHovered: {
            backgroundColor: (0, _colorManipulator.fade)(iconColor, 0.4),
          },
          icon: {
            height: floatingActionButton.buttonSize,
            lineHeight: floatingActionButton.buttonSize + 'px',
            fill: iconColor,
            color: iconColor,
          },
          iconWhenMini: {
            height: floatingActionButton.miniSize,
            lineHeight: floatingActionButton.miniSize + 'px',
          },
        };
      }

      var FloatingActionButton = (function (_Component) {
        _inherits(FloatingActionButton, _Component);

        function FloatingActionButton() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, FloatingActionButton);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    FloatingActionButton,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                hovered: false,
                touch: false,
                zDepth: undefined,
              }),
              (_this.handleMouseDown = function (event) {
                // only listen to left clicks
                if (event.button === 0) {
                  _this.setState({ zDepth: _this.props.zDepth + 1 });
                }
                if (_this.props.onMouseDown) _this.props.onMouseDown(event);
              }),
              (_this.handleMouseUp = function (event) {
                _this.setState({ zDepth: _this.props.zDepth });
                if (_this.props.onMouseUp) {
                  _this.props.onMouseUp(event);
                }
              }),
              (_this.handleMouseLeave = function (event) {
                if (!_this.refs.container.isKeyboardFocused()) {
                  _this.setState({
                    zDepth: _this.props.zDepth,
                    hovered: false,
                  });
                }
                if (_this.props.onMouseLeave) {
                  _this.props.onMouseLeave(event);
                }
              }),
              (_this.handleMouseEnter = function (event) {
                if (
                  !_this.refs.container.isKeyboardFocused() &&
                  !_this.state.touch
                ) {
                  _this.setState({ hovered: true });
                }
                if (_this.props.onMouseEnter) {
                  _this.props.onMouseEnter(event);
                }
              }),
              (_this.handleTouchStart = function (event) {
                _this.setState({
                  touch: true,
                  zDepth: _this.props.zDepth + 1,
                });
                if (_this.props.onTouchStart) {
                  _this.props.onTouchStart(event);
                }
              }),
              (_this.handleTouchEnd = function (event) {
                _this.setState({ zDepth: _this.props.zDepth });
                if (_this.props.onTouchEnd) {
                  _this.props.onTouchEnd(event);
                }
              }),
              (_this.handleKeyboardFocus = function (event, keyboardFocused) {
                if (keyboardFocused && !_this.props.disabled) {
                  _this.setState({ zDepth: _this.props.zDepth + 1 });
                  _this.refs.overlay.style.backgroundColor = (0,
                  _colorManipulator.fade)(
                    getStyles(_this.props, _this.context).icon.color,
                    0.4,
                  );
                } else if (!_this.state.hovered) {
                  _this.setState({ zDepth: _this.props.zDepth });
                  _this.refs.overlay.style.backgroundColor = 'transparent';
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(FloatingActionButton, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              this.setState({
                zDepth: this.props.disabled ? 0 : this.props.zDepth,
              });
            },
          },
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              true
                ? (0, _warning2.default)(
                    !this.props.iconClassName || !this.props.children,
                    'You have set both an iconClassName and a child icon. ' +
                      'It is recommended you use only one method when adding ' +
                      'icons to FloatingActionButtons.',
                  )
                : void 0;
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (nextProps.disabled !== this.props.disabled) {
                this.setState({
                  zDepth: nextProps.disabled ? 0 : this.props.zDepth,
                });
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var backgroundColor = _props.backgroundColor;
              var className = _props.className;
              var disabled = _props.disabled;
              var mini = _props.mini;
              var secondary = _props.secondary;
              var iconStyle = _props.iconStyle;
              var iconClassName = _props.iconClassName;
              var zDepth = _props.zDepth;

              var other = _objectWithoutProperties(_props, [
                'backgroundColor',
                'className',
                'disabled',
                'mini',
                'secondary',
                'iconStyle',
                'iconClassName',
                'zDepth',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              var iconElement = void 0;
              if (iconClassName) {
                iconElement = _react2.default.createElement(
                  _FontIcon2.default,
                  {
                    className: iconClassName,
                    style: (0, _simpleAssign2.default)(
                      {},
                      styles.icon,
                      mini && styles.iconWhenMini,
                      iconStyle,
                    ),
                  },
                );
              }

              var children = (0, _childUtils.extendChildren)(
                this.props.children,
                {
                  style: (0, _simpleAssign2.default)(
                    {},
                    styles.icon,
                    mini && styles.iconWhenMini,
                    iconStyle,
                  ),
                },
              );

              var buttonEventHandlers = disabled
                ? null
                : {
                    onMouseDown: this.handleMouseDown,
                    onMouseUp: this.handleMouseUp,
                    onMouseLeave: this.handleMouseLeave,
                    onMouseEnter: this.handleMouseEnter,
                    onTouchStart: this.handleTouchStart,
                    onTouchEnd: this.handleTouchEnd,
                    onKeyboardFocus: this.handleKeyboardFocus,
                  };

              return _react2.default.createElement(
                _Paper2.default,
                {
                  className: className,
                  style: (0, _simpleAssign2.default)(
                    styles.root,
                    this.props.style,
                  ),
                  zDepth: this.state.zDepth,
                  circle: true,
                },
                _react2.default.createElement(
                  _EnhancedButton2.default,
                  _extends({}, other, buttonEventHandlers, {
                    ref: 'container',
                    disabled: disabled,
                    style: (0, _simpleAssign2.default)(
                      styles.container,
                      this.props.mini && styles.containerWhenMini,
                      iconStyle,
                    ),
                    focusRippleColor: styles.icon.color,
                    touchRippleColor: styles.icon.color,
                  }),
                  _react2.default.createElement(
                    'div',
                    {
                      ref: 'overlay',
                      style: prepareStyles(
                        (0, _simpleAssign2.default)(
                          styles.overlay,
                          this.state.hovered &&
                            !this.props.disabled &&
                            styles.overlayWhenHovered,
                        ),
                      ),
                    },
                    iconElement,
                    children,
                  ),
                ),
              );
            },
          },
        ]);

        return FloatingActionButton;
      })(_react.Component);

      FloatingActionButton.propTypes = {
        /**
         * This value will override the default background color for the button.
         * However it will not override the default disabled background color.
         * This has to be set separately using the disabledColor attribute.
         */
        backgroundColor: _react.PropTypes.string,
        /**
         * This is what displayed inside the floating action button; for example, a SVG Icon.
         */
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * Disables the button if set to true.
         */
        disabled: _react.PropTypes.bool,
        /**
         * This value will override the default background color for the button when it is disabled.
         */
        disabledColor: _react.PropTypes.string,
        /**
         * The URL to link to when the button is clicked.
         */
        href: _react.PropTypes.string,
        /**
         * The icon within the FloatingActionButton is a FontIcon component.
         * This property is the classname of the icon to be displayed inside the button.
         * An alternative to adding an iconClassName would be to manually insert a
         * FontIcon component or custom SvgIcon component or as a child of FloatingActionButton.
         */
        iconClassName: _react.PropTypes.string,
        /**
         * This is the equivalent to iconClassName except that it is used for
         * overriding the inline-styles of the FontIcon component.
         */
        iconStyle: _react.PropTypes.object,
        /**
         * If true, the button will be a small floating action button.
         */
        mini: _react.PropTypes.bool,
        /** @ignore */
        onMouseDown: _react.PropTypes.func,
        /** @ignore */
        onMouseEnter: _react.PropTypes.func,
        /** @ignore */
        onMouseLeave: _react.PropTypes.func,
        /** @ignore */
        onMouseUp: _react.PropTypes.func,
        /** @ignore */
        onTouchEnd: _react.PropTypes.func,
        /** @ignore */
        onTouchStart: _react.PropTypes.func,
        /**
         * If true, the button will use the secondary button colors.
         */
        secondary: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The zDepth of the underlying `Paper` component.
         */
        zDepth: _propTypes2.default.zDepth,
      };
      FloatingActionButton.defaultProps = {
        disabled: false,
        mini: false,
        secondary: false,
        zDepth: 2,
      };
      FloatingActionButton.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = FloatingActionButton;

      /***/
    },
    /* 668 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = exports.GridTile = exports.GridList = undefined;

      var _GridList2 = __webpack_require__(669);

      var _GridList3 = _interopRequireDefault(_GridList2);

      var _GridTile2 = __webpack_require__(670);

      var _GridTile3 = _interopRequireDefault(_GridTile2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.GridList = _GridList3.default;
      exports.GridTile = _GridTile3.default;
      exports.default = _GridList3.default;

      /***/
    },
    /* 669 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props) {
        return {
          root: {
            display: 'flex',
            flexWrap: 'wrap',
            margin: -props.padding / 2,
          },
          item: {
            boxSizing: 'border-box',
            padding: props.padding / 2,
          },
        };
      }

      var GridList = (function (_Component) {
        _inherits(GridList, _Component);

        function GridList() {
          _classCallCheck(this, GridList);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(GridList).apply(this, arguments),
          );
        }

        _createClass(GridList, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var cols = _props.cols;
              var padding = _props.padding;
              var cellHeight = _props.cellHeight;
              var children = _props.children;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'cols',
                'padding',
                'cellHeight',
                'children',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);
              var mergedRootStyles = (0, _simpleAssign2.default)(
                styles.root,
                style,
              );

              var wrappedChildren = _react2.default.Children.map(
                children,
                function (currentChild) {
                  if (
                    _react2.default.isValidElement(currentChild) &&
                    currentChild.type.muiName === 'Subheader'
                  ) {
                    return currentChild;
                  }
                  var childCols = currentChild.props.cols || 1;
                  var childRows = currentChild.props.rows || 1;
                  var itemStyle = (0, _simpleAssign2.default)({}, styles.item, {
                    width: (100 / cols) * childCols + '%',
                    height: cellHeight * childRows + padding,
                  });

                  return _react2.default.createElement(
                    'div',
                    { style: prepareStyles(itemStyle) },
                    currentChild,
                  );
                },
              );

              return _react2.default.createElement(
                'div',
                _extends({ style: prepareStyles(mergedRootStyles) }, other),
                wrappedChildren,
              );
            },
          },
        ]);

        return GridList;
      })(_react.Component);

      GridList.propTypes = {
        /**
         * Number of px for one cell height.
         */
        cellHeight: _react.PropTypes.number,
        /**
         * Grid Tiles that will be in Grid List.
         */
        children: _react.PropTypes.node,
        /**
         * Number of columns.
         */
        cols: _react.PropTypes.number,
        /**
         * Number of px for the padding/spacing between items.
         */
        padding: _react.PropTypes.number,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      GridList.defaultProps = {
        cols: 2,
        padding: 4,
        cellHeight: 180,
      };
      GridList.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = GridList;

      /***/
    },
    /* 670 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true,
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }

      function getStyles(props, context) {
        var _titleBar;

        var _context$muiTheme = context.muiTheme;
        var baseTheme = _context$muiTheme.baseTheme;
        var gridTile = _context$muiTheme.gridTile;

        var actionPos = props.actionIcon && props.actionPosition;

        var styles = {
          root: {
            position: 'relative',
            display: 'block',
            height: '100%',
            overflow: 'hidden',
          },
          titleBar:
            ((_titleBar = {
              position: 'absolute',
              left: 0,
              right: 0,
            }),
            _defineProperty(_titleBar, props.titlePosition, 0),
            _defineProperty(_titleBar, 'height', props.subtitle ? 68 : 48),
            _defineProperty(_titleBar, 'background', props.titleBackground),
            _defineProperty(_titleBar, 'display', 'flex'),
            _defineProperty(_titleBar, 'alignItems', 'center'),
            _titleBar),
          titleWrap: {
            flexGrow: 1,
            marginLeft:
              actionPos !== 'left' ? baseTheme.spacing.desktopGutterLess : 0,
            marginRight:
              actionPos === 'left' ? baseTheme.spacing.desktopGutterLess : 0,
            color: gridTile.textColor,
            overflow: 'hidden',
          },
          title: {
            fontSize: '16px',
            textOverflow: 'ellipsis',
            overflow: 'hidden',
            whiteSpace: 'nowrap',
          },
          subtitle: {
            fontSize: '12px',
            textOverflow: 'ellipsis',
            overflow: 'hidden',
            whiteSpace: 'nowrap',
          },
          actionIcon: {
            order: actionPos === 'left' ? -1 : 1,
          },
          childImg: {
            height: '100%',
            transform: 'translateX(-50%)',
            position: 'relative',
            left: '50%',
          },
        };
        return styles;
      }

      var GridTile = (function (_Component) {
        _inherits(GridTile, _Component);

        function GridTile() {
          _classCallCheck(this, GridTile);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(GridTile).apply(this, arguments),
          );
        }

        _createClass(GridTile, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.ensureImageCover();
            },
          },
          {
            key: 'componentDidUpdate',
            value: function componentDidUpdate() {
              this.ensureImageCover();
            },
          },
          {
            key: 'ensureImageCover',
            value: function ensureImageCover() {
              var _this2 = this;

              var imgEl = this.refs.img;

              if (imgEl) {
                (function () {
                  var fit = function fit() {
                    if (imgEl.offsetWidth < imgEl.parentNode.offsetWidth) {
                      var isRtl = _this2.context.muiTheme.isRtl;

                      imgEl.style.height = 'auto';
                      if (isRtl) {
                        imgEl.style.right = '0';
                      } else {
                        imgEl.style.left = '0';
                      }
                      imgEl.style.width = '100%';
                      imgEl.style.top = '50%';
                      imgEl.style.transform = imgEl.style.WebkitTransform =
                        'translateY(-50%)';
                    }
                    imgEl.removeEventListener('load', fit);
                    imgEl = null; // prevent closure memory leak
                  };
                  if (imgEl.complete) {
                    fit();
                  } else {
                    imgEl.addEventListener('load', fit);
                  }
                })();
              }
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var title = _props.title;
              var subtitle = _props.subtitle;
              var titlePosition = _props.titlePosition;
              var titleBackground = _props.titleBackground;
              var actionIcon = _props.actionIcon;
              var actionPosition = _props.actionPosition;
              var style = _props.style;
              var children = _props.children;
              var containerElement = _props.containerElement;

              var other = _objectWithoutProperties(_props, [
                'title',
                'subtitle',
                'titlePosition',
                'titleBackground',
                'actionIcon',
                'actionPosition',
                'style',
                'children',
                'containerElement',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);
              var mergedRootStyles = (0, _simpleAssign2.default)(
                styles.root,
                style,
              );

              var titleBar = null;

              if (title) {
                titleBar = _react2.default.createElement(
                  'div',
                  { key: 'titlebar', style: prepareStyles(styles.titleBar) },
                  _react2.default.createElement(
                    'div',
                    { style: prepareStyles(styles.titleWrap) },
                    _react2.default.createElement(
                      'div',
                      { style: prepareStyles(styles.title) },
                      title,
                    ),
                    subtitle
                      ? _react2.default.createElement(
                          'div',
                          { style: prepareStyles(styles.subtitle) },
                          subtitle,
                        )
                      : null,
                  ),
                  actionIcon
                    ? _react2.default.createElement(
                        'div',
                        { style: prepareStyles(styles.actionIcon) },
                        actionIcon,
                      )
                    : null,
                );
              }

              var newChildren = children;

              // if there is a single image passed as children
              // clone it and add our styles
              if (_react2.default.Children.count(children) === 1) {
                newChildren = _react2.default.Children.map(children, function (
                  child,
                ) {
                  if (child.type === 'img') {
                    return _react2.default.cloneElement(child, {
                      key: 'img',
                      ref: 'img',
                      style: prepareStyles(
                        (0, _simpleAssign2.default)(
                          {},
                          styles.childImg,
                          child.props.style,
                        ),
                      ),
                    });
                  } else {
                    return child;
                  }
                });
              }

              var containerProps = _extends(
                {
                  style: prepareStyles(mergedRootStyles),
                },
                other,
              );

              return _react2.default.isValidElement(containerElement)
                ? _react2.default.cloneElement(
                    containerElement,
                    containerProps,
                    [newChildren, titleBar],
                  )
                : _react2.default.createElement(
                    containerElement,
                    containerProps,
                    [newChildren, titleBar],
                  );
            },
          },
        ]);

        return GridTile;
      })(_react.Component);

      GridTile.propTypes = {
        /**
         * An IconButton element to be used as secondary action target
         * (primary action target is the tile itself).
         */
        actionIcon: _react.PropTypes.element,
        /**
         * Position of secondary action IconButton.
         */
        actionPosition: _react.PropTypes.oneOf(['left', 'right']),
        /**
         * Theoretically you can pass any node as children, but the main use case is to pass an img,
         * in whichcase GridTile takes care of making the image "cover" available space
         * (similar to background-size: cover or to object-fit:cover).
         */
        children: _react.PropTypes.node,
        /**
         * Width of the tile in number of grid cells.
         */
        cols: _react.PropTypes.number,
        /**
         * Either a string used as tag name for the tile root element, or a ReactElement.
         * This is useful when you have, for example, a custom implementation of
         * a navigation link (that knows about your routes) and you want to use it as the primary tile action.
         * In case you pass a ReactElement, please ensure that it passes all props,
         * accepts styles overrides and render it's children.
         */
        containerElement: _react.PropTypes.oneOfType([
          _react.PropTypes.string,
          _react.PropTypes.element,
        ]),
        /**
         * Height of the tile in number of grid cells.
         */
        rows: _react.PropTypes.number,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * String or element serving as subtitle (support text).
         */
        subtitle: _react.PropTypes.node,
        /**
         * Title to be displayed on tile.
         */
        title: _react.PropTypes.node,
        /**
         * Style used for title bar background.
         * Useful for setting custom gradients for example
         */
        titleBackground: _react.PropTypes.string,
        /**
         * Position of the title bar (container of title, subtitle and action icon).
         */
        titlePosition: _react.PropTypes.oneOf(['top', 'bottom']),
      };
      GridTile.defaultProps = {
        titlePosition: 'bottom',
        titleBackground: 'rgba(0, 0, 0, 0.4)',
        actionPosition: 'right',
        cols: 1,
        rows: 1,
        containerElement: 'div',
      };
      GridTile.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = GridTile;

      /***/
    },
    /* 671 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = exports.MenuItem = exports.IconMenu = undefined;

      var _IconMenu2 = __webpack_require__(672);

      var _IconMenu3 = _interopRequireDefault(_IconMenu2);

      var _MenuItem2 = __webpack_require__(597);

      var _MenuItem3 = _interopRequireDefault(_MenuItem2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.IconMenu = _IconMenu3.default;
      exports.MenuItem = _MenuItem3.default;
      exports.default = _IconMenu3.default;

      /***/
    },
    /* 672 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _events = __webpack_require__(548);

      var _events2 = _interopRequireDefault(_events);

      var _propTypes = __webpack_require__(543);

      var _propTypes2 = _interopRequireDefault(_propTypes);

      var _Menu = __webpack_require__(590);

      var _Menu2 = _interopRequireDefault(_Menu);

      var _Popover = __webpack_require__(598);

      var _Popover2 = _interopRequireDefault(_Popover);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var IconMenu = (function (_Component) {
        _inherits(IconMenu, _Component);

        function IconMenu() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, IconMenu);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    IconMenu,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                menuInitiallyKeyboardFocused: false,
                open: false,
              }),
              (_this.handleItemTouchTap = function (event, child) {
                if (
                  _this.props.touchTapCloseDelay !== 0 &&
                  !child.props.hasOwnProperty('menuItems')
                ) {
                  (function () {
                    var isKeyboard = _events2.default.isKeyboard(event);
                    _this.timerCloseId = setTimeout(function () {
                      _this.close(isKeyboard ? 'enter' : 'itemTap', isKeyboard);
                    }, _this.props.touchTapCloseDelay);
                  })();
                }

                _this.props.onItemTouchTap(event, child);
              }),
              (_this.handleRequestClose = function (reason) {
                _this.close(reason);
              }),
              (_this.handleEscKeyDownMenu = function (event) {
                _this.close('escape', event);
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(IconMenu, [
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (nextProps.open != null) {
                this.setState({
                  open: nextProps.open,
                  anchorEl: this.refs.iconMenuContainer,
                });
              }
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              clearTimeout(this.timerCloseId);
            },
          },
          {
            key: 'isOpen',
            value: function isOpen() {
              return this.state.open;
            },
          },
          {
            key: 'close',
            value: function close(reason, isKeyboard) {
              var _this2 = this;

              if (!this.state.open) {
                return;
              }

              if (this.props.open !== null) {
                this.props.onRequestChange(false, reason);
              }

              this.setState({ open: false }, function () {
                // Set focus on the icon button when the menu close
                if (isKeyboard) {
                  var iconButton = _this2.refs.iconButton;
                  _reactDom2.default.findDOMNode(iconButton).focus();
                  iconButton.setKeyboardFocus();
                }
              });
            },
          },
          {
            key: 'open',
            value: function open(reason, event) {
              if (this.props.open !== null) {
                this.props.onRequestChange(true, reason);

                return this.setState({
                  menuInitiallyKeyboardFocused: _events2.default.isKeyboard(
                    event,
                  ),
                  anchorEl: event.currentTarget,
                });
              }

              this.setState({
                open: true,
                menuInitiallyKeyboardFocused: _events2.default.isKeyboard(
                  event,
                ),
                anchorEl: event.currentTarget,
              });

              event.preventDefault();
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this3 = this;

              var _props = this.props;
              var anchorOrigin = _props.anchorOrigin;
              var className = _props.className;
              var animated = _props.animated;
              var animation = _props.animation;
              var iconButtonElement = _props.iconButtonElement;
              var iconStyle = _props.iconStyle;
              var onItemTouchTap = _props.onItemTouchTap;
              var onKeyboardFocus = _props.onKeyboardFocus;
              var onMouseDown = _props.onMouseDown;
              var onMouseLeave = _props.onMouseLeave;
              var onMouseEnter = _props.onMouseEnter;
              var onMouseUp = _props.onMouseUp;
              var onRequestChange = _props.onRequestChange;
              var onTouchTap = _props.onTouchTap;
              var menuStyle = _props.menuStyle;
              var style = _props.style;
              var targetOrigin = _props.targetOrigin;
              var touchTapCloseDelay = _props.touchTapCloseDelay;
              var useLayerForClickAway = _props.useLayerForClickAway;

              var other = _objectWithoutProperties(_props, [
                'anchorOrigin',
                'className',
                'animated',
                'animation',
                'iconButtonElement',
                'iconStyle',
                'onItemTouchTap',
                'onKeyboardFocus',
                'onMouseDown',
                'onMouseLeave',
                'onMouseEnter',
                'onMouseUp',
                'onRequestChange',
                'onTouchTap',
                'menuStyle',
                'style',
                'targetOrigin',
                'touchTapCloseDelay',
                'useLayerForClickAway',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;
              var _state = this.state;
              var open = _state.open;
              var anchorEl = _state.anchorEl;

              var styles = {
                root: {
                  display: 'inline-block',
                  position: 'relative',
                },
                menu: {
                  position: 'relative',
                },
              };

              var mergedRootStyles = (0, _simpleAssign2.default)(
                styles.root,
                style,
              );
              var mergedMenuStyles = (0, _simpleAssign2.default)(
                styles.menu,
                menuStyle,
              );

              var iconButton = _react2.default.cloneElement(iconButtonElement, {
                onKeyboardFocus: onKeyboardFocus,
                iconStyle: (0, _simpleAssign2.default)(
                  {},
                  iconStyle,
                  iconButtonElement.props.iconStyle,
                ),
                onTouchTap: function onTouchTap(event) {
                  _this3.open(
                    _events2.default.isKeyboard(event) ? 'keyboard' : 'iconTap',
                    event,
                  );
                  if (iconButtonElement.props.onTouchTap) {
                    iconButtonElement.props.onTouchTap(event);
                  }
                },
                ref: 'iconButton',
              });

              var menu = _react2.default.createElement(
                _Menu2.default,
                _extends({}, other, {
                  initiallyKeyboardFocused: this.state
                    .menuInitiallyKeyboardFocused,
                  onEscKeyDown: this.handleEscKeyDownMenu,
                  onItemTouchTap: this.handleItemTouchTap,
                  style: mergedMenuStyles,
                }),
                this.props.children,
              );

              return _react2.default.createElement(
                'div',
                {
                  ref: 'iconMenuContainer',
                  className: className,
                  onMouseDown: onMouseDown,
                  onMouseLeave: onMouseLeave,
                  onMouseEnter: onMouseEnter,
                  onMouseUp: onMouseUp,
                  onTouchTap: onTouchTap,
                  style: prepareStyles(mergedRootStyles),
                },
                iconButton,
                _react2.default.createElement(
                  _Popover2.default,
                  {
                    anchorOrigin: anchorOrigin,
                    targetOrigin: targetOrigin,
                    open: open,
                    anchorEl: anchorEl,
                    childContextTypes: this.constructor.childContextTypes,
                    useLayerForClickAway: useLayerForClickAway,
                    onRequestClose: this.handleRequestClose,
                    animated: animated,
                    animation: animation,
                    context: this.context,
                  },
                  menu,
                ),
              );
            },
          },
        ]);

        return IconMenu;
      })(_react.Component);

      IconMenu.muiName = 'IconMenu';
      IconMenu.propTypes = {
        /**
         * This is the point on the icon where the menu
         * `targetOrigin` will attach.
         * Options:
         * vertical: [top, middle, bottom]
         * horizontal: [left, center, right].
         */
        anchorOrigin: _propTypes2.default.origin,
        /**
         * If true, the popover will apply transitions when
         * it gets added to the DOM.
         */
        animated: _react.PropTypes.bool,
        /**
         * Override the default animation component used.
         */
        animation: _react.PropTypes.func,
        /**
         * Should be used to pass `MenuItem` components.
         */
        children: _react.PropTypes.node,
        /**
         * The CSS class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * This is the `IconButton` to render. This button will open the menu.
         */
        iconButtonElement: _react.PropTypes.element.isRequired,
        /**
         * Override the inline-styles of the underlying icon element.
         */
        iconStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of the menu element.
         */
        menuStyle: _react.PropTypes.object,
        /**
         * If true, the value can an be array and allow the menu to be a multi-select.
         */
        multiple: _react.PropTypes.bool,
        /**
         * Callback function fired when a menu item is selected with a touch-tap.
         *
         * @param {object} event TouchTap event targeting the selected menu item element.
         * @param {object} child The selected element.
         */
        onItemTouchTap: _react.PropTypes.func,
        /**
         * Callback function fired when the `IconButton` element is focused or blurred by the keyboard.
         *
         * @param {object} event `focus` or `blur` event targeting the `IconButton` element.
         * @param {boolean} keyboardFocused If true, the `IconButton` element is focused.
         */
        onKeyboardFocus: _react.PropTypes.func,
        /** @ignore */
        onMouseDown: _react.PropTypes.func,
        /** @ignore */
        onMouseEnter: _react.PropTypes.func,
        /** @ignore */
        onMouseLeave: _react.PropTypes.func,
        /** @ignore */
        onMouseUp: _react.PropTypes.func,
        /**
         * Callback function fired when the `open` state of the menu is requested to be changed.
         *
         * @param {boolean} open If true, the menu was requested to be opened.
         * @param {string} reason The reason for the open or close request. Possible values are
         * 'keyboard' and 'iconTap' for open requests; 'enter', 'escape', 'itemTap', and 'clickAway'
         * for close requests.
         */
        onRequestChange: _react.PropTypes.func,
        /**
         * Callback function fired when the `IconButton` element is touch-tapped.
         *
         * @param {object} event TouchTap event targeting the `IconButton` element.
         */
        onTouchTap: _react.PropTypes.func,
        /**
         * If true, the `IconMenu` is opened.
         */
        open: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * This is the point on the menu which will stick to the menu
         * origin.
         * Options:
         * vertical: [top, middle, bottom]
         * horizontal: [left, center, right].
         */
        targetOrigin: _propTypes2.default.origin,
        /**
         * Sets the delay in milliseconds before closing the
         * menu when an item is clicked.
         * If set to 0 then the auto close functionality
         * will be disabled.
         */
        touchTapCloseDelay: _react.PropTypes.number,
        /**
         * If true, the popover will render on top of an invisible
         * layer, which will prevent clicks to the underlying elements.
         */
        useLayerForClickAway: _react.PropTypes.bool,
      };
      IconMenu.defaultProps = {
        anchorOrigin: {
          vertical: 'top',
          horizontal: 'left',
        },
        animated: true,
        multiple: false,
        open: null,
        onItemTouchTap: function onItemTouchTap() {},
        onKeyboardFocus: function onKeyboardFocus() {},
        onMouseDown: function onMouseDown() {},
        onMouseLeave: function onMouseLeave() {},
        onMouseEnter: function onMouseEnter() {},
        onMouseUp: function onMouseUp() {},
        onRequestChange: function onRequestChange() {},
        onTouchTap: function onTouchTap() {},
        targetOrigin: {
          vertical: 'top',
          horizontal: 'left',
        },
        touchTapCloseDelay: 200,
        useLayerForClickAway: false,
      };
      IconMenu.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = IconMenu;

      /***/
    },
    /* 673 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _LinearProgress = __webpack_require__(674);

      var _LinearProgress2 = _interopRequireDefault(_LinearProgress);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _LinearProgress2.default;

      /***/
    },
    /* 674 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getRelativeValue(value, min, max) {
        var clampedValue = Math.min(Math.max(min, value), max);
        var rangeValue = max - min;
        var relValue =
          Math.round(((clampedValue - min) / rangeValue) * 10000) / 10000;
        return relValue * 100;
      }

      function getStyles(props, context) {
        var max = props.max;
        var min = props.min;
        var value = props.value;
        var palette = context.muiTheme.baseTheme.palette;

        var styles = {
          root: {
            position: 'relative',
            height: 4,
            display: 'block',
            width: '100%',
            backgroundColor: palette.primary3Color,
            borderRadius: 2,
            margin: 0,
            overflow: 'hidden',
          },
          bar: {
            height: '100%',
          },
          barFragment1: {},
          barFragment2: {},
        };

        if (props.mode === 'indeterminate') {
          styles.barFragment1 = {
            position: 'absolute',
            backgroundColor: props.color || palette.primary1Color,
            top: 0,
            left: 0,
            bottom: 0,
            transition: _transitions2.default.create(
              'all',
              '840ms',
              null,
              'cubic-bezier(0.650, 0.815, 0.735, 0.395)',
            ),
          };

          styles.barFragment2 = {
            position: 'absolute',
            backgroundColor: props.color || palette.primary1Color,
            top: 0,
            left: 0,
            bottom: 0,
            transition: _transitions2.default.create(
              'all',
              '840ms',
              null,
              'cubic-bezier(0.165, 0.840, 0.440, 1.000)',
            ),
          };
        } else {
          styles.bar.backgroundColor = props.color || palette.primary1Color;
          styles.bar.transition = _transitions2.default.create(
            'width',
            '.3s',
            null,
            'linear',
          );
          styles.bar.width = getRelativeValue(value, min, max) + '%';
        }

        return styles;
      }

      var LinearProgress = (function (_Component) {
        _inherits(LinearProgress, _Component);

        function LinearProgress() {
          _classCallCheck(this, LinearProgress);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(LinearProgress).apply(this, arguments),
          );
        }

        _createClass(LinearProgress, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              var _this2 = this;

              this.timers = {};

              this.timers.bar1 = this.barUpdate('bar1', 0, this.refs.bar1, [
                [-35, 100],
                [100, -90],
              ]);

              this.timers.bar2 = setTimeout(function () {
                _this2.barUpdate('bar2', 0, _this2.refs.bar2, [
                  [-200, 100],
                  [107, -8],
                ]);
              }, 850);
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              clearTimeout(this.timers.bar1);
              clearTimeout(this.timers.bar2);
            },
          },
          {
            key: 'barUpdate',
            value: function barUpdate(id, step, barElement, stepValues) {
              var _this3 = this;

              if (this.props.mode !== 'indeterminate') return;

              step = step || 0;
              step %= 4;

              var right = this.context.muiTheme.isRtl ? 'left' : 'right';
              var left = this.context.muiTheme.isRtl ? 'right' : 'left';

              if (step === 0) {
                barElement.style[left] = stepValues[0][0] + '%';
                barElement.style[right] = stepValues[0][1] + '%';
              } else if (step === 1) {
                barElement.style.transitionDuration = '840ms';
              } else if (step === 2) {
                barElement.style[left] = stepValues[1][0] + '%';
                barElement.style[right] = stepValues[1][1] + '%';
              } else if (step === 3) {
                barElement.style.transitionDuration = '0ms';
              }
              this.timers[id] = setTimeout(function () {
                return _this3.barUpdate(id, step + 1, barElement, stepValues);
              }, 420);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, ['style']);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(styles.root, style),
                  ),
                }),
                _react2.default.createElement(
                  'div',
                  { style: prepareStyles(styles.bar) },
                  _react2.default.createElement('div', {
                    ref: 'bar1',
                    style: prepareStyles(styles.barFragment1),
                  }),
                  _react2.default.createElement('div', {
                    ref: 'bar2',
                    style: prepareStyles(styles.barFragment2),
                  }),
                ),
              );
            },
          },
        ]);

        return LinearProgress;
      })(_react.Component);

      LinearProgress.propTypes = {
        /**
         * The mode of show your progress, indeterminate for
         * when there is no value for progress.
         */
        color: _react.PropTypes.string,
        /**
         * The max value of progress, only works in determinate mode.
         */
        max: _react.PropTypes.number,
        /**
         * The min value of progress, only works in determinate mode.
         */
        min: _react.PropTypes.number,
        /**
         * The mode of show your progress, indeterminate for when
         * there is no value for progress.
         */
        mode: _react.PropTypes.oneOf(['determinate', 'indeterminate']),
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The value of progress, only works in determinate mode.
         */
        value: _react.PropTypes.number,
      };
      LinearProgress.defaultProps = {
        mode: 'indeterminate',
        value: 0,
        min: 0,
        max: 100,
      };
      LinearProgress.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = LinearProgress;

      /***/
    },
    /* 675 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = exports.MakeSelectable = exports.ListItem = exports.List = undefined;

      var _List2 = __webpack_require__(592);

      var _List3 = _interopRequireDefault(_List2);

      var _ListItem2 = __webpack_require__(605);

      var _ListItem3 = _interopRequireDefault(_ListItem2);

      var _MakeSelectable2 = __webpack_require__(676);

      var _MakeSelectable3 = _interopRequireDefault(_MakeSelectable2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.List = _List3.default;
      exports.ListItem = _ListItem3.default;
      exports.MakeSelectable = _MakeSelectable3.default;
      exports.default = _List3.default;

      /***/
    },
    /* 676 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.MakeSelectable = undefined;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _colorManipulator = __webpack_require__(583);

      var _deprecatedPropType = __webpack_require__(561);

      var _deprecatedPropType2 = _interopRequireDefault(_deprecatedPropType);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MakeSelectable = (exports.MakeSelectable = function MakeSelectable(
        Component,
      ) {
        var _class, _temp2;

        return (
          (_temp2 = _class = (function (_Component) {
            _inherits(_class, _Component);

            function _class() {
              var _Object$getPrototypeO;

              var _temp, _this, _ret;

              _classCallCheck(this, _class);

              for (
                var _len = arguments.length, args = Array(_len), _key = 0;
                _key < _len;
                _key++
              ) {
                args[_key] = arguments[_key];
              }

              return (
                (_ret =
                  ((_temp =
                    ((_this = _possibleConstructorReturn(
                      this,
                      (_Object$getPrototypeO = Object.getPrototypeOf(
                        _class,
                      )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                    )),
                    _this)),
                  (_this.hasSelectedDescendant = function (
                    previousValue,
                    child,
                  ) {
                    if (
                      _react2.default.isValidElement(child) &&
                      child.props.nestedItems &&
                      child.props.nestedItems.length > 0
                    ) {
                      return child.props.nestedItems.reduce(
                        _this.hasSelectedDescendant,
                        previousValue,
                      );
                    }
                    return (
                      previousValue || _this.isChildSelected(child, _this.props)
                    );
                  }),
                  (_this.handleItemTouchTap = function (event, item) {
                    var valueLink = _this.getValueLink(_this.props);
                    var itemValue = item.props.value;

                    if (itemValue !== valueLink.value) {
                      valueLink.requestChange(event, itemValue);
                    }
                  }),
                  _temp)),
                _possibleConstructorReturn(_this, _ret)
              );
            }

            _createClass(_class, [
              {
                key: 'getValueLink',
                value: function getValueLink(props) {
                  return (
                    props.valueLink || {
                      value: props.value,
                      requestChange: props.onChange,
                    }
                  );
                },
              },
              {
                key: 'extendChild',
                value: function extendChild(child, styles, selectedItemStyle) {
                  var _this2 = this;

                  if (
                    child &&
                    child.type &&
                    child.type.muiName === 'ListItem'
                  ) {
                    var selected = this.isChildSelected(child, this.props);
                    var selectedChildrenStyles = void 0;
                    if (selected) {
                      selectedChildrenStyles = (0, _simpleAssign2.default)(
                        {},
                        styles,
                        selectedItemStyle,
                      );
                    }

                    var mergedChildrenStyles = (0, _simpleAssign2.default)(
                      {},
                      child.props.style,
                      selectedChildrenStyles,
                    );

                    this.keyIndex += 1;

                    return _react2.default.cloneElement(child, {
                      onTouchTap: function onTouchTap(event) {
                        _this2.handleItemTouchTap(event, child);
                        if (child.props.onTouchTap) {
                          child.props.onTouchTap(event);
                        }
                      },
                      key: this.keyIndex,
                      style: mergedChildrenStyles,
                      nestedItems: child.props.nestedItems.map(function (
                        child,
                      ) {
                        return _this2.extendChild(
                          child,
                          styles,
                          selectedItemStyle,
                        );
                      }),
                      initiallyOpen: this.isInitiallyOpen(child),
                    });
                  } else {
                    return child;
                  }
                },
              },
              {
                key: 'isInitiallyOpen',
                value: function isInitiallyOpen(child) {
                  if (child.props.initiallyOpen) {
                    return child.props.initiallyOpen;
                  }
                  return this.hasSelectedDescendant(false, child);
                },
              },
              {
                key: 'isChildSelected',
                value: function isChildSelected(child, props) {
                  return this.getValueLink(props).value === child.props.value;
                },
              },
              {
                key: 'render',
                value: function render() {
                  var _this3 = this;

                  var _props = this.props;
                  var children = _props.children;
                  var selectedItemStyle = _props.selectedItemStyle;

                  var other = _objectWithoutProperties(_props, [
                    'children',
                    'selectedItemStyle',
                  ]);

                  this.keyIndex = 0;
                  var styles = {};

                  if (!selectedItemStyle) {
                    var textColor = this.context.muiTheme.baseTheme.palette
                      .textColor;
                    styles.backgroundColor = (0, _colorManipulator.fade)(
                      textColor,
                      0.2,
                    );
                  }

                  return _react2.default.createElement(
                    Component,
                    _extends({}, other, this.state),
                    _react2.default.Children.map(children, function (child) {
                      return _this3.extendChild(
                        child,
                        styles,
                        selectedItemStyle,
                      );
                    }),
                  );
                },
              },
            ]);

            return _class;
          })(Component)),
          (_class.propTypes = {
            children: _react.PropTypes.node,
            onChange: _react.PropTypes.func,
            selectedItemStyle: _react.PropTypes.object,
            value: _react.PropTypes.any,
            valueLink: (0, _deprecatedPropType2.default)(
              _react.PropTypes.shape({
                value: _react.PropTypes.any,
                requestChange: _react.PropTypes.func,
              }),
              'This property is deprecated due to his low popularity. Use the value and onChange property.\n        It will be removed with v0.16.0.',
            ),
          }),
          (_class.contextTypes = {
            muiTheme: _react.PropTypes.object.isRequired,
          }),
          _temp2
        );
      });

      exports.default = MakeSelectable;

      /***/
    },
    /* 677 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _getMuiTheme = __webpack_require__(678);

      var _getMuiTheme2 = _interopRequireDefault(_getMuiTheme);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var MuiThemeProvider = (function (_Component) {
        _inherits(MuiThemeProvider, _Component);

        function MuiThemeProvider() {
          _classCallCheck(this, MuiThemeProvider);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(MuiThemeProvider).apply(this, arguments),
          );
        }

        _createClass(MuiThemeProvider, [
          {
            key: 'getChildContext',
            value: function getChildContext() {
              return {
                muiTheme: this.props.muiTheme || (0, _getMuiTheme2.default)(),
              };
            },
          },
          {
            key: 'render',
            value: function render() {
              return this.props.children;
            },
          },
        ]);

        return MuiThemeProvider;
      })(_react.Component);

      MuiThemeProvider.propTypes = {
        children: _react.PropTypes.element,
        muiTheme: _react.PropTypes.object,
      };
      MuiThemeProvider.childContextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = MuiThemeProvider;

      /***/
    },
    /* 678 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = getMuiTheme;

      var _merge = __webpack_require__(679);

      var _merge2 = _interopRequireDefault(_merge);

      var _colorManipulator = __webpack_require__(583);

      var _lightBaseTheme = __webpack_require__(707);

      var _lightBaseTheme2 = _interopRequireDefault(_lightBaseTheme);

      var _zIndex = __webpack_require__(710);

      var _zIndex2 = _interopRequireDefault(_zIndex);

      var _autoprefixer = __webpack_require__(711);

      var _autoprefixer2 = _interopRequireDefault(_autoprefixer);

      var _callOnce = __webpack_require__(743);

      var _callOnce2 = _interopRequireDefault(_callOnce);

      var _rtl = __webpack_require__(744);

      var _rtl2 = _interopRequireDefault(_rtl);

      var _compose = __webpack_require__(745);

      var _compose2 = _interopRequireDefault(_compose);

      var _typography = __webpack_require__(746);

      var _typography2 = _interopRequireDefault(_typography);

      var _colors = __webpack_require__(708);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _toConsumableArray(arr) {
        if (Array.isArray(arr)) {
          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
            arr2[i] = arr[i];
          }
          return arr2;
        } else {
          return Array.from(arr);
        }
      }

      /**
       * Get the MUI theme corresponding to a base theme.
       * It's possible to override the computed theme values
       * by providing a second argument. The calculated
       * theme will be deeply merged with the second argument.
       */
      function getMuiTheme(muiTheme) {
        for (
          var _len = arguments.length,
            more = Array(_len > 1 ? _len - 1 : 0),
            _key = 1;
          _key < _len;
          _key++
        ) {
          more[_key - 1] = arguments[_key];
        }

        muiTheme = _merge2.default.apply(
          undefined,
          [
            {
              zIndex: _zIndex2.default,
              isRtl: false,
              userAgent: undefined,
            },
            _lightBaseTheme2.default,
            muiTheme,
          ].concat(more),
        );

        var _muiTheme = muiTheme;
        var spacing = _muiTheme.spacing;
        var fontFamily = _muiTheme.fontFamily;
        var palette = _muiTheme.palette;

        var baseTheme = {
          spacing: spacing,
          fontFamily: fontFamily,
          palette: palette,
        };

        muiTheme = (0, _merge2.default)(
          {
            appBar: {
              color: palette.primary1Color,
              textColor: palette.alternateTextColor,
              height: spacing.desktopKeylineIncrement,
              titleFontWeight: _typography2.default.fontWeightNormal,
              padding: spacing.desktopGutter,
            },
            avatar: {
              color: palette.canvasColor,
              backgroundColor: (0, _colorManipulator.emphasize)(
                palette.canvasColor,
                0.26,
              ),
            },
            badge: {
              color: palette.alternateTextColor,
              textColor: palette.textColor,
              primaryColor: palette.accent1Color,
              primaryTextColor: palette.alternateTextColor,
              secondaryColor: palette.primary1Color,
              secondaryTextColor: palette.alternateTextColor,
              fontWeight: _typography2.default.fontWeightMedium,
            },
            bottomNavigation: {
              backgroundColor: palette.canvasColor,
              unselectedColor: (0, _colorManipulator.fade)(
                palette.textColor,
                0.54,
              ),
              selectedColor: palette.primary1Color,
              height: 56,
              unselectedFontSize: 12,
              selectedFontSize: 14,
            },
            button: {
              height: 36,
              minWidth: 88,
              iconButtonSize: spacing.iconSize * 2,
            },
            card: {
              titleColor: (0, _colorManipulator.fade)(palette.textColor, 0.87),
              subtitleColor: (0, _colorManipulator.fade)(
                palette.textColor,
                0.54,
              ),
              fontWeight: _typography2.default.fontWeightMedium,
            },
            cardMedia: {
              color: _colors.darkWhite,
              overlayContentBackground: _colors.lightBlack,
              titleColor: _colors.darkWhite,
              subtitleColor: _colors.lightWhite,
            },
            cardText: {
              textColor: palette.textColor,
            },
            checkbox: {
              boxColor: palette.textColor,
              checkedColor: palette.primary1Color,
              requiredColor: palette.primary1Color,
              disabledColor: palette.disabledColor,
              labelColor: palette.textColor,
              labelDisabledColor: palette.disabledColor,
            },
            chip: {
              backgroundColor: (0, _colorManipulator.emphasize)(
                palette.canvasColor,
                0.12,
              ),
              deleteIconColor: (0, _colorManipulator.fade)(
                palette.textColor,
                0.26,
              ),
              textColor: (0, _colorManipulator.fade)(palette.textColor, 0.87),
              fontSize: 14,
              fontWeight: _typography2.default.fontWeightNormal,
              shadow:
                '0 1px 6px ' +
                (0, _colorManipulator.fade)(palette.shadowColor, 0.12) +
                ',\n        0 1px 4px ' +
                (0, _colorManipulator.fade)(palette.shadowColor, 0.12),
            },
            datePicker: {
              color: palette.primary1Color,
              textColor: palette.alternateTextColor,
              calendarTextColor: palette.textColor,
              selectColor: palette.primary2Color,
              selectTextColor: palette.alternateTextColor,
              calendarYearBackgroundColor: _colors.white,
            },
            dialog: {
              titleFontSize: 22,
              bodyFontSize: 16,
              bodyColor: (0, _colorManipulator.fade)(palette.textColor, 0.6),
            },
            dropDownMenu: {
              accentColor: palette.borderColor,
            },
            enhancedButton: {
              tapHighlightColor: _colors.transparent,
            },
            flatButton: {
              color: _colors.transparent,
              buttonFilterColor: '#999999',
              disabledTextColor: (0, _colorManipulator.fade)(
                palette.textColor,
                0.3,
              ),
              textColor: palette.textColor,
              primaryTextColor: palette.primary1Color,
              secondaryTextColor: palette.accent1Color,
              fontSize: _typography2.default.fontStyleButtonFontSize,
              fontWeight: _typography2.default.fontWeightMedium,
            },
            floatingActionButton: {
              buttonSize: 56,
              miniSize: 40,
              color: palette.primary1Color,
              iconColor: palette.alternateTextColor,
              secondaryColor: palette.accent1Color,
              secondaryIconColor: palette.alternateTextColor,
              disabledTextColor: palette.disabledColor,
              disabledColor: (0, _colorManipulator.emphasize)(
                palette.canvasColor,
                0.12,
              ),
            },
            gridTile: {
              textColor: _colors.white,
            },
            icon: {
              color: palette.canvasColor,
              backgroundColor: palette.primary1Color,
            },
            inkBar: {
              backgroundColor: palette.accent1Color,
            },
            drawer: {
              width: spacing.desktopKeylineIncrement * 4,
              color: palette.canvasColor,
            },
            listItem: {
              nestedLevelDepth: 18,
              secondaryTextColor: palette.secondaryTextColor,
              leftIconColor: _colors.grey600,
              rightIconColor: _colors.grey600,
            },
            menu: {
              backgroundColor: palette.canvasColor,
              containerBackgroundColor: palette.canvasColor,
            },
            menuItem: {
              dataHeight: 32,
              height: 48,
              hoverColor: (0, _colorManipulator.fade)(palette.textColor, 0.035),
              padding: spacing.desktopGutter,
              selectedTextColor: palette.accent1Color,
              rightIconDesktopFill: _colors.grey600,
            },
            menuSubheader: {
              padding: spacing.desktopGutter,
              borderColor: palette.borderColor,
              textColor: palette.primary1Color,
            },
            overlay: {
              backgroundColor: _colors.lightBlack,
            },
            paper: {
              color: palette.textColor,
              backgroundColor: palette.canvasColor,
              zDepthShadows: [
                [1, 6, 0.12, 1, 4, 0.12],
                [3, 10, 0.16, 3, 10, 0.23],
                [10, 30, 0.19, 6, 10, 0.23],
                [14, 45, 0.25, 10, 18, 0.22],
                [19, 60, 0.3, 15, 20, 0.22],
              ].map(function (d) {
                return (
                  '0 ' +
                  d[0] +
                  'px ' +
                  d[1] +
                  'px ' +
                  (0, _colorManipulator.fade)(palette.shadowColor, d[2]) +
                  ',\n         0 ' +
                  d[3] +
                  'px ' +
                  d[4] +
                  'px ' +
                  (0, _colorManipulator.fade)(palette.shadowColor, d[5])
                );
              }),
            },
            radioButton: {
              borderColor: palette.textColor,
              backgroundColor: palette.alternateTextColor,
              checkedColor: palette.primary1Color,
              requiredColor: palette.primary1Color,
              disabledColor: palette.disabledColor,
              size: 24,
              labelColor: palette.textColor,
              labelDisabledColor: palette.disabledColor,
            },
            raisedButton: {
              color: palette.alternateTextColor,
              textColor: palette.textColor,
              primaryColor: palette.primary1Color,
              primaryTextColor: palette.alternateTextColor,
              secondaryColor: palette.accent1Color,
              secondaryTextColor: palette.alternateTextColor,
              disabledColor: (0, _colorManipulator.darken)(
                palette.alternateTextColor,
                0.1,
              ),
              disabledTextColor: (0, _colorManipulator.fade)(
                palette.textColor,
                0.3,
              ),
              fontSize: _typography2.default.fontStyleButtonFontSize,
              fontWeight: _typography2.default.fontWeightMedium,
            },
            refreshIndicator: {
              strokeColor: palette.borderColor,
              loadingStrokeColor: palette.primary1Color,
            },
            ripple: {
              color: (0, _colorManipulator.fade)(palette.textColor, 0.87),
            },
            slider: {
              trackSize: 2,
              trackColor: palette.primary3Color,
              trackColorSelected: palette.accent3Color,
              handleSize: 12,
              handleSizeDisabled: 8,
              handleSizeActive: 18,
              handleColorZero: palette.primary3Color,
              handleFillColor: palette.alternateTextColor,
              selectionColor: palette.primary1Color,
              rippleColor: palette.primary1Color,
            },
            snackbar: {
              textColor: palette.alternateTextColor,
              backgroundColor: palette.textColor,
              actionColor: palette.accent1Color,
            },
            subheader: {
              color: (0, _colorManipulator.fade)(palette.textColor, 0.54),
              fontWeight: _typography2.default.fontWeightMedium,
            },
            stepper: {
              backgroundColor: 'transparent',
              hoverBackgroundColor: (0, _colorManipulator.fade)(
                _colors.black,
                0.06,
              ),
              iconColor: palette.primary1Color,
              hoveredIconColor: _colors.grey700,
              inactiveIconColor: _colors.grey500,
              textColor: (0, _colorManipulator.fade)(_colors.black, 0.87),
              disabledTextColor: (0, _colorManipulator.fade)(
                _colors.black,
                0.26,
              ),
              connectorLineColor: _colors.grey400,
            },
            svgIcon: {
              color: palette.textColor,
            },
            table: {
              backgroundColor: palette.canvasColor,
            },
            tableFooter: {
              borderColor: palette.borderColor,
              textColor: palette.accent3Color,
            },
            tableHeader: {
              borderColor: palette.borderColor,
            },
            tableHeaderColumn: {
              textColor: palette.accent3Color,
              height: 56,
              spacing: 24,
            },
            tableRow: {
              hoverColor: palette.accent2Color,
              stripeColor: (0, _colorManipulator.fade)(
                (0, _colorManipulator.lighten)(palette.primary1Color, 0.5),
                0.4,
              ),
              selectedColor: palette.borderColor,
              textColor: palette.textColor,
              borderColor: palette.borderColor,
              height: 48,
            },
            tableRowColumn: {
              height: 48,
              spacing: 24,
            },
            tabs: {
              backgroundColor: palette.primary1Color,
              textColor: (0, _colorManipulator.fade)(
                palette.alternateTextColor,
                0.7,
              ),
              selectedTextColor: palette.alternateTextColor,
            },
            textField: {
              textColor: palette.textColor,
              hintColor: palette.disabledColor,
              floatingLabelColor: palette.textColor,
              disabledTextColor: palette.disabledColor,
              errorColor: _colors.red500,
              focusColor: palette.primary1Color,
              backgroundColor: 'transparent',
              borderColor: palette.borderColor,
            },
            timePicker: {
              color: palette.alternateTextColor,
              textColor: palette.accent3Color,
              accentColor: palette.primary1Color,
              clockColor: palette.textColor,
              clockCircleColor: palette.clockCircleColor,
              headerColor: palette.pickerHeaderColor || palette.primary1Color,
              selectColor: palette.primary2Color,
              selectTextColor: palette.alternateTextColor,
            },
            toggle: {
              thumbOnColor: palette.primary1Color,
              thumbOffColor: palette.accent2Color,
              thumbDisabledColor: palette.borderColor,
              thumbRequiredColor: palette.primary1Color,
              trackOnColor: (0, _colorManipulator.fade)(
                palette.primary1Color,
                0.5,
              ),
              trackOffColor: palette.primary3Color,
              trackDisabledColor: palette.primary3Color,
              labelColor: palette.textColor,
              labelDisabledColor: palette.disabledColor,
              trackRequiredColor: (0, _colorManipulator.fade)(
                palette.primary1Color,
                0.5,
              ),
            },
            toolbar: {
              color: (0, _colorManipulator.fade)(palette.textColor, 0.54),
              hoverColor: (0, _colorManipulator.fade)(palette.textColor, 0.87),
              backgroundColor: (0, _colorManipulator.darken)(
                palette.accent2Color,
                0.05,
              ),
              height: 56,
              titleFontSize: 20,
              iconColor: (0, _colorManipulator.fade)(palette.textColor, 0.4),
              separatorColor: (0, _colorManipulator.fade)(
                palette.textColor,
                0.175,
              ),
              menuHoverColor: (0, _colorManipulator.fade)(
                palette.textColor,
                0.1,
              ),
            },
            tooltip: {
              color: _colors.white,
              rippleBackgroundColor: _colors.grey700,
            },
          },
          muiTheme,
          {
            baseTheme: baseTheme, // To provide backward compatibility.
            rawTheme: baseTheme,
          },
        );

        var transformers = [
          _autoprefixer2.default,
          _rtl2.default,
          _callOnce2.default,
        ]
          .map(function (t) {
            return t(muiTheme);
          })
          .filter(function (t) {
            return t;
          });
        muiTheme.prepareStyles = _compose2.default.apply(
          undefined,
          _toConsumableArray(transformers),
        );

        return muiTheme;
      }

      /***/
    },
    /* 679 */
    /***/ function (module, exports, __webpack_require__) {
      var baseMerge = __webpack_require__(680),
        createAssigner = __webpack_require__(698);

      /**
       * This method is like `_.assign` except that it recursively merges own and
       * inherited enumerable string keyed properties of source objects into the
       * destination object. Source properties that resolve to `undefined` are
       * skipped if a destination value exists. Array and plain object properties
       * are merged recursively. Other objects and value types are overridden by
       * assignment. Source objects are applied from left to right. Subsequent
       * sources overwrite property assignments of previous sources.
       *
       * **Note:** This method mutates `object`.
       *
       * @static
       * @memberOf _
       * @since 0.5.0
       * @category Object
       * @param {Object} object The destination object.
       * @param {...Object} [sources] The source objects.
       * @returns {Object} Returns `object`.
       * @example
       *
       * var object = {
       *   'a': [{ 'b': 2 }, { 'd': 4 }]
       * };
       *
       * var other = {
       *   'a': [{ 'c': 3 }, { 'e': 5 }]
       * };
       *
       * _.merge(object, other);
       * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
       */
      var merge = createAssigner(function (object, source, srcIndex) {
        baseMerge(object, source, srcIndex);
      });

      module.exports = merge;

      /***/
    },
    /* 680 */
    /***/ function (module, exports, __webpack_require__) {
      var Stack = __webpack_require__(426),
        assignMergeValue = __webpack_require__(681),
        baseFor = __webpack_require__(420),
        baseMergeDeep = __webpack_require__(684),
        isObject = __webpack_require__(345),
        keysIn = __webpack_require__(695);

      /**
       * The base implementation of `_.merge` without support for multiple sources.
       *
       * @private
       * @param {Object} object The destination object.
       * @param {Object} source The source object.
       * @param {number} srcIndex The index of `source`.
       * @param {Function} [customizer] The function to customize merged values.
       * @param {Object} [stack] Tracks traversed source values and their merged
       *  counterparts.
       */
      function baseMerge(object, source, srcIndex, customizer, stack) {
        if (object === source) {
          return;
        }
        baseFor(
          source,
          function (srcValue, key) {
            if (isObject(srcValue)) {
              stack || (stack = new Stack());
              baseMergeDeep(
                object,
                source,
                key,
                srcIndex,
                baseMerge,
                customizer,
                stack,
              );
            } else {
              var newValue = customizer
                ? customizer(
                    object[key],
                    srcValue,
                    key + '',
                    object,
                    source,
                    stack,
                  )
                : undefined;

              if (newValue === undefined) {
                newValue = srcValue;
              }
              assignMergeValue(object, key, newValue);
            }
          },
          keysIn,
        );
      }

      module.exports = baseMerge;

      /***/
    },
    /* 681 */
    /***/ function (module, exports, __webpack_require__) {
      var baseAssignValue = __webpack_require__(682),
        eq = __webpack_require__(431);

      /**
       * This function is like `assignValue` except that it doesn't assign
       * `undefined` values.
       *
       * @private
       * @param {Object} object The object to modify.
       * @param {string} key The key of the property to assign.
       * @param {*} value The value to assign.
       */
      function assignMergeValue(object, key, value) {
        if (
          (value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))
        ) {
          baseAssignValue(object, key, value);
        }
      }

      module.exports = assignMergeValue;

      /***/
    },
    /* 682 */
    /***/ function (module, exports, __webpack_require__) {
      var defineProperty = __webpack_require__(683);

      /**
       * The base implementation of `assignValue` and `assignMergeValue` without
       * value checks.
       *
       * @private
       * @param {Object} object The object to modify.
       * @param {string} key The key of the property to assign.
       * @param {*} value The value to assign.
       */
      function baseAssignValue(object, key, value) {
        if (key == '__proto__' && defineProperty) {
          defineProperty(object, key, {
            configurable: true,
            enumerable: true,
            value: value,
            writable: true,
          });
        } else {
          object[key] = value;
        }
      }

      module.exports = baseAssignValue;

      /***/
    },
    /* 683 */
    /***/ function (module, exports, __webpack_require__) {
      var getNative = __webpack_require__(382);

      var defineProperty = (function () {
        try {
          var func = getNative(Object, 'defineProperty');
          func({}, '', {});
          return func;
        } catch (e) {}
      })();

      module.exports = defineProperty;

      /***/
    },
    /* 684 */
    /***/ function (module, exports, __webpack_require__) {
      var assignMergeValue = __webpack_require__(681),
        cloneBuffer = __webpack_require__(685),
        cloneTypedArray = __webpack_require__(686),
        copyArray = __webpack_require__(688),
        initCloneObject = __webpack_require__(689),
        isArguments = __webpack_require__(366),
        isArray = __webpack_require__(355),
        isArrayLikeObject = __webpack_require__(691),
        isBuffer = __webpack_require__(368),
        isFunction = __webpack_require__(344),
        isObject = __webpack_require__(345),
        isPlainObject = __webpack_require__(111),
        isTypedArray = __webpack_require__(371),
        toPlainObject = __webpack_require__(692);

      /**
       * A specialized version of `baseMerge` for arrays and objects which performs
       * deep merges and tracks traversed objects enabling objects with circular
       * references to be merged.
       *
       * @private
       * @param {Object} object The destination object.
       * @param {Object} source The source object.
       * @param {string} key The key of the value to merge.
       * @param {number} srcIndex The index of `source`.
       * @param {Function} mergeFunc The function to merge values.
       * @param {Function} [customizer] The function to customize assigned values.
       * @param {Object} [stack] Tracks traversed source values and their merged
       *  counterparts.
       */
      function baseMergeDeep(
        object,
        source,
        key,
        srcIndex,
        mergeFunc,
        customizer,
        stack,
      ) {
        var objValue = object[key],
          srcValue = source[key],
          stacked = stack.get(srcValue);

        if (stacked) {
          assignMergeValue(object, key, stacked);
          return;
        }
        var newValue = customizer
          ? customizer(objValue, srcValue, key + '', object, source, stack)
          : undefined;

        var isCommon = newValue === undefined;

        if (isCommon) {
          var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

          newValue = srcValue;
          if (isArr || isBuff || isTyped) {
            if (isArray(objValue)) {
              newValue = objValue;
            } else if (isArrayLikeObject(objValue)) {
              newValue = copyArray(objValue);
            } else if (isBuff) {
              isCommon = false;
              newValue = cloneBuffer(srcValue, true);
            } else if (isTyped) {
              isCommon = false;
              newValue = cloneTypedArray(srcValue, true);
            } else {
              newValue = [];
            }
          } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
            newValue = objValue;
            if (isArguments(objValue)) {
              newValue = toPlainObject(objValue);
            } else if (
              !isObject(objValue) ||
              (srcIndex && isFunction(objValue))
            ) {
              newValue = initCloneObject(srcValue);
            }
          } else {
            isCommon = false;
          }
        }
        if (isCommon) {
          // Recursively merge objects and arrays (susceptible to call stack limits).
          stack.set(srcValue, newValue);
          mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
          stack['delete'](srcValue);
        }
        assignMergeValue(object, key, newValue);
      }

      module.exports = baseMergeDeep;

      /***/
    },
    /* 685 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (module) {
        var root = __webpack_require__(114);

        /** Detect free variable `exports`. */
        var freeExports =
          typeof exports == 'object' && exports && !exports.nodeType && exports;

        /** Detect free variable `module`. */
        var freeModule =
          freeExports &&
          typeof module == 'object' &&
          module &&
          !module.nodeType &&
          module;

        /** Detect the popular CommonJS extension `module.exports`. */
        var moduleExports = freeModule && freeModule.exports === freeExports;

        /** Built-in value references. */
        var Buffer = moduleExports ? root.Buffer : undefined,
          allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

        /**
         * Creates a clone of  `buffer`.
         *
         * @private
         * @param {Buffer} buffer The buffer to clone.
         * @param {boolean} [isDeep] Specify a deep clone.
         * @returns {Buffer} Returns the cloned buffer.
         */
        function cloneBuffer(buffer, isDeep) {
          if (isDeep) {
            return buffer.slice();
          }
          var length = buffer.length,
            result = allocUnsafe
              ? allocUnsafe(length)
              : new buffer.constructor(length);

          buffer.copy(result);
          return result;
        }

        module.exports = cloneBuffer;

        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(123)(module)));

      /***/
    },
    /* 686 */
    /***/ function (module, exports, __webpack_require__) {
      var cloneArrayBuffer = __webpack_require__(687);

      /**
       * Creates a clone of `typedArray`.
       *
       * @private
       * @param {Object} typedArray The typed array to clone.
       * @param {boolean} [isDeep] Specify a deep clone.
       * @returns {Object} Returns the cloned typed array.
       */
      function cloneTypedArray(typedArray, isDeep) {
        var buffer = isDeep
          ? cloneArrayBuffer(typedArray.buffer)
          : typedArray.buffer;
        return new typedArray.constructor(
          buffer,
          typedArray.byteOffset,
          typedArray.length,
        );
      }

      module.exports = cloneTypedArray;

      /***/
    },
    /* 687 */
    /***/ function (module, exports, __webpack_require__) {
      var Uint8Array = __webpack_require__(464);

      /**
       * Creates a clone of `arrayBuffer`.
       *
       * @private
       * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
       * @returns {ArrayBuffer} Returns the cloned array buffer.
       */
      function cloneArrayBuffer(arrayBuffer) {
        var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
        new Uint8Array(result).set(new Uint8Array(arrayBuffer));
        return result;
      }

      module.exports = cloneArrayBuffer;

      /***/
    },
    /* 688 */
    /***/ function (module, exports) {
      /**
       * Copies the values of `source` to `array`.
       *
       * @private
       * @param {Array} source The array to copy values from.
       * @param {Array} [array=[]] The array to copy values to.
       * @returns {Array} Returns `array`.
       */
      function copyArray(source, array) {
        var index = -1,
          length = source.length;

        array || (array = Array(length));
        while (++index < length) {
          array[index] = source[index];
        }
        return array;
      }

      module.exports = copyArray;

      /***/
    },
    /* 689 */
    /***/ function (module, exports, __webpack_require__) {
      var baseCreate = __webpack_require__(690),
        getPrototype = __webpack_require__(118),
        isPrototype = __webpack_require__(376);

      /**
       * Initializes an object clone.
       *
       * @private
       * @param {Object} object The object to clone.
       * @returns {Object} Returns the initialized clone.
       */
      function initCloneObject(object) {
        return typeof object.constructor == 'function' && !isPrototype(object)
          ? baseCreate(getPrototype(object))
          : {};
      }

      module.exports = initCloneObject;

      /***/
    },
    /* 690 */
    /***/ function (module, exports, __webpack_require__) {
      var isObject = __webpack_require__(345);

      /** Built-in value references. */
      var objectCreate = Object.create;

      /**
       * The base implementation of `_.create` without support for assigning
       * properties to the created object.
       *
       * @private
       * @param {Object} proto The object to inherit from.
       * @returns {Object} Returns the new object.
       */
      var baseCreate = (function () {
        function object() {}
        return function (proto) {
          if (!isObject(proto)) {
            return {};
          }
          if (objectCreate) {
            return objectCreate(proto);
          }
          object.prototype = proto;
          var result = new object();
          object.prototype = undefined;
          return result;
        };
      })();

      module.exports = baseCreate;

      /***/
    },
    /* 691 */
    /***/ function (module, exports, __webpack_require__) {
      var isArrayLike = __webpack_require__(352),
        isObjectLike = __webpack_require__(120);

      /**
       * This method is like `_.isArrayLike` except that it also checks if `value`
       * is an object.
       *
       * @static
       * @memberOf _
       * @since 4.0.0
       * @category Lang
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is an array-like object,
       *  else `false`.
       * @example
       *
       * _.isArrayLikeObject([1, 2, 3]);
       * // => true
       *
       * _.isArrayLikeObject(document.body.children);
       * // => true
       *
       * _.isArrayLikeObject('abc');
       * // => false
       *
       * _.isArrayLikeObject(_.noop);
       * // => false
       */
      function isArrayLikeObject(value) {
        return isObjectLike(value) && isArrayLike(value);
      }

      module.exports = isArrayLikeObject;

      /***/
    },
    /* 692 */
    /***/ function (module, exports, __webpack_require__) {
      var copyObject = __webpack_require__(693),
        keysIn = __webpack_require__(695);

      /**
       * Converts `value` to a plain object flattening inherited enumerable string
       * keyed properties of `value` to own properties of the plain object.
       *
       * @static
       * @memberOf _
       * @since 3.0.0
       * @category Lang
       * @param {*} value The value to convert.
       * @returns {Object} Returns the converted plain object.
       * @example
       *
       * function Foo() {
       *   this.b = 2;
       * }
       *
       * Foo.prototype.c = 3;
       *
       * _.assign({ 'a': 1 }, new Foo);
       * // => { 'a': 1, 'b': 2 }
       *
       * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
       * // => { 'a': 1, 'b': 2, 'c': 3 }
       */
      function toPlainObject(value) {
        return copyObject(value, keysIn(value));
      }

      module.exports = toPlainObject;

      /***/
    },
    /* 693 */
    /***/ function (module, exports, __webpack_require__) {
      var assignValue = __webpack_require__(694),
        baseAssignValue = __webpack_require__(682);

      /**
       * Copies properties of `source` to `object`.
       *
       * @private
       * @param {Object} source The object to copy properties from.
       * @param {Array} props The property identifiers to copy.
       * @param {Object} [object={}] The object to copy properties to.
       * @param {Function} [customizer] The function to customize copied values.
       * @returns {Object} Returns `object`.
       */
      function copyObject(source, props, object, customizer) {
        var isNew = !object;
        object || (object = {});

        var index = -1,
          length = props.length;

        while (++index < length) {
          var key = props[index];

          var newValue = customizer
            ? customizer(object[key], source[key], key, object, source)
            : undefined;

          if (newValue === undefined) {
            newValue = source[key];
          }
          if (isNew) {
            baseAssignValue(object, key, newValue);
          } else {
            assignValue(object, key, newValue);
          }
        }
        return object;
      }

      module.exports = copyObject;

      /***/
    },
    /* 694 */
    /***/ function (module, exports, __webpack_require__) {
      var baseAssignValue = __webpack_require__(682),
        eq = __webpack_require__(431);

      /** Used for built-in method references. */
      var objectProto = Object.prototype;

      /** Used to check objects for own properties. */
      var hasOwnProperty = objectProto.hasOwnProperty;

      /**
       * Assigns `value` to `key` of `object` if the existing value is not equivalent
       * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
       * for equality comparisons.
       *
       * @private
       * @param {Object} object The object to modify.
       * @param {string} key The key of the property to assign.
       * @param {*} value The value to assign.
       */
      function assignValue(object, key, value) {
        var objValue = object[key];
        if (
          !(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))
        ) {
          baseAssignValue(object, key, value);
        }
      }

      module.exports = assignValue;

      /***/
    },
    /* 695 */
    /***/ function (module, exports, __webpack_require__) {
      var arrayLikeKeys = __webpack_require__(364),
        baseKeysIn = __webpack_require__(696),
        isArrayLike = __webpack_require__(352);

      /**
       * Creates an array of the own and inherited enumerable property names of `object`.
       *
       * **Note:** Non-object values are coerced to objects.
       *
       * @static
       * @memberOf _
       * @since 3.0.0
       * @category Object
       * @param {Object} object The object to query.
       * @returns {Array} Returns the array of property names.
       * @example
       *
       * function Foo() {
       *   this.a = 1;
       *   this.b = 2;
       * }
       *
       * Foo.prototype.c = 3;
       *
       * _.keysIn(new Foo);
       * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
       */
      function keysIn(object) {
        return isArrayLike(object)
          ? arrayLikeKeys(object, true)
          : baseKeysIn(object);
      }

      module.exports = keysIn;

      /***/
    },
    /* 696 */
    /***/ function (module, exports, __webpack_require__) {
      var isObject = __webpack_require__(345),
        isPrototype = __webpack_require__(376),
        nativeKeysIn = __webpack_require__(697);

      /** Used for built-in method references. */
      var objectProto = Object.prototype;

      /** Used to check objects for own properties. */
      var hasOwnProperty = objectProto.hasOwnProperty;

      /**
       * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
       *
       * @private
       * @param {Object} object The object to query.
       * @returns {Array} Returns the array of property names.
       */
      function baseKeysIn(object) {
        if (!isObject(object)) {
          return nativeKeysIn(object);
        }
        var isProto = isPrototype(object),
          result = [];

        for (var key in object) {
          if (
            !(
              key == 'constructor' &&
              (isProto || !hasOwnProperty.call(object, key))
            )
          ) {
            result.push(key);
          }
        }
        return result;
      }

      module.exports = baseKeysIn;

      /***/
    },
    /* 697 */
    /***/ function (module, exports) {
      /**
       * This function is like
       * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
       * except that it includes inherited enumerable properties.
       *
       * @private
       * @param {Object} object The object to query.
       * @returns {Array} Returns the array of property names.
       */
      function nativeKeysIn(object) {
        var result = [];
        if (object != null) {
          for (var key in Object(object)) {
            result.push(key);
          }
        }
        return result;
      }

      module.exports = nativeKeysIn;

      /***/
    },
    /* 698 */
    /***/ function (module, exports, __webpack_require__) {
      var baseRest = __webpack_require__(699),
        isIterateeCall = __webpack_require__(706);

      /**
       * Creates a function like `_.assign`.
       *
       * @private
       * @param {Function} assigner The function to assign values.
       * @returns {Function} Returns the new assigner function.
       */
      function createAssigner(assigner) {
        return baseRest(function (object, sources) {
          var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

          customizer =
            assigner.length > 3 && typeof customizer == 'function'
              ? (length--, customizer)
              : undefined;

          if (guard && isIterateeCall(sources[0], sources[1], guard)) {
            customizer = length < 3 ? undefined : customizer;
            length = 1;
          }
          object = Object(object);
          while (++index < length) {
            var source = sources[index];
            if (source) {
              assigner(object, source, index, customizer);
            }
          }
          return object;
        });
      }

      module.exports = createAssigner;

      /***/
    },
    /* 699 */
    /***/ function (module, exports, __webpack_require__) {
      var identity = __webpack_require__(342),
        overRest = __webpack_require__(700),
        setToString = __webpack_require__(702);

      /**
       * The base implementation of `_.rest` which doesn't validate or coerce arguments.
       *
       * @private
       * @param {Function} func The function to apply a rest parameter to.
       * @param {number} [start=func.length-1] The start position of the rest parameter.
       * @returns {Function} Returns the new function.
       */
      function baseRest(func, start) {
        return setToString(overRest(func, start, identity), func + '');
      }

      module.exports = baseRest;

      /***/
    },
    /* 700 */
    /***/ function (module, exports, __webpack_require__) {
      var apply = __webpack_require__(701);

      /* Built-in method references for those with the same name as other `lodash` methods. */
      var nativeMax = Math.max;

      /**
       * A specialized version of `baseRest` which transforms the rest array.
       *
       * @private
       * @param {Function} func The function to apply a rest parameter to.
       * @param {number} [start=func.length-1] The start position of the rest parameter.
       * @param {Function} transform The rest array transform.
       * @returns {Function} Returns the new function.
       */
      function overRest(func, start, transform) {
        start = nativeMax(start === undefined ? func.length - 1 : start, 0);
        return function () {
          var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

          while (++index < length) {
            array[index] = args[start + index];
          }
          index = -1;
          var otherArgs = Array(start + 1);
          while (++index < start) {
            otherArgs[index] = args[index];
          }
          otherArgs[start] = transform(array);
          return apply(func, this, otherArgs);
        };
      }

      module.exports = overRest;

      /***/
    },
    /* 701 */
    /***/ function (module, exports) {
      /**
       * A faster alternative to `Function#apply`, this function invokes `func`
       * with the `this` binding of `thisArg` and the arguments of `args`.
       *
       * @private
       * @param {Function} func The function to invoke.
       * @param {*} thisArg The `this` binding of `func`.
       * @param {Array} args The arguments to invoke `func` with.
       * @returns {*} Returns the result of `func`.
       */
      function apply(func, thisArg, args) {
        switch (args.length) {
          case 0:
            return func.call(thisArg);
          case 1:
            return func.call(thisArg, args[0]);
          case 2:
            return func.call(thisArg, args[0], args[1]);
          case 3:
            return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
      }

      module.exports = apply;

      /***/
    },
    /* 702 */
    /***/ function (module, exports, __webpack_require__) {
      var baseSetToString = __webpack_require__(703),
        shortOut = __webpack_require__(705);

      /**
       * Sets the `toString` method of `func` to return `string`.
       *
       * @private
       * @param {Function} func The function to modify.
       * @param {Function} string The `toString` result.
       * @returns {Function} Returns `func`.
       */
      var setToString = shortOut(baseSetToString);

      module.exports = setToString;

      /***/
    },
    /* 703 */
    /***/ function (module, exports, __webpack_require__) {
      var constant = __webpack_require__(704),
        defineProperty = __webpack_require__(683),
        identity = __webpack_require__(342);

      /**
       * The base implementation of `setToString` without support for hot loop shorting.
       *
       * @private
       * @param {Function} func The function to modify.
       * @param {Function} string The `toString` result.
       * @returns {Function} Returns `func`.
       */
      var baseSetToString = !defineProperty
        ? identity
        : function (func, string) {
            return defineProperty(func, 'toString', {
              configurable: true,
              enumerable: false,
              value: constant(string),
              writable: true,
            });
          };

      module.exports = baseSetToString;

      /***/
    },
    /* 704 */
    /***/ function (module, exports) {
      /**
       * Creates a function that returns `value`.
       *
       * @static
       * @memberOf _
       * @since 2.4.0
       * @category Util
       * @param {*} value The value to return from the new function.
       * @returns {Function} Returns the new constant function.
       * @example
       *
       * var objects = _.times(2, _.constant({ 'a': 1 }));
       *
       * console.log(objects);
       * // => [{ 'a': 1 }, { 'a': 1 }]
       *
       * console.log(objects[0] === objects[1]);
       * // => true
       */
      function constant(value) {
        return function () {
          return value;
        };
      }

      module.exports = constant;

      /***/
    },
    /* 705 */
    /***/ function (module, exports) {
      /** Used to detect hot functions by number of calls within a span of milliseconds. */
      var HOT_COUNT = 800,
        HOT_SPAN = 16;

      /* Built-in method references for those with the same name as other `lodash` methods. */
      var nativeNow = Date.now;

      /**
       * Creates a function that'll short out and invoke `identity` instead
       * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
       * milliseconds.
       *
       * @private
       * @param {Function} func The function to restrict.
       * @returns {Function} Returns the new shortable function.
       */
      function shortOut(func) {
        var count = 0,
          lastCalled = 0;

        return function () {
          var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

          lastCalled = stamp;
          if (remaining > 0) {
            if (++count >= HOT_COUNT) {
              return arguments[0];
            }
          } else {
            count = 0;
          }
          return func.apply(undefined, arguments);
        };
      }

      module.exports = shortOut;

      /***/
    },
    /* 706 */
    /***/ function (module, exports, __webpack_require__) {
      var eq = __webpack_require__(431),
        isArrayLike = __webpack_require__(352),
        isIndex = __webpack_require__(370),
        isObject = __webpack_require__(345);

      /**
       * Checks if the given arguments are from an iteratee call.
       *
       * @private
       * @param {*} value The potential iteratee value argument.
       * @param {*} index The potential iteratee index or key argument.
       * @param {*} object The potential iteratee object argument.
       * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
       *  else `false`.
       */
      function isIterateeCall(value, index, object) {
        if (!isObject(object)) {
          return false;
        }
        var type = typeof index;
        if (
          type == 'number'
            ? isArrayLike(object) && isIndex(index, object.length)
            : type == 'string' && index in object
        ) {
          return eq(object[index], value);
        }
        return false;
      }

      module.exports = isIterateeCall;

      /***/
    },
    /* 707 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _colors = __webpack_require__(708);

      var _colorManipulator = __webpack_require__(583);

      var _spacing = __webpack_require__(709);

      var _spacing2 = _interopRequireDefault(_spacing);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      /**
       *  Light Theme is the default theme used in material-ui. It is guaranteed to
       *  have all theme variables needed for every component. Variables not defined
       *  in a custom theme will default to these values.
       */
      exports.default = {
        spacing: _spacing2.default,
        fontFamily: 'Roboto, sans-serif',
        palette: {
          primary1Color: _colors.cyan500,
          primary2Color: _colors.cyan700,
          primary3Color: _colors.grey400,
          accent1Color: _colors.pinkA200,
          accent2Color: _colors.grey100,
          accent3Color: _colors.grey500,
          textColor: _colors.darkBlack,
          secondaryTextColor: (0, _colorManipulator.fade)(
            _colors.darkBlack,
            0.54,
          ),
          alternateTextColor: _colors.white,
          canvasColor: _colors.white,
          borderColor: _colors.grey300,
          disabledColor: (0, _colorManipulator.fade)(_colors.darkBlack, 0.3),
          pickerHeaderColor: _colors.cyan500,
          clockCircleColor: (0, _colorManipulator.fade)(
            _colors.darkBlack,
            0.07,
          ),
          shadowColor: _colors.fullBlack,
        },
      };
      /**
       * NB: If you update this file, please also update `docs/src/app/customization/Themes.js`
       */

      /***/
    },
    /* 708 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      var red50 = (exports.red50 = '#ffebee');
      var red100 = (exports.red100 = '#ffcdd2');
      var red200 = (exports.red200 = '#ef9a9a');
      var red300 = (exports.red300 = '#e57373');
      var red400 = (exports.red400 = '#ef5350');
      var red500 = (exports.red500 = '#f44336');
      var red600 = (exports.red600 = '#e53935');
      var red700 = (exports.red700 = '#d32f2f');
      var red800 = (exports.red800 = '#c62828');
      var red900 = (exports.red900 = '#b71c1c');
      var redA100 = (exports.redA100 = '#ff8a80');
      var redA200 = (exports.redA200 = '#ff5252');
      var redA400 = (exports.redA400 = '#ff1744');
      var redA700 = (exports.redA700 = '#d50000');

      var pink50 = (exports.pink50 = '#fce4ec');
      var pink100 = (exports.pink100 = '#f8bbd0');
      var pink200 = (exports.pink200 = '#f48fb1');
      var pink300 = (exports.pink300 = '#f06292');
      var pink400 = (exports.pink400 = '#ec407a');
      var pink500 = (exports.pink500 = '#e91e63');
      var pink600 = (exports.pink600 = '#d81b60');
      var pink700 = (exports.pink700 = '#c2185b');
      var pink800 = (exports.pink800 = '#ad1457');
      var pink900 = (exports.pink900 = '#880e4f');
      var pinkA100 = (exports.pinkA100 = '#ff80ab');
      var pinkA200 = (exports.pinkA200 = '#ff4081');
      var pinkA400 = (exports.pinkA400 = '#f50057');
      var pinkA700 = (exports.pinkA700 = '#c51162');

      var purple50 = (exports.purple50 = '#f3e5f5');
      var purple100 = (exports.purple100 = '#e1bee7');
      var purple200 = (exports.purple200 = '#ce93d8');
      var purple300 = (exports.purple300 = '#ba68c8');
      var purple400 = (exports.purple400 = '#ab47bc');
      var purple500 = (exports.purple500 = '#9c27b0');
      var purple600 = (exports.purple600 = '#8e24aa');
      var purple700 = (exports.purple700 = '#7b1fa2');
      var purple800 = (exports.purple800 = '#6a1b9a');
      var purple900 = (exports.purple900 = '#4a148c');
      var purpleA100 = (exports.purpleA100 = '#ea80fc');
      var purpleA200 = (exports.purpleA200 = '#e040fb');
      var purpleA400 = (exports.purpleA400 = '#d500f9');
      var purpleA700 = (exports.purpleA700 = '#aa00ff');

      var deepPurple50 = (exports.deepPurple50 = '#ede7f6');
      var deepPurple100 = (exports.deepPurple100 = '#d1c4e9');
      var deepPurple200 = (exports.deepPurple200 = '#b39ddb');
      var deepPurple300 = (exports.deepPurple300 = '#9575cd');
      var deepPurple400 = (exports.deepPurple400 = '#7e57c2');
      var deepPurple500 = (exports.deepPurple500 = '#673ab7');
      var deepPurple600 = (exports.deepPurple600 = '#5e35b1');
      var deepPurple700 = (exports.deepPurple700 = '#512da8');
      var deepPurple800 = (exports.deepPurple800 = '#4527a0');
      var deepPurple900 = (exports.deepPurple900 = '#311b92');
      var deepPurpleA100 = (exports.deepPurpleA100 = '#b388ff');
      var deepPurpleA200 = (exports.deepPurpleA200 = '#7c4dff');
      var deepPurpleA400 = (exports.deepPurpleA400 = '#651fff');
      var deepPurpleA700 = (exports.deepPurpleA700 = '#6200ea');

      var indigo50 = (exports.indigo50 = '#e8eaf6');
      var indigo100 = (exports.indigo100 = '#c5cae9');
      var indigo200 = (exports.indigo200 = '#9fa8da');
      var indigo300 = (exports.indigo300 = '#7986cb');
      var indigo400 = (exports.indigo400 = '#5c6bc0');
      var indigo500 = (exports.indigo500 = '#3f51b5');
      var indigo600 = (exports.indigo600 = '#3949ab');
      var indigo700 = (exports.indigo700 = '#303f9f');
      var indigo800 = (exports.indigo800 = '#283593');
      var indigo900 = (exports.indigo900 = '#1a237e');
      var indigoA100 = (exports.indigoA100 = '#8c9eff');
      var indigoA200 = (exports.indigoA200 = '#536dfe');
      var indigoA400 = (exports.indigoA400 = '#3d5afe');
      var indigoA700 = (exports.indigoA700 = '#304ffe');

      var blue50 = (exports.blue50 = '#e3f2fd');
      var blue100 = (exports.blue100 = '#bbdefb');
      var blue200 = (exports.blue200 = '#90caf9');
      var blue300 = (exports.blue300 = '#64b5f6');
      var blue400 = (exports.blue400 = '#42a5f5');
      var blue500 = (exports.blue500 = '#2196f3');
      var blue600 = (exports.blue600 = '#1e88e5');
      var blue700 = (exports.blue700 = '#1976d2');
      var blue800 = (exports.blue800 = '#1565c0');
      var blue900 = (exports.blue900 = '#0d47a1');
      var blueA100 = (exports.blueA100 = '#82b1ff');
      var blueA200 = (exports.blueA200 = '#448aff');
      var blueA400 = (exports.blueA400 = '#2979ff');
      var blueA700 = (exports.blueA700 = '#2962ff');

      var lightBlue50 = (exports.lightBlue50 = '#e1f5fe');
      var lightBlue100 = (exports.lightBlue100 = '#b3e5fc');
      var lightBlue200 = (exports.lightBlue200 = '#81d4fa');
      var lightBlue300 = (exports.lightBlue300 = '#4fc3f7');
      var lightBlue400 = (exports.lightBlue400 = '#29b6f6');
      var lightBlue500 = (exports.lightBlue500 = '#03a9f4');
      var lightBlue600 = (exports.lightBlue600 = '#039be5');
      var lightBlue700 = (exports.lightBlue700 = '#0288d1');
      var lightBlue800 = (exports.lightBlue800 = '#0277bd');
      var lightBlue900 = (exports.lightBlue900 = '#01579b');
      var lightBlueA100 = (exports.lightBlueA100 = '#80d8ff');
      var lightBlueA200 = (exports.lightBlueA200 = '#40c4ff');
      var lightBlueA400 = (exports.lightBlueA400 = '#00b0ff');
      var lightBlueA700 = (exports.lightBlueA700 = '#0091ea');

      var cyan50 = (exports.cyan50 = '#e0f7fa');
      var cyan100 = (exports.cyan100 = '#b2ebf2');
      var cyan200 = (exports.cyan200 = '#80deea');
      var cyan300 = (exports.cyan300 = '#4dd0e1');
      var cyan400 = (exports.cyan400 = '#26c6da');
      var cyan500 = (exports.cyan500 = '#00bcd4');
      var cyan600 = (exports.cyan600 = '#00acc1');
      var cyan700 = (exports.cyan700 = '#0097a7');
      var cyan800 = (exports.cyan800 = '#00838f');
      var cyan900 = (exports.cyan900 = '#006064');
      var cyanA100 = (exports.cyanA100 = '#84ffff');
      var cyanA200 = (exports.cyanA200 = '#18ffff');
      var cyanA400 = (exports.cyanA400 = '#00e5ff');
      var cyanA700 = (exports.cyanA700 = '#00b8d4');

      var teal50 = (exports.teal50 = '#e0f2f1');
      var teal100 = (exports.teal100 = '#b2dfdb');
      var teal200 = (exports.teal200 = '#80cbc4');
      var teal300 = (exports.teal300 = '#4db6ac');
      var teal400 = (exports.teal400 = '#26a69a');
      var teal500 = (exports.teal500 = '#009688');
      var teal600 = (exports.teal600 = '#00897b');
      var teal700 = (exports.teal700 = '#00796b');
      var teal800 = (exports.teal800 = '#00695c');
      var teal900 = (exports.teal900 = '#004d40');
      var tealA100 = (exports.tealA100 = '#a7ffeb');
      var tealA200 = (exports.tealA200 = '#64ffda');
      var tealA400 = (exports.tealA400 = '#1de9b6');
      var tealA700 = (exports.tealA700 = '#00bfa5');

      var green50 = (exports.green50 = '#e8f5e9');
      var green100 = (exports.green100 = '#c8e6c9');
      var green200 = (exports.green200 = '#a5d6a7');
      var green300 = (exports.green300 = '#81c784');
      var green400 = (exports.green400 = '#66bb6a');
      var green500 = (exports.green500 = '#4caf50');
      var green600 = (exports.green600 = '#43a047');
      var green700 = (exports.green700 = '#388e3c');
      var green800 = (exports.green800 = '#2e7d32');
      var green900 = (exports.green900 = '#1b5e20');
      var greenA100 = (exports.greenA100 = '#b9f6ca');
      var greenA200 = (exports.greenA200 = '#69f0ae');
      var greenA400 = (exports.greenA400 = '#00e676');
      var greenA700 = (exports.greenA700 = '#00c853');

      var lightGreen50 = (exports.lightGreen50 = '#f1f8e9');
      var lightGreen100 = (exports.lightGreen100 = '#dcedc8');
      var lightGreen200 = (exports.lightGreen200 = '#c5e1a5');
      var lightGreen300 = (exports.lightGreen300 = '#aed581');
      var lightGreen400 = (exports.lightGreen400 = '#9ccc65');
      var lightGreen500 = (exports.lightGreen500 = '#8bc34a');
      var lightGreen600 = (exports.lightGreen600 = '#7cb342');
      var lightGreen700 = (exports.lightGreen700 = '#689f38');
      var lightGreen800 = (exports.lightGreen800 = '#558b2f');
      var lightGreen900 = (exports.lightGreen900 = '#33691e');
      var lightGreenA100 = (exports.lightGreenA100 = '#ccff90');
      var lightGreenA200 = (exports.lightGreenA200 = '#b2ff59');
      var lightGreenA400 = (exports.lightGreenA400 = '#76ff03');
      var lightGreenA700 = (exports.lightGreenA700 = '#64dd17');

      var lime50 = (exports.lime50 = '#f9fbe7');
      var lime100 = (exports.lime100 = '#f0f4c3');
      var lime200 = (exports.lime200 = '#e6ee9c');
      var lime300 = (exports.lime300 = '#dce775');
      var lime400 = (exports.lime400 = '#d4e157');
      var lime500 = (exports.lime500 = '#cddc39');
      var lime600 = (exports.lime600 = '#c0ca33');
      var lime700 = (exports.lime700 = '#afb42b');
      var lime800 = (exports.lime800 = '#9e9d24');
      var lime900 = (exports.lime900 = '#827717');
      var limeA100 = (exports.limeA100 = '#f4ff81');
      var limeA200 = (exports.limeA200 = '#eeff41');
      var limeA400 = (exports.limeA400 = '#c6ff00');
      var limeA700 = (exports.limeA700 = '#aeea00');

      var yellow50 = (exports.yellow50 = '#fffde7');
      var yellow100 = (exports.yellow100 = '#fff9c4');
      var yellow200 = (exports.yellow200 = '#fff59d');
      var yellow300 = (exports.yellow300 = '#fff176');
      var yellow400 = (exports.yellow400 = '#ffee58');
      var yellow500 = (exports.yellow500 = '#ffeb3b');
      var yellow600 = (exports.yellow600 = '#fdd835');
      var yellow700 = (exports.yellow700 = '#fbc02d');
      var yellow800 = (exports.yellow800 = '#f9a825');
      var yellow900 = (exports.yellow900 = '#f57f17');
      var yellowA100 = (exports.yellowA100 = '#ffff8d');
      var yellowA200 = (exports.yellowA200 = '#ffff00');
      var yellowA400 = (exports.yellowA400 = '#ffea00');
      var yellowA700 = (exports.yellowA700 = '#ffd600');

      var amber50 = (exports.amber50 = '#fff8e1');
      var amber100 = (exports.amber100 = '#ffecb3');
      var amber200 = (exports.amber200 = '#ffe082');
      var amber300 = (exports.amber300 = '#ffd54f');
      var amber400 = (exports.amber400 = '#ffca28');
      var amber500 = (exports.amber500 = '#ffc107');
      var amber600 = (exports.amber600 = '#ffb300');
      var amber700 = (exports.amber700 = '#ffa000');
      var amber800 = (exports.amber800 = '#ff8f00');
      var amber900 = (exports.amber900 = '#ff6f00');
      var amberA100 = (exports.amberA100 = '#ffe57f');
      var amberA200 = (exports.amberA200 = '#ffd740');
      var amberA400 = (exports.amberA400 = '#ffc400');
      var amberA700 = (exports.amberA700 = '#ffab00');

      var orange50 = (exports.orange50 = '#fff3e0');
      var orange100 = (exports.orange100 = '#ffe0b2');
      var orange200 = (exports.orange200 = '#ffcc80');
      var orange300 = (exports.orange300 = '#ffb74d');
      var orange400 = (exports.orange400 = '#ffa726');
      var orange500 = (exports.orange500 = '#ff9800');
      var orange600 = (exports.orange600 = '#fb8c00');
      var orange700 = (exports.orange700 = '#f57c00');
      var orange800 = (exports.orange800 = '#ef6c00');
      var orange900 = (exports.orange900 = '#e65100');
      var orangeA100 = (exports.orangeA100 = '#ffd180');
      var orangeA200 = (exports.orangeA200 = '#ffab40');
      var orangeA400 = (exports.orangeA400 = '#ff9100');
      var orangeA700 = (exports.orangeA700 = '#ff6d00');

      var deepOrange50 = (exports.deepOrange50 = '#fbe9e7');
      var deepOrange100 = (exports.deepOrange100 = '#ffccbc');
      var deepOrange200 = (exports.deepOrange200 = '#ffab91');
      var deepOrange300 = (exports.deepOrange300 = '#ff8a65');
      var deepOrange400 = (exports.deepOrange400 = '#ff7043');
      var deepOrange500 = (exports.deepOrange500 = '#ff5722');
      var deepOrange600 = (exports.deepOrange600 = '#f4511e');
      var deepOrange700 = (exports.deepOrange700 = '#e64a19');
      var deepOrange800 = (exports.deepOrange800 = '#d84315');
      var deepOrange900 = (exports.deepOrange900 = '#bf360c');
      var deepOrangeA100 = (exports.deepOrangeA100 = '#ff9e80');
      var deepOrangeA200 = (exports.deepOrangeA200 = '#ff6e40');
      var deepOrangeA400 = (exports.deepOrangeA400 = '#ff3d00');
      var deepOrangeA700 = (exports.deepOrangeA700 = '#dd2c00');

      var brown50 = (exports.brown50 = '#efebe9');
      var brown100 = (exports.brown100 = '#d7ccc8');
      var brown200 = (exports.brown200 = '#bcaaa4');
      var brown300 = (exports.brown300 = '#a1887f');
      var brown400 = (exports.brown400 = '#8d6e63');
      var brown500 = (exports.brown500 = '#795548');
      var brown600 = (exports.brown600 = '#6d4c41');
      var brown700 = (exports.brown700 = '#5d4037');
      var brown800 = (exports.brown800 = '#4e342e');
      var brown900 = (exports.brown900 = '#3e2723');

      var blueGrey50 = (exports.blueGrey50 = '#eceff1');
      var blueGrey100 = (exports.blueGrey100 = '#cfd8dc');
      var blueGrey200 = (exports.blueGrey200 = '#b0bec5');
      var blueGrey300 = (exports.blueGrey300 = '#90a4ae');
      var blueGrey400 = (exports.blueGrey400 = '#78909c');
      var blueGrey500 = (exports.blueGrey500 = '#607d8b');
      var blueGrey600 = (exports.blueGrey600 = '#546e7a');
      var blueGrey700 = (exports.blueGrey700 = '#455a64');
      var blueGrey800 = (exports.blueGrey800 = '#37474f');
      var blueGrey900 = (exports.blueGrey900 = '#263238');

      var grey50 = (exports.grey50 = '#fafafa');
      var grey100 = (exports.grey100 = '#f5f5f5');
      var grey200 = (exports.grey200 = '#eeeeee');
      var grey300 = (exports.grey300 = '#e0e0e0');
      var grey400 = (exports.grey400 = '#bdbdbd');
      var grey500 = (exports.grey500 = '#9e9e9e');
      var grey600 = (exports.grey600 = '#757575');
      var grey700 = (exports.grey700 = '#616161');
      var grey800 = (exports.grey800 = '#424242');
      var grey900 = (exports.grey900 = '#212121');

      var black = (exports.black = '#000000');
      var white = (exports.white = '#ffffff');

      var transparent = (exports.transparent = 'rgba(0, 0, 0, 0)');
      var fullBlack = (exports.fullBlack = 'rgba(0, 0, 0, 1)');
      var darkBlack = (exports.darkBlack = 'rgba(0, 0, 0, 0.87)');
      var lightBlack = (exports.lightBlack = 'rgba(0, 0, 0, 0.54)');
      var minBlack = (exports.minBlack = 'rgba(0, 0, 0, 0.26)');
      var faintBlack = (exports.faintBlack = 'rgba(0, 0, 0, 0.12)');
      var fullWhite = (exports.fullWhite = 'rgba(255, 255, 255, 1)');
      var darkWhite = (exports.darkWhite = 'rgba(255, 255, 255, 0.87)');
      var lightWhite = (exports.lightWhite = 'rgba(255, 255, 255, 0.54)');

      /***/
    },
    /* 709 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = {
        iconSize: 24,

        desktopGutter: 24,
        desktopGutterMore: 32,
        desktopGutterLess: 16,
        desktopGutterMini: 8,
        desktopKeylineIncrement: 64,
        desktopDropDownMenuItemHeight: 32,
        desktopDropDownMenuFontSize: 15,
        desktopDrawerMenuItemHeight: 48,
        desktopSubheaderHeight: 48,
        desktopToolbarHeight: 56,
      };

      /***/
    },
    /* 710 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = {
        menu: 1000,
        appBar: 1100,
        drawerOverlay: 1200,
        drawer: 1300,
        dialogOverlay: 1400,
        dialog: 1500,
        layer: 2000,
        popover: 2100,
        snackbar: 2900,
        tooltip: 3000,
      };

      /***/
    },
    /* 711 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function (obj) {
              return typeof obj;
            }
          : function (obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol
                ? 'symbol'
                : typeof obj;
            };

      exports.default = function (muiTheme) {
        var userAgent = muiTheme.userAgent;

        if (userAgent === undefined && typeof navigator !== 'undefined') {
          userAgent = navigator.userAgent;
        }

        if (userAgent === undefined && !hasWarnedAboutUserAgent) {
          true
            ? (0, _warning2.default)(
                false,
                'Material-UI: userAgent should be supplied in the muiTheme context\n      for server-side rendering.',
              )
            : void 0;

          hasWarnedAboutUserAgent = true;
        }

        if (userAgent === false) {
          // Disabled autoprefixer
          return null;
        } else if (userAgent === 'all' || userAgent === undefined) {
          // Prefix for all user agent
          return function (style) {
            return _inlineStylePrefixer2.default.prefixAll(style);
          };
        } else {
          var _ret = (function () {
            var prefixer = new _inlineStylePrefixer2.default({
              userAgent: userAgent,
            });

            return {
              v: function v(style) {
                return prefixer.prefix(style);
              },
            };
          })();

          if (
            (typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) ===
            'object'
          )
            return _ret.v;
        }
      };

      var _inlineStylePrefixer = __webpack_require__(712);

      var _inlineStylePrefixer2 = _interopRequireDefault(_inlineStylePrefixer);

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var hasWarnedAboutUserAgent = false;

      /***/
    },
    /* 712 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();
      // special flexbox specifications

      var _prefixAll2 = __webpack_require__(713);

      var _prefixAll3 = _interopRequireDefault(_prefixAll2);

      var _getBrowserInformation = __webpack_require__(727);

      var _getBrowserInformation2 = _interopRequireDefault(
        _getBrowserInformation,
      );

      var _getPrefixedKeyframes = __webpack_require__(730);

      var _getPrefixedKeyframes2 = _interopRequireDefault(
        _getPrefixedKeyframes,
      );

      var _capitalizeString = __webpack_require__(715);

      var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

      var _prefixProps = __webpack_require__(731);

      var _prefixProps2 = _interopRequireDefault(_prefixProps);

      var _calc = __webpack_require__(732);

      var _calc2 = _interopRequireDefault(_calc);

      var _zoomCursor = __webpack_require__(734);

      var _zoomCursor2 = _interopRequireDefault(_zoomCursor);

      var _grabCursor = __webpack_require__(735);

      var _grabCursor2 = _interopRequireDefault(_grabCursor);

      var _flex = __webpack_require__(736);

      var _flex2 = _interopRequireDefault(_flex);

      var _sizing = __webpack_require__(737);

      var _sizing2 = _interopRequireDefault(_sizing);

      var _gradient = __webpack_require__(738);

      var _gradient2 = _interopRequireDefault(_gradient);

      var _transition = __webpack_require__(739);

      var _transition2 = _interopRequireDefault(_transition);

      var _flexboxIE = __webpack_require__(741);

      var _flexboxIE2 = _interopRequireDefault(_flexboxIE);

      var _flexboxOld = __webpack_require__(742);

      var _flexboxOld2 = _interopRequireDefault(_flexboxOld);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      var plugins = [
        _calc2.default,
        _zoomCursor2.default,
        _grabCursor2.default,
        _sizing2.default,
        _gradient2.default,
        _transition2.default,
        _flexboxIE2.default,
        _flexboxOld2.default,
        // this must be run AFTER the flexbox specs
        _flex2.default,
      ];

      var Prefixer = (function () {
        /**
         * Instantiante a new prefixer
         * @param {string} userAgent - userAgent to gather prefix information according to caniuse.com
         * @param {string} keepUnprefixed - keeps unprefixed properties and values
         */

        function Prefixer() {
          var _this = this;

          var options =
            arguments.length <= 0 || arguments[0] === undefined
              ? {}
              : arguments[0];

          _classCallCheck(this, Prefixer);

          var defaultUserAgent =
            typeof navigator !== 'undefined' ? navigator.userAgent : undefined;

          this._userAgent = options.userAgent || defaultUserAgent;
          this._keepUnprefixed = options.keepUnprefixed || false;

          this._browserInfo = (0, _getBrowserInformation2.default)(
            this._userAgent,
          );

          // Checks if the userAgent was resolved correctly
          if (this._browserInfo && this._browserInfo.prefix) {
            // set additional prefix information
            this.cssPrefix = this._browserInfo.prefix.css;
            this.jsPrefix = this._browserInfo.prefix.inline;
            this.prefixedKeyframes = (0, _getPrefixedKeyframes2.default)(
              this._browserInfo,
            );
          } else {
            this._usePrefixAllFallback = true;
            return false;
          }

          var data =
            this._browserInfo.browser &&
            _prefixProps2.default[this._browserInfo.browser];
          if (data) {
            this._requiresPrefix = Object.keys(data)
              .filter(function (key) {
                return data[key] >= _this._browserInfo.version;
              })
              .reduce(function (result, name) {
                result[name] = true;
                return result;
              }, {});
            this._hasPropsRequiringPrefix =
              Object.keys(this._requiresPrefix).length > 0;
          } else {
            this._usePrefixAllFallback = true;
          }
        }

        /**
         * Returns a prefixed version of the style object
         * @param {Object} styles - Style object that gets prefixed properties added
         * @returns {Object} - Style object with prefixed properties and values
         */

        _createClass(
          Prefixer,
          [
            {
              key: 'prefix',
              value: function prefix(styles) {
                var _this2 = this;

                // use prefixAll as fallback if userAgent can not be resolved
                if (this._usePrefixAllFallback) {
                  return (0, _prefixAll3.default)(styles);
                }

                // only add prefixes if needed
                if (!this._hasPropsRequiringPrefix) {
                  return styles;
                }

                Object.keys(styles).forEach(function (property) {
                  var value = styles[property];
                  if (value instanceof Object && !Array.isArray(value)) {
                    // recurse through nested style objects
                    styles[property] = _this2.prefix(value);
                  } else {
                    // add prefixes if needed
                    if (_this2._requiresPrefix[property]) {
                      styles[
                        _this2.jsPrefix +
                          (0, _capitalizeString2.default)(property)
                      ] = value;
                      if (!_this2._keepUnprefixed) {
                        delete styles[property];
                      }
                    }
                  }
                });

                Object.keys(styles).forEach(function (property) {
                  [].concat(styles[property]).forEach(function (value) {
                    // resolve plugins
                    plugins.forEach(function (plugin) {
                      // generates a new plugin interface with current data
                      assignStyles(
                        styles,
                        plugin({
                          property: property,
                          value: value,
                          styles: styles,
                          browserInfo: _this2._browserInfo,
                          prefix: {
                            js: _this2.jsPrefix,
                            css: _this2.cssPrefix,
                            keyframes: _this2.prefixedKeyframes,
                          },
                          keepUnprefixed: _this2._keepUnprefixed,
                          requiresPrefix: _this2._requiresPrefix,
                        }),
                        value,
                        _this2._keepUnprefixed,
                      );
                    });
                  });
                });

                return styles;
              },

              /**
               * Returns a prefixed version of the style object using all vendor prefixes
               * @param {Object} styles - Style object that gets prefixed properties added
               * @returns {Object} - Style object with prefixed properties and values
               */
            },
          ],
          [
            {
              key: 'prefixAll',
              value: function prefixAll(styles) {
                return (0, _prefixAll3.default)(styles);
              },
            },
          ],
        );

        return Prefixer;
      })();

      exports.default = Prefixer;

      function assignStyles(base) {
        var extend =
          arguments.length <= 1 || arguments[1] === undefined
            ? {}
            : arguments[1];
        var value = arguments[2];
        var keepUnprefixed = arguments[3];

        Object.keys(extend).forEach(function (property) {
          var baseValue = base[property];
          if (Array.isArray(baseValue)) {
            [].concat(extend[property]).forEach(function (val) {
              if (base[property].indexOf(val) === -1) {
                base[property].splice(
                  baseValue.indexOf(value),
                  keepUnprefixed ? 0 : 1,
                  val,
                );
              }
            });
          } else {
            base[property] = extend[property];
          }
        });
      }
      module.exports = exports['default'];

      /***/
    },
    /* 713 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = prefixAll;

      var _prefixProps = __webpack_require__(714);

      var _prefixProps2 = _interopRequireDefault(_prefixProps);

      var _capitalizeString = __webpack_require__(715);

      var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

      var _calc = __webpack_require__(716);

      var _calc2 = _interopRequireDefault(_calc);

      var _cursor = __webpack_require__(719);

      var _cursor2 = _interopRequireDefault(_cursor);

      var _flex = __webpack_require__(720);

      var _flex2 = _interopRequireDefault(_flex);

      var _sizing = __webpack_require__(721);

      var _sizing2 = _interopRequireDefault(_sizing);

      var _gradient = __webpack_require__(722);

      var _gradient2 = _interopRequireDefault(_gradient);

      var _transition = __webpack_require__(723);

      var _transition2 = _interopRequireDefault(_transition);

      var _flexboxIE = __webpack_require__(725);

      var _flexboxIE2 = _interopRequireDefault(_flexboxIE);

      var _flexboxOld = __webpack_require__(726);

      var _flexboxOld2 = _interopRequireDefault(_flexboxOld);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      // special flexbox specifications

      var plugins = [
        _calc2.default,
        _cursor2.default,
        _sizing2.default,
        _gradient2.default,
        _transition2.default,
        _flexboxIE2.default,
        _flexboxOld2.default,
        _flex2.default,
      ];

      /**
       * Returns a prefixed version of the style object using all vendor prefixes
       * @param {Object} styles - Style object that gets prefixed properties added
       * @returns {Object} - Style object with prefixed properties and values
       */
      function prefixAll(styles) {
        Object.keys(styles).forEach(function (property) {
          var value = styles[property];
          if (value instanceof Object && !Array.isArray(value)) {
            // recurse through nested style objects
            styles[property] = prefixAll(value);
          } else {
            Object.keys(_prefixProps2.default).forEach(function (prefix) {
              var properties = _prefixProps2.default[prefix];
              // add prefixes if needed
              if (properties[property]) {
                styles[
                  prefix + (0, _capitalizeString2.default)(property)
                ] = value;
              }
            });
          }
        });

        Object.keys(styles).forEach(function (property) {
          [].concat(styles[property]).forEach(function (value, index) {
            // resolve every special plugins
            plugins.forEach(function (plugin) {
              return assignStyles(styles, plugin(property, value));
            });
          });
        });

        return styles;
      }

      function assignStyles(base) {
        var extend =
          arguments.length <= 1 || arguments[1] === undefined
            ? {}
            : arguments[1];

        Object.keys(extend).forEach(function (property) {
          var baseValue = base[property];
          if (Array.isArray(baseValue)) {
            [].concat(extend[property]).forEach(function (value) {
              var valueIndex = baseValue.indexOf(value);
              if (valueIndex > -1) {
                base[property].splice(valueIndex, 1);
              }
              base[property].push(value);
            });
          } else {
            base[property] = extend[property];
          }
        });
      }
      module.exports = exports['default'];

      /***/
    },
    /* 714 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = {
        Webkit: {
          transform: true,
          transformOrigin: true,
          transformOriginX: true,
          transformOriginY: true,
          backfaceVisibility: true,
          perspective: true,
          perspectiveOrigin: true,
          transformStyle: true,
          transformOriginZ: true,
          animation: true,
          animationDelay: true,
          animationDirection: true,
          animationFillMode: true,
          animationDuration: true,
          animationIterationCount: true,
          animationName: true,
          animationPlayState: true,
          animationTimingFunction: true,
          appearance: true,
          userSelect: true,
          fontKerning: true,
          textEmphasisPosition: true,
          textEmphasis: true,
          textEmphasisStyle: true,
          textEmphasisColor: true,
          boxDecorationBreak: true,
          clipPath: true,
          maskImage: true,
          maskMode: true,
          maskRepeat: true,
          maskPosition: true,
          maskClip: true,
          maskOrigin: true,
          maskSize: true,
          maskComposite: true,
          mask: true,
          maskBorderSource: true,
          maskBorderMode: true,
          maskBorderSlice: true,
          maskBorderWidth: true,
          maskBorderOutset: true,
          maskBorderRepeat: true,
          maskBorder: true,
          maskType: true,
          textDecorationStyle: true,
          textDecorationSkip: true,
          textDecorationLine: true,
          textDecorationColor: true,
          filter: true,
          fontFeatureSettings: true,
          breakAfter: true,
          breakBefore: true,
          breakInside: true,
          columnCount: true,
          columnFill: true,
          columnGap: true,
          columnRule: true,
          columnRuleColor: true,
          columnRuleStyle: true,
          columnRuleWidth: true,
          columns: true,
          columnSpan: true,
          columnWidth: true,
          flex: true,
          flexBasis: true,
          flexDirection: true,
          flexGrow: true,
          flexFlow: true,
          flexShrink: true,
          flexWrap: true,
          alignContent: true,
          alignItems: true,
          alignSelf: true,
          justifyContent: true,
          order: true,
          transition: true,
          transitionDelay: true,
          transitionDuration: true,
          transitionProperty: true,
          transitionTimingFunction: true,
          backdropFilter: true,
          scrollSnapType: true,
          scrollSnapPointsX: true,
          scrollSnapPointsY: true,
          scrollSnapDestination: true,
          scrollSnapCoordinate: true,
          shapeImageThreshold: true,
          shapeImageMargin: true,
          shapeImageOutside: true,
          hyphens: true,
          flowInto: true,
          flowFrom: true,
          regionFragment: true,
          textSizeAdjust: true,
        },
        Moz: {
          appearance: true,
          userSelect: true,
          boxSizing: true,
          textAlignLast: true,
          textDecorationStyle: true,
          textDecorationSkip: true,
          textDecorationLine: true,
          textDecorationColor: true,
          tabSize: true,
          hyphens: true,
          fontFeatureSettings: true,
          breakAfter: true,
          breakBefore: true,
          breakInside: true,
          columnCount: true,
          columnFill: true,
          columnGap: true,
          columnRule: true,
          columnRuleColor: true,
          columnRuleStyle: true,
          columnRuleWidth: true,
          columns: true,
          columnSpan: true,
          columnWidth: true,
        },
        ms: {
          flex: true,
          flexBasis: false,
          flexDirection: true,
          flexGrow: false,
          flexFlow: true,
          flexShrink: false,
          flexWrap: true,
          alignContent: false,
          alignItems: false,
          alignSelf: false,
          justifyContent: false,
          order: false,
          transform: true,
          transformOrigin: true,
          transformOriginX: true,
          transformOriginY: true,
          userSelect: true,
          wrapFlow: true,
          wrapThrough: true,
          wrapMargin: true,
          scrollSnapType: true,
          scrollSnapPointsX: true,
          scrollSnapPointsY: true,
          scrollSnapDestination: true,
          scrollSnapCoordinate: true,
          touchAction: true,
          hyphens: true,
          flowInto: true,
          flowFrom: true,
          breakBefore: true,
          breakAfter: true,
          breakInside: true,
          regionFragment: true,
          gridTemplateColumns: true,
          gridTemplateRows: true,
          gridTemplateAreas: true,
          gridTemplate: true,
          gridAutoColumns: true,
          gridAutoRows: true,
          gridAutoFlow: true,
          grid: true,
          gridRowStart: true,
          gridColumnStart: true,
          gridRowEnd: true,
          gridRow: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnGap: true,
          gridRowGap: true,
          gridArea: true,
          gridGap: true,
          textSizeAdjust: true,
        },
      };
      module.exports = exports['default'];

      /***/
    },
    /* 715 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      // helper to capitalize strings

      exports.default = function (str) {
        return str.charAt(0).toUpperCase() + str.slice(1);
      };

      module.exports = exports['default'];

      /***/
    },
    /* 716 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = calc;

      var _joinPrefixedValue = __webpack_require__(717);

      var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

      var _isPrefixedValue = __webpack_require__(718);

      var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function calc(property, value) {
        if (
          typeof value === 'string' &&
          !(0, _isPrefixedValue2.default)(value) &&
          value.indexOf('calc(') > -1
        ) {
          return (0, _joinPrefixedValue2.default)(property, value, function (
            prefix,
            value,
          ) {
            return value.replace(/calc\(/g, prefix + 'calc(');
          });
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 717 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true,
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }

      // returns a style object with a single concated prefixed value string

      exports.default = function (property, value) {
        var replacer =
          arguments.length <= 2 || arguments[2] === undefined
            ? function (prefix, value) {
                return prefix + value;
              }
            : arguments[2];
        return _defineProperty(
          {},
          property,
          ['-webkit-', '-moz-', ''].map(function (prefix) {
            return replacer(prefix, value);
          }),
        );
      };

      module.exports = exports['default'];

      /***/
    },
    /* 718 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      exports.default = function (value) {
        if (Array.isArray(value)) value = value.join(',');

        return value.match(/-webkit-|-moz-|-ms-/) !== null;
      };

      module.exports = exports['default'];

      /***/
    },
    /* 719 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = cursor;

      var _joinPrefixedValue = __webpack_require__(717);

      var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var values = {
        'zoom-in': true,
        'zoom-out': true,
        grab: true,
        grabbing: true,
      };

      function cursor(property, value) {
        if (property === 'cursor' && values[value]) {
          return (0, _joinPrefixedValue2.default)(property, value);
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 720 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = flex;
      var values = { flex: true, 'inline-flex': true };

      function flex(property, value) {
        if (property === 'display' && values[value]) {
          return {
            display: [
              '-webkit-box',
              '-moz-box',
              '-ms-' + value + 'box',
              '-webkit-' + value,
              value,
            ],
          };
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 721 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = sizing;

      var _joinPrefixedValue = __webpack_require__(717);

      var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var properties = {
        maxHeight: true,
        maxWidth: true,
        width: true,
        height: true,
        columnWidth: true,
        minWidth: true,
        minHeight: true,
      };
      var values = {
        'min-content': true,
        'max-content': true,
        'fill-available': true,
        'fit-content': true,
        'contain-floats': true,
      };

      function sizing(property, value) {
        if (properties[property] && values[value]) {
          return (0, _joinPrefixedValue2.default)(property, value);
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 722 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = gradient;

      var _joinPrefixedValue = __webpack_require__(717);

      var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

      var _isPrefixedValue = __webpack_require__(718);

      var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;

      function gradient(property, value) {
        if (
          typeof value === 'string' &&
          !(0, _isPrefixedValue2.default)(value) &&
          value.match(values) !== null
        ) {
          return (0, _joinPrefixedValue2.default)(property, value);
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 723 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = transition;

      var _hyphenateStyleName = __webpack_require__(724);

      var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);

      var _capitalizeString = __webpack_require__(715);

      var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

      var _isPrefixedValue = __webpack_require__(718);

      var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

      var _prefixProps = __webpack_require__(714);

      var _prefixProps2 = _interopRequireDefault(_prefixProps);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true,
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }

      var properties = {
        transition: true,
        transitionProperty: true,
        WebkitTransition: true,
        WebkitTransitionProperty: true,
      };

      function transition(property, value) {
        // also check for already prefixed transitions
        if (typeof value === 'string' && properties[property]) {
          var _ref2;

          var outputValue = prefixValue(value);
          var webkitOutput = outputValue
            .split(/,(?![^()]*(?:\([^()]*\))?\))/g)
            .filter(function (value) {
              return value.match(/-moz-|-ms-/) === null;
            })
            .join(',');

          // if the property is already prefixed
          if (property.indexOf('Webkit') > -1) {
            return _defineProperty({}, property, webkitOutput);
          }

          return (
            (_ref2 = {}),
            _defineProperty(
              _ref2,
              'Webkit' + (0, _capitalizeString2.default)(property),
              webkitOutput,
            ),
            _defineProperty(_ref2, property, outputValue),
            _ref2
          );
        }
      }

      function prefixValue(value) {
        if ((0, _isPrefixedValue2.default)(value)) {
          return value;
        }

        // only split multi values, not cubic beziers
        var multipleValues = value.split(/,(?![^()]*(?:\([^()]*\))?\))/g);

        // iterate each single value and check for transitioned properties
        // that need to be prefixed as well
        multipleValues.forEach(function (val, index) {
          multipleValues[index] = Object.keys(_prefixProps2.default).reduce(
            function (out, prefix) {
              var dashCasePrefix = '-' + prefix.toLowerCase() + '-';

              Object.keys(_prefixProps2.default[prefix]).forEach(function (
                prop,
              ) {
                var dashCaseProperty = (0, _hyphenateStyleName2.default)(prop);

                if (
                  val.indexOf(dashCaseProperty) > -1 &&
                  dashCaseProperty !== 'order'
                ) {
                  // join all prefixes and create a new value
                  out =
                    val.replace(
                      dashCaseProperty,
                      dashCasePrefix + dashCaseProperty,
                    ) +
                    ',' +
                    out;
                }
              });
              return out;
            },
            val,
          );
        });

        return multipleValues.join(',');
      }
      module.exports = exports['default'];

      /***/
    },
    /* 724 */
    /***/ function (module, exports) {
      'use strict';

      var uppercasePattern = /[A-Z]/g;
      var msPattern = /^ms-/;
      var cache = {};

      function hyphenateStyleName(string) {
        return string in cache
          ? cache[string]
          : (cache[string] = string
              .replace(uppercasePattern, '-$&')
              .toLowerCase()
              .replace(msPattern, '-ms-'));
      }

      module.exports = hyphenateStyleName;

      /***/
    },
    /* 725 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = flexboxIE;

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true,
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }

      var alternativeValues = {
        'space-around': 'distribute',
        'space-between': 'justify',
        'flex-start': 'start',
        'flex-end': 'end',
      };
      var alternativeProps = {
        alignContent: 'msFlexLinePack',
        alignSelf: 'msFlexItemAlign',
        alignItems: 'msFlexAlign',
        justifyContent: 'msFlexPack',
        order: 'msFlexOrder',
        flexGrow: 'msFlexPositive',
        flexShrink: 'msFlexNegative',
        flexBasis: 'msPreferredSize',
      };

      function flexboxIE(property, value) {
        if (alternativeProps[property]) {
          return _defineProperty(
            {},
            alternativeProps[property],
            alternativeValues[value] || value,
          );
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 726 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = flexboxOld;

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true,
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }

      var alternativeValues = {
        'space-around': 'justify',
        'space-between': 'justify',
        'flex-start': 'start',
        'flex-end': 'end',
        'wrap-reverse': 'multiple',
        wrap: 'multiple',
      };

      var alternativeProps = {
        alignItems: 'WebkitBoxAlign',
        justifyContent: 'WebkitBoxPack',
        flexWrap: 'WebkitBoxLines',
      };

      function flexboxOld(property, value) {
        if (property === 'flexDirection' && typeof value === 'string') {
          return {
            WebkitBoxOrient:
              value.indexOf('column') > -1 ? 'vertical' : 'horizontal',
            WebkitBoxDirection:
              value.indexOf('reverse') > -1 ? 'reverse' : 'normal',
          };
        }
        if (alternativeProps[property]) {
          return _defineProperty(
            {},
            alternativeProps[property],
            alternativeValues[value] || value,
          );
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 727 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _bowser = __webpack_require__(728);

      var _bowser2 = _interopRequireDefault(_bowser);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var vendorPrefixes = {
        Webkit: [
          'chrome',
          'safari',
          'ios',
          'android',
          'phantom',
          'opera',
          'webos',
          'blackberry',
          'bada',
          'tizen',
          'chromium',
          'vivaldi',
        ],
        Moz: ['firefox', 'seamonkey', 'sailfish'],
        ms: ['msie', 'msedge'],
      };
      var browsers = {
        chrome: [['chrome'], ['chromium']],
        safari: [['safari']],
        firefox: [['firefox']],
        edge: [['msedge']],
        opera: [['opera'], ['vivaldi']],
        ios_saf: [
          ['ios', 'mobile'],
          ['ios', 'tablet'],
        ],
        ie: [['msie']],
        op_mini: [
          ['opera', 'mobile'],
          ['opera', 'tablet'],
        ],
        and_uc: [
          ['android', 'mobile'],
          ['android', 'tablet'],
        ],
        android: [
          ['android', 'mobile'],
          ['android', 'tablet'],
        ],
      };

      var browserByInfo = function browserByInfo(info) {
        if (info.firefox) {
          return 'firefox';
        }
        var name = '';

        Object.keys(browsers).forEach(function (browser) {
          browsers[browser].forEach(function (condition) {
            var match = 0;
            condition.forEach(function (single) {
              if (info[single]) {
                match += 1;
              }
            });
            if (condition.length === match) {
              name = browser;
            }
          });
        });

        return name;
      };

      /**
       * Uses bowser to get default browser information such as version and name
       * Evaluates bowser info and adds vendorPrefix information
       * @param {string} userAgent - userAgent that gets evaluated
       */

      exports.default = function (userAgent) {
        if (!userAgent) {
          return false;
        }
        var info = _bowser2.default._detect(userAgent);

        Object.keys(vendorPrefixes).forEach(function (prefix) {
          vendorPrefixes[prefix].forEach(function (browser) {
            if (info[browser]) {
              info.prefix = {
                inline: prefix,
                css: '-' + prefix.toLowerCase() + '-',
              };
            }
          });
        });

        info.browser = browserByInfo(info);

        // For cordova IOS 8 the version is missing, set truncated osversion to prevent NaN
        info.version = info.version
          ? parseFloat(info.version)
          : parseInt(parseFloat(info.osversion), 10);
        info.osversion = parseFloat(info.osversion);

        // iOS forces all browsers to use Safari under the hood
        // as the Safari version seems to match the iOS version
        // we just explicitely use the osversion instead
        // https://github.com/rofrischmann/inline-style-prefixer/issues/72
        if (info.browser === 'ios_saf' && info.version > info.osversion) {
          info.version = info.osversion;
          info.safari = true;
        }

        // seperate native android chrome
        // https://github.com/rofrischmann/inline-style-prefixer/issues/45
        if (info.browser === 'android' && info.chrome && info.version > 37) {
          info.browser = 'and_chr';
        }

        // For android < 4.4 we want to check the osversion
        // not the chrome version, see issue #26
        // https://github.com/rofrischmann/inline-style-prefixer/issues/26
        if (info.browser === 'android' && info.osversion < 5) {
          info.version = info.osversion;
        }

        return info;
      };

      module.exports = exports['default'];

      /***/
    },
    /* 728 */
    /***/ function (module, exports, __webpack_require__) {
      /*!
       * Bowser - a browser detector
       * https://github.com/ded/bowser
       * MIT License | (c) Dustin Diaz 2015
       */

      !(function (name, definition) {
        if (typeof module != 'undefined' && module.exports)
          module.exports = definition();
        else if (true) __webpack_require__(729)(name, definition);
        else this[name] = definition();
      })('bowser', function () {
        /**
         * See useragents.js for examples of navigator.userAgent
         */

        var t = true;

        function detect(ua) {
          function getFirstMatch(regex) {
            var match = ua.match(regex);
            return (match && match.length > 1 && match[1]) || '';
          }

          function getSecondMatch(regex) {
            var match = ua.match(regex);
            return (match && match.length > 1 && match[2]) || '';
          }

          var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase(),
            likeAndroid = /like android/i.test(ua),
            android = !likeAndroid && /android/i.test(ua),
            nexusMobile = /nexus\s*[0-6]\s*/i.test(ua),
            nexusTablet = !nexusMobile && /nexus\s*[0-9]+/i.test(ua),
            chromeos = /CrOS/.test(ua),
            silk = /silk/i.test(ua),
            sailfish = /sailfish/i.test(ua),
            tizen = /tizen/i.test(ua),
            webos = /(web|hpw)os/i.test(ua),
            windowsphone = /windows phone/i.test(ua),
            samsungBrowser = /SamsungBrowser/i.test(ua),
            windows = !windowsphone && /windows/i.test(ua),
            mac = !iosdevice && !silk && /macintosh/i.test(ua),
            linux =
              !android && !sailfish && !tizen && !webos && /linux/i.test(ua),
            edgeVersion = getFirstMatch(/edge\/(\d+(\.\d+)?)/i),
            versionIdentifier = getFirstMatch(/version\/(\d+(\.\d+)?)/i),
            tablet = /tablet/i.test(ua),
            mobile = !tablet && /[^-]mobi/i.test(ua),
            xbox = /xbox/i.test(ua),
            result;

          if (/opera/i.test(ua)) {
            //  an old Opera
            result = {
              name: 'Opera',
              opera: t,
              version:
                versionIdentifier ||
                getFirstMatch(/(?:opera|opr|opios)[\s\/](\d+(\.\d+)?)/i),
            };
          } else if (/opr|opios/i.test(ua)) {
            // a new Opera
            result = {
              name: 'Opera',
              opera: t,
              version:
                getFirstMatch(/(?:opr|opios)[\s\/](\d+(\.\d+)?)/i) ||
                versionIdentifier,
            };
          } else if (/SamsungBrowser/i.test(ua)) {
            result = {
              name: 'Samsung Internet for Android',
              samsungBrowser: t,
              version:
                versionIdentifier ||
                getFirstMatch(/(?:SamsungBrowser)[\s\/](\d+(\.\d+)?)/i),
            };
          } else if (/coast/i.test(ua)) {
            result = {
              name: 'Opera Coast',
              coast: t,
              version:
                versionIdentifier ||
                getFirstMatch(/(?:coast)[\s\/](\d+(\.\d+)?)/i),
            };
          } else if (/yabrowser/i.test(ua)) {
            result = {
              name: 'Yandex Browser',
              yandexbrowser: t,
              version:
                versionIdentifier ||
                getFirstMatch(/(?:yabrowser)[\s\/](\d+(\.\d+)?)/i),
            };
          } else if (/ucbrowser/i.test(ua)) {
            result = {
              name: 'UC Browser',
              ucbrowser: t,
              version: getFirstMatch(/(?:ucbrowser)[\s\/](\d+(?:\.\d+)+)/i),
            };
          } else if (/mxios/i.test(ua)) {
            result = {
              name: 'Maxthon',
              maxthon: t,
              version: getFirstMatch(/(?:mxios)[\s\/](\d+(?:\.\d+)+)/i),
            };
          } else if (/epiphany/i.test(ua)) {
            result = {
              name: 'Epiphany',
              epiphany: t,
              version: getFirstMatch(/(?:epiphany)[\s\/](\d+(?:\.\d+)+)/i),
            };
          } else if (/puffin/i.test(ua)) {
            result = {
              name: 'Puffin',
              puffin: t,
              version: getFirstMatch(/(?:puffin)[\s\/](\d+(?:\.\d+)?)/i),
            };
          } else if (/sleipnir/i.test(ua)) {
            result = {
              name: 'Sleipnir',
              sleipnir: t,
              version: getFirstMatch(/(?:sleipnir)[\s\/](\d+(?:\.\d+)+)/i),
            };
          } else if (/k-meleon/i.test(ua)) {
            result = {
              name: 'K-Meleon',
              kMeleon: t,
              version: getFirstMatch(/(?:k-meleon)[\s\/](\d+(?:\.\d+)+)/i),
            };
          } else if (windowsphone) {
            result = {
              name: 'Windows Phone',
              windowsphone: t,
            };
            if (edgeVersion) {
              result.msedge = t;
              result.version = edgeVersion;
            } else {
              result.msie = t;
              result.version = getFirstMatch(/iemobile\/(\d+(\.\d+)?)/i);
            }
          } else if (/msie|trident/i.test(ua)) {
            result = {
              name: 'Internet Explorer',
              msie: t,
              version: getFirstMatch(/(?:msie |rv:)(\d+(\.\d+)?)/i),
            };
          } else if (chromeos) {
            result = {
              name: 'Chrome',
              chromeos: t,
              chromeBook: t,
              chrome: t,
              version: getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i),
            };
          } else if (/chrome.+? edge/i.test(ua)) {
            result = {
              name: 'Microsoft Edge',
              msedge: t,
              version: edgeVersion,
            };
          } else if (/vivaldi/i.test(ua)) {
            result = {
              name: 'Vivaldi',
              vivaldi: t,
              version:
                getFirstMatch(/vivaldi\/(\d+(\.\d+)?)/i) || versionIdentifier,
            };
          } else if (sailfish) {
            result = {
              name: 'Sailfish',
              sailfish: t,
              version: getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i),
            };
          } else if (/seamonkey\//i.test(ua)) {
            result = {
              name: 'SeaMonkey',
              seamonkey: t,
              version: getFirstMatch(/seamonkey\/(\d+(\.\d+)?)/i),
            };
          } else if (/firefox|iceweasel|fxios/i.test(ua)) {
            result = {
              name: 'Firefox',
              firefox: t,
              version: getFirstMatch(
                /(?:firefox|iceweasel|fxios)[ \/](\d+(\.\d+)?)/i,
              ),
            };
            if (/\((mobile|tablet);[^\)]*rv:[\d\.]+\)/i.test(ua)) {
              result.firefoxos = t;
            }
          } else if (silk) {
            result = {
              name: 'Amazon Silk',
              silk: t,
              version: getFirstMatch(/silk\/(\d+(\.\d+)?)/i),
            };
          } else if (/phantom/i.test(ua)) {
            result = {
              name: 'PhantomJS',
              phantom: t,
              version: getFirstMatch(/phantomjs\/(\d+(\.\d+)?)/i),
            };
          } else if (/slimerjs/i.test(ua)) {
            result = {
              name: 'SlimerJS',
              slimer: t,
              version: getFirstMatch(/slimerjs\/(\d+(\.\d+)?)/i),
            };
          } else if (
            /blackberry|\bbb\d+/i.test(ua) ||
            /rim\stablet/i.test(ua)
          ) {
            result = {
              name: 'BlackBerry',
              blackberry: t,
              version:
                versionIdentifier ||
                getFirstMatch(/blackberry[\d]+\/(\d+(\.\d+)?)/i),
            };
          } else if (webos) {
            result = {
              name: 'WebOS',
              webos: t,
              version:
                versionIdentifier ||
                getFirstMatch(/w(?:eb)?osbrowser\/(\d+(\.\d+)?)/i),
            };
            /touchpad\//i.test(ua) && (result.touchpad = t);
          } else if (/bada/i.test(ua)) {
            result = {
              name: 'Bada',
              bada: t,
              version: getFirstMatch(/dolfin\/(\d+(\.\d+)?)/i),
            };
          } else if (tizen) {
            result = {
              name: 'Tizen',
              tizen: t,
              version:
                getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.\d+)?)/i) ||
                versionIdentifier,
            };
          } else if (/qupzilla/i.test(ua)) {
            result = {
              name: 'QupZilla',
              qupzilla: t,
              version:
                getFirstMatch(/(?:qupzilla)[\s\/](\d+(?:\.\d+)+)/i) ||
                versionIdentifier,
            };
          } else if (/chromium/i.test(ua)) {
            result = {
              name: 'Chromium',
              chromium: t,
              version:
                getFirstMatch(/(?:chromium)[\s\/](\d+(?:\.\d+)?)/i) ||
                versionIdentifier,
            };
          } else if (/chrome|crios|crmo/i.test(ua)) {
            result = {
              name: 'Chrome',
              chrome: t,
              version: getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i),
            };
          } else if (android) {
            result = {
              name: 'Android',
              version: versionIdentifier,
            };
          } else if (/safari|applewebkit/i.test(ua)) {
            result = {
              name: 'Safari',
              safari: t,
            };
            if (versionIdentifier) {
              result.version = versionIdentifier;
            }
          } else if (iosdevice) {
            result = {
              name:
                iosdevice == 'iphone'
                  ? 'iPhone'
                  : iosdevice == 'ipad'
                  ? 'iPad'
                  : 'iPod',
            };
            // WTF: version is not part of user agent in web apps
            if (versionIdentifier) {
              result.version = versionIdentifier;
            }
          } else if (/googlebot/i.test(ua)) {
            result = {
              name: 'Googlebot',
              googlebot: t,
              version:
                getFirstMatch(/googlebot\/(\d+(\.\d+))/i) || versionIdentifier,
            };
          } else {
            result = {
              name: getFirstMatch(/^(.*)\/(.*) /),
              version: getSecondMatch(/^(.*)\/(.*) /),
            };
          }

          // set webkit or gecko flag for browsers based on these engines
          if (!result.msedge && /(apple)?webkit/i.test(ua)) {
            if (/(apple)?webkit\/537\.36/i.test(ua)) {
              result.name = result.name || 'Blink';
              result.blink = t;
            } else {
              result.name = result.name || 'Webkit';
              result.webkit = t;
            }
            if (!result.version && versionIdentifier) {
              result.version = versionIdentifier;
            }
          } else if (!result.opera && /gecko\//i.test(ua)) {
            result.name = result.name || 'Gecko';
            result.gecko = t;
            result.version =
              result.version || getFirstMatch(/gecko\/(\d+(\.\d+)?)/i);
          }

          // set OS flags for platforms that have multiple browsers
          if (
            !result.windowsphone &&
            !result.msedge &&
            (android || result.silk)
          ) {
            result.android = t;
          } else if (!result.windowsphone && !result.msedge && iosdevice) {
            result[iosdevice] = t;
            result.ios = t;
          } else if (mac) {
            result.mac = t;
          } else if (xbox) {
            result.xbox = t;
          } else if (windows) {
            result.windows = t;
          } else if (linux) {
            result.linux = t;
          }

          // OS version extraction
          var osVersion = '';
          if (result.windowsphone) {
            osVersion = getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i);
          } else if (iosdevice) {
            osVersion = getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i);
            osVersion = osVersion.replace(/[_\s]/g, '.');
          } else if (android) {
            osVersion = getFirstMatch(/android[ \/-](\d+(\.\d+)*)/i);
          } else if (result.webos) {
            osVersion = getFirstMatch(/(?:web|hpw)os\/(\d+(\.\d+)*)/i);
          } else if (result.blackberry) {
            osVersion = getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i);
          } else if (result.bada) {
            osVersion = getFirstMatch(/bada\/(\d+(\.\d+)*)/i);
          } else if (result.tizen) {
            osVersion = getFirstMatch(/tizen[\/\s](\d+(\.\d+)*)/i);
          }
          if (osVersion) {
            result.osversion = osVersion;
          }

          // device type extraction
          var osMajorVersion = osVersion.split('.')[0];
          if (
            tablet ||
            nexusTablet ||
            iosdevice == 'ipad' ||
            (android &&
              (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile))) ||
            result.silk
          ) {
            result.tablet = t;
          } else if (
            mobile ||
            iosdevice == 'iphone' ||
            iosdevice == 'ipod' ||
            android ||
            nexusMobile ||
            result.blackberry ||
            result.webos ||
            result.bada
          ) {
            result.mobile = t;
          }

          // Graded Browser Support
          // http://developer.yahoo.com/yui/articles/gbs
          if (
            result.msedge ||
            (result.msie && result.version >= 10) ||
            (result.yandexbrowser && result.version >= 15) ||
            (result.vivaldi && result.version >= 1.0) ||
            (result.chrome && result.version >= 20) ||
            (result.samsungBrowser && result.version >= 4) ||
            (result.firefox && result.version >= 20.0) ||
            (result.safari && result.version >= 6) ||
            (result.opera && result.version >= 10.0) ||
            (result.ios &&
              result.osversion &&
              result.osversion.split('.')[0] >= 6) ||
            (result.blackberry && result.version >= 10.1) ||
            (result.chromium && result.version >= 20)
          ) {
            result.a = t;
          } else if (
            (result.msie && result.version < 10) ||
            (result.chrome && result.version < 20) ||
            (result.firefox && result.version < 20.0) ||
            (result.safari && result.version < 6) ||
            (result.opera && result.version < 10.0) ||
            (result.ios &&
              result.osversion &&
              result.osversion.split('.')[0] < 6) ||
            (result.chromium && result.version < 20)
          ) {
            result.c = t;
          } else result.x = t;

          return result;
        }

        var bowser = detect(
          typeof navigator !== 'undefined' ? navigator.userAgent || '' : '',
        );

        bowser.test = function (browserList) {
          for (var i = 0; i < browserList.length; ++i) {
            var browserItem = browserList[i];
            if (typeof browserItem === 'string') {
              if (browserItem in bowser) {
                return true;
              }
            }
          }
          return false;
        };

        /**
         * Get version precisions count
         *
         * @example
         *   getVersionPrecision("1.10.3") // 3
         *
         * @param  {string} version
         * @return {number}
         */
        function getVersionPrecision(version) {
          return version.split('.').length;
        }

        /**
         * Array::map polyfill
         *
         * @param  {Array} arr
         * @param  {Function} iterator
         * @return {Array}
         */
        function map(arr, iterator) {
          var result = [],
            i;
          if (Array.prototype.map) {
            return Array.prototype.map.call(arr, iterator);
          }
          for (i = 0; i < arr.length; i++) {
            result.push(iterator(arr[i]));
          }
          return result;
        }

        /**
         * Calculate browser version weight
         *
         * @example
         *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1
         *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1
         *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0
         *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1
         *
         * @param  {Array<String>} versions versions to compare
         * @return {Number} comparison result
         */
        function compareVersions(versions) {
          // 1) get common precision for both versions, for example for "10.0" and "9" it should be 2
          var precision = Math.max(
            getVersionPrecision(versions[0]),
            getVersionPrecision(versions[1]),
          );
          var chunks = map(versions, function (version) {
            var delta = precision - getVersionPrecision(version);

            // 2) "9" -> "9.0" (for precision = 2)
            version = version + new Array(delta + 1).join('.0');

            // 3) "9.0" -> ["000000000"", "000000009"]
            return map(version.split('.'), function (chunk) {
              return new Array(20 - chunk.length).join('0') + chunk;
            }).reverse();
          });

          // iterate in reverse order by reversed chunks array
          while (--precision >= 0) {
            // 4) compare: "000000009" > "000000010" = false (but "9" > "10" = true)
            if (chunks[0][precision] > chunks[1][precision]) {
              return 1;
            } else if (chunks[0][precision] === chunks[1][precision]) {
              if (precision === 0) {
                // all version chunks are same
                return 0;
              }
            } else {
              return -1;
            }
          }
        }

        /**
         * Check if browser is unsupported
         *
         * @example
         *   bowser.isUnsupportedBrowser({
         *     msie: "10",
         *     firefox: "23",
         *     chrome: "29",
         *     safari: "5.1",
         *     opera: "16",
         *     phantom: "534"
         *   });
         *
         * @param  {Object}  minVersions map of minimal version to browser
         * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map
         * @param  {String}  [ua] user agent string
         * @return {Boolean}
         */
        function isUnsupportedBrowser(minVersions, strictMode, ua) {
          var _bowser = bowser;

          // make strictMode param optional with ua param usage
          if (typeof strictMode === 'string') {
            ua = strictMode;
            strictMode = void 0;
          }

          if (strictMode === void 0) {
            strictMode = false;
          }
          if (ua) {
            _bowser = detect(ua);
          }

          var version = '' + _bowser.version;
          for (var browser in minVersions) {
            if (minVersions.hasOwnProperty(browser)) {
              if (_bowser[browser]) {
                if (typeof minVersions[browser] !== 'string') {
                  throw new Error(
                    'Browser version in the minVersion map should be a string: ' +
                      browser +
                      ': ' +
                      String(minVersions),
                  );
                }

                // browser version and min supported version.
                return compareVersions([version, minVersions[browser]]) < 0;
              }
            }
          }

          return strictMode; // not found
        }

        /**
         * Check if browser is supported
         *
         * @param  {Object} minVersions map of minimal version to browser
         * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map
         * @param  {String}  [ua] user agent string
         * @return {Boolean}
         */
        function check(minVersions, strictMode, ua) {
          return !isUnsupportedBrowser(minVersions, strictMode, ua);
        }

        bowser.isUnsupportedBrowser = isUnsupportedBrowser;
        bowser.compareVersions = compareVersions;
        bowser.check = check;

        /*
         * Set our detect method to the main bowser object so we can
         * reuse it to test other user agents.
         * This is needed to implement future tests.
         */
        bowser._detect = detect;

        return bowser;
      });

      /***/
    },
    /* 729 */
    /***/ function (module, exports) {
      module.exports = function () {
        throw new Error('define cannot be used indirect');
      };

      /***/
    },
    /* 730 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      exports.default = function (_ref) {
        var browser = _ref.browser;
        var version = _ref.version;
        var prefix = _ref.prefix;

        var prefixedKeyframes = 'keyframes';

        if (
          (browser === 'chrome' && version < 43) ||
          ((browser === 'safari' || browser === 'ios_saf') && version < 9) ||
          (browser === 'opera' && version < 30) ||
          (browser === 'android' && version <= 4.4) ||
          browser === 'and_uc'
        ) {
          prefixedKeyframes = prefix.css + prefixedKeyframes;
        }
        return prefixedKeyframes;
      };

      module.exports = exports['default'];

      /***/
    },
    /* 731 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = {
        chrome: {
          transform: 35,
          transformOrigin: 35,
          transformOriginX: 35,
          transformOriginY: 35,
          backfaceVisibility: 35,
          perspective: 35,
          perspectiveOrigin: 35,
          transformStyle: 35,
          transformOriginZ: 35,
          animation: 42,
          animationDelay: 42,
          animationDirection: 42,
          animationFillMode: 42,
          animationDuration: 42,
          animationIterationCount: 42,
          animationName: 42,
          animationPlayState: 42,
          animationTimingFunction: 42,
          appearance: 55,
          userSelect: 55,
          fontKerning: 32,
          textEmphasisPosition: 55,
          textEmphasis: 55,
          textEmphasisStyle: 55,
          textEmphasisColor: 55,
          boxDecorationBreak: 55,
          clipPath: 55,
          maskImage: 55,
          maskMode: 55,
          maskRepeat: 55,
          maskPosition: 55,
          maskClip: 55,
          maskOrigin: 55,
          maskSize: 55,
          maskComposite: 55,
          mask: 55,
          maskBorderSource: 55,
          maskBorderMode: 55,
          maskBorderSlice: 55,
          maskBorderWidth: 55,
          maskBorderOutset: 55,
          maskBorderRepeat: 55,
          maskBorder: 55,
          maskType: 55,
          textDecorationStyle: 55,
          textDecorationSkip: 55,
          textDecorationLine: 55,
          textDecorationColor: 55,
          filter: 52,
          fontFeatureSettings: 47,
          breakAfter: 49,
          breakBefore: 49,
          breakInside: 49,
          columnCount: 49,
          columnFill: 49,
          columnGap: 49,
          columnRule: 49,
          columnRuleColor: 49,
          columnRuleStyle: 49,
          columnRuleWidth: 49,
          columns: 49,
          columnSpan: 49,
          columnWidth: 49,
        },
        safari: {
          flex: 8,
          flexBasis: 8,
          flexDirection: 8,
          flexGrow: 8,
          flexFlow: 8,
          flexShrink: 8,
          flexWrap: 8,
          alignContent: 8,
          alignItems: 8,
          alignSelf: 8,
          justifyContent: 8,
          order: 8,
          transition: 6,
          transitionDelay: 6,
          transitionDuration: 6,
          transitionProperty: 6,
          transitionTimingFunction: 6,
          transform: 8,
          transformOrigin: 8,
          transformOriginX: 8,
          transformOriginY: 8,
          backfaceVisibility: 8,
          perspective: 8,
          perspectiveOrigin: 8,
          transformStyle: 8,
          transformOriginZ: 8,
          animation: 8,
          animationDelay: 8,
          animationDirection: 8,
          animationFillMode: 8,
          animationDuration: 8,
          animationIterationCount: 8,
          animationName: 8,
          animationPlayState: 8,
          animationTimingFunction: 8,
          appearance: 10,
          userSelect: 10,
          backdropFilter: 10,
          fontKerning: 9,
          scrollSnapType: 10,
          scrollSnapPointsX: 10,
          scrollSnapPointsY: 10,
          scrollSnapDestination: 10,
          scrollSnapCoordinate: 10,
          textEmphasisPosition: 7,
          textEmphasis: 7,
          textEmphasisStyle: 7,
          textEmphasisColor: 7,
          boxDecorationBreak: 10,
          clipPath: 10,
          maskImage: 10,
          maskMode: 10,
          maskRepeat: 10,
          maskPosition: 10,
          maskClip: 10,
          maskOrigin: 10,
          maskSize: 10,
          maskComposite: 10,
          mask: 10,
          maskBorderSource: 10,
          maskBorderMode: 10,
          maskBorderSlice: 10,
          maskBorderWidth: 10,
          maskBorderOutset: 10,
          maskBorderRepeat: 10,
          maskBorder: 10,
          maskType: 10,
          textDecorationStyle: 10,
          textDecorationSkip: 10,
          textDecorationLine: 10,
          textDecorationColor: 10,
          shapeImageThreshold: 10,
          shapeImageMargin: 10,
          shapeImageOutside: 10,
          filter: 9,
          hyphens: 10,
          flowInto: 10,
          flowFrom: 10,
          breakBefore: 8,
          breakAfter: 8,
          breakInside: 8,
          regionFragment: 10,
          columnCount: 8,
          columnFill: 8,
          columnGap: 8,
          columnRule: 8,
          columnRuleColor: 8,
          columnRuleStyle: 8,
          columnRuleWidth: 8,
          columns: 8,
          columnSpan: 8,
          columnWidth: 8,
        },
        firefox: {
          appearance: 51,
          userSelect: 51,
          boxSizing: 28,
          textAlignLast: 48,
          textDecorationStyle: 35,
          textDecorationSkip: 35,
          textDecorationLine: 35,
          textDecorationColor: 35,
          tabSize: 51,
          hyphens: 42,
          fontFeatureSettings: 33,
          breakAfter: 51,
          breakBefore: 51,
          breakInside: 51,
          columnCount: 51,
          columnFill: 51,
          columnGap: 51,
          columnRule: 51,
          columnRuleColor: 51,
          columnRuleStyle: 51,
          columnRuleWidth: 51,
          columns: 51,
          columnSpan: 51,
          columnWidth: 51,
        },
        opera: {
          flex: 16,
          flexBasis: 16,
          flexDirection: 16,
          flexGrow: 16,
          flexFlow: 16,
          flexShrink: 16,
          flexWrap: 16,
          alignContent: 16,
          alignItems: 16,
          alignSelf: 16,
          justifyContent: 16,
          order: 16,
          transform: 22,
          transformOrigin: 22,
          transformOriginX: 22,
          transformOriginY: 22,
          backfaceVisibility: 22,
          perspective: 22,
          perspectiveOrigin: 22,
          transformStyle: 22,
          transformOriginZ: 22,
          animation: 29,
          animationDelay: 29,
          animationDirection: 29,
          animationFillMode: 29,
          animationDuration: 29,
          animationIterationCount: 29,
          animationName: 29,
          animationPlayState: 29,
          animationTimingFunction: 29,
          appearance: 41,
          userSelect: 41,
          fontKerning: 19,
          textEmphasisPosition: 41,
          textEmphasis: 41,
          textEmphasisStyle: 41,
          textEmphasisColor: 41,
          boxDecorationBreak: 41,
          clipPath: 41,
          maskImage: 41,
          maskMode: 41,
          maskRepeat: 41,
          maskPosition: 41,
          maskClip: 41,
          maskOrigin: 41,
          maskSize: 41,
          maskComposite: 41,
          mask: 41,
          maskBorderSource: 41,
          maskBorderMode: 41,
          maskBorderSlice: 41,
          maskBorderWidth: 41,
          maskBorderOutset: 41,
          maskBorderRepeat: 41,
          maskBorder: 41,
          maskType: 41,
          textDecorationStyle: 41,
          textDecorationSkip: 41,
          textDecorationLine: 41,
          textDecorationColor: 41,
          filter: 39,
          fontFeatureSettings: 34,
          breakAfter: 36,
          breakBefore: 36,
          breakInside: 36,
          columnCount: 36,
          columnFill: 36,
          columnGap: 36,
          columnRule: 36,
          columnRuleColor: 36,
          columnRuleStyle: 36,
          columnRuleWidth: 36,
          columns: 36,
          columnSpan: 36,
          columnWidth: 36,
        },
        ie: {
          flex: 10,
          flexDirection: 10,
          flexFlow: 10,
          flexWrap: 10,
          transform: 9,
          transformOrigin: 9,
          transformOriginX: 9,
          transformOriginY: 9,
          userSelect: 11,
          wrapFlow: 11,
          wrapThrough: 11,
          wrapMargin: 11,
          scrollSnapType: 11,
          scrollSnapPointsX: 11,
          scrollSnapPointsY: 11,
          scrollSnapDestination: 11,
          scrollSnapCoordinate: 11,
          touchAction: 10,
          hyphens: 11,
          flowInto: 11,
          flowFrom: 11,
          breakBefore: 11,
          breakAfter: 11,
          breakInside: 11,
          regionFragment: 11,
          gridTemplateColumns: 11,
          gridTemplateRows: 11,
          gridTemplateAreas: 11,
          gridTemplate: 11,
          gridAutoColumns: 11,
          gridAutoRows: 11,
          gridAutoFlow: 11,
          grid: 11,
          gridRowStart: 11,
          gridColumnStart: 11,
          gridRowEnd: 11,
          gridRow: 11,
          gridColumn: 11,
          gridColumnEnd: 11,
          gridColumnGap: 11,
          gridRowGap: 11,
          gridArea: 11,
          gridGap: 11,
          textSizeAdjust: 11,
        },
        edge: {
          userSelect: 14,
          wrapFlow: 14,
          wrapThrough: 14,
          wrapMargin: 14,
          scrollSnapType: 14,
          scrollSnapPointsX: 14,
          scrollSnapPointsY: 14,
          scrollSnapDestination: 14,
          scrollSnapCoordinate: 14,
          hyphens: 14,
          flowInto: 14,
          flowFrom: 14,
          breakBefore: 14,
          breakAfter: 14,
          breakInside: 14,
          regionFragment: 14,
          gridTemplateColumns: 14,
          gridTemplateRows: 14,
          gridTemplateAreas: 14,
          gridTemplate: 14,
          gridAutoColumns: 14,
          gridAutoRows: 14,
          gridAutoFlow: 14,
          grid: 14,
          gridRowStart: 14,
          gridColumnStart: 14,
          gridRowEnd: 14,
          gridRow: 14,
          gridColumn: 14,
          gridColumnEnd: 14,
          gridColumnGap: 14,
          gridRowGap: 14,
          gridArea: 14,
          gridGap: 14,
        },
        ios_saf: {
          flex: 8.1,
          flexBasis: 8.1,
          flexDirection: 8.1,
          flexGrow: 8.1,
          flexFlow: 8.1,
          flexShrink: 8.1,
          flexWrap: 8.1,
          alignContent: 8.1,
          alignItems: 8.1,
          alignSelf: 8.1,
          justifyContent: 8.1,
          order: 8.1,
          transition: 6,
          transitionDelay: 6,
          transitionDuration: 6,
          transitionProperty: 6,
          transitionTimingFunction: 6,
          transform: 8.1,
          transformOrigin: 8.1,
          transformOriginX: 8.1,
          transformOriginY: 8.1,
          backfaceVisibility: 8.1,
          perspective: 8.1,
          perspectiveOrigin: 8.1,
          transformStyle: 8.1,
          transformOriginZ: 8.1,
          animation: 8.1,
          animationDelay: 8.1,
          animationDirection: 8.1,
          animationFillMode: 8.1,
          animationDuration: 8.1,
          animationIterationCount: 8.1,
          animationName: 8.1,
          animationPlayState: 8.1,
          animationTimingFunction: 8.1,
          appearance: 9.3,
          userSelect: 9.3,
          backdropFilter: 9.3,
          fontKerning: 9.3,
          scrollSnapType: 9.3,
          scrollSnapPointsX: 9.3,
          scrollSnapPointsY: 9.3,
          scrollSnapDestination: 9.3,
          scrollSnapCoordinate: 9.3,
          boxDecorationBreak: 9.3,
          clipPath: 9.3,
          maskImage: 9.3,
          maskMode: 9.3,
          maskRepeat: 9.3,
          maskPosition: 9.3,
          maskClip: 9.3,
          maskOrigin: 9.3,
          maskSize: 9.3,
          maskComposite: 9.3,
          mask: 9.3,
          maskBorderSource: 9.3,
          maskBorderMode: 9.3,
          maskBorderSlice: 9.3,
          maskBorderWidth: 9.3,
          maskBorderOutset: 9.3,
          maskBorderRepeat: 9.3,
          maskBorder: 9.3,
          maskType: 9.3,
          textSizeAdjust: 9.3,
          textDecorationStyle: 9.3,
          textDecorationSkip: 9.3,
          textDecorationLine: 9.3,
          textDecorationColor: 9.3,
          shapeImageThreshold: 9.3,
          shapeImageMargin: 9.3,
          shapeImageOutside: 9.3,
          filter: 9,
          hyphens: 9.3,
          flowInto: 9.3,
          flowFrom: 9.3,
          breakBefore: 8.1,
          breakAfter: 8.1,
          breakInside: 8.1,
          regionFragment: 9.3,
          columnCount: 8.1,
          columnFill: 8.1,
          columnGap: 8.1,
          columnRule: 8.1,
          columnRuleColor: 8.1,
          columnRuleStyle: 8.1,
          columnRuleWidth: 8.1,
          columns: 8.1,
          columnSpan: 8.1,
          columnWidth: 8.1,
        },
        android: {
          flex: 4.2,
          flexBasis: 4.2,
          flexDirection: 4.2,
          flexGrow: 4.2,
          flexFlow: 4.2,
          flexShrink: 4.2,
          flexWrap: 4.2,
          alignContent: 4.2,
          alignItems: 4.2,
          alignSelf: 4.2,
          justifyContent: 4.2,
          order: 4.2,
          transition: 4.2,
          transitionDelay: 4.2,
          transitionDuration: 4.2,
          transitionProperty: 4.2,
          transitionTimingFunction: 4.2,
          transform: 4.4,
          transformOrigin: 4.4,
          transformOriginX: 4.4,
          transformOriginY: 4.4,
          backfaceVisibility: 4.4,
          perspective: 4.4,
          perspectiveOrigin: 4.4,
          transformStyle: 4.4,
          transformOriginZ: 4.4,
          animation: 4.4,
          animationDelay: 4.4,
          animationDirection: 4.4,
          animationFillMode: 4.4,
          animationDuration: 4.4,
          animationIterationCount: 4.4,
          animationName: 4.4,
          animationPlayState: 4.4,
          animationTimingFunction: 4.4,
          appearance: 51,
          userSelect: 51,
          fontKerning: 4.4,
          textEmphasisPosition: 51,
          textEmphasis: 51,
          textEmphasisStyle: 51,
          textEmphasisColor: 51,
          boxDecorationBreak: 51,
          clipPath: 51,
          maskImage: 51,
          maskMode: 51,
          maskRepeat: 51,
          maskPosition: 51,
          maskClip: 51,
          maskOrigin: 51,
          maskSize: 51,
          maskComposite: 51,
          mask: 51,
          maskBorderSource: 51,
          maskBorderMode: 51,
          maskBorderSlice: 51,
          maskBorderWidth: 51,
          maskBorderOutset: 51,
          maskBorderRepeat: 51,
          maskBorder: 51,
          maskType: 51,
          filter: 51,
          fontFeatureSettings: 4.4,
          breakAfter: 51,
          breakBefore: 51,
          breakInside: 51,
          columnCount: 51,
          columnFill: 51,
          columnGap: 51,
          columnRule: 51,
          columnRuleColor: 51,
          columnRuleStyle: 51,
          columnRuleWidth: 51,
          columns: 51,
          columnSpan: 51,
          columnWidth: 51,
        },
        and_chr: {
          appearance: 51,
          userSelect: 51,
          textEmphasisPosition: 51,
          textEmphasis: 51,
          textEmphasisStyle: 51,
          textEmphasisColor: 51,
          boxDecorationBreak: 51,
          clipPath: 51,
          maskImage: 51,
          maskMode: 51,
          maskRepeat: 51,
          maskPosition: 51,
          maskClip: 51,
          maskOrigin: 51,
          maskSize: 51,
          maskComposite: 51,
          mask: 51,
          maskBorderSource: 51,
          maskBorderMode: 51,
          maskBorderSlice: 51,
          maskBorderWidth: 51,
          maskBorderOutset: 51,
          maskBorderRepeat: 51,
          maskBorder: 51,
          maskType: 51,
          textDecorationStyle: 51,
          textDecorationSkip: 51,
          textDecorationLine: 51,
          textDecorationColor: 51,
          filter: 51,
        },
        and_uc: {
          flex: 9.9,
          flexBasis: 9.9,
          flexDirection: 9.9,
          flexGrow: 9.9,
          flexFlow: 9.9,
          flexShrink: 9.9,
          flexWrap: 9.9,
          alignContent: 9.9,
          alignItems: 9.9,
          alignSelf: 9.9,
          justifyContent: 9.9,
          order: 9.9,
          transition: 9.9,
          transitionDelay: 9.9,
          transitionDuration: 9.9,
          transitionProperty: 9.9,
          transitionTimingFunction: 9.9,
          transform: 9.9,
          transformOrigin: 9.9,
          transformOriginX: 9.9,
          transformOriginY: 9.9,
          backfaceVisibility: 9.9,
          perspective: 9.9,
          perspectiveOrigin: 9.9,
          transformStyle: 9.9,
          transformOriginZ: 9.9,
          animation: 9.9,
          animationDelay: 9.9,
          animationDirection: 9.9,
          animationFillMode: 9.9,
          animationDuration: 9.9,
          animationIterationCount: 9.9,
          animationName: 9.9,
          animationPlayState: 9.9,
          animationTimingFunction: 9.9,
          appearance: 9.9,
          userSelect: 9.9,
          fontKerning: 9.9,
          textEmphasisPosition: 9.9,
          textEmphasis: 9.9,
          textEmphasisStyle: 9.9,
          textEmphasisColor: 9.9,
          maskImage: 9.9,
          maskMode: 9.9,
          maskRepeat: 9.9,
          maskPosition: 9.9,
          maskClip: 9.9,
          maskOrigin: 9.9,
          maskSize: 9.9,
          maskComposite: 9.9,
          mask: 9.9,
          maskBorderSource: 9.9,
          maskBorderMode: 9.9,
          maskBorderSlice: 9.9,
          maskBorderWidth: 9.9,
          maskBorderOutset: 9.9,
          maskBorderRepeat: 9.9,
          maskBorder: 9.9,
          maskType: 9.9,
          textSizeAdjust: 9.9,
          filter: 9.9,
          hyphens: 9.9,
          flowInto: 9.9,
          flowFrom: 9.9,
          breakBefore: 9.9,
          breakAfter: 9.9,
          breakInside: 9.9,
          regionFragment: 9.9,
          fontFeatureSettings: 9.9,
          columnCount: 9.9,
          columnFill: 9.9,
          columnGap: 9.9,
          columnRule: 9.9,
          columnRuleColor: 9.9,
          columnRuleStyle: 9.9,
          columnRuleWidth: 9.9,
          columns: 9.9,
          columnSpan: 9.9,
          columnWidth: 9.9,
        },
        op_mini: {},
      };
      module.exports = exports['default'];

      /***/
    },
    /* 732 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = calc;

      var _getPrefixedValue = __webpack_require__(733);

      var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true,
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }

      function calc(_ref) {
        var property = _ref.property;
        var value = _ref.value;
        var _ref$browserInfo = _ref.browserInfo;
        var browser = _ref$browserInfo.browser;
        var version = _ref$browserInfo.version;
        var css = _ref.prefix.css;
        var keepUnprefixed = _ref.keepUnprefixed;

        if (
          typeof value === 'string' &&
          value.indexOf('calc(') > -1 &&
          ((browser === 'firefox' && version < 15) ||
            (browser === 'chrome' && version < 25) ||
            (browser === 'safari' && version < 6.1) ||
            (browser === 'ios_saf' && version < 7))
        ) {
          return _defineProperty(
            {},
            property,
            (0, _getPrefixedValue2.default)(
              value.replace(/calc\(/g, css + 'calc('),
              value,
              keepUnprefixed,
            ),
          );
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 733 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      exports.default = function (prefixedValue, value, keepUnprefixed) {
        return keepUnprefixed ? [prefixedValue, value] : prefixedValue;
      };

      module.exports = exports['default'];

      /***/
    },
    /* 734 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = zoomCursor;

      var _getPrefixedValue = __webpack_require__(733);

      var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var values = { 'zoom-in': true, 'zoom-out': true };

      function zoomCursor(_ref) {
        var property = _ref.property;
        var value = _ref.value;
        var _ref$browserInfo = _ref.browserInfo;
        var browser = _ref$browserInfo.browser;
        var version = _ref$browserInfo.version;
        var css = _ref.prefix.css;
        var keepUnprefixed = _ref.keepUnprefixed;

        if (
          property === 'cursor' &&
          values[value] &&
          ((browser === 'firefox' && version < 24) ||
            (browser === 'chrome' && version < 37) ||
            (browser === 'safari' && version < 9) ||
            (browser === 'opera' && version < 24))
        ) {
          return {
            cursor: (0, _getPrefixedValue2.default)(
              css + value,
              value,
              keepUnprefixed,
            ),
          };
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 735 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = grabCursor;

      var _getPrefixedValue = __webpack_require__(733);

      var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var values = { grab: true, grabbing: true };

      function grabCursor(_ref) {
        var property = _ref.property;
        var value = _ref.value;
        var browser = _ref.browserInfo.browser;
        var css = _ref.prefix.css;
        var keepUnprefixed = _ref.keepUnprefixed;

        // adds prefixes for firefox, chrome, safari, and opera regardless of version until a reliable brwoser support info can be found (see: https://github.com/rofrischmann/inline-style-prefixer/issues/79)
        if (
          property === 'cursor' &&
          values[value] &&
          (browser === 'firefox' ||
            browser === 'chrome' ||
            browser === 'safari' ||
            browser === 'opera')
        ) {
          return {
            cursor: (0, _getPrefixedValue2.default)(
              css + value,
              value,
              keepUnprefixed,
            ),
          };
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 736 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = flex;

      var _getPrefixedValue = __webpack_require__(733);

      var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var values = { flex: true, 'inline-flex': true };

      function flex(_ref) {
        var property = _ref.property;
        var value = _ref.value;
        var _ref$browserInfo = _ref.browserInfo;
        var browser = _ref$browserInfo.browser;
        var version = _ref$browserInfo.version;
        var css = _ref.prefix.css;
        var keepUnprefixed = _ref.keepUnprefixed;

        if (
          property === 'display' &&
          values[value] &&
          ((browser === 'chrome' && version < 29 && version > 20) ||
            ((browser === 'safari' || browser === 'ios_saf') &&
              version < 9 &&
              version > 6) ||
            (browser === 'opera' && (version == 15 || version == 16)))
        ) {
          return {
            display: (0, _getPrefixedValue2.default)(
              css + value,
              value,
              keepUnprefixed,
            ),
          };
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 737 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = sizing;

      var _getPrefixedValue = __webpack_require__(733);

      var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true,
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }

      var properties = {
        maxHeight: true,
        maxWidth: true,
        width: true,
        height: true,
        columnWidth: true,
        minWidth: true,
        minHeight: true,
      };
      var values = {
        'min-content': true,
        'max-content': true,
        'fill-available': true,
        'fit-content': true,
        'contain-floats': true,
      };

      function sizing(_ref) {
        var property = _ref.property;
        var value = _ref.value;
        var css = _ref.prefix.css;
        var keepUnprefixed = _ref.keepUnprefixed;

        // This might change in the future
        // Keep an eye on it
        if (properties[property] && values[value]) {
          return _defineProperty(
            {},
            property,
            (0, _getPrefixedValue2.default)(css + value, value, keepUnprefixed),
          );
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 738 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = gradient;

      var _getPrefixedValue = __webpack_require__(733);

      var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true,
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }

      var values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;

      function gradient(_ref) {
        var property = _ref.property;
        var value = _ref.value;
        var _ref$browserInfo = _ref.browserInfo;
        var browser = _ref$browserInfo.browser;
        var version = _ref$browserInfo.version;
        var css = _ref.prefix.css;
        var keepUnprefixed = _ref.keepUnprefixed;

        if (
          typeof value === 'string' &&
          value.match(values) !== null &&
          ((browser === 'firefox' && version < 16) ||
            (browser === 'chrome' && version < 26) ||
            ((browser === 'safari' || browser === 'ios_saf') && version < 7) ||
            ((browser === 'opera' || browser === 'op_mini') &&
              version < 12.1) ||
            (browser === 'android' && version < 4.4) ||
            browser === 'and_uc')
        ) {
          return _defineProperty(
            {},
            property,
            (0, _getPrefixedValue2.default)(css + value, value, keepUnprefixed),
          );
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 739 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function (obj) {
              return typeof obj;
            }
          : function (obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol
                ? 'symbol'
                : typeof obj;
            };

      exports.default = transition;

      var _hyphenateStyleName = __webpack_require__(724);

      var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);

      var _unprefixProperty = __webpack_require__(740);

      var _unprefixProperty2 = _interopRequireDefault(_unprefixProperty);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true,
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }

      var properties = { transition: true, transitionProperty: true };

      function transition(_ref) {
        var property = _ref.property;
        var value = _ref.value;
        var css = _ref.prefix.css;
        var requiresPrefix = _ref.requiresPrefix;
        var keepUnprefixed = _ref.keepUnprefixed;

        // also check for already prefixed transitions
        var unprefixedProperty = (0, _unprefixProperty2.default)(property);

        if (typeof value === 'string' && properties[unprefixedProperty]) {
          var _ret = (function () {
            // TODO: memoize this array
            var requiresPrefixDashCased = Object.keys(requiresPrefix).map(
              function (prop) {
                return (0, _hyphenateStyleName2.default)(prop);
              },
            );

            // only split multi values, not cubic beziers
            var multipleValues = value.split(/,(?![^()]*(?:\([^()]*\))?\))/g);

            requiresPrefixDashCased.forEach(function (prop) {
              multipleValues.forEach(function (val, index) {
                if (val.indexOf(prop) > -1 && prop !== 'order') {
                  multipleValues[index] =
                    val.replace(prop, css + prop) +
                    (keepUnprefixed ? ',' + val : '');
                }
              });
            });

            return {
              v: _defineProperty({}, property, multipleValues.join(',')),
            };
          })();

          if (
            (typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) ===
            'object'
          )
            return _ret.v;
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 740 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      exports.default = function (property) {
        var unprefixed = property.replace(/^(ms|Webkit|Moz|O)/, '');
        return unprefixed.charAt(0).toLowerCase() + unprefixed.slice(1);
      };

      module.exports = exports['default'];

      /***/
    },
    /* 741 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = flexboxIE;

      var _getPrefixedValue = __webpack_require__(733);

      var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true,
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }

      var alternativeValues = {
        'space-around': 'distribute',
        'space-between': 'justify',
        'flex-start': 'start',
        'flex-end': 'end',
        flex: 'flexbox',
        'inline-flex': 'inline-flexbox',
      };
      var alternativeProps = {
        alignContent: 'msFlexLinePack',
        alignSelf: 'msFlexItemAlign',
        alignItems: 'msFlexAlign',
        justifyContent: 'msFlexPack',
        order: 'msFlexOrder',
        flexGrow: 'msFlexPositive',
        flexShrink: 'msFlexNegative',
        flexBasis: 'msPreferredSize',
      };

      function flexboxIE(_ref) {
        var property = _ref.property;
        var value = _ref.value;
        var styles = _ref.styles;
        var _ref$browserInfo = _ref.browserInfo;
        var browser = _ref$browserInfo.browser;
        var version = _ref$browserInfo.version;
        var css = _ref.prefix.css;
        var keepUnprefixed = _ref.keepUnprefixed;

        if (
          (alternativeProps[property] ||
            (property === 'display' &&
              typeof value === 'string' &&
              value.indexOf('flex') > -1)) &&
          (browser === 'ie_mob' || browser === 'ie') &&
          version == 10
        ) {
          if (!keepUnprefixed && !Array.isArray(styles[property])) {
            delete styles[property];
          }
          if (property === 'display' && alternativeValues[value]) {
            return {
              display: (0, _getPrefixedValue2.default)(
                css + alternativeValues[value],
                value,
                keepUnprefixed,
              ),
            };
          }
          if (alternativeProps[property]) {
            return _defineProperty(
              {},
              alternativeProps[property],
              alternativeValues[value] || value,
            );
          }
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 742 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = flexboxOld;

      var _getPrefixedValue = __webpack_require__(733);

      var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true,
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }

      var alternativeValues = {
        'space-around': 'justify',
        'space-between': 'justify',
        'flex-start': 'start',
        'flex-end': 'end',
        'wrap-reverse': 'multiple',
        wrap: 'multiple',
        flex: 'box',
        'inline-flex': 'inline-box',
      };

      var alternativeProps = {
        alignItems: 'WebkitBoxAlign',
        justifyContent: 'WebkitBoxPack',
        flexWrap: 'WebkitBoxLines',
      };

      var otherProps = [
        'alignContent',
        'alignSelf',
        'order',
        'flexGrow',
        'flexShrink',
        'flexBasis',
        'flexDirection',
      ];
      var properties = Object.keys(alternativeProps).concat(otherProps);

      function flexboxOld(_ref) {
        var property = _ref.property;
        var value = _ref.value;
        var styles = _ref.styles;
        var _ref$browserInfo = _ref.browserInfo;
        var browser = _ref$browserInfo.browser;
        var version = _ref$browserInfo.version;
        var css = _ref.prefix.css;
        var keepUnprefixed = _ref.keepUnprefixed;

        if (
          (properties.indexOf(property) > -1 ||
            (property === 'display' &&
              typeof value === 'string' &&
              value.indexOf('flex') > -1)) &&
          ((browser === 'firefox' && version < 22) ||
            (browser === 'chrome' && version < 21) ||
            ((browser === 'safari' || browser === 'ios_saf') &&
              version <= 6.1) ||
            (browser === 'android' && version < 4.4) ||
            browser === 'and_uc')
        ) {
          if (!keepUnprefixed && !Array.isArray(styles[property])) {
            delete styles[property];
          }
          if (property === 'flexDirection' && typeof value === 'string') {
            return {
              WebkitBoxOrient:
                value.indexOf('column') > -1 ? 'vertical' : 'horizontal',
              WebkitBoxDirection:
                value.indexOf('reverse') > -1 ? 'reverse' : 'normal',
            };
          }
          if (property === 'display' && alternativeValues[value]) {
            return {
              display: (0, _getPrefixedValue2.default)(
                css + alternativeValues[value],
                value,
                keepUnprefixed,
              ),
            };
          }
          if (alternativeProps[property]) {
            return _defineProperty(
              {},
              alternativeProps[property],
              alternativeValues[value] || value,
            );
          }
        }
      }
      module.exports = exports['default'];

      /***/
    },
    /* 743 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = callOnce;

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var CALLED_ONCE = 'muiPrepared';

      function callOnce() {
        if (true) {
          return function (style) {
            if (style[CALLED_ONCE]) {
              true
                ? (0, _warning2.default)(
                    false,
                    'You cannot call prepareStyles() on the same style object more than once.',
                  )
                : void 0;
            }
            style[CALLED_ONCE] = true;
            return style;
          };
        }
      }

      /***/
    },
    /* 744 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = rtl;
      var reTranslate = /((^|\s)translate(3d|X)?\()(\-?[\d]+)/;
      var reSkew = /((^|\s)skew(x|y)?\()\s*(\-?[\d]+)(deg|rad|grad)(,\s*(\-?[\d]+)(deg|rad|grad))?/;

      /**
       * This function ensures that `style` supports both ltr and rtl directions by
       * checking `styleConstants` in `muiTheme` and replacing attribute keys if
       * necessary.
       */
      function rtl(muiTheme) {
        if (muiTheme.isRtl) {
          return function (style) {
            var flippedAttributes = {
              // Keys and their replacements.
              right: 'left',
              left: 'right',
              marginRight: 'marginLeft',
              marginLeft: 'marginRight',
              paddingRight: 'paddingLeft',
              paddingLeft: 'paddingRight',
              borderRight: 'borderLeft',
              borderLeft: 'borderRight',
            };

            var newStyle = {};

            Object.keys(style).forEach(function (attribute) {
              var value = style[attribute];
              var key = attribute;

              if (flippedAttributes.hasOwnProperty(attribute)) {
                key = flippedAttributes[attribute];
              }

              switch (attribute) {
                case 'float':
                case 'textAlign':
                  if (value === 'right') {
                    value = 'left';
                  } else if (value === 'left') {
                    value = 'right';
                  }
                  break;

                case 'direction':
                  if (value === 'ltr') {
                    value = 'rtl';
                  } else if (value === 'rtl') {
                    value = 'ltr';
                  }
                  break;

                case 'transform':
                  if (!value) break;
                  var matches = void 0;
                  if ((matches = value.match(reTranslate))) {
                    value = value.replace(
                      matches[0],
                      matches[1] + -parseFloat(matches[4]),
                    );
                  }
                  if ((matches = value.match(reSkew))) {
                    value = value.replace(
                      matches[0],
                      matches[1] +
                        -parseFloat(matches[4]) +
                        matches[5] +
                        matches[6]
                        ? ', ' + (-parseFloat(matches[7]) + matches[8])
                        : '',
                    );
                  }
                  break;

                case 'transformOrigin':
                  if (!value) break;
                  if (value.indexOf('right') > -1) {
                    value = value.replace('right', 'left');
                  } else if (value.indexOf('left') > -1) {
                    value = value.replace('left', 'right');
                  }
                  break;
              }

              newStyle[key] = value;
            });

            return newStyle;
          };
        }
      }

      /***/
    },
    /* 745 */
    /***/ function (module, exports) {
      'use strict';

      exports.__esModule = true;
      exports.default = compose;
      function compose() {
        for (
          var _len = arguments.length, funcs = Array(_len), _key = 0;
          _key < _len;
          _key++
        ) {
          funcs[_key] = arguments[_key];
        }

        if (funcs.length === 0) {
          return function (arg) {
            return arg;
          };
        }

        if (funcs.length === 1) {
          return funcs[0];
        }

        var last = funcs[funcs.length - 1];
        return function () {
          var result = last.apply(undefined, arguments);
          for (var i = funcs.length - 2; i >= 0; i--) {
            var f = funcs[i];
            result = f(result);
          }
          return result;
        };
      }

      /***/
    },
    /* 746 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _colors = __webpack_require__(708);

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      var Typography = function Typography() {
        _classCallCheck(this, Typography);

        // text colors
        this.textFullBlack = _colors.fullBlack;
        this.textDarkBlack = _colors.darkBlack;
        this.textLightBlack = _colors.lightBlack;
        this.textMinBlack = _colors.minBlack;
        this.textFullWhite = _colors.fullWhite;
        this.textDarkWhite = _colors.darkWhite;
        this.textLightWhite = _colors.lightWhite;

        // font weight
        this.fontWeightLight = 300;
        this.fontWeightNormal = 400;
        this.fontWeightMedium = 500;

        this.fontStyleButtonFontSize = 14;
      };

      exports.default = new Typography();

      /***/
    },
    /* 747 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = exports.PopoverAnimationVertical = exports.Popover = undefined;

      var _Popover2 = __webpack_require__(598);

      var _Popover3 = _interopRequireDefault(_Popover2);

      var _PopoverAnimationVertical2 = __webpack_require__(658);

      var _PopoverAnimationVertical3 = _interopRequireDefault(
        _PopoverAnimationVertical2,
      );

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.Popover = _Popover3.default;
      exports.PopoverAnimationVertical = _PopoverAnimationVertical3.default;
      exports.default = _Popover3.default;

      /***/
    },
    /* 748 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = exports.RadioButtonGroup = exports.RadioButton = undefined;

      var _RadioButton2 = __webpack_require__(749);

      var _RadioButton3 = _interopRequireDefault(_RadioButton2);

      var _RadioButtonGroup2 = __webpack_require__(752);

      var _RadioButtonGroup3 = _interopRequireDefault(_RadioButtonGroup2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.RadioButton = _RadioButton3.default;
      exports.RadioButtonGroup = _RadioButtonGroup3.default;
      exports.default = _RadioButton3.default;

      /***/
    },
    /* 749 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _EnhancedSwitch = __webpack_require__(627);

      var _EnhancedSwitch2 = _interopRequireDefault(_EnhancedSwitch);

      var _radioButtonUnchecked = __webpack_require__(750);

      var _radioButtonUnchecked2 = _interopRequireDefault(
        _radioButtonUnchecked,
      );

      var _radioButtonChecked = __webpack_require__(751);

      var _radioButtonChecked2 = _interopRequireDefault(_radioButtonChecked);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var radioButton = context.muiTheme.radioButton;

        return {
          icon: {
            height: radioButton.size,
            width: radioButton.size,
          },
          target: {
            transition: _transitions2.default.easeOut(),
            position: 'absolute',
            opacity: 1,
            transform: 'scale(1)',
            fill: radioButton.borderColor,
          },
          fill: {
            position: 'absolute',
            opacity: 1,
            transform: 'scale(0)',
            transformOrigin: '50% 50%',
            transition: _transitions2.default.easeOut(),
            fill: radioButton.checkedColor,
          },
          targetWhenChecked: {
            opacity: 0,
            transform: 'scale(0)',
          },
          fillWhenChecked: {
            opacity: 1,
            transform: 'scale(1)',
          },
          targetWhenDisabled: {
            fill: radioButton.disabledColor,
            cursor: 'not-allowed',
          },
          fillWhenDisabled: {
            fill: radioButton.disabledColor,
            cursor: 'not-allowed',
          },
          label: {
            color: props.disabled
              ? radioButton.labelDisabledColor
              : radioButton.labelColor,
          },
          ripple: {
            color: props.checked
              ? radioButton.checkedColor
              : radioButton.borderColor,
          },
        };
      }

      var RadioButton = (function (_Component) {
        _inherits(RadioButton, _Component);

        function RadioButton() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, RadioButton);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    RadioButton,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.handleSwitch = function (event) {
                if (_this.props.onCheck) {
                  _this.props.onCheck(event, _this.props.value);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        // Only called when selected, not when unselected.

        _createClass(RadioButton, [
          {
            key: 'isChecked',
            value: function isChecked() {
              return this.refs.enhancedSwitch.isSwitched();
            },

            // Use RadioButtonGroup.setSelectedValue(newSelectionValue) to set a
            // RadioButton's checked value.
          },
          {
            key: 'setChecked',
            value: function setChecked(newCheckedValue) {
              this.refs.enhancedSwitch.setSwitched(newCheckedValue);
            },
          },
          {
            key: 'getValue',
            value: function getValue() {
              return this.refs.enhancedSwitch.getValue();
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var checkedIcon = _props.checkedIcon;
              var checked = _props.checked;
              var iconStyle = _props.iconStyle;
              var labelStyle = _props.labelStyle;
              var labelPosition = _props.labelPosition;
              var onCheck = _props.onCheck;
              var uncheckedIcon = _props.uncheckedIcon;
              var disabled = _props.disabled;

              var other = _objectWithoutProperties(_props, [
                'checkedIcon',
                'checked',
                'iconStyle',
                'labelStyle',
                'labelPosition',
                'onCheck',
                'uncheckedIcon',
                'disabled',
              ]);

              var styles = getStyles(this.props, this.context);

              var uncheckedStyles = (0, _simpleAssign2.default)(
                styles.target,
                checked && styles.targetWhenChecked,
                iconStyle,
                disabled && styles.targetWhenDisabled,
              );

              var checkedStyles = (0, _simpleAssign2.default)(
                styles.fill,
                checked && styles.fillWhenChecked,
                iconStyle,
                disabled && styles.fillWhenDisabled,
              );

              var uncheckedElement = _react2.default.isValidElement(
                uncheckedIcon,
              )
                ? _react2.default.cloneElement(uncheckedIcon, {
                    style: (0, _simpleAssign2.default)(
                      uncheckedStyles,
                      uncheckedIcon.props.style,
                    ),
                  })
                : _react2.default.createElement(
                    _radioButtonUnchecked2.default,
                    { style: uncheckedStyles },
                  );

              var checkedElement = _react2.default.isValidElement(checkedIcon)
                ? _react2.default.cloneElement(checkedIcon, {
                    style: (0, _simpleAssign2.default)(
                      checkedStyles,
                      checkedIcon.props.style,
                    ),
                  })
                : _react2.default.createElement(_radioButtonChecked2.default, {
                    style: checkedStyles,
                  });

              var mergedIconStyle = (0, _simpleAssign2.default)(
                styles.icon,
                iconStyle,
              );
              var mergedLabelStyle = (0, _simpleAssign2.default)(
                styles.label,
                labelStyle,
              );

              return _react2.default.createElement(
                _EnhancedSwitch2.default,
                _extends({}, other, {
                  ref: 'enhancedSwitch',
                  inputType: 'radio',
                  checked: checked,
                  switched: checked,
                  disabled: disabled,
                  rippleColor: styles.ripple.color,
                  iconStyle: mergedIconStyle,
                  labelStyle: mergedLabelStyle,
                  labelPosition: labelPosition,
                  onSwitch: this.handleSwitch,
                  switchElement: _react2.default.createElement(
                    'div',
                    null,
                    uncheckedElement,
                    checkedElement,
                  ),
                }),
              );
            },
          },
        ]);

        return RadioButton;
      })(_react.Component);

      RadioButton.propTypes = {
        /**
         * @ignore
         * checked if true
         * Used internally by `RadioButtonGroup`.
         */
        checked: _react.PropTypes.bool,
        /**
         * The icon element to show when the radio button is checked.
         */
        checkedIcon: _react.PropTypes.element,
        /**
         * If true, the radio button is disabled.
         */
        disabled: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the icon element.
         */
        iconStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of the input element.
         */
        inputStyle: _react.PropTypes.object,
        /**
         * @ignore
         * Used internally by `RadioButtonGroup`. Use the `labelPosition` property of `RadioButtonGroup` instead.
         * Where the label will be placed next to the radio button.
         */
        labelPosition: _react.PropTypes.oneOf(['left', 'right']),
        /**
         * Override the inline-styles of the label element.
         */
        labelStyle: _react.PropTypes.object,
        /**
         * @ignore
         * Callback function fired when the radio button is checked. Note that this
         * function will not be called if the radio button is part of a
         * radio button group: in this case, use the `onChange` property of
         * `RadioButtonGroup`.
         *
         * @param {object} event `change` event targeting the element.
         * @param {string} value The element's `value`.
         */
        onCheck: _react.PropTypes.func,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The icon element to show when the radio button is unchecked.
         */
        uncheckedIcon: _react.PropTypes.element,
        /**
         * The value of the radio button.
         */
        value: _react.PropTypes.any,
      };
      RadioButton.defaultProps = {
        checked: false,
        disabled: false,
        labelPosition: 'right',
      };
      RadioButton.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = RadioButton;

      /***/
    },
    /* 750 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var ToggleRadioButtonUnchecked = function ToggleRadioButtonUnchecked(
        props,
      ) {
        return _react2.default.createElement(
          _SvgIcon2.default,
          props,
          _react2.default.createElement('path', {
            d:
              'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z',
          }),
        );
      };
      ToggleRadioButtonUnchecked = (0, _pure2.default)(
        ToggleRadioButtonUnchecked,
      );
      ToggleRadioButtonUnchecked.displayName = 'ToggleRadioButtonUnchecked';
      ToggleRadioButtonUnchecked.muiName = 'SvgIcon';

      exports.default = ToggleRadioButtonUnchecked;

      /***/
    },
    /* 751 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var ToggleRadioButtonChecked = function ToggleRadioButtonChecked(props) {
        return _react2.default.createElement(
          _SvgIcon2.default,
          props,
          _react2.default.createElement('path', {
            d:
              'M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z',
          }),
        );
      };
      ToggleRadioButtonChecked = (0, _pure2.default)(ToggleRadioButtonChecked);
      ToggleRadioButtonChecked.displayName = 'ToggleRadioButtonChecked';
      ToggleRadioButtonChecked.muiName = 'SvgIcon';

      exports.default = ToggleRadioButtonChecked;

      /***/
    },
    /* 752 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _RadioButton = __webpack_require__(748);

      var _RadioButton2 = _interopRequireDefault(_RadioButton);

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var RadioButtonGroup = (function (_Component) {
        _inherits(RadioButtonGroup, _Component);

        function RadioButtonGroup() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, RadioButtonGroup);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    RadioButtonGroup,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                numberCheckedRadioButtons: 0,
                selected: '',
              }),
              (_this.handleChange = function (event, newSelection) {
                _this.updateRadioButtons(newSelection);

                // Successful update
                if (_this.state.numberCheckedRadioButtons === 0) {
                  if (_this.props.onChange)
                    _this.props.onChange(event, newSelection);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(RadioButtonGroup, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              var _this2 = this;

              var cnt = 0;

              _react2.default.Children.forEach(
                this.props.children,
                function (option) {
                  if (_this2.hasCheckAttribute(option)) cnt++;
                },
                this,
              );

              this.setState({
                numberCheckedRadioButtons: cnt,
                selected:
                  this.props.valueSelected || this.props.defaultSelected || '',
              });
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (nextProps.hasOwnProperty('valueSelected')) {
                this.setState({
                  selected: nextProps.valueSelected,
                });
              }
            },
          },
          {
            key: 'hasCheckAttribute',
            value: function hasCheckAttribute(radioButton) {
              return (
                radioButton.props.hasOwnProperty('checked') &&
                radioButton.props.checked
              );
            },
          },
          {
            key: 'updateRadioButtons',
            value: function updateRadioButtons(newSelection) {
              if (this.state.numberCheckedRadioButtons === 0) {
                this.setState({ selected: newSelection });
              } else {
                true
                  ? (0, _warning2.default)(
                      false,
                      "Cannot select a different radio button while another radio button\n        has the 'checked' property set to true.",
                    )
                  : void 0;
              }
            },
          },
          {
            key: 'getSelectedValue',
            value: function getSelectedValue() {
              return this.state.selected;
            },
          },
          {
            key: 'setSelectedValue',
            value: function setSelectedValue(newSelectionValue) {
              this.updateRadioButtons(newSelectionValue);
            },
          },
          {
            key: 'clearValue',
            value: function clearValue() {
              this.setSelectedValue('');
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this3 = this;

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var options = _react2.default.Children.map(
                this.props.children,
                function (option) {
                  var _option$props = option.props;
                  var name = _option$props.name;
                  var value = _option$props.value;
                  var label = _option$props.label;
                  var onCheck = _option$props.onCheck;

                  var other = _objectWithoutProperties(_option$props, [
                    'name',
                    'value',
                    'label',
                    'onCheck',
                  ]);

                  return _react2.default.createElement(
                    _RadioButton2.default,
                    _extends({}, other, {
                      ref: option.props.value,
                      name: _this3.props.name,
                      key: option.props.value,
                      value: option.props.value,
                      label: option.props.label,
                      labelPosition: _this3.props.labelPosition,
                      onCheck: _this3.handleChange,
                      checked: option.props.value === _this3.state.selected,
                    }),
                  );
                },
                this,
              );

              return _react2.default.createElement(
                'div',
                {
                  style: prepareStyles(
                    (0, _simpleAssign2.default)({}, this.props.style),
                  ),
                  className: this.props.className,
                },
                options,
              );
            },
          },
        ]);

        return RadioButtonGroup;
      })(_react.Component);

      RadioButtonGroup.propTypes = {
        /**
         * Should be used to pass `RadioButton` components.
         */
        children: _react.PropTypes.node,
        /**
         * The CSS class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * The `value` property of the radio button that will be
         * selected by default. This takes precedence over the `checked` property
         * of the `RadioButton` elements.
         */
        defaultSelected: _react.PropTypes.any,
        /**
         * Where the label will be placed for all child radio buttons.
         * This takes precedence over the `labelPosition` property of the
         * `RadioButton` elements.
         */
        labelPosition: _react.PropTypes.oneOf(['left', 'right']),
        /**
         * The name that will be applied to all child radio buttons.
         */
        name: _react.PropTypes.string.isRequired,
        /**
         * Callback function that is fired when a radio button has
         * been checked.
         *
         * @param {object} event `change` event targeting the selected
         * radio button.
         * @param {*} value The `value` of the selected radio button.
         */
        onChange: _react.PropTypes.func,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The `value` of the currently selected radio button.
         */
        valueSelected: _react.PropTypes.any,
      };
      RadioButtonGroup.defaultProps = {
        style: {},
      };
      RadioButtonGroup.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = RadioButtonGroup;

      /***/
    },
    /* 753 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _RaisedButton = __webpack_require__(754);

      var _RaisedButton2 = _interopRequireDefault(_RaisedButton);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _RaisedButton2.default;

      /***/
    },
    /* 754 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _colorManipulator = __webpack_require__(583);

      var _childUtils = __webpack_require__(545);

      var _EnhancedButton = __webpack_require__(544);

      var _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);

      var _Paper = __webpack_require__(577);

      var _Paper2 = _interopRequireDefault(_Paper);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function validateLabel(props, propName, componentName) {
        if (true) {
          if (
            !props.children &&
            props.label !== 0 &&
            !props.label &&
            !props.icon
          ) {
            return new Error(
              'Required prop label or children or icon was not specified in ' +
                componentName +
                '.',
            );
          }
        }
      }

      function getStyles(props, context, state) {
        var _context$muiTheme = context.muiTheme;
        var baseTheme = _context$muiTheme.baseTheme;
        var button = _context$muiTheme.button;
        var raisedButton = _context$muiTheme.raisedButton;
        var disabled = props.disabled;
        var disabledBackgroundColor = props.disabledBackgroundColor;
        var disabledLabelColor = props.disabledLabelColor;
        var fullWidth = props.fullWidth;
        var icon = props.icon;
        var label = props.label;
        var labelPosition = props.labelPosition;
        var primary = props.primary;
        var secondary = props.secondary;
        var style = props.style;

        var amount = primary || secondary ? 0.4 : 0.08;

        var backgroundColor = raisedButton.color;
        var labelColor = raisedButton.textColor;

        if (disabled) {
          backgroundColor =
            disabledBackgroundColor || raisedButton.disabledColor;
          labelColor = disabledLabelColor || raisedButton.disabledTextColor;
        } else if (primary) {
          backgroundColor = raisedButton.primaryColor;
          labelColor = raisedButton.primaryTextColor;
        } else if (secondary) {
          backgroundColor = raisedButton.secondaryColor;
          labelColor = raisedButton.secondaryTextColor;
        } else {
          if (props.backgroundColor) {
            backgroundColor = props.backgroundColor;
          }
          if (props.labelColor) {
            labelColor = props.labelColor;
          }
        }

        var buttonHeight = (style && style.height) || button.height;
        var borderRadius = 2;

        return {
          root: {
            display: 'inline-block',
            transition: _transitions2.default.easeOut(),
            minWidth: fullWidth ? '100%' : button.minWidth,
          },
          button: {
            position: 'relative',
            height: buttonHeight,
            lineHeight: buttonHeight + 'px',
            width: '100%',
            padding: 0,
            borderRadius: borderRadius,
            transition: _transitions2.default.easeOut(),
            backgroundColor: backgroundColor,
            // That's the default value for a button but not a link
            textAlign: 'center',
          },
          label: {
            position: 'relative',
            opacity: 1,
            fontSize: raisedButton.fontSize,
            letterSpacing: 0,
            textTransform:
              raisedButton.textTransform || button.textTransform || 'uppercase',
            fontWeight: raisedButton.fontWeight,
            margin: 0,
            userSelect: 'none',
            paddingLeft:
              icon && labelPosition !== 'before'
                ? 8
                : baseTheme.spacing.desktopGutterLess,
            paddingRight:
              icon && labelPosition === 'before'
                ? 8
                : baseTheme.spacing.desktopGutterLess,
            color: labelColor,
          },
          icon: {
            verticalAlign: 'middle',
            marginLeft: label && labelPosition !== 'before' ? 12 : 0,
            marginRight: label && labelPosition === 'before' ? 12 : 0,
          },
          overlay: {
            height: buttonHeight,
            borderRadius: borderRadius,
            backgroundColor:
              (state.keyboardFocused || state.hovered) &&
              !disabled &&
              (0, _colorManipulator.fade)(labelColor, amount),
            transition: _transitions2.default.easeOut(),
            top: 0,
          },
          ripple: {
            color: labelColor,
            opacity: !(primary || secondary) ? 0.1 : 0.16,
          },
        };
      }

      var RaisedButton = (function (_Component) {
        _inherits(RaisedButton, _Component);

        function RaisedButton() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, RaisedButton);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    RaisedButton,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                hovered: false,
                keyboardFocused: false,
                touched: false,
                initialZDepth: 0,
                zDepth: 0,
              }),
              (_this.handleMouseDown = function (event) {
                // only listen to left clicks
                if (event.button === 0) {
                  _this.setState({
                    zDepth: _this.state.initialZDepth + 1,
                  });
                }
                if (_this.props.onMouseDown) {
                  _this.props.onMouseDown(event);
                }
              }),
              (_this.handleMouseUp = function (event) {
                _this.setState({
                  zDepth: _this.state.initialZDepth,
                });
                if (_this.props.onMouseUp) {
                  _this.props.onMouseUp(event);
                }
              }),
              (_this.handleMouseLeave = function (event) {
                if (!_this.state.keyboardFocused) {
                  _this.setState({
                    zDepth: _this.state.initialZDepth,
                    hovered: false,
                  });
                }
                if (_this.props.onMouseLeave) {
                  _this.props.onMouseLeave(event);
                }
              }),
              (_this.handleMouseEnter = function (event) {
                if (!_this.state.keyboardFocused && !_this.state.touched) {
                  _this.setState({
                    hovered: true,
                  });
                }
                if (_this.props.onMouseEnter) {
                  _this.props.onMouseEnter(event);
                }
              }),
              (_this.handleTouchStart = function (event) {
                _this.setState({
                  touched: true,
                  zDepth: _this.state.initialZDepth + 1,
                });

                if (_this.props.onTouchStart) {
                  _this.props.onTouchStart(event);
                }
              }),
              (_this.handleTouchEnd = function (event) {
                _this.setState({
                  zDepth: _this.state.initialZDepth,
                });

                if (_this.props.onTouchEnd) {
                  _this.props.onTouchEnd(event);
                }
              }),
              (_this.handleKeyboardFocus = function (event, keyboardFocused) {
                var zDepth =
                  keyboardFocused && !_this.props.disabled
                    ? _this.state.initialZDepth + 1
                    : _this.state.initialZDepth;

                _this.setState({
                  zDepth: zDepth,
                  keyboardFocused: keyboardFocused,
                });
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(RaisedButton, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              var zDepth = this.props.disabled ? 0 : 1;
              this.setState({
                zDepth: zDepth,
                initialZDepth: zDepth,
              });
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              var zDepth = nextProps.disabled ? 0 : 1;
              var nextState = {
                zDepth: zDepth,
                initialZDepth: zDepth,
              };

              if (nextProps.disabled && this.state.hovered) {
                nextState.hovered = false;
              }

              this.setState(nextState);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var backgroundColor = _props.backgroundColor;
              var children = _props.children;
              var className = _props.className;
              var disabled = _props.disabled;
              var fullWidth = _props.fullWidth;
              var icon = _props.icon;
              var label = _props.label;
              var labelColor = _props.labelColor;
              var labelPosition = _props.labelPosition;
              var labelStyle = _props.labelStyle;
              var primary = _props.primary;
              var rippleStyle = _props.rippleStyle;
              var secondary = _props.secondary;

              var other = _objectWithoutProperties(_props, [
                'backgroundColor',
                'children',
                'className',
                'disabled',
                'fullWidth',
                'icon',
                'label',
                'labelColor',
                'labelPosition',
                'labelStyle',
                'primary',
                'rippleStyle',
                'secondary',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);
              var mergedRippleStyles = (0, _simpleAssign2.default)(
                {},
                styles.ripple,
                rippleStyle,
              );

              var buttonEventHandlers = disabled
                ? {}
                : {
                    onMouseDown: this.handleMouseDown,
                    onMouseUp: this.handleMouseUp,
                    onMouseLeave: this.handleMouseLeave,
                    onMouseEnter: this.handleMouseEnter,
                    onTouchStart: this.handleTouchStart,
                    onTouchEnd: this.handleTouchEnd,
                    onKeyboardFocus: this.handleKeyboardFocus,
                  };

              var labelElement =
                label &&
                _react2.default.createElement(
                  'span',
                  {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(styles.label, labelStyle),
                    ),
                  },
                  label,
                );

              var iconCloned =
                icon &&
                (0, _react.cloneElement)(icon, {
                  color: icon.props.color || styles.label.color,
                  style: (0, _simpleAssign2.default)(
                    styles.icon,
                    icon.props.style,
                  ),
                });

              // Place label before or after children.
              var childrenFragment =
                labelPosition === 'before'
                  ? {
                      labelElement: labelElement,
                      iconCloned: iconCloned,
                      children: children,
                    }
                  : {
                      children: children,
                      iconCloned: iconCloned,
                      labelElement: labelElement,
                    };

              var enhancedButtonChildren = (0, _childUtils.createChildFragment)(
                childrenFragment,
              );

              return _react2.default.createElement(
                _Paper2.default,
                {
                  className: className,
                  style: (0, _simpleAssign2.default)(
                    styles.root,
                    this.props.style,
                  ),
                  zDepth: this.state.zDepth,
                },
                _react2.default.createElement(
                  _EnhancedButton2.default,
                  _extends({}, other, buttonEventHandlers, {
                    ref: 'container',
                    disabled: disabled,
                    style: styles.button,
                    focusRippleColor: mergedRippleStyles.color,
                    touchRippleColor: mergedRippleStyles.color,
                    focusRippleOpacity: mergedRippleStyles.opacity,
                    touchRippleOpacity: mergedRippleStyles.opacity,
                  }),
                  _react2.default.createElement(
                    'div',
                    {
                      ref: 'overlay',
                      style: prepareStyles(styles.overlay),
                    },
                    enhancedButtonChildren,
                  ),
                ),
              );
            },
          },
        ]);

        return RaisedButton;
      })(_react.Component);

      RaisedButton.muiName = 'RaisedButton';
      RaisedButton.propTypes = {
        /**
         * Override the default background color for the button,
         * but not the default disabled background color
         * (use `disabledBackgroundColor` for this).
         */
        backgroundColor: _react.PropTypes.string,
        /**
         * The content of the button.
         * If a label is provided via the `label` prop, the text within the label
         * will be displayed in addition to the content provided here.
         */
        children: _react.PropTypes.node,
        /**
         * The CSS class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * If true, the button will be disabled.
         */
        disabled: _react.PropTypes.bool,
        /**
         * Override the default background color for the button
         * when it is disabled.
         */
        disabledBackgroundColor: _react.PropTypes.string,
        /**
         * The color of the button's label when the button is disabled.
         */
        disabledLabelColor: _react.PropTypes.string,
        /**
         * If true, the button will take up the full width of its container.
         */
        fullWidth: _react.PropTypes.bool,
        /**
         * The URL to link to when the button is clicked.
         */
        href: _react.PropTypes.string,
        /**
         * An icon to be displayed within the button.
         */
        icon: _react.PropTypes.node,
        /**
         * The label to be displayed within the button.
         * If content is provided via the `children` prop, that content will be
         * displayed in addition to the label provided here.
         */
        label: validateLabel,
        /**
         * The color of the button's label.
         */
        labelColor: _react.PropTypes.string,
        /**
         * The position of the button's label relative to the button's `children`.
         */
        labelPosition: _react.PropTypes.oneOf(['before', 'after']),
        /**
         * Override the inline-styles of the button's label element.
         */
        labelStyle: _react.PropTypes.object,
        /** @ignore */
        onMouseDown: _react.PropTypes.func,
        /** @ignore */
        onMouseEnter: _react.PropTypes.func,
        /** @ignore */
        onMouseLeave: _react.PropTypes.func,
        /** @ignore */
        onMouseUp: _react.PropTypes.func,
        /** @ignore */
        onTouchEnd: _react.PropTypes.func,
        /** @ignore */
        onTouchStart: _react.PropTypes.func,
        /**
         * If true, the button will use the theme's primary color.
         */
        primary: _react.PropTypes.bool,
        /**
         * Override the inline style of the ripple element.
         */
        rippleStyle: _react.PropTypes.object,
        /**
         * If true, the button will use the theme's secondary color.
         * If both `secondary` and `primary` are true, the button will use
         * the theme's primary color.
         */
        secondary: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      RaisedButton.defaultProps = {
        disabled: false,
        labelPosition: 'after',
        fullWidth: false,
        primary: false,
        secondary: false,
      };
      RaisedButton.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = RaisedButton;

      /***/
    },
    /* 755 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _RefreshIndicator = __webpack_require__(756);

      var _RefreshIndicator2 = _interopRequireDefault(_RefreshIndicator);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _RefreshIndicator2.default;

      /***/
    },
    /* 756 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _slicedToArray = (function () {
        function sliceIterator(arr, i) {
          var _arr = [];
          var _n = true;
          var _d = false;
          var _e = undefined;
          try {
            for (
              var _i = arr[Symbol.iterator](), _s;
              !(_n = (_s = _i.next()).done);
              _n = true
            ) {
              _arr.push(_s.value);
              if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;
            _e = err;
          } finally {
            try {
              if (!_n && _i['return']) _i['return']();
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
        return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError(
              'Invalid attempt to destructure non-iterable instance',
            );
          }
        };
      })();

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _autoPrefix = __webpack_require__(552);

      var _autoPrefix2 = _interopRequireDefault(_autoPrefix);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _Paper = __webpack_require__(577);

      var _Paper2 = _interopRequireDefault(_Paper);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var VIEWBOX_SIZE = 32;

      function getStyles(props) {
        var padding = props.size * 0.1; // same implementation of `this.getPaddingSize()`
        return {
          root: {
            position: 'absolute',
            zIndex: 2,
            width: props.size,
            height: props.size,
            padding: padding,
            top: -10000,
            left: -10000,
            transform:
              'translate(' +
              (10000 + props.left) +
              'px, ' +
              (10000 + props.top) +
              'px)',
            opacity: props.status === 'hide' ? 0 : 1,
            transition:
              props.status === 'hide'
                ? _transitions2.default.create('all', '.3s', 'ease-out')
                : 'none',
          },
        };
      }

      var RefreshIndicator = (function (_Component) {
        _inherits(RefreshIndicator, _Component);

        function RefreshIndicator() {
          _classCallCheck(this, RefreshIndicator);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(RefreshIndicator).apply(this, arguments),
          );
        }

        _createClass(RefreshIndicator, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              this.scalePath(this.refs.path, 0);
              this.rotateWrapper(this.refs.wrapper);
            },
          },
          {
            key: 'componentDidUpdate',
            value: function componentDidUpdate() {
              clearTimeout(this.scalePathTimer);
              clearTimeout(this.rotateWrapperTimer);
              clearTimeout(this.rotateWrapperSecondTimer);

              this.scalePath(this.refs.path, 0);
              this.rotateWrapper(this.refs.wrapper);
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              clearTimeout(this.scalePathTimer);
              clearTimeout(this.rotateWrapperTimer);
              clearTimeout(this.rotateWrapperSecondTimer);
            },
          },
          {
            key: 'renderChildren',
            value: function renderChildren() {
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var paperSize = this.getPaperSize();

              var childrenCmp = null;
              if (this.props.status !== 'ready') {
                var circleStyle = this.getCircleStyle(paperSize);
                childrenCmp = _react2.default.createElement(
                  'div',
                  {
                    ref: 'wrapper',
                    style: prepareStyles({
                      transition: _transitions2.default.create(
                        'transform',
                        '20s',
                        null,
                        'linear',
                      ),
                      width: '100%',
                      height: '100%',
                    }),
                  },
                  _react2.default.createElement(
                    'svg',
                    {
                      style: {
                        width: paperSize,
                        height: paperSize,
                      },
                      viewBox: '0 0 ' + VIEWBOX_SIZE + ' ' + VIEWBOX_SIZE,
                    },
                    _react2.default.createElement(
                      'circle',
                      _extends(
                        {
                          ref: 'path',
                          style: prepareStyles(
                            (0, _simpleAssign2.default)(circleStyle.style, {
                              transition: _transitions2.default.create(
                                'all',
                                '1.5s',
                                null,
                                'ease-in-out',
                              ),
                            }),
                          ),
                        },
                        circleStyle.attr,
                      ),
                    ),
                  ),
                );
              } else {
                var _circleStyle = this.getCircleStyle(paperSize);
                var polygonStyle = this.getPolygonStyle(paperSize);
                childrenCmp = _react2.default.createElement(
                  'svg',
                  {
                    style: {
                      width: paperSize,
                      height: paperSize,
                    },
                    viewBox: '0 0 ' + VIEWBOX_SIZE + ' ' + VIEWBOX_SIZE,
                  },
                  _react2.default.createElement(
                    'circle',
                    _extends(
                      {
                        style: prepareStyles(_circleStyle.style),
                      },
                      _circleStyle.attr,
                    ),
                  ),
                  _react2.default.createElement(
                    'polygon',
                    _extends(
                      {
                        style: prepareStyles(polygonStyle.style),
                      },
                      polygonStyle.attr,
                    ),
                  ),
                );
              }

              return childrenCmp;
            },
          },
          {
            key: 'getTheme',
            value: function getTheme() {
              return this.context.muiTheme.refreshIndicator;
            },
          },
          {
            key: 'getPaddingSize',
            value: function getPaddingSize() {
              var padding = this.props.size * 0.1;
              return padding;
            },
          },
          {
            key: 'getPaperSize',
            value: function getPaperSize() {
              return this.props.size - this.getPaddingSize() * 2;
            },
          },
          {
            key: 'getCircleAttr',
            value: function getCircleAttr() {
              return {
                radiu: VIEWBOX_SIZE / 2 - 5,
                originX: VIEWBOX_SIZE / 2,
                originY: VIEWBOX_SIZE / 2,
                strokeWidth: 3,
              };
            },
          },
          {
            key: 'getArcDeg',
            value: function getArcDeg() {
              var p = this.props.percentage / 100;

              var beginDeg = p * 120;
              var endDeg = p * 410;
              return [beginDeg, endDeg];
            },
          },
          {
            key: 'getFactor',
            value: function getFactor() {
              var p = this.props.percentage / 100;
              var p1 = Math.min(1, p / 0.4);

              return p1;
            },
          },
          {
            key: 'getCircleStyle',
            value: function getCircleStyle() {
              var isLoading = this.props.status === 'loading';
              var p1 = isLoading ? 1 : this.getFactor();
              var circle = this.getCircleAttr();
              var perimeter = Math.PI * 2 * circle.radiu;

              var _getArcDeg = this.getArcDeg();

              var _getArcDeg2 = _slicedToArray(_getArcDeg, 2);

              var beginDeg = _getArcDeg2[0];
              var endDeg = _getArcDeg2[1];

              var arcLen = ((endDeg - beginDeg) * perimeter) / 360;
              var dashOffset = (-beginDeg * perimeter) / 360;

              var theme = this.getTheme();
              return {
                style: {
                  strokeDasharray: arcLen + ', ' + (perimeter - arcLen),
                  strokeDashoffset: dashOffset,
                  stroke:
                    isLoading || this.props.percentage === 100
                      ? this.props.loadingColor || theme.loadingStrokeColor
                      : this.props.color || theme.strokeColor,
                  strokeLinecap: 'round',
                  opacity: p1,
                  strokeWidth: circle.strokeWidth * p1,
                  fill: 'none',
                },
                attr: {
                  cx: circle.originX,
                  cy: circle.originY,
                  r: circle.radiu,
                },
              };
            },
          },
          {
            key: 'getPolygonStyle',
            value: function getPolygonStyle() {
              var p1 = this.getFactor();
              var circle = this.getCircleAttr();

              var triangleCx = circle.originX + circle.radiu;
              var triangleCy = circle.originY;
              var dx = ((circle.strokeWidth * 7) / 4) * p1;
              var trianglePath =
                triangleCx -
                dx +
                ',' +
                triangleCy +
                ' ' +
                (triangleCx + dx) +
                ',' +
                triangleCy +
                ' ' +
                triangleCx +
                ',' +
                (triangleCy + dx);

              var _getArcDeg3 = this.getArcDeg();

              var _getArcDeg4 = _slicedToArray(_getArcDeg3, 2);

              var endDeg = _getArcDeg4[1];

              var theme = this.getTheme();
              return {
                style: {
                  fill:
                    this.props.percentage === 100
                      ? this.props.loadingColor || theme.loadingStrokeColor
                      : this.props.color || theme.strokeColor,
                  transform: 'rotate(' + endDeg + 'deg)',
                  transformOrigin:
                    circle.originX + 'px ' + circle.originY + 'px',
                  opacity: p1,
                },
                attr: {
                  points: trianglePath,
                },
              };
            },
          },
          {
            key: 'scalePath',
            value: function scalePath(path, step) {
              var _this2 = this;

              if (this.props.status !== 'loading') return;

              var currStep = (step || 0) % 3;

              var circle = this.getCircleAttr();
              var perimeter = Math.PI * 2 * circle.radiu;
              var arcLen = perimeter * 0.64;

              var strokeDasharray = void 0;
              var strokeDashoffset = void 0;
              var transitionDuration = void 0;

              if (currStep === 0) {
                strokeDasharray = '1, 200';
                strokeDashoffset = 0;
                transitionDuration = '0ms';
              } else if (currStep === 1) {
                strokeDasharray = arcLen + ', 200';
                strokeDashoffset = -15;
                transitionDuration = '750ms';
              } else {
                strokeDasharray = arcLen + ', 200';
                strokeDashoffset = -(perimeter - 1);
                transitionDuration = '850ms';
              }

              _autoPrefix2.default.set(
                path.style,
                'strokeDasharray',
                strokeDasharray,
              );
              _autoPrefix2.default.set(
                path.style,
                'strokeDashoffset',
                strokeDashoffset,
              );
              _autoPrefix2.default.set(
                path.style,
                'transitionDuration',
                transitionDuration,
              );

              this.scalePathTimer = setTimeout(
                function () {
                  return _this2.scalePath(path, currStep + 1);
                },
                currStep ? 750 : 250,
              );
            },
          },
          {
            key: 'rotateWrapper',
            value: function rotateWrapper(wrapper) {
              var _this3 = this;

              if (this.props.status !== 'loading') return;

              _autoPrefix2.default.set(wrapper.style, 'transform', null);
              _autoPrefix2.default.set(
                wrapper.style,
                'transform',
                'rotate(0deg)',
              );
              _autoPrefix2.default.set(
                wrapper.style,
                'transitionDuration',
                '0ms',
              );

              this.rotateWrapperSecondTimer = setTimeout(function () {
                _autoPrefix2.default.set(
                  wrapper.style,
                  'transform',
                  'rotate(1800deg)',
                );
                _autoPrefix2.default.set(
                  wrapper.style,
                  'transitionDuration',
                  '10s',
                );
                _autoPrefix2.default.set(
                  wrapper.style,
                  'transitionTimingFunction',
                  'linear',
                );
              }, 50);

              this.rotateWrapperTimer = setTimeout(function () {
                return _this3.rotateWrapper(wrapper);
              }, 10050);
            },
          },
          {
            key: 'render',
            value: function render() {
              var style = this.props.style;

              var styles = getStyles(this.props, this.context);

              return _react2.default.createElement(
                _Paper2.default,
                {
                  circle: true,
                  style: (0, _simpleAssign2.default)(styles.root, style),
                  ref: 'indicatorCt',
                },
                this.renderChildren(),
              );
            },
          },
        ]);

        return RefreshIndicator;
      })(_react.Component);

      RefreshIndicator.propTypes = {
        /**
         * Override the theme's color of the indicator while it's status is
         * "ready" and it's percentage is less than 100.
         */
        color: _react.PropTypes.string,
        /**
         * The absolute left position of the indicator in pixels.
         */
        left: _react.PropTypes.number.isRequired,
        /**
         * Override the theme's color of the indicator while
         * it's status is "loading" or when it's percentage is 100.
         */
        loadingColor: _react.PropTypes.string,
        /**
         * The confirmation progress to fetch data. Max value is 100.
         */
        percentage: _react.PropTypes.number,
        /**
         * Size in pixels.
         */
        size: _react.PropTypes.number,
        /**
         * The display status of the indicator. If the status is
         * "ready", the indicator will display the ready state
         * arrow. If the status is "loading", it will display
         * the loading progress indicator. If the status is "hide",
         * the indicator will be hidden.
         */
        status: _react.PropTypes.oneOf(['ready', 'loading', 'hide']),
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The absolute top position of the indicator in pixels.
         */
        top: _react.PropTypes.number.isRequired,
      };
      RefreshIndicator.defaultProps = {
        percentage: 0,
        size: 40,
        status: 'hide',
      };
      RefreshIndicator.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = RefreshIndicator;

      /***/
    },
    /* 757 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _SelectField = __webpack_require__(758);

      var _SelectField2 = _interopRequireDefault(_SelectField);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _SelectField2.default;

      /***/
    },
    /* 758 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _TextField = __webpack_require__(581);

      var _TextField2 = _interopRequireDefault(_TextField);

      var _DropDownMenu = __webpack_require__(661);

      var _DropDownMenu2 = _interopRequireDefault(_DropDownMenu);

      var _deprecatedPropType = __webpack_require__(561);

      var _deprecatedPropType2 = _interopRequireDefault(_deprecatedPropType);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props) {
        return {
          label: {
            paddingLeft: 0,
            top: props.floatingLabelText ? 6 : -4,
          },
          icon: {
            right: 0,
            top: props.floatingLabelText ? 22 : 14,
          },
          hideDropDownUnderline: {
            borderTop: 'none',
          },
          dropDownMenu: {
            display: 'block',
          },
        };
      }

      var SelectField = (function (_Component) {
        _inherits(SelectField, _Component);

        function SelectField() {
          _classCallCheck(this, SelectField);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(SelectField).apply(this, arguments),
          );
        }

        _createClass(SelectField, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var autoWidth = _props.autoWidth;
              var children = _props.children;
              var style = _props.style;
              var labelStyle = _props.labelStyle;
              var iconStyle = _props.iconStyle;
              var id = _props.id;
              var underlineDisabledStyle = _props.underlineDisabledStyle;
              var underlineFocusStyle = _props.underlineFocusStyle;
              var underlineStyle = _props.underlineStyle;
              var errorStyle = _props.errorStyle;
              var selectFieldRoot = _props.selectFieldRoot;
              var disabled = _props.disabled;
              var floatingLabelFixed = _props.floatingLabelFixed;
              var floatingLabelText = _props.floatingLabelText;
              var floatingLabelStyle = _props.floatingLabelStyle;
              var hintStyle = _props.hintStyle;
              var hintText = _props.hintText;
              var fullWidth = _props.fullWidth;
              var errorText = _props.errorText;
              var maxHeight = _props.maxHeight;
              var menuStyle = _props.menuStyle;
              var onFocus = _props.onFocus;
              var onBlur = _props.onBlur;
              var onChange = _props.onChange;
              var value = _props.value;

              var other = _objectWithoutProperties(_props, [
                'autoWidth',
                'children',
                'style',
                'labelStyle',
                'iconStyle',
                'id',
                'underlineDisabledStyle',
                'underlineFocusStyle',
                'underlineStyle',
                'errorStyle',
                'selectFieldRoot',
                'disabled',
                'floatingLabelFixed',
                'floatingLabelText',
                'floatingLabelStyle',
                'hintStyle',
                'hintText',
                'fullWidth',
                'errorText',
                'maxHeight',
                'menuStyle',
                'onFocus',
                'onBlur',
                'onChange',
                'value',
              ]);

              var styles = getStyles(this.props, this.context);

              return _react2.default.createElement(
                _TextField2.default,
                _extends({}, other, {
                  style: style,
                  disabled: disabled,
                  floatingLabelFixed: floatingLabelFixed,
                  floatingLabelText: floatingLabelText,
                  floatingLabelStyle: floatingLabelStyle,
                  hintStyle: hintStyle,
                  hintText: !hintText && !floatingLabelText ? ' ' : hintText,
                  fullWidth: fullWidth,
                  errorText: errorText,
                  underlineStyle: underlineStyle,
                  errorStyle: errorStyle,
                  onFocus: onFocus,
                  onBlur: onBlur,
                  id: id,
                  underlineDisabledStyle: underlineDisabledStyle,
                  underlineFocusStyle: underlineFocusStyle,
                }),
                _react2.default.createElement(
                  _DropDownMenu2.default,
                  {
                    disabled: disabled,
                    style: (0, _simpleAssign2.default)(
                      styles.dropDownMenu,
                      selectFieldRoot,
                      menuStyle,
                    ),
                    labelStyle: (0, _simpleAssign2.default)(
                      styles.label,
                      labelStyle,
                    ),
                    iconStyle: (0, _simpleAssign2.default)(
                      styles.icon,
                      iconStyle,
                    ),
                    underlineStyle: styles.hideDropDownUnderline,
                    autoWidth: autoWidth,
                    value: value,
                    onChange: onChange,
                    maxHeight: maxHeight,
                  },
                  children,
                ),
              );
            },
          },
        ]);

        return SelectField;
      })(_react.Component);

      SelectField.propTypes = {
        /**
         * If true, the width will automatically be set according to the
         * items inside the menu.
         * To control the width in CSS instead, leave this prop set to `false`.
         */
        autoWidth: _react.PropTypes.bool,
        /**
         * The `MenuItem` elements to populate the select field with.
         * If the menu items have a `label` prop, that value will
         * represent the selected menu item in the rendered select field.
         */
        children: _react.PropTypes.node,
        /**
         * If true, the select field will be disabled.
         */
        disabled: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the error element.
         */
        errorStyle: _react.PropTypes.object,
        /**
         * The error content to display.
         */
        errorText: _react.PropTypes.node,
        /**
         * If true, the floating label will float even when no value is selected.
         */
        floatingLabelFixed: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the floating label.
         */
        floatingLabelStyle: _react.PropTypes.object,
        /**
         * The content of the floating label.
         */
        floatingLabelText: _react.PropTypes.node,
        /**
         * If true, the select field will take up the full width of its container.
         */
        fullWidth: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the hint element.
         */
        hintStyle: _react.PropTypes.object,
        /**
         * The hint content to display.
         */
        hintText: _react.PropTypes.node,
        /**
         * Override the inline-styles of the icon element.
         */
        iconStyle: _react.PropTypes.object,
        /**
         * The id prop for the text field.
         */
        id: _react.PropTypes.string,
        /**
         * Override the label style when the select field is inactive.
         */
        labelStyle: _react.PropTypes.object,
        /**
         * Override the default max-height of the underlying `DropDownMenu` element.
         */
        maxHeight: _react.PropTypes.number,
        /**
         * Override the inline-styles of the underlying `DropDownMenu` element.
         */
        menuStyle: _react.PropTypes.object,
        /** @ignore */
        onBlur: _react.PropTypes.func,
        /**
         * Callback function fired when a menu item is selected.
         *
         * @param {object} event TouchTap event targeting the menu item
         * that was selected.
         * @param {number} key The index of the selected menu item.
         * @param {any} payload The `value` prop of the selected menu item.
         */
        onChange: _react.PropTypes.func,
        /** @ignore */
        onFocus: _react.PropTypes.func,
        /**
         * Override the inline-styles of the underlying `DropDownMenu` element.
         */
        selectFieldRoot: (0, _deprecatedPropType2.default)(
          _react.PropTypes.object,
          'Instead, use `menuStyle`. It will be removed with v0.16.0.',
        ),
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * Override the inline-styles of the underline element when the select
         * field is disabled.
         */
        underlineDisabledStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of the underline element when the select field
         * is focused.
         */
        underlineFocusStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of the underline element.
         */
        underlineStyle: _react.PropTypes.object,
        /**
         * The value that is currently selected.
         */
        value: _react.PropTypes.any,
      };
      SelectField.defaultProps = {
        autoWidth: false,
        disabled: false,
        fullWidth: false,
      };
      SelectField.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = SelectField;

      /***/
    },
    /* 759 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _Slider = __webpack_require__(760);

      var _Slider2 = _interopRequireDefault(_Slider);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _Slider2.default;

      /***/
    },
    /* 760 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _keycode = __webpack_require__(549);

      var _keycode2 = _interopRequireDefault(_keycode);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _FocusRipple = __webpack_require__(550);

      var _FocusRipple2 = _interopRequireDefault(_FocusRipple);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true,
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }

      /**
       * Verifies min/max range.
       * @param   {Object} props         Properties of the React component.
       * @param   {String} propName      Name of the property to validate.
       * @param   {String} componentName Name of the component whose property is being validated.
       * @returns {Object} Returns an Error if min >= max otherwise null.
       */
      var minMaxPropType = function minMaxPropType(
        props,
        propName,
        componentName,
      ) {
        for (
          var _len = arguments.length,
            rest = Array(_len > 3 ? _len - 3 : 0),
            _key = 3;
          _key < _len;
          _key++
        ) {
          rest[_key - 3] = arguments[_key];
        }

        var error = _react.PropTypes.number.apply(
          _react.PropTypes,
          [props, propName, componentName].concat(rest),
        );
        if (error !== null) return error;

        if (props.min >= props.max) {
          var errorMsg =
            propName === 'min'
              ? 'min should be less than max'
              : 'max should be greater than min';
          return new Error(errorMsg);
        }
      };

      /**
       * Verifies value is within the min/max range.
       * @param   {Object} props         Properties of the React component.
       * @param   {String} propName      Name of the property to validate.
       * @param   {String} componentName Name of the component whose property is being validated.
       * @returns {Object} Returns an Error if the value is not within the range otherwise null.
       */
      var valueInRangePropType = function valueInRangePropType(
        props,
        propName,
        componentName,
      ) {
        for (
          var _len2 = arguments.length,
            rest = Array(_len2 > 3 ? _len2 - 3 : 0),
            _key2 = 3;
          _key2 < _len2;
          _key2++
        ) {
          rest[_key2 - 3] = arguments[_key2];
        }

        var error = _react.PropTypes.number.apply(
          _react.PropTypes,
          [props, propName, componentName].concat(rest),
        );
        if (error !== null) return error;

        var value = props[propName];
        if (value < props.min || props.max < value) {
          return new Error(
            propName + ' should be within the range specified by min and max',
          );
        }
      };

      var crossAxisProperty = {
        x: 'height',
        'x-reverse': 'height',
        y: 'width',
        'y-reverse': 'width',
      };

      var crossAxisOffsetProperty = {
        x: 'top',
        'x-reverse': 'top',
        y: 'left',
        'y-reverse': 'left',
      };

      var mainAxisProperty = {
        x: 'width',
        'x-reverse': 'width',
        y: 'height',
        'y-reverse': 'height',
      };

      var mainAxisMarginFromEnd = {
        x: 'marginRight',
        'x-reverse': 'marginLeft',
        y: 'marginTop',
        'y-reverse': 'marginBottom',
      };

      var mainAxisMarginFromStart = {
        x: 'marginLeft',
        'x-reverse': 'marginRight',
        y: 'marginBottom',
        'y-reverse': 'marginTop',
      };

      var mainAxisOffsetProperty = {
        x: 'left',
        'x-reverse': 'right',
        y: 'bottom',
        'y-reverse': 'top',
      };

      var mainAxisClientProperty = {
        x: 'clientWidth',
        'x-reverse': 'clientWidth',
        y: 'clientHeight',
        'y-reverse': 'clientHeight',
      };

      var mainAxisClientOffsetProperty = {
        x: 'clientX',
        'x-reverse': 'clientX',
        y: 'clientY',
        'y-reverse': 'clientY',
      };

      var reverseMainAxisOffsetProperty = {
        x: 'right',
        'x-reverse': 'left',
        y: 'top',
        'y-reverse': 'bottom',
      };

      var isMouseControlInverted = function isMouseControlInverted(axis) {
        return axis === 'x-reverse' || axis === 'y';
      };

      var getStyles = function getStyles(props, context, state) {
        var _slider,
          _track,
          _filledAndRemaining,
          _handle,
          _objectAssign2,
          _objectAssign3;

        var slider = context.muiTheme.slider;

        var fillGutter = slider.handleSize / 2;
        var disabledGutter = slider.trackSize + slider.handleSizeDisabled / 2;
        var calcDisabledSpacing = props.disabled
          ? ' - ' + disabledGutter + 'px'
          : '';
        var axis = props.axis;

        var styles = {
          slider:
            ((_slider = {
              touchCallout: 'none',
              userSelect: 'none',
              cursor: 'default',
            }),
            _defineProperty(
              _slider,
              crossAxisProperty[axis],
              slider.handleSizeActive,
            ),
            _defineProperty(_slider, mainAxisProperty[axis], '100%'),
            _defineProperty(_slider, 'position', 'relative'),
            _defineProperty(_slider, 'marginTop', 24),
            _defineProperty(_slider, 'marginBottom', 48),
            _slider),
          track:
            ((_track = {
              position: 'absolute',
            }),
            _defineProperty(
              _track,
              crossAxisOffsetProperty[axis],
              (slider.handleSizeActive - slider.trackSize) / 2,
            ),
            _defineProperty(_track, mainAxisOffsetProperty[axis], 0),
            _defineProperty(_track, mainAxisProperty[axis], '100%'),
            _defineProperty(_track, crossAxisProperty[axis], slider.trackSize),
            _track),
          filledAndRemaining:
            ((_filledAndRemaining = {
              position: 'absolute',
            }),
            _defineProperty(_filledAndRemaining, crossAxisOffsetProperty, 0),
            _defineProperty(
              _filledAndRemaining,
              crossAxisProperty[axis],
              '100%',
            ),
            _defineProperty(
              _filledAndRemaining,
              'transition',
              _transitions2.default.easeOut(null, 'margin'),
            ),
            _filledAndRemaining),
          handle:
            ((_handle = {
              boxSizing: 'border-box',
              position: 'absolute',
              cursor: 'pointer',
              pointerEvents: 'inherit',
            }),
            _defineProperty(_handle, crossAxisOffsetProperty[axis], 0),
            _defineProperty(
              _handle,
              mainAxisOffsetProperty[axis],
              state.percent === 0 ? '0%' : state.percent * 100 + '%',
            ),
            _defineProperty(_handle, 'zIndex', 1),
            _defineProperty(
              _handle,
              'margin',
              {
                x: slider.trackSize / 2 + 'px 0 0 0',
                'x-reverse': slider.trackSize / 2 + 'px 0 0 0',
                y: '0 0 0 ' + slider.trackSize / 2 + 'px',
                'y-reverse': '0 0 0 ' + slider.trackSize / 2 + 'px',
              }[props.axis],
            ),
            _defineProperty(_handle, 'width', slider.handleSize),
            _defineProperty(_handle, 'height', slider.handleSize),
            _defineProperty(_handle, 'backgroundColor', slider.selectionColor),
            _defineProperty(_handle, 'backgroundClip', 'padding-box'),
            _defineProperty(_handle, 'border', '0px solid transparent'),
            _defineProperty(_handle, 'borderRadius', '50%'),
            _defineProperty(
              _handle,
              'transform',
              {
                x: 'translate(-50%, -50%)',
                'x-reverse': 'translate(50%, -50%)',
                y: 'translate(-50%, 50%)',
                'y-reverse': 'translate(-50%, -50%)',
              }[props.axis],
            ),
            _defineProperty(
              _handle,
              'transition',
              _transitions2.default.easeOut('450ms', 'background') +
                ', ' +
                _transitions2.default.easeOut('450ms', 'border-color') +
                ', ' +
                _transitions2.default.easeOut('450ms', 'width') +
                ', ' +
                _transitions2.default.easeOut('450ms', 'height'),
            ),
            _defineProperty(_handle, 'overflow', 'visible'),
            _defineProperty(_handle, 'outline', 'none'),
            _handle),
          handleWhenDisabled: {
            boxSizing: 'content-box',
            cursor: 'not-allowed',
            backgroundColor: slider.trackColor,
            width: slider.handleSizeDisabled,
            height: slider.handleSizeDisabled,
            border: 'none',
          },
          handleWhenPercentZero: {
            border: slider.trackSize + 'px solid ' + slider.handleColorZero,
            backgroundColor: slider.handleFillColor,
            boxShadow: 'none',
          },
          handleWhenPercentZeroAndDisabled: {
            cursor: 'not-allowed',
            width: slider.handleSizeDisabled,
            height: slider.handleSizeDisabled,
          },
          handleWhenPercentZeroAndFocused: {
            border: slider.trackSize + 'px solid ' + slider.trackColorSelected,
          },
          handleWhenActive: {
            width: slider.handleSizeActive,
            height: slider.handleSizeActive,
          },
          ripple: {
            height: slider.handleSize,
            width: slider.handleSize,
            overflow: 'visible',
          },
          rippleWhenPercentZero: {
            top: -slider.trackSize,
            left: -slider.trackSize,
          },
          rippleInner: {
            height: '300%',
            width: '300%',
            top: -slider.handleSize,
            left: -slider.handleSize,
          },
          rippleColor: {
            fill:
              state.percent === 0 ? slider.handleColorZero : slider.rippleColor,
          },
        };
        styles.filled = (0, _simpleAssign2.default)(
          {},
          styles.filledAndRemaining,
          ((_objectAssign2 = {}),
          _defineProperty(_objectAssign2, mainAxisOffsetProperty[axis], 0),
          _defineProperty(
            _objectAssign2,
            'backgroundColor',
            props.disabled ? slider.trackColor : slider.selectionColor,
          ),
          _defineProperty(
            _objectAssign2,
            mainAxisMarginFromEnd[axis],
            fillGutter,
          ),
          _defineProperty(
            _objectAssign2,
            mainAxisProperty[axis],
            'calc(' + state.percent * 100 + '%' + calcDisabledSpacing + ')',
          ),
          _objectAssign2),
        );
        styles.remaining = (0, _simpleAssign2.default)(
          {},
          styles.filledAndRemaining,
          ((_objectAssign3 = {}),
          _defineProperty(
            _objectAssign3,
            reverseMainAxisOffsetProperty[axis],
            0,
          ),
          _defineProperty(
            _objectAssign3,
            'backgroundColor',
            (state.hovered || state.focused) && !props.disabled
              ? slider.trackColorSelected
              : slider.trackColor,
          ),
          _defineProperty(
            _objectAssign3,
            mainAxisMarginFromStart[axis],
            fillGutter,
          ),
          _defineProperty(
            _objectAssign3,
            mainAxisProperty[axis],
            'calc(' +
              (1 - state.percent) * 100 +
              '%' +
              calcDisabledSpacing +
              ')',
          ),
          _objectAssign3),
        );

        return styles;
      };

      var Slider = (function (_Component) {
        _inherits(Slider, _Component);

        function Slider() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, Slider);

          for (
            var _len3 = arguments.length, args = Array(_len3), _key3 = 0;
            _key3 < _len3;
            _key3++
          ) {
            args[_key3] = arguments[_key3];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    Slider,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                active: false,
                dragging: false,
                focused: false,
                hovered: false,
                percent: 0,
                value: 0,
              }),
              (_this.onHandleTouchStart = function (event) {
                if (document) {
                  document.addEventListener(
                    'touchmove',
                    _this.dragTouchHandler,
                    false,
                  );
                  document.addEventListener(
                    'touchup',
                    _this.dragTouchEndHandler,
                    false,
                  );
                  document.addEventListener(
                    'touchend',
                    _this.dragTouchEndHandler,
                    false,
                  );
                  document.addEventListener(
                    'touchcancel',
                    _this.dragTouchEndHandler,
                    false,
                  );
                }
                _this.onDragStart(event);

                // Cancel scroll and context menu
                event.preventDefault();
              }),
              (_this.onHandleMouseDown = function (event) {
                if (document) {
                  document.addEventListener(
                    'mousemove',
                    _this.dragHandler,
                    false,
                  );
                  document.addEventListener(
                    'mouseup',
                    _this.dragEndHandler,
                    false,
                  );

                  // Cancel text selection
                  event.preventDefault();

                  // Set focus manually since we called preventDefault()
                  _this.refs.handle.focus();
                }
                _this.onDragStart(event);
              }),
              (_this.onHandleKeyDown = function (event) {
                var _this$props = _this.props;
                var axis = _this$props.axis;
                var min = _this$props.min;
                var max = _this$props.max;
                var step = _this$props.step;

                var action = void 0;

                switch ((0, _keycode2.default)(event)) {
                  case 'page down':
                  case 'down':
                    if (axis === 'y-reverse') {
                      action = 'increase';
                    } else {
                      action = 'decrease';
                    }
                    break;
                  case 'left':
                    if (axis === 'x-reverse') {
                      action = 'increase';
                    } else {
                      action = 'decrease';
                    }
                    break;
                  case 'page up':
                  case 'up':
                    if (axis === 'y-reverse') {
                      action = 'decrease';
                    } else {
                      action = 'increase';
                    }
                    break;
                  case 'right':
                    if (axis === 'x-reverse') {
                      action = 'decrease';
                    } else {
                      action = 'increase';
                    }
                    break;
                  case 'home':
                    action = 'home';
                    break;
                  case 'end':
                    action = 'end';
                    break;
                }

                if (action) {
                  var newValue = void 0;
                  var newPercent = void 0;

                  // Cancel scroll
                  event.preventDefault();

                  // When pressing home or end the handle should be taken to the
                  // beginning or end of the track respectively
                  switch (action) {
                    case 'decrease':
                      newValue = Math.max(min, _this.state.value - step);
                      newPercent = (newValue - min) / (max - min);
                      break;
                    case 'increase':
                      newValue = Math.min(max, _this.state.value + step);
                      newPercent = (newValue - min) / (max - min);
                      break;
                    case 'home':
                      newValue = min;
                      newPercent = 0;
                      break;
                    case 'end':
                      newValue = max;
                      newPercent = 1;
                      break;
                  }

                  // We need to use toFixed() because of float point errors.
                  // For example, 0.01 + 0.06 = 0.06999999999999999
                  if (_this.state.value !== newValue) {
                    _this.setState(
                      {
                        percent: newPercent,
                        value: parseFloat(newValue.toFixed(5)),
                      },
                      function () {
                        if (_this.props.onChange)
                          _this.props.onChange(event, _this.state.value);
                      },
                    );
                  }
                }
              }),
              (_this.dragHandler = function (event) {
                if (_this.dragRunning) {
                  return;
                }
                _this.dragRunning = true;
                requestAnimationFrame(function () {
                  var pos = void 0;
                  if (isMouseControlInverted(_this.props.axis)) {
                    pos =
                      _this.getTrackOffset() -
                      event[mainAxisClientOffsetProperty[_this.props.axis]];
                  } else {
                    pos =
                      event[mainAxisClientOffsetProperty[_this.props.axis]] -
                      _this.getTrackOffset();
                  }
                  _this.onDragUpdate(event, pos);
                  _this.dragRunning = false;
                });
              }),
              (_this.dragTouchHandler = function (event) {
                if (_this.dragRunning) {
                  return;
                }
                _this.dragRunning = true;
                requestAnimationFrame(function () {
                  var pos = void 0;
                  if (isMouseControlInverted(_this.props.axis)) {
                    pos =
                      _this.getTrackOffset() -
                      event.touches[0][
                        mainAxisClientOffsetProperty[_this.props.axis]
                      ];
                  } else {
                    pos =
                      event.touches[0][
                        mainAxisClientOffsetProperty[_this.props.axis]
                      ] - _this.getTrackOffset();
                  }
                  _this.onDragUpdate(event, pos);
                  _this.dragRunning = false;
                });
              }),
              (_this.dragEndHandler = function (event) {
                if (document) {
                  document.removeEventListener(
                    'mousemove',
                    _this.dragHandler,
                    false,
                  );
                  document.removeEventListener(
                    'mouseup',
                    _this.dragEndHandler,
                    false,
                  );
                }

                _this.onDragStop(event);
              }),
              (_this.dragTouchEndHandler = function (event) {
                if (document) {
                  document.removeEventListener(
                    'touchmove',
                    _this.dragTouchHandler,
                    false,
                  );
                  document.removeEventListener(
                    'touchup',
                    _this.dragTouchEndHandler,
                    false,
                  );
                  document.removeEventListener(
                    'touchend',
                    _this.dragTouchEndHandler,
                    false,
                  );
                  document.removeEventListener(
                    'touchcancel',
                    _this.dragTouchEndHandler,
                    false,
                  );
                }

                _this.onDragStop(event);
              }),
              (_this.handleTouchStart = function (event) {
                if (!_this.props.disabled && !_this.state.dragging) {
                  var pos = void 0;
                  if (isMouseControlInverted(_this.props.axis)) {
                    pos =
                      _this.getTrackOffset() -
                      event.touches[0][
                        mainAxisClientOffsetProperty[_this.props.axis]
                      ];
                  } else {
                    pos =
                      event.touches[0][
                        mainAxisClientOffsetProperty[_this.props.axis]
                      ] - _this.getTrackOffset();
                  }
                  _this.dragTo(event, pos);

                  // Since the touch event fired for the track and handle is child of
                  // track, we need to manually propagate the event to the handle.
                  _this.onHandleTouchStart(event);
                }
              }),
              (_this.handleFocus = function (event) {
                _this.setState({ focused: true });

                if (_this.props.onFocus) {
                  _this.props.onFocus(event);
                }
              }),
              (_this.handleBlur = function (event) {
                _this.setState({
                  focused: false,
                  active: false,
                });

                if (_this.props.onBlur) {
                  _this.props.onBlur(event);
                }
              }),
              (_this.handleMouseDown = function (event) {
                if (!_this.props.disabled && !_this.state.dragging) {
                  var pos = void 0;
                  if (isMouseControlInverted(_this.props.axis)) {
                    pos =
                      _this.getTrackOffset() -
                      event[mainAxisClientOffsetProperty[_this.props.axis]];
                  } else {
                    pos =
                      event[mainAxisClientOffsetProperty[_this.props.axis]] -
                      _this.getTrackOffset();
                  }
                  _this.dragTo(event, pos);

                  // Since the click event fired for the track and handle is child of
                  // track, we need to manually propagate the event to the handle.
                  _this.onHandleMouseDown(event);
                }
              }),
              (_this.handleMouseUp = function () {
                if (!_this.props.disabled) {
                  _this.setState({ active: false });
                }
              }),
              (_this.handleMouseEnter = function () {
                _this.setState({ hovered: true });
              }),
              (_this.handleMouseLeave = function () {
                _this.setState({ hovered: false });
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Slider, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              var value = this.props.value;
              if (value === undefined) {
                value =
                  this.props.defaultValue !== undefined
                    ? this.props.defaultValue
                    : this.props.min;
              }
              var percent =
                (value - this.props.min) / (this.props.max - this.props.min);
              if (isNaN(percent)) {
                percent = 0;
              }

              this.setState({
                percent: percent,
                value: value,
              });
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (nextProps.value !== undefined && !this.state.dragging) {
                this.setValue(nextProps.value, nextProps.min, nextProps.max);
              }
            },
          },
          {
            key: 'getValue',
            value: function getValue() {
              return this.state.value;
            },
          },
          {
            key: 'setValue',
            value: function setValue(value, min, max) {
              // calculate percentage
              var percent = (value - min) / (max - min);
              if (isNaN(percent)) percent = 0;
              // update state
              this.setState({
                value: value,
                percent: percent,
              });
            },
          },
          {
            key: 'getPercent',
            value: function getPercent() {
              return this.state.percent;
            },
          },
          {
            key: 'setPercent',
            value: function setPercent(percent, callback) {
              var value = this.alignValue(this.percentToValue(percent));
              var _props = this.props;
              var min = _props.min;
              var max = _props.max;

              var alignedPercent = (value - min) / (max - min);
              if (this.state.value !== value) {
                this.setState(
                  { value: value, percent: alignedPercent },
                  callback,
                );
              }
            },
          },
          {
            key: 'clearValue',
            value: function clearValue() {
              this.setValue(this.props.min, this.props.min, this.props.max);
            },
          },
          {
            key: 'alignValue',
            value: function alignValue(val) {
              var _props2 = this.props;
              var step = _props2.step;
              var min = _props2.min;

              var alignValue = Math.round((val - min) / step) * step + min;
              return parseFloat(alignValue.toFixed(5));
            },
          },
          {
            key: 'getTrackOffset',
            value: function getTrackOffset() {
              return this.refs.track.getBoundingClientRect()[
                mainAxisOffsetProperty[this.props.axis]
              ];
            },
          },
          {
            key: 'onDragStart',
            value: function onDragStart(event) {
              this.setState({
                dragging: true,
                active: true,
              });

              if (this.props.onDragStart) {
                this.props.onDragStart(event);
              }
            },
          },
          {
            key: 'onDragStop',
            value: function onDragStop(event) {
              this.setState({
                dragging: false,
                active: false,
              });

              if (this.props.onDragStop) {
                this.props.onDragStop(event);
              }
            },
          },
          {
            key: 'onDragUpdate',
            value: function onDragUpdate(event, pos) {
              if (!this.state.dragging) {
                return;
              }
              if (!this.props.disabled) {
                this.dragTo(event, pos);
              }
            },
          },
          {
            key: 'dragTo',
            value: function dragTo(event, pos) {
              var max = this.refs.track[
                mainAxisClientProperty[this.props.axis]
              ];
              if (pos < 0) {
                pos = 0;
              } else if (pos > max) {
                pos = max;
              }
              this.updateWithChangeEvent(event, pos / max);
            },
          },
          {
            key: 'updateWithChangeEvent',
            value: function updateWithChangeEvent(event, percent) {
              var _this2 = this;

              this.setPercent(percent, function () {
                if (_this2.props.onChange) {
                  _this2.props.onChange(event, _this2.state.value);
                }
              });
            },
          },
          {
            key: 'percentToValue',
            value: function percentToValue(percent) {
              return (
                percent * (this.props.max - this.props.min) + this.props.min
              );
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props3 = this.props;
              var axis = _props3.axis;
              var description = _props3.description;
              var disabled = _props3.disabled;
              var disableFocusRipple = _props3.disableFocusRipple;
              var error = _props3.error;
              var max = _props3.max;
              var min = _props3.min;
              var name = _props3.name;
              var onBlur = _props3.onBlur;
              var onChange = _props3.onChange;
              var onDragStart = _props3.onDragStart;
              var onDragStop = _props3.onDragStop;
              var onFocus = _props3.onFocus;
              var required = _props3.required;
              var sliderStyle = _props3.sliderStyle;
              var step = _props3.step;
              var style = _props3.style;

              var other = _objectWithoutProperties(_props3, [
                'axis',
                'description',
                'disabled',
                'disableFocusRipple',
                'error',
                'max',
                'min',
                'name',
                'onBlur',
                'onChange',
                'onDragStart',
                'onDragStop',
                'onFocus',
                'required',
                'sliderStyle',
                'step',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);

              var handleStyles = {};
              var percent = this.state.percent;
              if (percent > 1) {
                percent = 1;
              } else if (percent < 0) {
                percent = 0;
              }

              if (percent === 0) {
                handleStyles = (0, _simpleAssign2.default)(
                  {},
                  styles.handle,
                  styles.handleWhenPercentZero,
                  this.state.active && styles.handleWhenActive,
                  (this.state.hovered || this.state.focused) &&
                    !disabled &&
                    styles.handleWhenPercentZeroAndFocused,
                  disabled && styles.handleWhenPercentZeroAndDisabled,
                );
              } else {
                handleStyles = (0, _simpleAssign2.default)(
                  {},
                  styles.handle,
                  this.state.active && styles.handleWhenActive,
                  disabled && styles.handleWhenDisabled,
                );
              }

              var rippleStyle = (0, _simpleAssign2.default)(
                {},
                styles.ripple,
                percent === 0 && styles.rippleWhenPercentZero,
              );

              var rippleShowCondition =
                (this.state.hovered || this.state.focused) &&
                !this.state.active;

              var focusRipple = void 0;
              if (!disabled && !disableFocusRipple) {
                focusRipple = _react2.default.createElement(
                  _FocusRipple2.default,
                  {
                    ref: 'focusRipple',
                    key: 'focusRipple',
                    style: rippleStyle,
                    innerStyle: styles.rippleInner,
                    show: rippleShowCondition,
                    muiTheme: this.context.muiTheme,
                    color: styles.rippleColor.fill,
                  },
                );
              }

              var handleDragProps = void 0;
              if (!disabled) {
                handleDragProps = {
                  onTouchStart: this.onHandleTouchStart,
                  onMouseDown: this.onHandleMouseDown,
                  onKeyDown: this.onHandleKeyDown,
                };
              }

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  style: prepareStyles((0, _simpleAssign2.default)({}, style)),
                }),
                _react2.default.createElement('span', null, description),
                _react2.default.createElement('span', null, error),
                _react2.default.createElement(
                  'div',
                  {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(styles.slider, sliderStyle),
                    ),
                    onFocus: this.handleFocus,
                    onBlur: this.handleBlur,
                    onMouseDown: this.handleMouseDown,
                    onMouseEnter: this.handleMouseEnter,
                    onMouseLeave: this.handleMouseLeave,
                    onMouseUp: this.handleMouseUp,
                    onTouchStart: this.handleTouchStart,
                  },
                  _react2.default.createElement(
                    'div',
                    { ref: 'track', style: prepareStyles(styles.track) },
                    _react2.default.createElement('div', {
                      style: prepareStyles(styles.filled),
                    }),
                    _react2.default.createElement('div', {
                      style: prepareStyles(styles.remaining),
                    }),
                    _react2.default.createElement(
                      'div',
                      _extends(
                        {
                          ref: 'handle',
                          style: prepareStyles(handleStyles),
                          tabIndex: 0,
                        },
                        handleDragProps,
                      ),
                      focusRipple,
                    ),
                  ),
                ),
                _react2.default.createElement('input', {
                  ref: 'input',
                  type: 'hidden',
                  name: name,
                  value: this.state.value,
                  required: required,
                  min: min,
                  max: max,
                  step: step,
                }),
              );
            },
          },
        ]);

        return Slider;
      })(_react.Component);

      Slider.propTypes = {
        /**
         * The axis on which the slider will slide.
         */
        axis: _react.PropTypes.oneOf(['x', 'x-reverse', 'y', 'y-reverse']),
        /**
         * The default value of the slider.
         */
        defaultValue: valueInRangePropType,
        /**
         * Describe the slider.
         */
        description: _react.PropTypes.string,
        /**
         * Disables focus ripple if set to true.
         */
        disableFocusRipple: _react.PropTypes.bool,
        /**
         * If true, the slider will not be interactable.
         */
        disabled: _react.PropTypes.bool,
        /**
         * An error message for the slider.
         */
        error: _react.PropTypes.string,
        /**
         * The maximum value the slider can slide to on
         * a scale from 0 to 1 inclusive. Cannot be equal to min.
         */
        max: minMaxPropType,
        /**
         * The minimum value the slider can slide to on a scale
         * from 0 to 1 inclusive. Cannot be equal to max.
         */
        min: minMaxPropType,
        /**
         * The name of the slider. Behaves like the name attribute
         * of an input element.
         */
        name: _react.PropTypes.string,
        /** @ignore */
        onBlur: _react.PropTypes.func,
        /**
         * Callback function that is fired when the user changes the slider's value.
         */
        onChange: _react.PropTypes.func,
        /**
         * Callback function that is fired when the slider has begun to move.
         */
        onDragStart: _react.PropTypes.func,
        /**
         * Callback function that is fired when the slide has stopped moving.
         */
        onDragStop: _react.PropTypes.func,
        /** @ignore */
        onFocus: _react.PropTypes.func,
        /**
         * Whether or not the slider is required in a form.
         */
        required: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the inner slider element.
         */
        sliderStyle: _react.PropTypes.object,
        /**
         * The granularity the slider can step through values.
         */
        step: _react.PropTypes.number,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The value of the slider.
         */
        value: valueInRangePropType,
      };
      Slider.defaultProps = {
        axis: 'x',
        disabled: false,
        disableFocusRipple: false,
        max: 1,
        min: 0,
        required: true,
        step: 0.01,
        style: {},
      };
      Slider.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Slider;

      /***/
    },
    /* 761 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var getStyles = function getStyles(_ref, _ref2) {
        var index = _ref.index;
        var stepper = _ref2.stepper;
        var orientation = stepper.orientation;

        var styles = {
          root: {
            flex: '0 0 auto',
          },
        };

        if (index > 0) {
          if (orientation === 'horizontal') {
            styles.root.marginLeft = -6;
          } else if (orientation === 'vertical') {
            styles.root.marginTop = -14;
          }
        }

        return styles;
      };

      var Step = (function (_Component) {
        _inherits(Step, _Component);

        function Step() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, Step);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    Step,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.renderChild = function (child) {
                var _this$props = _this.props;
                var active = _this$props.active;
                var completed = _this$props.completed;
                var disabled = _this$props.disabled;
                var index = _this$props.index;
                var last = _this$props.last;

                var icon = index + 1;

                return _react2.default.cloneElement(
                  child,
                  (0, _simpleAssign2.default)(
                    {
                      active: active,
                      completed: completed,
                      disabled: disabled,
                      icon: icon,
                      last: last,
                    },
                    child.props,
                  ),
                );
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Step, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var active = _props.active;
              var completed = _props.completed;
              var disabled = _props.disabled;
              var index = _props.index;
              var last = _props.last;
              var children = _props.children;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'active',
                'completed',
                'disabled',
                'index',
                'last',
                'children',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              return _react2.default.createElement(
                'div',
                _extends(
                  {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(styles.root, style),
                    ),
                  },
                  other,
                ),
                _react2.default.Children.map(children, this.renderChild),
              );
            },
          },
        ]);

        return Step;
      })(_react.Component);

      Step.propTypes = {
        /**
         * Sets the step as active. Is passed to child components.
         */
        active: _react.PropTypes.bool,
        /**
         * Should be `Step` sub-components such as `StepLabel`.
         */
        children: _react.PropTypes.node,
        /**
         * Mark the step as completed. Is passed to child components.
         */
        completed: _react.PropTypes.bool,
        /**
         * Mark the step as disabled, will also disable the button if
         * `StepButton` is a child of `Step`. Is passed to child components.
         */
        disabled: _react.PropTypes.bool,
        /**
         * @ignore
         * Used internally for numbering.
         */
        index: _react.PropTypes.number,
        /**
         * @ignore
         */
        last: _react.PropTypes.bool,
        /**
         * Override the inline-style of the root element.
         */
        style: _react.PropTypes.object,
      };
      Step.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
        stepper: _react.PropTypes.object,
      };
      exports.default = Step;

      /***/
    },
    /* 762 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _EnhancedButton = __webpack_require__(544);

      var _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);

      var _StepLabel = __webpack_require__(763);

      var _StepLabel2 = _interopRequireDefault(_StepLabel);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var isLabel = function isLabel(child) {
        return child && child.type && child.type.muiName === 'StepLabel';
      };

      var getStyles = function getStyles(props, context, state) {
        var hovered = state.hovered;
        var _context$muiTheme$ste = context.muiTheme.stepper;
        var backgroundColor = _context$muiTheme$ste.backgroundColor;
        var hoverBackgroundColor = _context$muiTheme$ste.hoverBackgroundColor;

        var styles = {
          root: {
            padding: 0,
            backgroundColor: hovered ? hoverBackgroundColor : backgroundColor,
            transition: _transitions2.default.easeOut(),
          },
        };

        if (context.stepper.orientation === 'vertical') {
          styles.root.width = '100%';
        }

        return styles;
      };

      var StepButton = (function (_Component) {
        _inherits(StepButton, _Component);

        function StepButton() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, StepButton);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    StepButton,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                hovered: false,
                touched: false,
              }),
              (_this.handleMouseEnter = function (event) {
                var onMouseEnter = _this.props.onMouseEnter;
                // Cancel hover styles for touch devices

                if (!_this.state.touched) {
                  _this.setState({ hovered: true });
                }
                if (typeof onMouseEnter === 'function') {
                  onMouseEnter(event);
                }
              }),
              (_this.handleMouseLeave = function (event) {
                var onMouseLeave = _this.props.onMouseLeave;

                _this.setState({ hovered: false });
                if (typeof onMouseLeave === 'function') {
                  onMouseLeave(event);
                }
              }),
              (_this.handleTouchStart = function (event) {
                var onTouchStart = _this.props.onTouchStart;

                if (!_this.state.touched) {
                  _this.setState({ touched: true });
                }
                if (typeof onTouchStart === 'function') {
                  onTouchStart(event);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(StepButton, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var active = _props.active;
              var children = _props.children;
              var completed = _props.completed;
              var disabled = _props.disabled;
              var icon = _props.icon;
              var last = _props.last;
              var onMouseEnter = _props.onMouseEnter;
              var onMouseLeave = _props.onMouseLeave;
              var onTouchStart = _props.onTouchStart;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'active',
                'children',
                'completed',
                'disabled',
                'icon',
                'last',
                'onMouseEnter',
                'onMouseLeave',
                'onTouchStart',
                'style',
              ]);

              var styles = getStyles(this.props, this.context, this.state);

              var child = isLabel(children)
                ? children
                : _react2.default.createElement(
                    _StepLabel2.default,
                    null,
                    children,
                  );

              return _react2.default.createElement(
                _EnhancedButton2.default,
                _extends(
                  {
                    disabled: disabled,
                    style: (0, _simpleAssign2.default)(styles.root, style),
                    onMouseEnter: this.handleMouseEnter,
                    onMouseLeave: this.handleMouseLeave,
                    onTouchStart: this.handleTouchStart,
                  },
                  other,
                ),
                _react2.default.cloneElement(child, {
                  active: active,
                  completed: completed,
                  disabled: disabled,
                  icon: icon,
                }),
              );
            },
          },
        ]);

        return StepButton;
      })(_react.Component);

      StepButton.propTypes = {
        /**
         * Passed from `Step` Is passed to StepLabel.
         */
        active: _react.PropTypes.bool,
        /**
         * Can be a `StepLabel` or a node to place inside `StepLabel` as children.
         */
        children: _react.PropTypes.node,
        /**
         * Sets completed styling. Is passed to StepLabel.
         */
        completed: _react.PropTypes.bool,
        /**
         * Disables the button and sets disabled styling. Is passed to StepLabel.
         */
        disabled: _react.PropTypes.bool,
        /**
         * The icon displayed by the step label.
         */
        icon: _react.PropTypes.oneOfType([
          _react.PropTypes.element,
          _react.PropTypes.string,
          _react.PropTypes.number,
        ]),
        /** @ignore */
        last: _react.PropTypes.bool,
        /** @ignore */
        onMouseEnter: _react.PropTypes.func,
        /** @ignore */
        onMouseLeave: _react.PropTypes.func,
        /** @ignore */
        onTouchStart: _react.PropTypes.func,
        /**
         * Override the inline-style of the root element.
         */
        style: _react.PropTypes.object,
      };
      StepButton.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
        stepper: _react.PropTypes.object,
      };
      exports.default = StepButton;

      /***/
    },
    /* 763 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function (obj) {
              return typeof obj;
            }
          : function (obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol
                ? 'symbol'
                : typeof obj;
            };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _checkCircle = __webpack_require__(764);

      var _checkCircle2 = _interopRequireDefault(_checkCircle);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var getStyles = function getStyles(_ref, _ref2) {
        var active = _ref.active;
        var completed = _ref.completed;
        var disabled = _ref.disabled;
        var muiTheme = _ref2.muiTheme;
        var stepper = _ref2.stepper;
        var _muiTheme$stepper = muiTheme.stepper;
        var textColor = _muiTheme$stepper.textColor;
        var disabledTextColor = _muiTheme$stepper.disabledTextColor;
        var iconColor = _muiTheme$stepper.iconColor;
        var inactiveIconColor = _muiTheme$stepper.inactiveIconColor;
        var orientation = stepper.orientation;

        var styles = {
          root: {
            height: orientation === 'horizontal' ? 72 : 64,
            color: textColor,
            display: 'flex',
            alignItems: 'center',
            fontSize: 14,
            paddingLeft: 14,
            paddingRight: 14,
          },
          icon: {
            color: iconColor,
            display: 'block',
            fontSize: 24,
            width: 24,
            height: 24,
          },
          iconContainer: {
            display: 'flex',
            alignItems: 'center',
            paddingRight: 8,
            width: 24,
          },
        };

        if (active) {
          styles.root.fontWeight = 500;
        }

        if (!completed && !active) {
          styles.icon.color = inactiveIconColor;
        }

        if (disabled) {
          styles.icon.color = inactiveIconColor;
          styles.root.color = disabledTextColor;
          styles.root.cursor = 'not-allowed';
        }

        return styles;
      };

      var StepLabel = (function (_Component) {
        _inherits(StepLabel, _Component);

        function StepLabel() {
          _classCallCheck(this, StepLabel);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(StepLabel).apply(this, arguments),
          );
        }

        _createClass(StepLabel, [
          {
            key: 'renderIcon',
            value: function renderIcon(completed, icon, styles) {
              var iconType =
                typeof icon === 'undefined' ? 'undefined' : _typeof(icon);

              if (iconType === 'number' || iconType === 'string') {
                if (completed) {
                  return _react2.default.createElement(_checkCircle2.default, {
                    color: styles.icon.color,
                    style: styles.icon,
                  });
                }

                return _react2.default.createElement(
                  _SvgIcon2.default,
                  { color: styles.icon.color, style: styles.icon },
                  _react2.default.createElement('circle', {
                    cx: '12',
                    cy: '12',
                    r: '10',
                  }),
                  _react2.default.createElement(
                    'text',
                    {
                      x: '12',
                      y: '16',
                      textAnchor: 'middle',
                      fontSize: '12',
                      fill: '#fff',
                    },
                    icon,
                  ),
                );
              }

              return icon;
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var active = _props.active;
              var children = _props.children;
              var completed = _props.completed;
              var userIcon = _props.icon;
              var last = _props.last;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'active',
                'children',
                'completed',
                'icon',
                'last',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);
              var icon = this.renderIcon(completed, userIcon, styles);

              return _react2.default.createElement(
                'span',
                _extends(
                  {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(styles.root, style),
                    ),
                  },
                  other,
                ),
                icon &&
                  _react2.default.createElement(
                    'span',
                    { style: prepareStyles(styles.iconContainer) },
                    icon,
                  ),
                children,
              );
            },
          },
        ]);

        return StepLabel;
      })(_react.Component);

      StepLabel.muiName = 'StepLabel';
      StepLabel.propTypes = {
        /**
         * Sets active styling. Overrides disabled coloring.
         */
        active: _react.PropTypes.bool,
        /**
         * The label text node
         */
        children: _react.PropTypes.node,
        /**
         * Sets completed styling. Overrides disabled coloring.
         */
        completed: _react.PropTypes.bool,
        /**
         * Sets disabled styling.
         */
        disabled: _react.PropTypes.bool,
        /**
         * The icon displayed by the step label.
         */
        icon: _react.PropTypes.oneOfType([
          _react.PropTypes.element,
          _react.PropTypes.string,
          _react.PropTypes.number,
        ]),
        /**
         * @ignore
         */
        last: _react.PropTypes.bool,
        /**
         * Override the inline-style of the root element.
         */
        style: _react.PropTypes.object,
      };
      StepLabel.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
        stepper: _react.PropTypes.object,
      };
      exports.default = StepLabel;

      /***/
    },
    /* 764 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      var _SvgIcon = __webpack_require__(575);

      var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var ActionCheckCircle = function ActionCheckCircle(props) {
        return _react2.default.createElement(
          _SvgIcon2.default,
          props,
          _react2.default.createElement('path', {
            d:
              'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z',
          }),
        );
      };
      ActionCheckCircle = (0, _pure2.default)(ActionCheckCircle);
      ActionCheckCircle.displayName = 'ActionCheckCircle';
      ActionCheckCircle.muiName = 'SvgIcon';

      exports.default = ActionCheckCircle;

      /***/
    },
    /* 765 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _ExpandTransition = __webpack_require__(766);

      var _ExpandTransition2 = _interopRequireDefault(_ExpandTransition);

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function ExpandTransition(props) {
        return _react2.default.createElement(_ExpandTransition2.default, props);
      }

      var getStyles = function getStyles(props, context) {
        var styles = {
          root: {
            marginTop: -14,
            marginLeft: 14 + 11, // padding + 1/2 icon
            paddingLeft: 24 - 11 + 8,
            paddingRight: 16,
            overflow: 'hidden',
          },
        };

        if (!props.last) {
          styles.root.borderLeft =
            '1px solid ' + context.muiTheme.stepper.connectorLineColor;
        }

        return styles;
      };

      var StepContent = (function (_Component) {
        _inherits(StepContent, _Component);

        function StepContent() {
          _classCallCheck(this, StepContent);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(StepContent).apply(this, arguments),
          );
        }

        _createClass(StepContent, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var active = _props.active;
              var children = _props.children;
              var completed = _props.completed;
              var last = _props.last;
              var style = _props.style;
              var transition = _props.transition;
              var transitionDuration = _props.transitionDuration;

              var other = _objectWithoutProperties(_props, [
                'active',
                'children',
                'completed',
                'last',
                'style',
                'transition',
                'transitionDuration',
              ]);

              var _context = this.context;
              var stepper = _context.stepper;
              var prepareStyles = _context.muiTheme.prepareStyles;

              if (stepper.orientation !== 'vertical') {
                true
                  ? (0, _warning2.default)(
                      false,
                      '<StepContent /> is only designed for use with the vertical stepper.',
                    )
                  : void 0;
                return null;
              }

              var styles = getStyles(this.props, this.context);
              var transitionProps = {
                enterDelay: transitionDuration,
                transitionDuration: transitionDuration,
                open: active,
              };

              return _react2.default.createElement(
                'div',
                _extends(
                  {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(styles.root, style),
                    ),
                  },
                  other,
                ),
                _react2.default.createElement(
                  transition,
                  transitionProps,
                  _react2.default.createElement(
                    'div',
                    { style: { overflow: 'hidden' } },
                    children,
                  ),
                ),
              );
            },
          },
        ]);

        return StepContent;
      })(_react.Component);

      StepContent.propTypes = {
        /**
         * Expands the content
         */
        active: _react.PropTypes.bool,
        /**
         * Step content
         */
        children: _react.PropTypes.node,
        /**
         * @ignore
         */
        completed: _react.PropTypes.bool,
        /**
         * @ignore
         */
        last: _react.PropTypes.bool,
        /**
         * Override the inline-style of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * ReactTransitionGroup component.
         */
        transition: _react.PropTypes.func,
        /**
         * Adjust the duration of the content expand transition. Passed as a prop to the transition component.
         */
        transitionDuration: _react.PropTypes.number,
      };
      StepContent.defaultProps = {
        transition: ExpandTransition,
        transitionDuration: 450,
      };
      StepContent.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
        stepper: _react.PropTypes.object,
      };
      exports.default = StepContent;

      /***/
    },
    /* 766 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactAddonsTransitionGroup = __webpack_require__(554);

      var _reactAddonsTransitionGroup2 = _interopRequireDefault(
        _reactAddonsTransitionGroup,
      );

      var _ExpandTransitionChild = __webpack_require__(767);

      var _ExpandTransitionChild2 = _interopRequireDefault(
        _ExpandTransitionChild,
      );

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ExpandTransition = (function (_Component) {
        _inherits(ExpandTransition, _Component);

        function ExpandTransition() {
          _classCallCheck(this, ExpandTransition);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(ExpandTransition).apply(this, arguments),
          );
        }

        _createClass(ExpandTransition, [
          {
            key: 'renderChildren',
            value: function renderChildren(children) {
              var _props = this.props;
              var enterDelay = _props.enterDelay;
              var transitionDelay = _props.transitionDelay;
              var transitionDuration = _props.transitionDuration;

              return _react2.default.Children.map(
                children,
                function (child) {
                  return _react2.default.createElement(
                    _ExpandTransitionChild2.default,
                    {
                      enterDelay: enterDelay,
                      transitionDelay: transitionDelay,
                      transitionDuration: transitionDuration,
                      key: child.key,
                    },
                    child,
                  );
                },
                this,
              );
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props2 = this.props;
              var children = _props2.children;
              var enterDelay = _props2.enterDelay;
              var loading = _props2.loading;
              var open = _props2.open;
              var style = _props2.style;
              var transitionDelay = _props2.transitionDelay;
              var transitionDuration = _props2.transitionDuration;

              var other = _objectWithoutProperties(_props2, [
                'children',
                'enterDelay',
                'loading',
                'open',
                'style',
                'transitionDelay',
                'transitionDuration',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var mergedRootStyles = (0, _simpleAssign2.default)(
                {},
                {
                  position: 'relative',
                  overflow: 'hidden',
                  height: '100%',
                },
                style,
              );

              var newChildren = loading ? [] : this.renderChildren(children);

              return _react2.default.createElement(
                _reactAddonsTransitionGroup2.default,
                _extends(
                  {
                    style: prepareStyles(mergedRootStyles),
                    component: 'div',
                  },
                  other,
                ),
                open && newChildren,
              );
            },
          },
        ]);

        return ExpandTransition;
      })(_react.Component);

      ExpandTransition.propTypes = {
        children: _react.PropTypes.node,
        enterDelay: _react.PropTypes.number,
        loading: _react.PropTypes.bool,
        open: _react.PropTypes.bool,
        style: _react.PropTypes.object,
        transitionDelay: _react.PropTypes.number,
        transitionDuration: _react.PropTypes.number,
      };
      ExpandTransition.defaultProps = {
        enterDelay: 0,
        transitionDelay: 0,
        transitionDuration: 450,
        loading: false,
        open: false,
      };
      ExpandTransition.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = ExpandTransition;

      /***/
    },
    /* 767 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var reflow = function reflow(elem) {
        return elem.offsetHeight;
      };

      var ExpandTransitionChild = (function (_Component) {
        _inherits(ExpandTransitionChild, _Component);

        function ExpandTransitionChild() {
          _classCallCheck(this, ExpandTransitionChild);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(ExpandTransitionChild).apply(this, arguments),
          );
        }

        _createClass(ExpandTransitionChild, [
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              clearTimeout(this.enterTimer);
              clearTimeout(this.enteredTimer);
              clearTimeout(this.leaveTimer);
            },
          },
          {
            key: 'componentWillAppear',
            value: function componentWillAppear(callback) {
              this.open();
              callback();
            },
          },
          {
            key: 'componentDidAppear',
            value: function componentDidAppear() {
              this.setAutoHeight();
            },
          },
          {
            key: 'componentWillEnter',
            value: function componentWillEnter(callback) {
              var _this2 = this;

              var _props = this.props;
              var enterDelay = _props.enterDelay;
              var transitionDelay = _props.transitionDelay;
              var transitionDuration = _props.transitionDuration;

              var element = _reactDom2.default.findDOMNode(this);
              element.style.height = 0;
              this.enterTimer = setTimeout(function () {
                return _this2.open();
              }, enterDelay);
              this.enteredTimer = setTimeout(function () {
                return callback();
              }, enterDelay + transitionDelay + transitionDuration);
            },
          },
          {
            key: 'componentDidEnter',
            value: function componentDidEnter() {
              this.setAutoHeight();
            },
          },
          {
            key: 'componentWillLeave',
            value: function componentWillLeave(callback) {
              var _props2 = this.props;
              var transitionDelay = _props2.transitionDelay;
              var transitionDuration = _props2.transitionDuration;

              var element = _reactDom2.default.findDOMNode(this);
              // Set fixed height first for animated property value
              element.style.height = this.refs.wrapper.clientHeight + 'px';
              reflow(element);
              element.style.transitionDuration = transitionDuration + 'ms';
              element.style.height = 0;
              this.leaveTimer = setTimeout(function () {
                return callback();
              }, transitionDelay + transitionDuration);
            },
          },
          {
            key: 'setAutoHeight',
            value: function setAutoHeight() {
              var _ReactDOM$findDOMNode = _reactDom2.default.findDOMNode(this);

              var style = _ReactDOM$findDOMNode.style;

              style.transitionDuration = 0;
              style.height = 'auto';
            },
          },
          {
            key: 'open',
            value: function open() {
              var element = _reactDom2.default.findDOMNode(this);
              element.style.height = this.refs.wrapper.clientHeight + 'px';
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props3 = this.props;
              var children = _props3.children;
              var enterDelay = _props3.enterDelay;
              var style = _props3.style;
              var transitionDelay = _props3.transitionDelay;
              var transitionDuration = _props3.transitionDuration;

              var other = _objectWithoutProperties(_props3, [
                'children',
                'enterDelay',
                'style',
                'transitionDelay',
                'transitionDuration',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var mergedRootStyles = (0, _simpleAssign2.default)(
                {
                  position: 'relative',
                  height: 0,
                  width: '100%',
                  top: 0,
                  left: 0,
                  overflow: 'hidden',
                  transition: _transitions2.default.easeOut(
                    transitionDuration + 'ms',
                    ['height'],
                    transitionDelay + 'ms',
                  ),
                },
                style,
              );

              return _react2.default.createElement(
                'div',
                _extends({}, other, { style: prepareStyles(mergedRootStyles) }),
                _react2.default.createElement(
                  'div',
                  { ref: 'wrapper' },
                  children,
                ),
              );
            },
          },
        ]);

        return ExpandTransitionChild;
      })(_react.Component);

      ExpandTransitionChild.propTypes = {
        children: _react.PropTypes.node,
        enterDelay: _react.PropTypes.number,
        style: _react.PropTypes.object,
        transitionDelay: _react.PropTypes.number,
        transitionDuration: _react.PropTypes.number,
      };
      ExpandTransitionChild.defaultProps = {
        enterDelay: 0,
        transitionDelay: 0,
        transitionDuration: 450,
      };
      ExpandTransitionChild.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = ExpandTransitionChild;

      /***/
    },
    /* 768 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _StepConnector = __webpack_require__(769);

      var _StepConnector2 = _interopRequireDefault(_StepConnector);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var getStyles = function getStyles(props) {
        var orientation = props.orientation;

        return {
          root: {
            display: 'flex',
            flexDirection: orientation === 'horizontal' ? 'row' : 'column',
            alignContent: 'center',
            alignItems: orientation === 'horizontal' ? 'center' : 'stretch',
            justifyContent: 'space-between',
          },
        };
      };

      var Stepper = (function (_Component) {
        _inherits(Stepper, _Component);

        function Stepper() {
          _classCallCheck(this, Stepper);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(Stepper).apply(this, arguments),
          );
        }

        _createClass(Stepper, [
          {
            key: 'getChildContext',
            value: function getChildContext() {
              var orientation = this.props.orientation;

              return { stepper: { orientation: orientation } };
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var activeStep = _props.activeStep;
              var children = _props.children;
              var linear = _props.linear;
              var style = _props.style;
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              /**
               * One day, we may be able to use real CSS tools
               * For now, we need to create our own "pseudo" elements
               * and nth child selectors, etc
               * That's what some of this garbage is for :)
               */
              var steps = _react2.default.Children.map(children, function (
                step,
                index,
              ) {
                var controlProps = { index: index };

                if (activeStep === index) {
                  controlProps.active = true;
                } else if (linear && activeStep > index) {
                  controlProps.completed = true;
                } else if (linear && activeStep < index) {
                  controlProps.disabled = true;
                }

                if (index + 1 === children.length) {
                  controlProps.last = true;
                }

                return [
                  index > 0 &&
                    _react2.default.createElement(
                      _StepConnector2.default,
                      null,
                    ),
                  _react2.default.cloneElement(
                    step,
                    (0, _simpleAssign2.default)(controlProps, step.props),
                  ),
                ];
              });

              return _react2.default.createElement(
                'div',
                {
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(styles.root, style),
                  ),
                },
                steps,
              );
            },
          },
        ]);

        return Stepper;
      })(_react.Component);

      Stepper.propTypes = {
        /**
         * Set the active step (zero based index). This will enable `Step` control helpers.
         */
        activeStep: _react.PropTypes.number,
        /**
         * Should be two or more `<Step />` components
         */
        children: _react.PropTypes.arrayOf(_react.PropTypes.element),
        /**
         * If set to `true`, the `Stepper` will assist in controlling steps for linear flow
         */
        linear: _react.PropTypes.bool,
        /**
         * The stepper orientation (layout flow direction)
         */
        orientation: _react.PropTypes.oneOf(['horizontal', 'vertical']),
        /**
         * Override the inline-style of the root element.
         */
        style: _react.PropTypes.object,
      };
      Stepper.defaultProps = {
        orientation: 'horizontal',
        linear: true,
      };
      Stepper.contextTypes = { muiTheme: _react.PropTypes.object.isRequired };
      Stepper.childContextTypes = { stepper: _react.PropTypes.object };
      exports.default = Stepper;

      /***/
    },
    /* 769 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.PlainStepConnector = undefined;

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _pure = __webpack_require__(566);

      var _pure2 = _interopRequireDefault(_pure);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var propTypes = {
        /**
         * Override the inline-style of the root element.
         */
        style: _react.PropTypes.object,
      };

      var contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
        stepper: _react.PropTypes.object,
      };

      var StepConnector = function StepConnector(props, context) {
        var muiTheme = context.muiTheme;
        var stepper = context.stepper;

        var styles = {
          wrapper: {
            flex: '1 1 auto',
          },
          line: {
            display: 'block',
            borderColor: muiTheme.stepper.connectorLineColor,
          },
        };

        /**
         * Clean up once we can use CSS pseudo elements
         */
        if (stepper.orientation === 'horizontal') {
          styles.line.marginLeft = -6;
          styles.line.borderTopStyle = 'solid';
          styles.line.borderTopWidth = 1;
        } else if (stepper.orientation === 'vertical') {
          styles.wrapper.marginLeft = 14 + 11; // padding + 1/2 icon
          styles.line.borderLeftStyle = 'solid';
          styles.line.borderLeftWidth = 1;
          styles.line.minHeight = 28;
        }

        var prepareStyles = muiTheme.prepareStyles;

        return _react2.default.createElement(
          'div',
          { style: prepareStyles(styles.wrapper) },
          _react2.default.createElement('span', {
            style: prepareStyles(styles.line),
          }),
        );
      };

      StepConnector.propTypes = propTypes;
      StepConnector.contextTypes = contextTypes;

      exports.PlainStepConnector = StepConnector;
      exports.default = (0, _pure2.default)(StepConnector);

      /***/
    },
    /* 770 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _Snackbar = __webpack_require__(771);

      var _Snackbar2 = _interopRequireDefault(_Snackbar);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _Snackbar2.default;

      /***/
    },
    /* 771 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _ClickAwayListener = __webpack_require__(591);

      var _ClickAwayListener2 = _interopRequireDefault(_ClickAwayListener);

      var _SnackbarBody = __webpack_require__(772);

      var _SnackbarBody2 = _interopRequireDefault(_SnackbarBody);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context, state) {
        var _context$muiTheme = context.muiTheme;
        var desktopSubheaderHeight =
          _context$muiTheme.baseTheme.spacing.desktopSubheaderHeight;
        var zIndex = _context$muiTheme.zIndex;
        var open = state.open;

        var styles = {
          root: {
            position: 'fixed',
            left: 0,
            display: 'flex',
            right: 0,
            bottom: 0,
            zIndex: zIndex.snackbar,
            visibility: open ? 'visible' : 'hidden',
            transform: open
              ? 'translate(0, 0)'
              : 'translate(0, ' + desktopSubheaderHeight + 'px)',
            transition:
              _transitions2.default.easeOut('400ms', 'transform') +
              ', ' +
              _transitions2.default.easeOut('400ms', 'visibility'),
          },
        };

        return styles;
      }

      var Snackbar = (function (_Component) {
        _inherits(Snackbar, _Component);

        function Snackbar() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, Snackbar);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    Snackbar,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.componentClickAway = function () {
                if (_this.timerTransitionId) {
                  // If transitioning, don't close the snackbar.
                  return;
                }

                if (_this.props.open !== null && _this.props.onRequestClose) {
                  _this.props.onRequestClose('clickaway');
                } else {
                  _this.setState({ open: false });
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Snackbar, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              this.setState({
                open: this.props.open,
                message: this.props.message,
                action: this.props.action,
              });
            },
          },
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              if (this.state.open) {
                this.setAutoHideTimer();
                this.setTransitionTimer();
              }
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              var _this2 = this;

              if (
                this.props.open &&
                nextProps.open &&
                (nextProps.message !== this.props.message ||
                  nextProps.action !== this.props.action)
              ) {
                this.setState({
                  open: false,
                });

                clearTimeout(this.timerOneAtTheTimeId);
                this.timerOneAtTheTimeId = setTimeout(function () {
                  _this2.setState({
                    message: nextProps.message,
                    action: nextProps.action,
                    open: true,
                  });
                }, 400);
              } else {
                var open = nextProps.open;

                this.setState({
                  open: open !== null ? open : this.state.open,
                  message: nextProps.message,
                  action: nextProps.action,
                });
              }
            },
          },
          {
            key: 'componentDidUpdate',
            value: function componentDidUpdate(prevProps, prevState) {
              if (prevState.open !== this.state.open) {
                if (this.state.open) {
                  this.setAutoHideTimer();
                  this.setTransitionTimer();
                } else {
                  clearTimeout(this.timerAutoHideId);
                }
              }
            },
          },
          {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              clearTimeout(this.timerAutoHideId);
              clearTimeout(this.timerTransitionId);
              clearTimeout(this.timerOneAtTheTimeId);
            },
          },
          {
            key: 'setAutoHideTimer',

            // Timer that controls delay before snackbar auto hides
            value: function setAutoHideTimer() {
              var _this3 = this;

              var autoHideDuration = this.props.autoHideDuration;

              if (autoHideDuration > 0) {
                clearTimeout(this.timerAutoHideId);
                this.timerAutoHideId = setTimeout(function () {
                  if (
                    _this3.props.open !== null &&
                    _this3.props.onRequestClose
                  ) {
                    _this3.props.onRequestClose('timeout');
                  } else {
                    _this3.setState({ open: false });
                  }
                }, autoHideDuration);
              }
            },

            // Timer that controls delay before click-away events are captured (based on when animation completes)
          },
          {
            key: 'setTransitionTimer',
            value: function setTransitionTimer() {
              var _this4 = this;

              this.timerTransitionId = setTimeout(function () {
                _this4.timerTransitionId = undefined;
              }, 400);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var autoHideDuration = _props.autoHideDuration;
              var messageProp = _props.message;
              var onRequestClose = _props.onRequestClose;
              var onActionTouchTap = _props.onActionTouchTap;
              var style = _props.style;
              var bodyStyle = _props.bodyStyle;

              var other = _objectWithoutProperties(_props, [
                'autoHideDuration',
                'message',
                'onRequestClose',
                'onActionTouchTap',
                'style',
                'bodyStyle',
              ]);

              var _state = this.state;
              var action = _state.action;
              var message = _state.message;
              var open = _state.open;
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);

              return _react2.default.createElement(
                _ClickAwayListener2.default,
                { onClickAway: open && this.componentClickAway },
                _react2.default.createElement(
                  'div',
                  _extends({}, other, {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(styles.root, style),
                    ),
                  }),
                  _react2.default.createElement(_SnackbarBody2.default, {
                    open: open,
                    message: message,
                    action: action,
                    style: bodyStyle,
                    onActionTouchTap: onActionTouchTap,
                  }),
                ),
              );
            },
          },
        ]);

        return Snackbar;
      })(_react.Component);

      Snackbar.propTypes = {
        /**
         * The label for the action on the snackbar.
         */
        action: _react.PropTypes.node,
        /**
         * The number of milliseconds to wait before automatically dismissing.
         * If no value is specified the snackbar will dismiss normally.
         * If a value is provided the snackbar can still be dismissed normally.
         * If a snackbar is dismissed before the timer expires, the timer will be cleared.
         */
        autoHideDuration: _react.PropTypes.number,
        /**
         * Override the inline-styles of the body element.
         */
        bodyStyle: _react.PropTypes.object,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * The message to be displayed.
         *
         * (Note: If the message is an element or array, and the `Snackbar` may re-render while it is still open,
         * ensure that the same object remains as the `message` property if you want to avoid the `Snackbar` hiding and
         * showing again)
         */
        message: _react.PropTypes.node.isRequired,
        /**
         * Fired when the action button is touchtapped.
         *
         * @param {object} event Action button event.
         */
        onActionTouchTap: _react.PropTypes.func,
        /**
         * Fired when the `Snackbar` is requested to be closed by a click outside the `Snackbar`, or after the
         * `autoHideDuration` timer expires.
         *
         * Typically `onRequestClose` is used to set state in the parent component, which is used to control the `Snackbar`
         * `open` prop.
         *
         * The `reason` parameter can optionally be used to control the response to `onRequestClose`,
         * for example ignoring `clickaway`.
         *
         * @param {string} reason Can be:`"timeout"` (`autoHideDuration` expired) or: `"clickaway"`
         */
        onRequestClose: _react.PropTypes.func,
        /**
         * Controls whether the `Snackbar` is opened or not.
         */
        open: _react.PropTypes.bool.isRequired,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      Snackbar.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Snackbar;

      /***/
    },
    /* 772 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.SnackbarBody = undefined;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _withWidth = __webpack_require__(773);

      var _withWidth2 = _interopRequireDefault(_withWidth);

      var _FlatButton = __webpack_require__(641);

      var _FlatButton2 = _interopRequireDefault(_FlatButton);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function getStyles(props, context) {
        var open = props.open;
        var width = props.width;
        var _context$muiTheme = context.muiTheme;
        var _context$muiTheme$bas = _context$muiTheme.baseTheme;
        var _context$muiTheme$bas2 = _context$muiTheme$bas.spacing;
        var desktopGutter = _context$muiTheme$bas2.desktopGutter;
        var desktopSubheaderHeight =
          _context$muiTheme$bas2.desktopSubheaderHeight;
        var fontFamily = _context$muiTheme$bas.fontFamily;
        var _context$muiTheme$sna = _context$muiTheme.snackbar;
        var backgroundColor = _context$muiTheme$sna.backgroundColor;
        var textColor = _context$muiTheme$sna.textColor;
        var actionColor = _context$muiTheme$sna.actionColor;

        var isSmall = width === _withWidth.SMALL;

        var styles = {
          root: {
            fontFamily: fontFamily,
            backgroundColor: backgroundColor,
            padding: '0 ' + desktopGutter + 'px',
            height: desktopSubheaderHeight,
            lineHeight: desktopSubheaderHeight + 'px',
            borderRadius: isSmall ? 0 : 2,
            maxWidth: isSmall ? 'inherit' : 568,
            minWidth: isSmall ? 'inherit' : 288,
            flexGrow: isSmall ? 1 : 0,
            margin: 'auto',
          },
          content: {
            fontSize: 14,
            color: textColor,
            opacity: open ? 1 : 0,
            transition: open
              ? _transitions2.default.easeOut('500ms', 'opacity', '100ms')
              : _transitions2.default.easeOut('400ms', 'opacity'),
          },
          action: {
            color: actionColor,
            float: 'right',
            marginTop: 6,
            marginRight: -16,
            marginLeft: desktopGutter,
            backgroundColor: 'transparent',
          },
        };

        return styles;
      }

      var SnackbarBody = (exports.SnackbarBody = function SnackbarBody(
        props,
        context,
      ) {
        var open = props.open;
        var action = props.action;
        var message = props.message;
        var onActionTouchTap = props.onActionTouchTap;
        var style = props.style;

        var other = _objectWithoutProperties(props, [
          'open',
          'action',
          'message',
          'onActionTouchTap',
          'style',
        ]);

        var prepareStyles = context.muiTheme.prepareStyles;

        var styles = getStyles(props, context);

        var actionButton =
          action &&
          _react2.default.createElement(_FlatButton2.default, {
            style: styles.action,
            label: action,
            onTouchTap: onActionTouchTap,
          });

        return _react2.default.createElement(
          'div',
          _extends({}, other, {
            style: prepareStyles(
              (0, _simpleAssign2.default)(styles.root, style),
            ),
          }),
          _react2.default.createElement(
            'div',
            { style: prepareStyles(styles.content) },
            _react2.default.createElement('span', null, message),
            actionButton,
          ),
        );
      });

      SnackbarBody.propTypes = {
        /**
         * The label for the action on the snackbar.
         */
        action: _react.PropTypes.node,
        /**
         * The message to be displayed.
         *
         * (Note: If the message is an element or array, and the `Snackbar` may re-render while it is still open,
         * ensure that the same object remains as the `message` property if you want to avoid the `Snackbar` hiding and
         * showing again)
         */
        message: _react.PropTypes.node.isRequired,
        /**
         * Fired when the action button is touchtapped.
         *
         * @param {object} event Action button event.
         */
        onActionTouchTap: _react.PropTypes.func,
        /**
         * @ignore
         * Controls whether the `Snackbar` is opened or not.
         */
        open: _react.PropTypes.bool.isRequired,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * @ignore
         * Width of the screen.
         */
        width: _react.PropTypes.number.isRequired,
      };

      SnackbarBody.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };

      exports.default = (0, _withWidth2.default)()(SnackbarBody);

      /***/
    },
    /* 773 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.LARGE = exports.MEDIUM = exports.SMALL = undefined;

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      exports.default = withWidth;

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactEventListener = __webpack_require__(585);

      var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var SMALL = (exports.SMALL = 1);
      var MEDIUM = (exports.MEDIUM = 2);
      var LARGE = (exports.LARGE = 3);

      function withWidth() {
        var options =
          arguments.length <= 0 || arguments[0] === undefined
            ? {}
            : arguments[0];
        var _options$largeWidth = options.largeWidth;
        var largeWidth =
          _options$largeWidth === undefined ? 992 : _options$largeWidth;
        var _options$mediumWidth = options.mediumWidth;
        var mediumWidth =
          _options$mediumWidth === undefined ? 768 : _options$mediumWidth;
        var _options$resizeInterv = options.resizeInterval;
        var resizeInterval =
          _options$resizeInterv === undefined ? 166 : _options$resizeInterv;

        return function (MyComponent) {
          return (function (_Component) {
            _inherits(WithWidth, _Component);

            function WithWidth() {
              var _Object$getPrototypeO;

              var _temp, _this, _ret;

              _classCallCheck(this, WithWidth);

              for (
                var _len = arguments.length, args = Array(_len), _key = 0;
                _key < _len;
                _key++
              ) {
                args[_key] = arguments[_key];
              }

              return (
                (_ret =
                  ((_temp =
                    ((_this = _possibleConstructorReturn(
                      this,
                      (_Object$getPrototypeO = Object.getPrototypeOf(
                        WithWidth,
                      )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                    )),
                    _this)),
                  (_this.state = {
                    /**
                     * For the server side rendering,
                     * let's set the width for the slower environment.
                     */
                    width: SMALL,
                  }),
                  (_this.handleResize = function () {
                    clearTimeout(_this.deferTimer);
                    _this.deferTimer = setTimeout(function () {
                      _this.updateWidth();
                    }, resizeInterval);
                  }),
                  _temp)),
                _possibleConstructorReturn(_this, _ret)
              );
            }

            _createClass(WithWidth, [
              {
                key: 'componentDidMount',
                value: function componentDidMount() {
                  this.updateWidth();
                },
              },
              {
                key: 'componentWillUnmount',
                value: function componentWillUnmount() {
                  clearTimeout(this.deferTimer);
                },
              },
              {
                key: 'updateWidth',
                value: function updateWidth() {
                  var innerWidth = window.innerWidth;
                  var width = void 0;

                  if (innerWidth >= largeWidth) {
                    width = LARGE;
                  } else if (innerWidth >= mediumWidth) {
                    width = MEDIUM;
                  } else {
                    // innerWidth < 768
                    width = SMALL;
                  }

                  if (width !== this.state.width) {
                    this.setState({
                      width: width,
                    });
                  }
                },
              },
              {
                key: 'render',
                value: function render() {
                  return _react2.default.createElement(
                    _reactEventListener2.default,
                    { target: 'window', onResize: this.handleResize },
                    _react2.default.createElement(
                      MyComponent,
                      _extends({}, this.props, {
                        width: this.state.width,
                      }),
                    ),
                  );
                },
              },
            ]);

            return WithWidth;
          })(_react.Component);
        };
      }

      /***/
    },
    /* 774 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = exports.Tabs = exports.Tab = undefined;

      var _Tab2 = __webpack_require__(775);

      var _Tab3 = _interopRequireDefault(_Tab2);

      var _Tabs2 = __webpack_require__(776);

      var _Tabs3 = _interopRequireDefault(_Tabs2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.Tab = _Tab3.default;
      exports.Tabs = _Tabs3.default;
      exports.default = _Tabs3.default;

      /***/
    },
    /* 775 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _EnhancedButton = __webpack_require__(544);

      var _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var tabs = context.muiTheme.tabs;

        return {
          root: {
            color: props.selected ? tabs.selectedTextColor : tabs.textColor,
            fontWeight: 500,
            fontSize: 14,
            width: props.width,
            textTransform: 'uppercase',
            padding: 0,
          },
          button: {
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
            justifyContent: 'center',
            height: props.label && props.icon ? 72 : 48,
          },
        };
      }

      var Tab = (function (_Component) {
        _inherits(Tab, _Component);

        function Tab() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, Tab);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    Tab,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.handleTouchTap = function (event) {
                if (_this.props.onTouchTap) {
                  _this.props.onTouchTap(_this.props.value, event, _this);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Tab, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var icon = _props.icon;
              var index = _props.index;
              var onActive = _props.onActive;
              var onTouchTap = _props.onTouchTap;
              var selected = _props.selected;
              var label = _props.label;
              var style = _props.style;
              var value = _props.value;
              var width = _props.width;

              var other = _objectWithoutProperties(_props, [
                'icon',
                'index',
                'onActive',
                'onTouchTap',
                'selected',
                'label',
                'style',
                'value',
                'width',
              ]);

              var styles = getStyles(this.props, this.context);

              var iconElement = void 0;
              if (icon && _react2.default.isValidElement(icon)) {
                var iconProps = {
                  style: {
                    fontSize: 24,
                    color: styles.root.color,
                    marginBottom: label ? 5 : 0,
                  },
                };
                // If it's svg icon set color via props
                if (icon.type.muiName !== 'FontIcon') {
                  iconProps.color = styles.root.color;
                }
                iconElement = _react2.default.cloneElement(icon, iconProps);
              }

              var rippleOpacity = 0.3;
              var rippleColor = this.context.muiTheme.tabs.selectedTextColor;

              return _react2.default.createElement(
                _EnhancedButton2.default,
                _extends({}, other, {
                  style: (0, _simpleAssign2.default)(styles.root, style),
                  focusRippleColor: rippleColor,
                  touchRippleColor: rippleColor,
                  focusRippleOpacity: rippleOpacity,
                  touchRippleOpacity: rippleOpacity,
                  onTouchTap: this.handleTouchTap,
                }),
                _react2.default.createElement(
                  'div',
                  { style: styles.button },
                  iconElement,
                  label,
                ),
              );
            },
          },
        ]);

        return Tab;
      })(_react.Component);

      Tab.muiName = 'Tab';
      Tab.propTypes = {
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * Sets the icon of the tab, you can pass `FontIcon` or `SvgIcon` elements.
         */
        icon: _react.PropTypes.node,
        /**
         * @ignore
         */
        index: _react.PropTypes.any,
        /**
         * Sets the text value of the tab item to the string specified.
         */
        label: _react.PropTypes.node,
        /**
         * Fired when the active tab changes by touch or tap.
         * Use this event to specify any functionality when an active tab changes.
         * For example - we are using this to route to home when the third tab becomes active.
         * This function will always recieve the active tab as it\'s first argument.
         */
        onActive: _react.PropTypes.func,
        /**
         * @ignore
         * This property is overriden by the Tabs component.
         */
        onTouchTap: _react.PropTypes.func,
        /**
         * @ignore
         * Defines if the current tab is selected or not.
         * The Tabs component is responsible for setting this property.
         */
        selected: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * If value prop passed to Tabs component, this value prop is also required.
         * It assigns a value to the tab so that it can be selected by the Tabs.
         */
        value: _react.PropTypes.any,
        /**
         * @ignore
         * This property is overriden by the Tabs component.
         */
        width: _react.PropTypes.string,
      };
      Tab.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Tab;

      /***/
    },
    /* 776 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _TabTemplate = __webpack_require__(777);

      var _TabTemplate2 = _interopRequireDefault(_TabTemplate);

      var _InkBar = __webpack_require__(778);

      var _InkBar2 = _interopRequireDefault(_InkBar);

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var tabs = context.muiTheme.tabs;

        return {
          tabItemContainer: {
            width: '100%',
            backgroundColor: tabs.backgroundColor,
            whiteSpace: 'nowrap',
          },
        };
      }

      var Tabs = (function (_Component) {
        _inherits(Tabs, _Component);

        function Tabs() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, Tabs);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    Tabs,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = { selectedIndex: 0 }),
              (_this.handleTabTouchTap = function (value, event, tab) {
                var valueLink = _this.getValueLink(_this.props);
                var index = tab.props.index;

                if (
                  (valueLink.value && valueLink.value !== value) ||
                  _this.state.selectedIndex !== index
                ) {
                  valueLink.requestChange(value, event, tab);
                }

                _this.setState({ selectedIndex: index });

                if (tab.props.onActive) {
                  tab.props.onActive(tab);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Tabs, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              var valueLink = this.getValueLink(this.props);
              var initialIndex = this.props.initialSelectedIndex;

              this.setState({
                selectedIndex:
                  valueLink.value !== undefined
                    ? this.getSelectedIndex(this.props)
                    : initialIndex < this.getTabCount()
                    ? initialIndex
                    : 0,
              });
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(newProps, nextContext) {
              var valueLink = this.getValueLink(newProps);
              var newState = {
                muiTheme: nextContext.muiTheme || this.context.muiTheme,
              };

              if (valueLink.value !== undefined) {
                newState.selectedIndex = this.getSelectedIndex(newProps);
              }

              this.setState(newState);
            },
          },
          {
            key: 'getEvenWidth',
            value: function getEvenWidth() {
              return parseInt(
                window
                  .getComputedStyle(_reactDom2.default.findDOMNode(this))
                  .getPropertyValue('width'),
                10,
              );
            },
          },
          {
            key: 'getTabs',
            value: function getTabs() {
              var tabs = [];
              _react2.default.Children.forEach(this.props.children, function (
                tab,
              ) {
                if (_react2.default.isValidElement(tab)) {
                  tabs.push(tab);
                }
              });
              return tabs;
            },
          },
          {
            key: 'getTabCount',
            value: function getTabCount() {
              return this.getTabs().length;
            },

            // Do not use outside of this component, it will be removed once valueLink is deprecated
          },
          {
            key: 'getValueLink',
            value: function getValueLink(props) {
              return (
                props.valueLink || {
                  value: props.value,
                  requestChange: props.onChange,
                }
              );
            },
          },
          {
            key: 'getSelectedIndex',
            value: function getSelectedIndex(props) {
              var valueLink = this.getValueLink(props);
              var selectedIndex = -1;

              this.getTabs().forEach(function (tab, index) {
                if (valueLink.value === tab.props.value) {
                  selectedIndex = index;
                }
              });

              return selectedIndex;
            },
          },
          {
            key: 'getSelected',
            value: function getSelected(tab, index) {
              var valueLink = this.getValueLink(this.props);
              return valueLink.value
                ? valueLink.value === tab.props.value
                : this.state.selectedIndex === index;
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              var _props = this.props;
              var contentContainerClassName = _props.contentContainerClassName;
              var contentContainerStyle = _props.contentContainerStyle;
              var initialSelectedIndex = _props.initialSelectedIndex;
              var inkBarStyle = _props.inkBarStyle;
              var style = _props.style;
              var tabItemContainerStyle = _props.tabItemContainerStyle;
              var tabTemplate = _props.tabTemplate;

              var other = _objectWithoutProperties(_props, [
                'contentContainerClassName',
                'contentContainerStyle',
                'initialSelectedIndex',
                'inkBarStyle',
                'style',
                'tabItemContainerStyle',
                'tabTemplate',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);
              var valueLink = this.getValueLink(this.props);
              var tabValue = valueLink.value;
              var tabContent = [];
              var width = 100 / this.getTabCount();

              var tabs = this.getTabs().map(function (tab, index) {
                true
                  ? (0, _warning2.default)(
                      tab.type && tab.type.muiName === 'Tab',
                      'Tabs only accepts Tab Components as children.\n        Found ' +
                        (tab.type.muiName || tab.type) +
                        ' as child number ' +
                        (index + 1) +
                        ' of Tabs',
                    )
                  : void 0;

                true
                  ? (0, _warning2.default)(
                      !tabValue || tab.props.value !== undefined,
                      'Tabs value prop has been passed, but Tab ' +
                        index +
                        '\n        does not have a value prop. Needs value if Tabs is going\n        to be a controlled component.',
                    )
                  : void 0;

                tabContent.push(
                  tab.props.children
                    ? _react2.default.createElement(
                        tabTemplate || _TabTemplate2.default,
                        {
                          key: index,
                          selected: _this2.getSelected(tab, index),
                        },
                        tab.props.children,
                      )
                    : undefined,
                );

                return _react2.default.cloneElement(tab, {
                  key: index,
                  index: index,
                  selected: _this2.getSelected(tab, index),
                  width: width + '%',
                  onTouchTap: _this2.handleTabTouchTap,
                });
              });

              var inkBar =
                this.state.selectedIndex !== -1
                  ? _react2.default.createElement(_InkBar2.default, {
                      left: width * this.state.selectedIndex + '%',
                      width: width + '%',
                      style: inkBarStyle,
                    })
                  : null;

              var inkBarContainerWidth = tabItemContainerStyle
                ? tabItemContainerStyle.width
                : '100%';

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  style: prepareStyles((0, _simpleAssign2.default)({}, style)),
                }),
                _react2.default.createElement(
                  'div',
                  {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(
                        styles.tabItemContainer,
                        tabItemContainerStyle,
                      ),
                    ),
                  },
                  tabs,
                ),
                _react2.default.createElement(
                  'div',
                  { style: { width: inkBarContainerWidth } },
                  inkBar,
                ),
                _react2.default.createElement(
                  'div',
                  {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)({}, contentContainerStyle),
                    ),
                    className: contentContainerClassName,
                  },
                  tabContent,
                ),
              );
            },
          },
        ]);

        return Tabs;
      })(_react.Component);

      Tabs.propTypes = {
        /**
         * Should be used to pass `Tab` components.
         */
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * The css class name of the content's container.
         */
        contentContainerClassName: _react.PropTypes.string,
        /**
         * Override the inline-styles of the content's container.
         */
        contentContainerStyle: _react.PropTypes.object,
        /**
         * Specify initial visible tab index.
         * If `initialSelectedIndex` is set but larger than the total amount of specified tabs,
         * `initialSelectedIndex` will revert back to default.
         * If `initialSlectedIndex` is set to any negative value, no tab will be selected intially.
         */
        initialSelectedIndex: _react.PropTypes.number,
        /**
         * Override the inline-styles of the InkBar.
         */
        inkBarStyle: _react.PropTypes.object,
        /**
         * Called when the selected value change.
         */
        onChange: _react.PropTypes.func,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * Override the inline-styles of the tab-labels container.
         */
        tabItemContainerStyle: _react.PropTypes.object,
        /**
         * Override the default tab template used to wrap the content of each tab element.
         */
        tabTemplate: _react.PropTypes.func,
        /**
         * Makes Tabs controllable and selects the tab whose value prop matches this prop.
         */
        value: _react.PropTypes.any,
      };
      Tabs.defaultProps = {
        initialSelectedIndex: 0,
        onChange: function onChange() {},
      };
      Tabs.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Tabs;

      /***/
    },
    /* 777 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var TabTemplate = (function (_Component) {
        _inherits(TabTemplate, _Component);

        function TabTemplate() {
          _classCallCheck(this, TabTemplate);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(TabTemplate).apply(this, arguments),
          );
        }

        _createClass(TabTemplate, [
          {
            key: 'render',
            value: function render() {
              var styles = {
                width: '100%',
                position: 'relative',
                textAlign: 'initial',
              };

              if (!this.props.selected) {
                styles.height = 0;
                styles.overflow = 'hidden';
              }

              return _react2.default.createElement(
                'div',
                { style: styles },
                this.props.children,
              );
            },
          },
        ]);

        return TabTemplate;
      })(_react.Component);

      TabTemplate.propTypes = {
        children: _react.PropTypes.node,
        selected: _react.PropTypes.bool,
      };
      exports.default = TabTemplate;

      /***/
    },
    /* 778 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var inkBar = context.muiTheme.inkBar;

        return {
          root: {
            left: props.left,
            width: props.width,
            bottom: 0,
            display: 'block',
            backgroundColor: props.color || inkBar.backgroundColor,
            height: 2,
            marginTop: -2,
            position: 'relative',
            transition: _transitions2.default.easeOut('1s', 'left'),
          },
        };
      }

      var InkBar = (function (_Component) {
        _inherits(InkBar, _Component);

        function InkBar() {
          _classCallCheck(this, InkBar);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(InkBar).apply(this, arguments),
          );
        }

        _createClass(InkBar, [
          {
            key: 'render',
            value: function render() {
              var style = this.props.style;
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              return _react2.default.createElement('div', {
                style: prepareStyles(
                  (0, _simpleAssign2.default)(styles.root, style),
                ),
              });
            },
          },
        ]);

        return InkBar;
      })(_react.Component);

      InkBar.propTypes = {
        color: _react.PropTypes.string,
        left: _react.PropTypes.string.isRequired,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        width: _react.PropTypes.string.isRequired,
      };
      InkBar.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = InkBar;

      /***/
    },
    /* 779 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = exports.TableRowColumn = exports.TableRow = exports.TableHeaderColumn = exports.TableHeader = exports.TableFooter = exports.TableBody = exports.Table = undefined;

      var _Table2 = __webpack_require__(780);

      var _Table3 = _interopRequireDefault(_Table2);

      var _TableBody2 = __webpack_require__(781);

      var _TableBody3 = _interopRequireDefault(_TableBody2);

      var _TableFooter2 = __webpack_require__(783);

      var _TableFooter3 = _interopRequireDefault(_TableFooter2);

      var _TableHeader2 = __webpack_require__(784);

      var _TableHeader3 = _interopRequireDefault(_TableHeader2);

      var _TableHeaderColumn2 = __webpack_require__(785);

      var _TableHeaderColumn3 = _interopRequireDefault(_TableHeaderColumn2);

      var _TableRow2 = __webpack_require__(786);

      var _TableRow3 = _interopRequireDefault(_TableRow2);

      var _TableRowColumn2 = __webpack_require__(782);

      var _TableRowColumn3 = _interopRequireDefault(_TableRowColumn2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.Table = _Table3.default;
      exports.TableBody = _TableBody3.default;
      exports.TableFooter = _TableFooter3.default;
      exports.TableHeader = _TableHeader3.default;
      exports.TableHeaderColumn = _TableHeaderColumn3.default;
      exports.TableRow = _TableRow3.default;
      exports.TableRowColumn = _TableRowColumn3.default;
      exports.default = _Table3.default;

      /***/
    },
    /* 780 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var _context$muiTheme = context.muiTheme;
        var baseTheme = _context$muiTheme.baseTheme;
        var table = _context$muiTheme.table;

        return {
          root: {
            backgroundColor: table.backgroundColor,
            padding: '0 ' + baseTheme.spacing.desktopGutter + 'px',
            width: '100%',
            borderCollapse: 'collapse',
            borderSpacing: 0,
            tableLayout: 'fixed',
            fontFamily: baseTheme.fontFamily,
          },
          bodyTable: {
            height:
              props.fixedHeader || props.fixedFooter ? props.height : 'auto',
            overflowX: 'hidden',
            overflowY: 'auto',
          },
          tableWrapper: {
            height:
              props.fixedHeader || props.fixedFooter ? 'auto' : props.height,
            overflow: 'auto',
          },
        };
      }

      var Table = (function (_Component) {
        _inherits(Table, _Component);

        function Table() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, Table);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    Table,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                allRowsSelected: false,
              }),
              (_this.onCellClick = function (rowNumber, columnNumber, event) {
                if (_this.props.onCellClick)
                  _this.props.onCellClick(rowNumber, columnNumber, event);
              }),
              (_this.onCellHover = function (rowNumber, columnNumber, event) {
                if (_this.props.onCellHover)
                  _this.props.onCellHover(rowNumber, columnNumber, event);
              }),
              (_this.onCellHoverExit = function (
                rowNumber,
                columnNumber,
                event,
              ) {
                if (_this.props.onCellHoverExit)
                  _this.props.onCellHoverExit(rowNumber, columnNumber, event);
              }),
              (_this.onRowHover = function (rowNumber) {
                if (_this.props.onRowHover) _this.props.onRowHover(rowNumber);
              }),
              (_this.onRowHoverExit = function (rowNumber) {
                if (_this.props.onRowHoverExit)
                  _this.props.onRowHoverExit(rowNumber);
              }),
              (_this.onRowSelection = function (selectedRows) {
                if (_this.state.allRowsSelected)
                  _this.setState({ allRowsSelected: false });
                if (_this.props.onRowSelection)
                  _this.props.onRowSelection(selectedRows);
              }),
              (_this.onSelectAll = function () {
                if (_this.props.onRowSelection) {
                  if (!_this.state.allRowsSelected) {
                    _this.props.onRowSelection('all');
                  } else {
                    _this.props.onRowSelection('none');
                  }
                }

                _this.setState({
                  allRowsSelected: !_this.state.allRowsSelected,
                });
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Table, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              if (this.props.allRowsSelected) {
                this.setState({ allRowsSelected: true });
              }
            },
          },
          {
            key: 'isScrollbarVisible',
            value: function isScrollbarVisible() {
              var tableDivHeight = this.refs.tableDiv.clientHeight;
              var tableBodyHeight = this.refs.tableBody.clientHeight;

              return tableBodyHeight > tableDivHeight;
            },
          },
          {
            key: 'createTableHeader',
            value: function createTableHeader(base) {
              return _react2.default.cloneElement(base, {
                enableSelectAll:
                  base.props.enableSelectAll &&
                  this.props.selectable &&
                  this.props.multiSelectable,
                onSelectAll: this.onSelectAll,
                selectAllSelected: this.state.allRowsSelected,
              });
            },
          },
          {
            key: 'createTableBody',
            value: function createTableBody(base) {
              return _react2.default.cloneElement(base, {
                allRowsSelected: this.state.allRowsSelected,
                multiSelectable: this.props.multiSelectable,
                onCellClick: this.onCellClick,
                onCellHover: this.onCellHover,
                onCellHoverExit: this.onCellHoverExit,
                onRowHover: this.onRowHover,
                onRowHoverExit: this.onRowHoverExit,
                onRowSelection: this.onRowSelection,
                selectable: this.props.selectable,
                style: (0, _simpleAssign2.default)(
                  { height: this.props.height },
                  base.props.style,
                ),
              });
            },
          },
          {
            key: 'createTableFooter',
            value: function createTableFooter(base) {
              return base;
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              var _props = this.props;
              var children = _props.children;
              var className = _props.className;
              var fixedFooter = _props.fixedFooter;
              var fixedHeader = _props.fixedHeader;
              var style = _props.style;
              var wrapperStyle = _props.wrapperStyle;
              var headerStyle = _props.headerStyle;
              var bodyStyle = _props.bodyStyle;
              var footerStyle = _props.footerStyle;
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              var tHead = void 0;
              var tFoot = void 0;
              var tBody = void 0;

              _react2.default.Children.forEach(children, function (child) {
                if (!_react2.default.isValidElement(child)) return;

                var muiName = child.type.muiName;

                if (muiName === 'TableBody') {
                  tBody = _this2.createTableBody(child);
                } else if (muiName === 'TableHeader') {
                  tHead = _this2.createTableHeader(child);
                } else if (muiName === 'TableFooter') {
                  tFoot = _this2.createTableFooter(child);
                }
              });

              // If we could not find a table-header and a table-body, do not attempt to display anything.
              if (!tBody && !tHead) return null;

              var mergedTableStyle = (0, _simpleAssign2.default)(
                styles.root,
                style,
              );
              var headerTable = void 0;
              var footerTable = void 0;
              var inlineHeader = void 0;
              var inlineFooter = void 0;

              if (fixedHeader) {
                headerTable = _react2.default.createElement(
                  'div',
                  {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)({}, headerStyle),
                    ),
                  },
                  _react2.default.createElement(
                    'table',
                    { className: className, style: mergedTableStyle },
                    tHead,
                  ),
                );
              } else {
                inlineHeader = tHead;
              }

              if (tFoot !== undefined) {
                if (fixedFooter) {
                  footerTable = _react2.default.createElement(
                    'div',
                    {
                      style: prepareStyles(
                        (0, _simpleAssign2.default)({}, footerStyle),
                      ),
                    },
                    _react2.default.createElement(
                      'table',
                      {
                        className: className,
                        style: prepareStyles(mergedTableStyle),
                      },
                      tFoot,
                    ),
                  );
                } else {
                  inlineFooter = tFoot;
                }
              }

              return _react2.default.createElement(
                'div',
                {
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(
                      styles.tableWrapper,
                      wrapperStyle,
                    ),
                  ),
                },
                headerTable,
                _react2.default.createElement(
                  'div',
                  {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(styles.bodyTable, bodyStyle),
                    ),
                    ref: 'tableDiv',
                  },
                  _react2.default.createElement(
                    'table',
                    {
                      className: className,
                      style: mergedTableStyle,
                      ref: 'tableBody',
                    },
                    inlineHeader,
                    inlineFooter,
                    tBody,
                  ),
                ),
                footerTable,
              );
            },
          },
        ]);

        return Table;
      })(_react.Component);

      Table.propTypes = {
        /**
         * Set to true to indicate that all rows should be selected.
         */
        allRowsSelected: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the body's table element.
         */
        bodyStyle: _react.PropTypes.object,
        /**
         * Children passed to table.
         */
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * If true, the footer will appear fixed below the table.
         * The default value is true.
         */
        fixedFooter: _react.PropTypes.bool,
        /**
         * If true, the header will appear fixed above the table.
         * The default value is true.
         */
        fixedHeader: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the footer's table element.
         */
        footerStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of the header's table element.
         */
        headerStyle: _react.PropTypes.object,
        /**
         * The height of the table.
         */
        height: _react.PropTypes.string,
        /**
         * If true, multiple table rows can be selected.
         * CTRL/CMD+Click and SHIFT+Click are valid actions.
         * The default value is false.
         */
        multiSelectable: _react.PropTypes.bool,
        /**
         * Called when a row cell is clicked.
         * rowNumber is the row number and columnId is
         * the column number or the column key.
         */
        onCellClick: _react.PropTypes.func,
        /**
         * Called when a table cell is hovered.
         * rowNumber is the row number of the hovered row
         * and columnId is the column number or the column key of the cell.
         */
        onCellHover: _react.PropTypes.func,
        /**
         * Called when a table cell is no longer hovered.
         * rowNumber is the row number of the row and columnId
         * is the column number or the column key of the cell.
         */
        onCellHoverExit: _react.PropTypes.func,
        /**
         * Called when a table row is hovered.
         * rowNumber is the row number of the hovered row.
         */
        onRowHover: _react.PropTypes.func,
        /**
         * Called when a table row is no longer hovered.
         * rowNumber is the row number of the row that is no longer hovered.
         */
        onRowHoverExit: _react.PropTypes.func,
        /**
         * Called when a row is selected.
         * selectedRows is an array of all row selections.
         * IF all rows have been selected, the string "all"
         * will be returned instead to indicate that all rows have been selected.
         */
        onRowSelection: _react.PropTypes.func,
        /**
         * If true, table rows can be selected.
         * If multiple row selection is desired, enable multiSelectable.
         * The default value is true.
         */
        selectable: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * Override the inline-styles of the table's wrapper element.
         */
        wrapperStyle: _react.PropTypes.object,
      };
      Table.defaultProps = {
        allRowsSelected: false,
        fixedFooter: true,
        fixedHeader: true,
        height: 'inherit',
        multiSelectable: false,
        selectable: true,
      };
      Table.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Table;

      /***/
    },
    /* 781 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _typeof =
        typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
          ? function (obj) {
              return typeof obj;
            }
          : function (obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol
                ? 'symbol'
                : typeof obj;
            };

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _Checkbox = __webpack_require__(625);

      var _Checkbox2 = _interopRequireDefault(_Checkbox);

      var _TableRowColumn = __webpack_require__(782);

      var _TableRowColumn2 = _interopRequireDefault(_TableRowColumn);

      var _ClickAwayListener = __webpack_require__(591);

      var _ClickAwayListener2 = _interopRequireDefault(_ClickAwayListener);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _toConsumableArray(arr) {
        if (Array.isArray(arr)) {
          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
            arr2[i] = arr[i];
          }
          return arr2;
        } else {
          return Array.from(arr);
        }
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var TableBody = (function (_Component) {
        _inherits(TableBody, _Component);

        function TableBody() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, TableBody);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    TableBody,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                selectedRows: [],
              }),
              (_this.handleClickAway = function () {
                if (
                  _this.props.deselectOnClickaway &&
                  _this.state.selectedRows.length
                ) {
                  _this.setState({
                    selectedRows: [],
                  });
                  if (_this.props.onRowSelection) {
                    _this.props.onRowSelection([]);
                  }
                }
              }),
              (_this.onRowClick = function (event, rowNumber) {
                event.stopPropagation();

                if (_this.props.selectable) {
                  // Prevent text selection while selecting rows.
                  window.getSelection().removeAllRanges();
                  _this.processRowSelection(event, rowNumber);
                }
              }),
              (_this.onCellClick = function (event, rowNumber, columnNumber) {
                event.stopPropagation();
                if (_this.props.onCellClick) {
                  _this.props.onCellClick(
                    rowNumber,
                    _this.getColumnId(columnNumber),
                    event,
                  );
                }
              }),
              (_this.onCellHover = function (event, rowNumber, columnNumber) {
                if (_this.props.onCellHover) {
                  _this.props.onCellHover(
                    rowNumber,
                    _this.getColumnId(columnNumber),
                    event,
                  );
                }
                _this.onRowHover(event, rowNumber);
              }),
              (_this.onCellHoverExit = function (
                event,
                rowNumber,
                columnNumber,
              ) {
                if (_this.props.onCellHoverExit) {
                  _this.props.onCellHoverExit(
                    rowNumber,
                    _this.getColumnId(columnNumber),
                    event,
                  );
                }
                _this.onRowHoverExit(event, rowNumber);
              }),
              (_this.onRowHover = function (event, rowNumber) {
                if (_this.props.onRowHover) {
                  _this.props.onRowHover(rowNumber);
                }
              }),
              (_this.onRowHoverExit = function (event, rowNumber) {
                if (_this.props.onRowHoverExit) {
                  _this.props.onRowHoverExit(rowNumber);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(TableBody, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              this.setState({
                selectedRows: this.calculatePreselectedRows(this.props),
              });
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (this.props.allRowsSelected && !nextProps.allRowsSelected) {
                this.setState({
                  selectedRows:
                    this.state.selectedRows.length > 0
                      ? [
                          this.state.selectedRows[
                            this.state.selectedRows.length - 1
                          ],
                        ]
                      : [],
                });
                // TODO: should else be conditional, not run any time props other than allRowsSelected change?
              } else {
                this.setState({
                  selectedRows: this.calculatePreselectedRows(nextProps),
                });
              }
            },
          },
          {
            key: 'createRows',
            value: function createRows() {
              var _this2 = this;

              var numChildren = _react2.default.Children.count(
                this.props.children,
              );
              var rowNumber = 0;
              var handlers = {
                onCellClick: this.onCellClick,
                onCellHover: this.onCellHover,
                onCellHoverExit: this.onCellHoverExit,
                onRowHover: this.onRowHover,
                onRowHoverExit: this.onRowHoverExit,
                onRowClick: this.onRowClick,
              };

              return _react2.default.Children.map(
                this.props.children,
                function (child) {
                  if (_react2.default.isValidElement(child)) {
                    var _ret2 = (function () {
                      var props = {
                        hoverable: _this2.props.showRowHover,
                        selected: _this2.isRowSelected(rowNumber),
                        striped:
                          _this2.props.stripedRows && rowNumber % 2 === 0,
                        rowNumber: rowNumber++,
                      };

                      if (rowNumber === numChildren) {
                        props.displayBorder = false;
                      }

                      var children = [_this2.createRowCheckboxColumn(props)];

                      _react2.default.Children.forEach(
                        child.props.children,
                        function (child) {
                          children.push(child);
                        },
                      );

                      return {
                        v: _react2.default.cloneElement(
                          child,
                          _extends({}, props, handlers),
                          children,
                        ),
                      };
                    })();

                    if (
                      (typeof _ret2 === 'undefined'
                        ? 'undefined'
                        : _typeof(_ret2)) === 'object'
                    )
                      return _ret2.v;
                  }
                },
              );
            },
          },
          {
            key: 'createRowCheckboxColumn',
            value: function createRowCheckboxColumn(rowProps) {
              if (!this.props.displayRowCheckbox) {
                return null;
              }

              var key = rowProps.rowNumber + '-cb';
              var disabled = !this.props.selectable;
              var checkbox = _react2.default.createElement(_Checkbox2.default, {
                ref: 'rowSelectCB',
                name: key,
                value: 'selected',
                disabled: disabled,
                checked: rowProps.selected,
              });

              return _react2.default.createElement(
                _TableRowColumn2.default,
                {
                  key: key,
                  columnNumber: 0,
                  style: {
                    width: 24,
                    cursor: disabled ? 'not-allowed' : 'inherit',
                  },
                },
                checkbox,
              );
            },
          },
          {
            key: 'calculatePreselectedRows',
            value: function calculatePreselectedRows(props) {
              // Determine what rows are 'pre-selected'.
              var preSelectedRows = [];

              if (props.selectable && props.preScanRows) {
                (function () {
                  var index = 0;
                  _react2.default.Children.forEach(props.children, function (
                    child,
                  ) {
                    if (_react2.default.isValidElement(child)) {
                      if (
                        child.props.selected &&
                        (preSelectedRows.length === 0 || props.multiSelectable)
                      ) {
                        preSelectedRows.push(index);
                      }

                      index++;
                    }
                  });
                })();
              }

              return preSelectedRows;
            },
          },
          {
            key: 'isRowSelected',
            value: function isRowSelected(rowNumber) {
              if (this.props.allRowsSelected) {
                return true;
              }

              for (var i = 0; i < this.state.selectedRows.length; i++) {
                var selection = this.state.selectedRows[i];

                if (
                  (typeof selection === 'undefined'
                    ? 'undefined'
                    : _typeof(selection)) === 'object'
                ) {
                  if (this.isValueInRange(rowNumber, selection)) return true;
                } else {
                  if (selection === rowNumber) return true;
                }
              }

              return false;
            },
          },
          {
            key: 'isValueInRange',
            value: function isValueInRange(value, range) {
              if (!range) return false;

              if (
                (range.start <= value && value <= range.end) ||
                (range.end <= value && value <= range.start)
              ) {
                return true;
              }

              return false;
            },
          },
          {
            key: 'processRowSelection',
            value: function processRowSelection(event, rowNumber) {
              var selectedRows = this.state.selectedRows;

              if (
                event.shiftKey &&
                this.props.multiSelectable &&
                selectedRows.length
              ) {
                var lastIndex = selectedRows.length - 1;
                var lastSelection = selectedRows[lastIndex];

                if (
                  (typeof lastSelection === 'undefined'
                    ? 'undefined'
                    : _typeof(lastSelection)) === 'object'
                ) {
                  lastSelection.end = rowNumber;
                } else {
                  selectedRows.splice(lastIndex, 1, {
                    start: lastSelection,
                    end: rowNumber,
                  });
                }
              } else if (
                ((event.ctrlKey && !event.metaKey) ||
                  (event.metaKey && !event.ctrlKey)) &&
                this.props.multiSelectable
              ) {
                var idx = selectedRows.indexOf(rowNumber);
                if (idx < 0) {
                  var foundRange = false;
                  for (var i = 0; i < selectedRows.length; i++) {
                    var range = selectedRows[i];
                    if (
                      (typeof range === 'undefined'
                        ? 'undefined'
                        : _typeof(range)) !== 'object'
                    )
                      continue;

                    if (this.isValueInRange(rowNumber, range)) {
                      var _selectedRows;

                      foundRange = true;
                      var values = this.splitRange(range, rowNumber);
                      (_selectedRows = selectedRows).splice.apply(
                        _selectedRows,
                        [i, 1].concat(_toConsumableArray(values)),
                      );
                    }
                  }

                  if (!foundRange) selectedRows.push(rowNumber);
                } else {
                  selectedRows.splice(idx, 1);
                }
              } else {
                if (
                  selectedRows.length === 1 &&
                  selectedRows[0] === rowNumber
                ) {
                  selectedRows = [];
                } else {
                  selectedRows = [rowNumber];
                }
              }

              this.setState({ selectedRows: selectedRows });
              if (this.props.onRowSelection)
                this.props.onRowSelection(this.flattenRanges(selectedRows));
            },
          },
          {
            key: 'splitRange',
            value: function splitRange(range, splitPoint) {
              var splitValues = [];
              var startOffset = range.start - splitPoint;
              var endOffset = range.end - splitPoint;

              // Process start half
              splitValues.push.apply(
                splitValues,
                _toConsumableArray(
                  this.genRangeOfValues(splitPoint, startOffset),
                ),
              );

              // Process end half
              splitValues.push.apply(
                splitValues,
                _toConsumableArray(
                  this.genRangeOfValues(splitPoint, endOffset),
                ),
              );

              return splitValues;
            },
          },
          {
            key: 'genRangeOfValues',
            value: function genRangeOfValues(start, offset) {
              var values = [];
              var dir = offset > 0 ? -1 : 1; // This forces offset to approach 0 from either direction.
              while (offset !== 0) {
                values.push(start + offset);
                offset += dir;
              }

              return values;
            },
          },
          {
            key: 'flattenRanges',
            value: function flattenRanges(selectedRows) {
              var rows = [];
              var _iteratorNormalCompletion = true;
              var _didIteratorError = false;
              var _iteratorError = undefined;

              try {
                for (
                  var _iterator = selectedRows[Symbol.iterator](), _step;
                  !(_iteratorNormalCompletion = (_step = _iterator.next())
                    .done);
                  _iteratorNormalCompletion = true
                ) {
                  var selection = _step.value;

                  if (
                    (typeof selection === 'undefined'
                      ? 'undefined'
                      : _typeof(selection)) === 'object'
                  ) {
                    var values = this.genRangeOfValues(
                      selection.end,
                      selection.start - selection.end,
                    );
                    rows.push.apply(
                      rows,
                      [selection.end].concat(_toConsumableArray(values)),
                    );
                  } else {
                    rows.push(selection);
                  }
                }
              } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion && _iterator.return) {
                    _iterator.return();
                  }
                } finally {
                  if (_didIteratorError) {
                    throw _iteratorError;
                  }
                }
              }

              return rows.sort();
            },
          },
          {
            key: 'getColumnId',
            value: function getColumnId(columnNumber) {
              var columnId = columnNumber;
              if (this.props.displayRowCheckbox) {
                columnId--;
              }

              return columnId;
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var className = _props.className;
              var style = _props.style;
              var prepareStyles = this.context.muiTheme.prepareStyles;

              return _react2.default.createElement(
                _ClickAwayListener2.default,
                { onClickAway: this.handleClickAway },
                _react2.default.createElement(
                  'tbody',
                  {
                    className: className,
                    style: prepareStyles(
                      (0, _simpleAssign2.default)({}, style),
                    ),
                  },
                  this.createRows(),
                ),
              );
            },
          },
        ]);

        return TableBody;
      })(_react.Component);

      TableBody.muiName = 'TableBody';
      TableBody.propTypes = {
        /**
         * @ignore
         * Set to true to indicate that all rows should be selected.
         */
        allRowsSelected: _react.PropTypes.bool,
        /**
         * Children passed to table body.
         */
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * Controls whether or not to deselect all selected
         * rows after clicking outside the table.
         */
        deselectOnClickaway: _react.PropTypes.bool,
        /**
         * Controls the display of the row checkbox. The default value is true.
         */
        displayRowCheckbox: _react.PropTypes.bool,
        /**
         * @ignore
         * If true, multiple table rows can be selected.
         * CTRL/CMD+Click and SHIFT+Click are valid actions.
         * The default value is false.
         */
        multiSelectable: _react.PropTypes.bool,
        /**
         * @ignore
         * Callback function for when a cell is clicked.
         */
        onCellClick: _react.PropTypes.func,
        /**
         * @ignore
         * Called when a table cell is hovered. rowNumber
         * is the row number of the hovered row and columnId
         * is the column number or the column key of the cell.
         */
        onCellHover: _react.PropTypes.func,
        /**
         * @ignore
         * Called when a table cell is no longer hovered.
         * rowNumber is the row number of the row and columnId
         * is the column number or the column key of the cell.
         */
        onCellHoverExit: _react.PropTypes.func,
        /**
         * @ignore
         * Called when a table row is hovered.
         * rowNumber is the row number of the hovered row.
         */
        onRowHover: _react.PropTypes.func,
        /**
         * @ignore
         * Called when a table row is no longer
         * hovered. rowNumber is the row number of the row
         * that is no longer hovered.
         */
        onRowHoverExit: _react.PropTypes.func,
        /**
         * @ignore
         * Called when a row is selected. selectedRows is an
         * array of all row selections. IF all rows have been selected,
         * the string "all" will be returned instead to indicate that
         * all rows have been selected.
         */
        onRowSelection: _react.PropTypes.func,
        /**
         * Controls whether or not the rows are pre-scanned to determine
         * initial state. If your table has a large number of rows and
         * you are experiencing a delay in rendering, turn off this property.
         */
        preScanRows: _react.PropTypes.bool,
        /**
         * @ignore
         * If true, table rows can be selected. If multiple
         * row selection is desired, enable multiSelectable.
         * The default value is true.
         */
        selectable: _react.PropTypes.bool,
        /**
         * If true, table rows will be highlighted when
         * the cursor is hovering over the row. The default
         * value is false.
         */
        showRowHover: _react.PropTypes.bool,
        /**
         * If true, every other table row starting
         * with the first row will be striped. The default value is false.
         */
        stripedRows: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      TableBody.defaultProps = {
        allRowsSelected: false,
        deselectOnClickaway: true,
        displayRowCheckbox: true,
        multiSelectable: false,
        preScanRows: true,
        selectable: true,
        style: {},
      };
      TableBody.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = TableBody;

      /***/
    },
    /* 782 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var tableRowColumn = context.muiTheme.tableRowColumn;

        var styles = {
          root: {
            paddingLeft: tableRowColumn.spacing,
            paddingRight: tableRowColumn.spacing,
            height: tableRowColumn.height,
            textAlign: 'left',
            fontSize: 13,
            overflow: 'hidden',
            whiteSpace: 'nowrap',
            textOverflow: 'ellipsis',
          },
        };

        if (
          _react2.default.Children.count(props.children) === 1 &&
          !isNaN(props.children)
        ) {
          styles.textAlign = 'right';
        }

        return styles;
      }

      var TableRowColumn = (function (_Component) {
        _inherits(TableRowColumn, _Component);

        function TableRowColumn() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, TableRowColumn);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    TableRowColumn,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                hovered: false,
              }),
              (_this.onClick = function (event) {
                if (_this.props.onClick) {
                  _this.props.onClick(event, _this.props.columnNumber);
                }
              }),
              (_this.onMouseEnter = function (event) {
                if (_this.props.hoverable) {
                  _this.setState({ hovered: true });
                  if (_this.props.onHover) {
                    _this.props.onHover(event, _this.props.columnNumber);
                  }
                }
              }),
              (_this.onMouseLeave = function (event) {
                if (_this.props.hoverable) {
                  _this.setState({ hovered: false });
                  if (_this.props.onHoverExit) {
                    _this.props.onHoverExit(event, _this.props.columnNumber);
                  }
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(TableRowColumn, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var children = _props.children;
              var className = _props.className;
              var columnNumber = _props.columnNumber;
              var hoverable = _props.hoverable;
              var onClick = _props.onClick;
              var onHover = _props.onHover;
              var onHoverExit = _props.onHoverExit;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'children',
                'className',
                'columnNumber',
                'hoverable',
                'onClick',
                'onHover',
                'onHoverExit',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              var handlers = {
                onClick: this.onClick,
                onMouseEnter: this.onMouseEnter,
                onMouseLeave: this.onMouseLeave,
              };

              return _react2.default.createElement(
                'td',
                _extends(
                  {
                    className: className,
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(styles.root, style),
                    ),
                  },
                  handlers,
                  other,
                ),
                children,
              );
            },
          },
        ]);

        return TableRowColumn;
      })(_react.Component);

      TableRowColumn.propTypes = {
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * @ignore
         * Number to identify the header row. This property
         * is automatically populated when used with TableHeader.
         */
        columnNumber: _react.PropTypes.number,
        /**
         * @ignore
         * If true, this column responds to hover events.
         */
        hoverable: _react.PropTypes.bool,
        /** @ignore */
        onClick: _react.PropTypes.func,
        /** @ignore */
        onHover: _react.PropTypes.func,
        /**
         * @ignore
         * Callback function for hover exit event.
         */
        onHoverExit: _react.PropTypes.func,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      TableRowColumn.defaultProps = {
        hoverable: false,
      };
      TableRowColumn.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = TableRowColumn;

      /***/
    },
    /* 783 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _TableRowColumn = __webpack_require__(782);

      var _TableRowColumn2 = _interopRequireDefault(_TableRowColumn);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _toConsumableArray(arr) {
        if (Array.isArray(arr)) {
          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
            arr2[i] = arr[i];
          }
          return arr2;
        } else {
          return Array.from(arr);
        }
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var tableFooter = context.muiTheme.tableFooter;

        return {
          cell: {
            borderTop: '1px solid ' + tableFooter.borderColor,
            verticalAlign: 'bottom',
            padding: 20,
            textAlign: 'left',
            whiteSpace: 'nowrap',
          },
        };
      }

      var TableFooter = (function (_Component) {
        _inherits(TableFooter, _Component);

        function TableFooter() {
          _classCallCheck(this, TableFooter);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(TableFooter).apply(this, arguments),
          );
        }

        _createClass(TableFooter, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var adjustForCheckbox = _props.adjustForCheckbox;
              var children = _props.children;
              var className = _props.className;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'adjustForCheckbox',
                'children',
                'className',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              var footerRows = _react2.default.Children.map(children, function (
                child,
                rowNumber,
              ) {
                var newChildProps = {
                  displayBorder: false,
                  key: 'f-' + rowNumber,
                  rowNumber: rowNumber,
                  style: (0, _simpleAssign2.default)(
                    {},
                    styles.cell,
                    child.props.style,
                  ),
                };

                var newDescendants = void 0;
                if (adjustForCheckbox) {
                  newDescendants = [
                    _react2.default.createElement(_TableRowColumn2.default, {
                      key: 'fpcb' + rowNumber,
                      style: { width: 24 },
                    }),
                  ].concat(
                    _toConsumableArray(
                      _react2.default.Children.toArray(child.props.children),
                    ),
                  );
                }

                return _react2.default.cloneElement(
                  child,
                  newChildProps,
                  newDescendants,
                );
              });

              return _react2.default.createElement(
                'tfoot',
                _extends(
                  {
                    className: className,
                    style: prepareStyles(
                      (0, _simpleAssign2.default)({}, style),
                    ),
                  },
                  other,
                ),
                footerRows,
              );
            },
          },
        ]);

        return TableFooter;
      })(_react.Component);

      TableFooter.muiName = 'TableFooter';
      TableFooter.propTypes = {
        /**
         * @ignore
         * Controls whether or not header rows should be adjusted
         * for a checkbox column. If the select all checkbox is true,
         * this property will not influence the number of columns.
         * This is mainly useful for "super header" rows so that
         * the checkbox column does not create an offset that needs
         * to be accounted for manually.
         */
        adjustForCheckbox: _react.PropTypes.bool,
        /**
         * Children passed to table footer.
         */
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      TableFooter.defaultProps = {
        adjustForCheckbox: true,
        style: {},
      };
      TableFooter.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = TableFooter;

      /***/
    },
    /* 784 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _Checkbox = __webpack_require__(625);

      var _Checkbox2 = _interopRequireDefault(_Checkbox);

      var _TableHeaderColumn = __webpack_require__(785);

      var _TableHeaderColumn2 = _interopRequireDefault(_TableHeaderColumn);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var tableHeader = context.muiTheme.tableHeader;

        return {
          root: {
            borderBottom: '1px solid ' + tableHeader.borderColor,
          },
        };
      }

      var TableHeader = (function (_Component) {
        _inherits(TableHeader, _Component);

        function TableHeader() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, TableHeader);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    TableHeader,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.handleCheckAll = function (event, checked) {
                if (_this.props.onSelectAll) _this.props.onSelectAll(checked);
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(TableHeader, [
          {
            key: 'createSuperHeaderRows',
            value: function createSuperHeaderRows() {
              var numChildren = _react2.default.Children.count(
                this.props.children,
              );
              if (numChildren === 1) return undefined;

              var superHeaders = [];
              for (var index = 0; index < numChildren - 1; index++) {
                var child = this.props.children[index];

                if (!_react2.default.isValidElement(child)) continue;

                var props = {
                  key: 'sh' + index,
                  rowNumber: index,
                };
                superHeaders.push(this.createSuperHeaderRow(child, props));
              }

              if (superHeaders.length) return superHeaders;
            },
          },
          {
            key: 'createSuperHeaderRow',
            value: function createSuperHeaderRow(child, props) {
              var children = [];
              if (this.props.adjustForCheckbox) {
                children.push(this.getCheckboxPlaceholder(props));
              }
              _react2.default.Children.forEach(child.props.children, function (
                child,
              ) {
                children.push(child);
              });

              return _react2.default.cloneElement(child, props, children);
            },
          },
          {
            key: 'createBaseHeaderRow',
            value: function createBaseHeaderRow() {
              var numChildren = _react2.default.Children.count(
                this.props.children,
              );
              var child =
                numChildren === 1
                  ? this.props.children
                  : this.props.children[numChildren - 1];
              var props = {
                key: 'h' + numChildren,
                rowNumber: numChildren,
              };

              var children = [this.getSelectAllCheckboxColumn(props)];
              _react2.default.Children.forEach(child.props.children, function (
                child,
              ) {
                children.push(child);
              });

              return _react2.default.cloneElement(child, props, children);
            },
          },
          {
            key: 'getCheckboxPlaceholder',
            value: function getCheckboxPlaceholder(props) {
              if (!this.props.adjustForCheckbox) return null;

              var disabled = !this.props.enableSelectAll;
              var key = 'hpcb' + props.rowNumber;
              return _react2.default.createElement(
                _TableHeaderColumn2.default,
                {
                  key: key,
                  style: {
                    width: 24,
                    cursor: disabled ? 'not-allowed' : 'inherit',
                  },
                },
              );
            },
          },
          {
            key: 'getSelectAllCheckboxColumn',
            value: function getSelectAllCheckboxColumn(props) {
              if (!this.props.displaySelectAll)
                return this.getCheckboxPlaceholder(props);

              var disabled = !this.props.enableSelectAll;
              var checkbox = _react2.default.createElement(_Checkbox2.default, {
                key: 'selectallcb',
                name: 'selectallcb',
                value: 'selected',
                disabled: disabled,
                checked: this.props.selectAllSelected,
                onCheck: this.handleCheckAll,
              });

              var key = 'hpcb' + props.rowNumber;
              return _react2.default.createElement(
                _TableHeaderColumn2.default,
                {
                  key: key,
                  style: {
                    width: 24,
                    cursor: disabled ? 'not-allowed' : 'inherit',
                  },
                },
                checkbox,
              );
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var className = _props.className;
              var style = _props.style;
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);
              var superHeaderRows = this.createSuperHeaderRows();
              var baseHeaderRow = this.createBaseHeaderRow();

              return _react2.default.createElement(
                'thead',
                {
                  className: className,
                  style: prepareStyles(
                    (0, _simpleAssign2.default)(styles.root, style),
                  ),
                },
                superHeaderRows,
                baseHeaderRow,
              );
            },
          },
        ]);

        return TableHeader;
      })(_react.Component);

      TableHeader.muiName = 'TableHeader';
      TableHeader.propTypes = {
        /**
         * Controls whether or not header rows should be
         * adjusted for a checkbox column. If the select all
         * checkbox is true, this property will not influence
         * the number of columns. This is mainly useful for
         * "super header" rows so that the checkbox column
         * does not create an offset that needs to be accounted
         * for manually.
         */
        adjustForCheckbox: _react.PropTypes.bool,
        /**
         * Children passed to table header.
         */
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * Controls whether or not the select all checkbox is displayed.
         */
        displaySelectAll: _react.PropTypes.bool,
        /**
         * If set to true, the select all button will be interactable.
         * If set to false, the button will not be interactable.
         * To hide the checkbox, set displaySelectAll to false.
         */
        enableSelectAll: _react.PropTypes.bool,
        /**
         * @ignore
         * Callback when select all has been checked.
         */
        onSelectAll: _react.PropTypes.func,
        /**
         * @ignore
         * True when select all has been checked.
         */
        selectAllSelected: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      TableHeader.defaultProps = {
        adjustForCheckbox: true,
        displaySelectAll: true,
        enableSelectAll: true,
        selectAllSelected: false,
      };
      TableHeader.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = TableHeader;

      /***/
    },
    /* 785 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _Tooltip = __webpack_require__(564);

      var _Tooltip2 = _interopRequireDefault(_Tooltip);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var tableHeaderColumn = context.muiTheme.tableHeaderColumn;

        return {
          root: {
            fontWeight: 'normal',
            fontSize: 12,
            paddingLeft: tableHeaderColumn.spacing,
            paddingRight: tableHeaderColumn.spacing,
            height: tableHeaderColumn.height,
            textAlign: 'left',
            whiteSpace: 'nowrap',
            textOverflow: 'ellipsis',
            color: tableHeaderColumn.textColor,
            position: 'relative',
          },
          tooltip: {
            boxSizing: 'border-box',
            marginTop: tableHeaderColumn.height / 2,
          },
        };
      }

      var TableHeaderColumn = (function (_Component) {
        _inherits(TableHeaderColumn, _Component);

        function TableHeaderColumn() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, TableHeaderColumn);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    TableHeaderColumn,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                hovered: false,
              }),
              (_this.onMouseEnter = function () {
                if (_this.props.tooltip !== undefined) {
                  _this.setState({ hovered: true });
                }
              }),
              (_this.onMouseLeave = function () {
                if (_this.props.tooltip !== undefined) {
                  _this.setState({ hovered: false });
                }
              }),
              (_this.onClick = function (event) {
                if (_this.props.onClick) {
                  _this.props.onClick(event, _this.props.columnNumber);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(TableHeaderColumn, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var children = _props.children;
              var className = _props.className;
              var columnNumber = _props.columnNumber;
              var hoverable = _props.hoverable;
              var onClick = _props.onClick;
              var onHover = _props.onHover;
              var onHoverExit = _props.onHoverExit;
              var style = _props.style;
              var tooltip = _props.tooltip;
              var tooltipStyle = _props.tooltipStyle;

              var other = _objectWithoutProperties(_props, [
                'children',
                'className',
                'columnNumber',
                'hoverable',
                'onClick',
                'onHover',
                'onHoverExit',
                'style',
                'tooltip',
                'tooltipStyle',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              var handlers = {
                onMouseEnter: this.onMouseEnter,
                onMouseLeave: this.onMouseLeave,
                onClick: this.onClick,
              };

              var tooltipNode = void 0;

              if (tooltip !== undefined) {
                tooltipNode = _react2.default.createElement(_Tooltip2.default, {
                  label: tooltip,
                  show: this.state.hovered,
                  style: (0, _simpleAssign2.default)(
                    styles.tooltip,
                    tooltipStyle,
                  ),
                });
              }

              return _react2.default.createElement(
                'th',
                _extends(
                  {
                    className: className,
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(styles.root, style),
                    ),
                  },
                  handlers,
                  other,
                ),
                tooltipNode,
                children,
              );
            },
          },
        ]);

        return TableHeaderColumn;
      })(_react.Component);

      TableHeaderColumn.propTypes = {
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * Number to identify the header row. This property
         * is automatically populated when used with TableHeader.
         */
        columnNumber: _react.PropTypes.number,
        /**
         * @ignore
         * Not used here but we need to remove it from the root element.
         */
        hoverable: _react.PropTypes.bool,
        /** @ignore */
        onClick: _react.PropTypes.func,
        /**
         * @ignore
         * Not used here but we need to remove it from the root element.
         */
        onHover: _react.PropTypes.func,
        /**
         * @ignore
         * Not used here but we need to remove it from the root element.
         */
        onHoverExit: _react.PropTypes.func,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The string to supply to the tooltip. If not
         * string is supplied no tooltip will be shown.
         */
        tooltip: _react.PropTypes.string,
        /**
         * Additional styling that can be applied to the tooltip.
         */
        tooltipStyle: _react.PropTypes.object,
      };
      TableHeaderColumn.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = TableHeaderColumn;

      /***/
    },
    /* 786 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context, state) {
        var tableRow = context.muiTheme.tableRow;

        var cellBgColor = 'inherit';
        if (props.hovered || state.hovered) {
          cellBgColor = tableRow.hoverColor;
        } else if (props.selected) {
          cellBgColor = tableRow.selectedColor;
        } else if (props.striped) {
          cellBgColor = tableRow.stripeColor;
        }

        return {
          root: {
            borderBottom:
              props.displayBorder && '1px solid ' + tableRow.borderColor,
            color: tableRow.textColor,
            height: tableRow.height,
          },
          cell: {
            backgroundColor: cellBgColor,
          },
        };
      }

      var TableRow = (function (_Component) {
        _inherits(TableRow, _Component);

        function TableRow() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, TableRow);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    TableRow,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                hovered: false,
              }),
              (_this.onCellClick = function (event, columnIndex) {
                if (_this.props.selectable && _this.props.onCellClick) {
                  _this.props.onCellClick(
                    event,
                    _this.props.rowNumber,
                    columnIndex,
                  );
                }
                event.ctrlKey = true;
                _this.onRowClick(event);
              }),
              (_this.onCellHover = function (event, columnIndex) {
                if (_this.props.hoverable) {
                  _this.setState({ hovered: true });
                  if (_this.props.onCellHover)
                    _this.props.onCellHover(
                      event,
                      _this.props.rowNumber,
                      columnIndex,
                    );
                  _this.onRowHover(event);
                }
              }),
              (_this.onCellHoverExit = function (event, columnIndex) {
                if (_this.props.hoverable) {
                  _this.setState({ hovered: false });
                  if (_this.props.onCellHoverExit)
                    _this.props.onCellHoverExit(
                      event,
                      _this.props.rowNumber,
                      columnIndex,
                    );
                  _this.onRowHoverExit(event);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(TableRow, [
          {
            key: 'onRowClick',
            value: function onRowClick(event) {
              if (this.props.selectable && this.props.onRowClick)
                this.props.onRowClick(event, this.props.rowNumber);
            },
          },
          {
            key: 'onRowHover',
            value: function onRowHover(event) {
              if (this.props.onRowHover)
                this.props.onRowHover(event, this.props.rowNumber);
            },
          },
          {
            key: 'onRowHoverExit',
            value: function onRowHoverExit(event) {
              if (this.props.onRowHoverExit)
                this.props.onRowHoverExit(event, this.props.rowNumber);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              var _props = this.props;
              var className = _props.className;
              var displayBorder = _props.displayBorder;
              var hoverable = _props.hoverable;
              var hovered = _props.hovered;
              var onCellClick = _props.onCellClick;
              var onCellHover = _props.onCellHover;
              var onCellHoverExit = _props.onCellHoverExit;
              var onRowClick = _props.onRowClick;
              var onRowHover = _props.onRowHover;
              var onRowHoverExit = _props.onRowHoverExit;
              var rowNumber = _props.rowNumber;
              var selectable = _props.selectable;
              var selected = _props.selected;
              var striped = _props.striped;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'className',
                'displayBorder',
                'hoverable',
                'hovered',
                'onCellClick',
                'onCellHover',
                'onCellHoverExit',
                'onRowClick',
                'onRowHover',
                'onRowHoverExit',
                'rowNumber',
                'selectable',
                'selected',
                'striped',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);

              var rowColumns = _react2.default.Children.map(
                this.props.children,
                function (child, columnNumber) {
                  if (_react2.default.isValidElement(child)) {
                    return _react2.default.cloneElement(child, {
                      columnNumber: columnNumber,
                      hoverable: _this2.props.hoverable,
                      key: _this2.props.rowNumber + '-' + columnNumber,
                      onClick: _this2.onCellClick,
                      onHover: _this2.onCellHover,
                      onHoverExit: _this2.onCellHoverExit,
                      style: (0, _simpleAssign2.default)(
                        {},
                        styles.cell,
                        child.props.style,
                      ),
                    });
                  }
                },
              );

              return _react2.default.createElement(
                'tr',
                _extends(
                  {
                    className: className,
                    style: prepareStyles(
                      (0, _simpleAssign2.default)(styles.root, style),
                    ),
                  },
                  other,
                ),
                rowColumns,
              );
            },
          },
        ]);

        return TableRow;
      })(_react.Component);

      TableRow.propTypes = {
        /**
         * Children passed to table row.
         */
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * If true, row border will be displayed for the row.
         * If false, no border will be drawn.
         */
        displayBorder: _react.PropTypes.bool,
        /**
         * Controls whether or not the row reponseds to hover events.
         */
        hoverable: _react.PropTypes.bool,
        /**
         * Controls whether or not the row should be rendered as being
         * hovered. This property is evaluated in addition to this.state.hovered
         * and can be used to synchronize the hovered state with some other
         * external events.
         */
        hovered: _react.PropTypes.bool,
        /**
         * @ignore
         * Called when a row cell is clicked.
         * rowNumber is the row number and columnId is
         * the column number or the column key.
         */
        onCellClick: _react.PropTypes.func,
        /**
         * @ignore
         * Called when a table cell is hovered.
         * rowNumber is the row number of the hovered row
         * and columnId is the column number or the column key of the cell.
         */
        onCellHover: _react.PropTypes.func,
        /**
         * @ignore
         * Called when a table cell is no longer hovered.
         * rowNumber is the row number of the row and columnId
         * is the column number or the column key of the cell.
         */
        onCellHoverExit: _react.PropTypes.func,
        /**
         * @ignore
         * Called when row is clicked.
         */
        onRowClick: _react.PropTypes.func,
        /**
         * @ignore
         * Called when a table row is hovered.
         * rowNumber is the row number of the hovered row.
         */
        onRowHover: _react.PropTypes.func,
        /**
         * @ignore
         * Called when a table row is no longer hovered.
         * rowNumber is the row number of the row that is no longer hovered.
         */
        onRowHoverExit: _react.PropTypes.func,
        /**
         * Number to identify the row. This property is
         * automatically populated when used with the TableBody component.
         */
        rowNumber: _react.PropTypes.number,
        /**
         * If true, table rows can be selected. If multiple row
         * selection is desired, enable multiSelectable.
         * The default value is true.
         */
        selectable: _react.PropTypes.bool,
        /**
         * Indicates that a particular row is selected.
         * This property can be used to programmatically select rows.
         */
        selected: _react.PropTypes.bool,
        /**
         * Indicates whether or not the row is striped.
         */
        striped: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      TableRow.defaultProps = {
        displayBorder: true,
        hoverable: false,
        hovered: false,
        selectable: true,
        selected: false,
        striped: false,
      };
      TableRow.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = TableRow;

      /***/
    },
    /* 787 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _TimePicker = __webpack_require__(788);

      var _TimePicker2 = _interopRequireDefault(_TimePicker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _TimePicker2.default;

      /***/
    },
    /* 788 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _warning = __webpack_require__(39);

      var _warning2 = _interopRequireDefault(_warning);

      var _TimePickerDialog = __webpack_require__(789);

      var _TimePickerDialog2 = _interopRequireDefault(_TimePickerDialog);

      var _TextField = __webpack_require__(581);

      var _TextField2 = _interopRequireDefault(_TextField);

      var _timeUtils = __webpack_require__(794);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var emptyTime = new Date();
      emptyTime.setHours(0);
      emptyTime.setMinutes(0);
      emptyTime.setSeconds(0);
      emptyTime.setMilliseconds(0);

      var TimePicker = (function (_Component) {
        _inherits(TimePicker, _Component);

        function TimePicker() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, TimePicker);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    TimePicker,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                time: null,
                dialogTime: new Date(),
              }),
              (_this.handleAcceptDialog = function (time) {
                _this.setState({
                  time: time,
                });
                if (_this.props.onChange) _this.props.onChange(null, time);
              }),
              (_this.handleFocusInput = function (event) {
                event.target.blur();
                if (_this.props.onFocus) {
                  _this.props.onFocus(event);
                }
              }),
              (_this.handleTouchTapInput = function (event) {
                event.preventDefault();

                if (!_this.props.disabled) {
                  _this.openDialog();
                }

                if (_this.props.onTouchTap) {
                  _this.props.onTouchTap(event);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(TimePicker, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              this.setState({
                time: this.isControlled()
                  ? this.getControlledTime()
                  : this.props.defaultTime,
              });
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (nextProps.value !== this.props.value) {
                this.setState({
                  time: this.getControlledTime(nextProps),
                });
              }
            },

            /**
             * Deprecated.
             * returns timepicker value.
             **/
          },
          {
            key: 'getTime',
            value: function getTime() {
              true
                ? (0, _warning2.default)(
                    false,
                    'getTime() method is deprecated. Use the defaultTime property\n    instead. Or use the TimePicker as a controlled component with the value\n    property. It will be removed with v0.16.0.',
                  )
                : void 0;
              return this.state.time;
            },

            /**
             * Deprecated
             * sets timepicker value.
             **/
          },
          {
            key: 'setTime',
            value: function setTime(time) {
              true
                ? (0, _warning2.default)(
                    false,
                    'setTime() method is deprecated. Use the defaultTime property\n    instead. Or use the TimePicker as a controlled component with the value\n    property. It will be removed with v0.16.0.',
                  )
                : void 0;
              this.setState({ time: time ? time : emptyTime });
            },

            /**
             * Alias for `openDialog()` for an api consistent with TextField.
             */
          },
          {
            key: 'focus',
            value: function focus() {
              this.openDialog();
            },
          },
          {
            key: 'openDialog',
            value: function openDialog() {
              this.setState({
                dialogTime: this.state.time,
              });
              this.refs.dialogWindow.show();
            },
          },
          {
            key: 'isControlled',
            value: function isControlled() {
              return this.props.value !== null;
            },
          },
          {
            key: 'getControlledTime',
            value: function getControlledTime() {
              var props =
                arguments.length <= 0 || arguments[0] === undefined
                  ? this.props
                  : arguments[0];

              var result = null;
              if (props.value instanceof Date) {
                result = props.value;
              }
              return result;
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var autoOk = _props.autoOk;
              var cancelLabel = _props.cancelLabel;
              var defaultTime = _props.defaultTime;
              var dialogBodyStyle = _props.dialogBodyStyle;
              var dialogStyle = _props.dialogStyle;
              var format = _props.format;
              var okLabel = _props.okLabel;
              var onFocus = _props.onFocus;
              var onTouchTap = _props.onTouchTap;
              var onShow = _props.onShow;
              var onDismiss = _props.onDismiss;
              var pedantic = _props.pedantic;
              var style = _props.style;
              var textFieldStyle = _props.textFieldStyle;

              var other = _objectWithoutProperties(_props, [
                'autoOk',
                'cancelLabel',
                'defaultTime',
                'dialogBodyStyle',
                'dialogStyle',
                'format',
                'okLabel',
                'onFocus',
                'onTouchTap',
                'onShow',
                'onDismiss',
                'pedantic',
                'style',
                'textFieldStyle',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;
              var time = this.state.time;

              return _react2.default.createElement(
                'div',
                {
                  style: prepareStyles((0, _simpleAssign2.default)({}, style)),
                },
                _react2.default.createElement(
                  _TextField2.default,
                  _extends({}, other, {
                    style: textFieldStyle,
                    ref: 'input',
                    value:
                      time === emptyTime
                        ? null
                        : (0, _timeUtils.formatTime)(time, format, pedantic),
                    onFocus: this.handleFocusInput,
                    onTouchTap: this.handleTouchTapInput,
                  }),
                ),
                _react2.default.createElement(_TimePickerDialog2.default, {
                  ref: 'dialogWindow',
                  bodyStyle: dialogBodyStyle,
                  initialTime: this.state.dialogTime,
                  onAccept: this.handleAcceptDialog,
                  onShow: onShow,
                  onDismiss: onDismiss,
                  format: format,
                  okLabel: okLabel,
                  cancelLabel: cancelLabel,
                  autoOk: autoOk,
                  style: dialogStyle,
                }),
              );
            },
          },
        ]);

        return TimePicker;
      })(_react.Component);

      TimePicker.propTypes = {
        /**
         * If true, automatically accept and close the picker on set minutes.
         */
        autoOk: _react.PropTypes.bool,
        /**
         * Override the label of the 'Cancel' button.
         */
        cancelLabel: _react.PropTypes.node,
        /**
         * The initial time value of the TimePicker.
         */
        defaultTime: _react.PropTypes.object,
        /**
         * Override the inline-styles of TimePickerDialog's body element.
         */
        dialogBodyStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of TimePickerDialog's root element.
         */
        dialogStyle: _react.PropTypes.object,
        /**
         * If true, the TimePicker is disabled.
         */
        disabled: _react.PropTypes.bool,
        /**
         * Tells the component to display the picker in `ampm` (12hr) format or `24hr` format.
         */
        format: _react.PropTypes.oneOf(['ampm', '24hr']),
        /**
         * Override the label of the 'OK' button.
         */
        okLabel: _react.PropTypes.node,
        /**
         * Callback function that is fired when the time value changes. The time value is passed in a Date Object.
         * Since there is no particular event associated with the change the first argument will always be null
         * and the second argument will be the new Date instance.
         */
        onChange: _react.PropTypes.func,
        /**
         * Callback function fired when the TimePicker dialog is dismissed.
         */
        onDismiss: _react.PropTypes.func,
        /**
         * Callback function fired when the TimePicker `TextField` gains focus.
         */
        onFocus: _react.PropTypes.func,
        /**
         * Callback function fired when the TimePicker dialog is shown.
         */
        onShow: _react.PropTypes.func,
        /**
         * Callback function fired when the TimePicker is tapped or clicked.
         */
        onTouchTap: _react.PropTypes.func,
        /**
         * If true, uses ("noon" / "midnight") instead of ("12 a.m." / "12 p.m.").
         *
         * It's technically more correct to refer to "12 noon" and "12 midnight" rather than "12 a.m." and "12 p.m."
         * and it avoids confusion between different locales. By default (for compatibility reasons) TimePicker uses
         * ("12 a.m." / "12 p.m.").
         */
        pedantic: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * Override the inline-styles of TimePicker's TextField element.
         */
        textFieldStyle: _react.PropTypes.object,
        /**
         * Sets the time for the Time Picker programmatically.
         */
        value: _react.PropTypes.object,
      };
      TimePicker.defaultProps = {
        autoOk: false,
        cancelLabel: 'Cancel',
        defaultTime: null,
        disabled: false,
        format: 'ampm',
        okLabel: 'OK',
        pedantic: false,
        style: {},
        value: null,
      };
      TimePicker.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = TimePicker;

      /***/
    },
    /* 789 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactEventListener = __webpack_require__(585);

      var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

      var _keycode = __webpack_require__(549);

      var _keycode2 = _interopRequireDefault(_keycode);

      var _Clock = __webpack_require__(790);

      var _Clock2 = _interopRequireDefault(_Clock);

      var _Dialog = __webpack_require__(654);

      var _Dialog2 = _interopRequireDefault(_Dialog);

      var _FlatButton = __webpack_require__(641);

      var _FlatButton2 = _interopRequireDefault(_FlatButton);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var TimePickerDialog = (function (_Component) {
        _inherits(TimePickerDialog, _Component);

        function TimePickerDialog() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, TimePickerDialog);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    TimePickerDialog,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                open: false,
              }),
              (_this.handleRequestClose = function () {
                _this.dismiss();
              }),
              (_this.handleTouchTapCancel = function () {
                _this.dismiss();
              }),
              (_this.handleTouchTapOK = function () {
                _this.dismiss();
                if (_this.props.onAccept) {
                  _this.props.onAccept(_this.refs.clock.getSelectedTime());
                }
              }),
              (_this.handleKeyUp = function (event) {
                switch ((0, _keycode2.default)(event)) {
                  case 'enter':
                    _this.handleTouchTapOK();
                    break;
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(TimePickerDialog, [
          {
            key: 'show',
            value: function show() {
              if (this.props.onShow && !this.state.open) this.props.onShow();
              this.setState({
                open: true,
              });
            },
          },
          {
            key: 'dismiss',
            value: function dismiss() {
              if (this.props.onDismiss && this.state.open)
                this.props.onDismiss();
              this.setState({
                open: false,
              });
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var bodyStyle = _props.bodyStyle;
              var initialTime = _props.initialTime;
              var onAccept = _props.onAccept;
              var format = _props.format;
              var autoOk = _props.autoOk;
              var okLabel = _props.okLabel;
              var cancelLabel = _props.cancelLabel;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'bodyStyle',
                'initialTime',
                'onAccept',
                'format',
                'autoOk',
                'okLabel',
                'cancelLabel',
                'style',
              ]);

              var styles = {
                root: {
                  fontSize: 14,
                  color: this.context.muiTheme.timePicker.clockColor,
                },
                dialogContent: {
                  width: 280,
                },
                body: {
                  padding: 0,
                },
              };

              var actions = [
                _react2.default.createElement(_FlatButton2.default, {
                  key: 0,
                  label: cancelLabel,
                  primary: true,
                  onTouchTap: this.handleTouchTapCancel,
                }),
                _react2.default.createElement(_FlatButton2.default, {
                  key: 1,
                  label: okLabel,
                  primary: true,
                  onTouchTap: this.handleTouchTapOK,
                }),
              ];

              var onClockChangeMinutes =
                autoOk === true ? this.handleTouchTapOK : undefined;
              var open = this.state.open;

              return _react2.default.createElement(
                _Dialog2.default,
                _extends({}, other, {
                  style: (0, _simpleAssign2.default)(styles.root, style),
                  bodyStyle: (0, _simpleAssign2.default)(
                    styles.body,
                    bodyStyle,
                  ),
                  actions: actions,
                  contentStyle: styles.dialogContent,
                  repositionOnUpdate: false,
                  open: open,
                  onRequestClose: this.handleRequestClose,
                }),
                open &&
                  _react2.default.createElement(_reactEventListener2.default, {
                    target: 'window',
                    onKeyUp: this.handleKeyUp,
                  }),
                open &&
                  _react2.default.createElement(_Clock2.default, {
                    ref: 'clock',
                    format: format,
                    initialTime: initialTime,
                    onChangeMinutes: onClockChangeMinutes,
                  }),
              );
            },
          },
        ]);

        return TimePickerDialog;
      })(_react.Component);

      TimePickerDialog.propTypes = {
        autoOk: _react.PropTypes.bool,
        bodyStyle: _react.PropTypes.object,
        cancelLabel: _react.PropTypes.node,
        format: _react.PropTypes.oneOf(['ampm', '24hr']),
        initialTime: _react.PropTypes.object,
        okLabel: _react.PropTypes.node,
        onAccept: _react.PropTypes.func,
        onDismiss: _react.PropTypes.func,
        onShow: _react.PropTypes.func,
        style: _react.PropTypes.object,
      };
      TimePickerDialog.defaultProps = {
        okLabel: 'OK',
        cancelLabel: 'Cancel',
      };
      TimePickerDialog.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = TimePickerDialog;

      /***/
    },
    /* 790 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _TimeDisplay = __webpack_require__(791);

      var _TimeDisplay2 = _interopRequireDefault(_TimeDisplay);

      var _ClockHours = __webpack_require__(792);

      var _ClockHours2 = _interopRequireDefault(_ClockHours);

      var _ClockMinutes = __webpack_require__(796);

      var _ClockMinutes2 = _interopRequireDefault(_ClockMinutes);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var Clock = (function (_Component) {
        _inherits(Clock, _Component);

        function Clock() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, Clock);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    Clock,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                selectedTime: null,
                mode: 'hour',
              }),
              (_this.setMode = function (mode) {
                setTimeout(function () {
                  _this.setState({
                    mode: mode,
                  });
                }, 100);
              }),
              (_this.handleSelectAffix = function (affix) {
                if (affix === _this.getAffix()) return;

                var hours = _this.state.selectedTime.getHours();

                if (affix === 'am') {
                  _this.handleChangeHours(hours - 12, affix);
                  return;
                }

                _this.handleChangeHours(hours + 12, affix);
              }),
              (_this.handleChangeHours = function (hours, finished) {
                var time = new Date(_this.state.selectedTime);
                var affix = void 0;

                if (typeof finished === 'string') {
                  affix = finished;
                  finished = undefined;
                }
                if (!affix) {
                  affix = _this.getAffix();
                }
                if (affix === 'pm' && hours < 12) {
                  hours += 12;
                }

                time.setHours(hours);
                _this.setState({
                  selectedTime: time,
                });

                if (finished) {
                  setTimeout(function () {
                    _this.setState({
                      mode: 'minute',
                    });

                    var onChangeHours = _this.props.onChangeHours;

                    if (onChangeHours) {
                      onChangeHours(time);
                    }
                  }, 100);
                }
              }),
              (_this.handleChangeMinutes = function (minutes) {
                var time = new Date(_this.state.selectedTime);
                time.setMinutes(minutes);
                _this.setState({
                  selectedTime: time,
                });

                var onChangeMinutes = _this.props.onChangeMinutes;

                if (onChangeMinutes) {
                  setTimeout(function () {
                    onChangeMinutes(time);
                  }, 0);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Clock, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              this.setState({
                selectedTime: this.props.initialTime || new Date(),
              });
            },
          },
          {
            key: 'getAffix',
            value: function getAffix() {
              if (this.props.format !== 'ampm') return '';

              var hours = this.state.selectedTime.getHours();
              if (hours < 12) {
                return 'am';
              }

              return 'pm';
            },
          },
          {
            key: 'getSelectedTime',
            value: function getSelectedTime() {
              return this.state.selectedTime;
            },
          },
          {
            key: 'render',
            value: function render() {
              var clock = null;

              var _context$muiTheme = this.context.muiTheme;
              var prepareStyles = _context$muiTheme.prepareStyles;
              var timePicker = _context$muiTheme.timePicker;

              var styles = {
                root: {
                  userSelect: 'none',
                },
                container: {
                  height: 280,
                  padding: 10,
                  position: 'relative',
                  boxSizing: 'content-box',
                },
                circle: {
                  position: 'absolute',
                  top: 20,
                  width: 260,
                  height: 260,
                  borderRadius: '100%',
                  backgroundColor: timePicker.clockCircleColor,
                },
              };

              if (this.state.mode === 'hour') {
                clock = _react2.default.createElement(_ClockHours2.default, {
                  key: 'hours',
                  format: this.props.format,
                  onChange: this.handleChangeHours,
                  initialHours: this.state.selectedTime.getHours(),
                });
              } else {
                clock = _react2.default.createElement(_ClockMinutes2.default, {
                  key: 'minutes',
                  onChange: this.handleChangeMinutes,
                  initialMinutes: this.state.selectedTime.getMinutes(),
                });
              }

              return _react2.default.createElement(
                'div',
                { style: prepareStyles(styles.root) },
                _react2.default.createElement(_TimeDisplay2.default, {
                  selectedTime: this.state.selectedTime,
                  mode: this.state.mode,
                  format: this.props.format,
                  affix: this.getAffix(),
                  onSelectAffix: this.handleSelectAffix,
                  onSelectHour: this.setMode.bind(this, 'hour'),
                  onSelectMin: this.setMode.bind(this, 'minute'),
                }),
                _react2.default.createElement(
                  'div',
                  { style: prepareStyles(styles.container) },
                  _react2.default.createElement('div', {
                    style: prepareStyles(styles.circle),
                  }),
                  clock,
                ),
              );
            },
          },
        ]);

        return Clock;
      })(_react.Component);

      Clock.propTypes = {
        format: _react.PropTypes.oneOf(['ampm', '24hr']),
        initialTime: _react.PropTypes.object,
        onChangeHours: _react.PropTypes.func,
        onChangeMinutes: _react.PropTypes.func,
      };
      Clock.defaultProps = {
        initialTime: new Date(),
      };
      Clock.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Clock;

      /***/
    },
    /* 791 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _slicedToArray = (function () {
        function sliceIterator(arr, i) {
          var _arr = [];
          var _n = true;
          var _d = false;
          var _e = undefined;
          try {
            for (
              var _i = arr[Symbol.iterator](), _s;
              !(_n = (_s = _i.next()).done);
              _n = true
            ) {
              _arr.push(_s.value);
              if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;
            _e = err;
          } finally {
            try {
              if (!_n && _i['return']) _i['return']();
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
        return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError(
              'Invalid attempt to destructure non-iterable instance',
            );
          }
        };
      })();

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var TimeDisplay = (function (_Component) {
        _inherits(TimeDisplay, _Component);

        function TimeDisplay() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, TimeDisplay);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    TimeDisplay,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                transitionDirection: 'up',
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(TimeDisplay, [
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              if (nextProps.selectedTime !== this.props.selectedTime) {
                var direction =
                  nextProps.selectedTime > this.props.selectedTime
                    ? 'up'
                    : 'down';

                this.setState({
                  transitionDirection: direction,
                });
              }
            },
          },
          {
            key: 'sanitizeTime',
            value: function sanitizeTime() {
              var hour = this.props.selectedTime.getHours();
              var min = this.props.selectedTime.getMinutes().toString();

              if (this.props.format === 'ampm') {
                hour %= 12;
                hour = hour || 12;
              }

              hour = hour.toString();
              if (hour.length < 2) hour = '0' + hour;
              if (min.length < 2) min = '0' + min;

              return [hour, min];
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var affix = _props.affix;
              var format = _props.format;
              var mode = _props.mode;
              var onSelectAffix = _props.onSelectAffix;
              var onSelectHour = _props.onSelectHour;
              var onSelectMin = _props.onSelectMin;
              var selectedTime = _props.selectedTime;

              var other = _objectWithoutProperties(_props, [
                'affix',
                'format',
                'mode',
                'onSelectAffix',
                'onSelectHour',
                'onSelectMin',
                'selectedTime',
              ]);

              var _context$muiTheme = this.context.muiTheme;
              var prepareStyles = _context$muiTheme.prepareStyles;
              var timePicker = _context$muiTheme.timePicker;

              var styles = {
                root: {
                  padding: '14px 0',
                  borderTopLeftRadius: 2,
                  borderTopRightRadius: 2,
                  backgroundColor: timePicker.headerColor,
                  color: 'white',
                },
                text: {
                  margin: '6px 0',
                  lineHeight: '58px',
                  height: 58,
                  fontSize: 58,
                  display: 'flex',
                  justifyContent: 'center',
                  alignItems: 'baseline',
                },
                time: {
                  margin: '0 10px',
                },
                affix: {
                  flex: 1,
                  position: 'relative',
                  lineHeight: '17px',
                  height: 17,
                  fontSize: 17,
                },
                affixTop: {
                  position: 'absolute',
                  top: -20,
                  left: 0,
                },
                clickable: {
                  cursor: 'pointer',
                },
                inactive: {
                  opacity: 0.7,
                },
              };

              var _sanitizeTime = this.sanitizeTime();

              var _sanitizeTime2 = _slicedToArray(_sanitizeTime, 2);

              var hour = _sanitizeTime2[0];
              var min = _sanitizeTime2[1];

              var buttons = [];
              if (format === 'ampm') {
                buttons = [
                  _react2.default.createElement(
                    'div',
                    {
                      key: 'pm',
                      style: prepareStyles(
                        (0, _simpleAssign2.default)(
                          {},
                          styles.clickable,
                          affix === 'pm' ? {} : styles.inactive,
                        ),
                      ),
                      onTouchTap: function onTouchTap() {
                        return onSelectAffix('pm');
                      },
                    },
                    'PM',
                  ),
                  _react2.default.createElement(
                    'div',
                    {
                      key: 'am',
                      style: prepareStyles(
                        (0, _simpleAssign2.default)(
                          {},
                          styles.affixTop,
                          styles.clickable,
                          affix === 'am' ? {} : styles.inactive,
                        ),
                      ),
                      onTouchTap: function onTouchTap() {
                        return onSelectAffix('am');
                      },
                    },
                    'AM',
                  ),
                ];
              }

              return _react2.default.createElement(
                'div',
                _extends({}, other, { style: prepareStyles(styles.root) }),
                _react2.default.createElement(
                  'div',
                  { style: prepareStyles(styles.text) },
                  _react2.default.createElement('div', {
                    style: prepareStyles(
                      (0, _simpleAssign2.default)({}, styles.affix),
                    ),
                  }),
                  _react2.default.createElement(
                    'div',
                    { style: prepareStyles(styles.time) },
                    _react2.default.createElement(
                      'span',
                      {
                        style: prepareStyles(
                          (0, _simpleAssign2.default)(
                            {},
                            styles.clickable,
                            mode === 'hour' ? {} : styles.inactive,
                          ),
                        ),
                        onTouchTap: onSelectHour,
                      },
                      hour,
                    ),
                    _react2.default.createElement('span', null, ':'),
                    _react2.default.createElement(
                      'span',
                      {
                        style: prepareStyles(
                          (0, _simpleAssign2.default)(
                            {},
                            styles.clickable,
                            mode === 'minute' ? {} : styles.inactive,
                          ),
                        ),
                        onTouchTap: onSelectMin,
                      },
                      min,
                    ),
                  ),
                  _react2.default.createElement(
                    'div',
                    {
                      style: prepareStyles(
                        (0, _simpleAssign2.default)({}, styles.affix),
                      ),
                    },
                    buttons,
                  ),
                ),
              );
            },
          },
        ]);

        return TimeDisplay;
      })(_react.Component);

      TimeDisplay.propTypes = {
        affix: _react.PropTypes.oneOf(['', 'pm', 'am']),
        format: _react.PropTypes.oneOf(['ampm', '24hr']),
        mode: _react.PropTypes.oneOf(['hour', 'minute']),
        onSelectAffix: _react.PropTypes.func,
        onSelectHour: _react.PropTypes.func,
        onSelectMin: _react.PropTypes.func,
        selectedTime: _react.PropTypes.object.isRequired,
      };
      TimeDisplay.defaultProps = {
        affix: '',
        mode: 'hour',
      };
      TimeDisplay.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = TimeDisplay;

      /***/
    },
    /* 792 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _reactDom = __webpack_require__(130);

      var _reactDom2 = _interopRequireDefault(_reactDom);

      var _ClockNumber = __webpack_require__(793);

      var _ClockNumber2 = _interopRequireDefault(_ClockNumber);

      var _ClockPointer = __webpack_require__(795);

      var _ClockPointer2 = _interopRequireDefault(_ClockPointer);

      var _timeUtils = __webpack_require__(794);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ClockHours = (function (_Component) {
        _inherits(ClockHours, _Component);

        function ClockHours() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, ClockHours);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    ClockHours,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.handleUp = function (event) {
                event.preventDefault();
                _this.setClock(event.nativeEvent, true);
              }),
              (_this.handleMove = function (event) {
                event.preventDefault();
                if (_this.isMousePressed(event) !== 1) return;
                _this.setClock(event.nativeEvent, false);
              }),
              (_this.handleTouchMove = function (event) {
                event.preventDefault();
                _this.setClock(event.changedTouches[0], false);
              }),
              (_this.handleTouchEnd = function (event) {
                event.preventDefault();
                _this.setClock(event.changedTouches[0], true);
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(ClockHours, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              var clockElement = _reactDom2.default.findDOMNode(this.refs.mask);

              this.center = {
                x: clockElement.offsetWidth / 2,
                y: clockElement.offsetHeight / 2,
              };

              this.basePoint = {
                x: this.center.x,
                y: 0,
              };
            },
          },
          {
            key: 'isMousePressed',
            value: function isMousePressed(event) {
              if (typeof event.buttons === 'undefined') {
                return event.nativeEvent.which;
              }

              return event.buttons;
            },
          },
          {
            key: 'setClock',
            value: function setClock(event, finish) {
              if (typeof event.offsetX === 'undefined') {
                var offset = (0, _timeUtils.getTouchEventOffsetValues)(event);

                event.offsetX = offset.offsetX;
                event.offsetY = offset.offsetY;
              }

              var hours = this.getHours(event.offsetX, event.offsetY);

              this.props.onChange(hours, finish);
            },
          },
          {
            key: 'getHours',
            value: function getHours(offsetX, offsetY) {
              var step = 30;
              var x = offsetX - this.center.x;
              var y = offsetY - this.center.y;
              var cx = this.basePoint.x - this.center.x;
              var cy = this.basePoint.y - this.center.y;

              var atan = Math.atan2(cx, cy) - Math.atan2(x, y);

              var deg = (0, _timeUtils.rad2deg)(atan);
              deg = Math.round(deg / step) * step;
              deg %= 360;

              var value = Math.floor(deg / step) || 0;

              var delta = Math.pow(x, 2) + Math.pow(y, 2);
              var distance = Math.sqrt(delta);

              value = value || 12;
              if (this.props.format === '24hr') {
                if (distance < 90) {
                  value += 12;
                  value %= 24;
                }
              } else {
                value %= 12;
              }

              return value;
            },
          },
          {
            key: 'getSelected',
            value: function getSelected() {
              var hour = this.props.initialHours;

              if (this.props.format === 'ampm') {
                hour %= 12;
                hour = hour || 12;
              }

              return hour;
            },
          },
          {
            key: 'getHourNumbers',
            value: function getHourNumbers() {
              var _this2 = this;

              var style = {
                pointerEvents: 'none',
              };
              var hourSize = this.props.format === 'ampm' ? 12 : 24;

              var hours = [];
              for (var i = 1; i <= hourSize; i++) {
                hours.push(i % 24);
              }

              return hours.map(function (hour) {
                var isSelected = _this2.getSelected() === hour;
                return _react2.default.createElement(_ClockNumber2.default, {
                  key: hour,
                  style: style,
                  isSelected: isSelected,
                  type: 'hour',
                  value: hour,
                });
              });
            },
          },
          {
            key: 'render',
            value: function render() {
              var styles = {
                root: {
                  height: '100%',
                  width: '100%',
                  borderRadius: '100%',
                  position: 'relative',
                  pointerEvents: 'none',
                  boxSizing: 'border-box',
                },

                hitMask: {
                  height: '100%',
                  width: '100%',
                  pointerEvents: 'auto',
                },
              };

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var hours = this.getSelected();
              var numbers = this.getHourNumbers();

              return _react2.default.createElement(
                'div',
                { ref: 'clock', style: prepareStyles(styles.root) },
                _react2.default.createElement(_ClockPointer2.default, {
                  hasSelected: true,
                  value: hours,
                  type: 'hour',
                }),
                numbers,
                _react2.default.createElement('div', {
                  ref: 'mask',
                  style: prepareStyles(styles.hitMask),
                  onTouchMove: this.handleTouchMove,
                  onTouchEnd: this.handleTouchEnd,
                  onMouseUp: this.handleUp,
                  onMouseMove: this.handleMove,
                }),
              );
            },
          },
        ]);

        return ClockHours;
      })(_react.Component);

      ClockHours.propTypes = {
        format: _react.PropTypes.oneOf(['ampm', '24hr']),
        initialHours: _react.PropTypes.number,
        onChange: _react.PropTypes.func,
      };
      ClockHours.defaultProps = {
        initialHours: new Date().getHours(),
        onChange: function onChange() {},
        format: 'ampm',
      };
      ClockHours.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = ClockHours;

      /***/
    },
    /* 793 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _slicedToArray = (function () {
        function sliceIterator(arr, i) {
          var _arr = [];
          var _n = true;
          var _d = false;
          var _e = undefined;
          try {
            for (
              var _i = arr[Symbol.iterator](), _s;
              !(_n = (_s = _i.next()).done);
              _n = true
            ) {
              _arr.push(_s.value);
              if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;
            _e = err;
          } finally {
            try {
              if (!_n && _i['return']) _i['return']();
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
        return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError(
              'Invalid attempt to destructure non-iterable instance',
            );
          }
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _timeUtils = __webpack_require__(794);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var styles = {
          root: {
            display: 'inline-block',
            position: 'absolute',
            width: 32,
            height: 32,
            borderRadius: '100%',
            left: 'calc(50% - 16px)',
            top: 10,
            textAlign: 'center',
            paddingTop: 5,
            userSelect: 'none' /* Chrome all / Safari all */,
            fontSize: '1.1em',
            pointerEvents: 'none',
            boxSizing: 'border-box',
          },
        };

        var muiTheme = context.muiTheme;

        var pos = props.value;

        if (props.type === 'hour') {
          pos %= 12;
        } else {
          pos = pos / 5;
        }

        var positions = [
          [0, 5],
          [54.5, 16.6],
          [94.4, 59.5],
          [109, 114],
          [94.4, 168.5],
          [54.5, 208.4],
          [0, 223],
          [-54.5, 208.4],
          [-94.4, 168.5],
          [-109, 114],
          [-94.4, 59.5],
          [-54.5, 19.6],
        ];

        var innerPositions = [
          [0, 40],
          [36.9, 49.9],
          [64, 77],
          [74, 114],
          [64, 151],
          [37, 178],
          [0, 188],
          [-37, 178],
          [-64, 151],
          [-74, 114],
          [-64, 77],
          [-37, 50],
        ];

        if (props.isSelected) {
          styles.root.backgroundColor = muiTheme.timePicker.accentColor;
          styles.root.color = muiTheme.timePicker.selectTextColor;
        }

        var transformPos = positions[pos];

        if ((0, _timeUtils.isInner)(props)) {
          styles.root.width = 28;
          styles.root.height = 28;
          styles.root.left = 'calc(50% - 14px)';
          transformPos = innerPositions[pos];
        }

        var _transformPos = transformPos;

        var _transformPos2 = _slicedToArray(_transformPos, 2);

        var x = _transformPos2[0];
        var y = _transformPos2[1];

        styles.root.transform = 'translate(' + x + 'px, ' + y + 'px)';

        return styles;
      }

      var ClockNumber = (function (_Component) {
        _inherits(ClockNumber, _Component);

        function ClockNumber() {
          _classCallCheck(this, ClockNumber);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(ClockNumber).apply(this, arguments),
          );
        }

        _createClass(ClockNumber, [
          {
            key: 'render',
            value: function render() {
              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);
              var clockNumber =
                this.props.value === 0 ? '00' : this.props.value;

              return _react2.default.createElement(
                'span',
                { style: prepareStyles(styles.root) },
                clockNumber,
              );
            },
          },
        ]);

        return ClockNumber;
      })(_react.Component);

      ClockNumber.propTypes = {
        isSelected: _react.PropTypes.bool,
        onSelected: _react.PropTypes.func,
        type: _react.PropTypes.oneOf(['hour', 'minute']),
        value: _react.PropTypes.number,
      };
      ClockNumber.defaultProps = {
        value: 0,
        type: 'minute',
        isSelected: false,
      };
      ClockNumber.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = ClockNumber;

      /***/
    },
    /* 794 */
    /***/ function (module, exports) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.addHours = addHours;
      exports.addMinutes = addMinutes;
      exports.addSeconds = addSeconds;
      exports.formatTime = formatTime;
      exports.rad2deg = rad2deg;
      exports.getTouchEventOffsetValues = getTouchEventOffsetValues;
      exports.isInner = isInner;
      function addHours(d, hours) {
        var newDate = clone(d);
        newDate.setHours(d.getHours() + hours);
        return newDate;
      }

      function addMinutes(d, minutes) {
        var newDate = clone(d);
        newDate.setMinutes(d.getMinutes() + minutes);
        return newDate;
      }

      function addSeconds(d, seconds) {
        var newDate = clone(d);
        newDate.setSeconds(d.getMinutes() + seconds);
        return newDate;
      }

      function clone(d) {
        return new Date(d.getTime());
      }

      /**
       * @param date [Date] A Date object.
       * @param format [String] One of 'ampm', '24hr', defaults to 'ampm'.
       * @param pedantic [Boolean] Check time-picker/time-picker.jsx file.
       *
       * @return String A string representing the formatted time.
       */
      function formatTime(date) {
        var format =
          arguments.length <= 1 || arguments[1] === undefined
            ? 'ampm'
            : arguments[1];
        var pedantic =
          arguments.length <= 2 || arguments[2] === undefined
            ? false
            : arguments[2];

        if (!date) return '';
        var hours = date.getHours();
        var mins = date.getMinutes().toString();

        if (format === 'ampm') {
          var isAM = hours < 12;
          hours = hours % 12;
          var additional = isAM ? ' am' : ' pm';
          hours = (hours || 12).toString();

          if (mins.length < 2) mins = '0' + mins;

          if (pedantic) {
            // Treat midday/midnight specially http://www.nist.gov/pml/div688/times.cfm
            if (hours === '12' && mins === '00') {
              return additional === ' pm' ? '12 noon' : '12 midnight';
            }
          }

          return hours + (mins === '00' ? '' : ':' + mins) + additional;
        }

        hours = hours.toString();

        if (hours.length < 2) hours = '0' + hours;
        if (mins.length < 2) mins = '0' + mins;

        return hours + ':' + mins;
      }

      function rad2deg(rad) {
        return rad * 57.29577951308232;
      }

      function getTouchEventOffsetValues(event) {
        var el = event.target;
        var boundingRect = el.getBoundingClientRect();

        return {
          offsetX: event.clientX - boundingRect.left,
          offsetY: event.clientY - boundingRect.top,
        };
      }

      function isInner(props) {
        if (props.type !== 'hour') {
          return false;
        }
        return props.value < 1 || props.value > 12;
      }

      /***/
    },
    /* 795 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _timeUtils = __webpack_require__(794);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function calcAngle(value, base) {
        value %= base;
        var angle = (360 / base) * value;
        return angle;
      }

      function getStyles(props, context, state) {
        var hasSelected = props.hasSelected;
        var type = props.type;
        var value = props.value;
        var inner = state.inner;
        var timePicker = context.muiTheme.timePicker;

        var angle =
          type === 'hour' ? calcAngle(value, 12) : calcAngle(value, 60);

        var styles = {
          root: {
            height: inner ? '30%' : '40%',
            background: timePicker.accentColor,
            width: 2,
            left: 'calc(50% - 1px)',
            position: 'absolute',
            bottom: '50%',
            transformOrigin: 'bottom',
            pointerEvents: 'none',
            transform: 'rotateZ(' + angle + 'deg)',
          },
          mark: {
            background: timePicker.selectTextColor,
            border: '4px solid ' + timePicker.accentColor,
            display: hasSelected && 'none',
            width: 7,
            height: 7,
            position: 'absolute',
            top: -5,
            left: -6,
            borderRadius: '100%',
          },
        };

        return styles;
      }

      var ClockPointer = (function (_Component) {
        _inherits(ClockPointer, _Component);

        function ClockPointer() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, ClockPointer);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    ClockPointer,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                inner: false,
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(ClockPointer, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              this.setState({
                inner: (0, _timeUtils.isInner)(this.props),
              });
            },
          },
          {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              this.setState({
                inner: (0, _timeUtils.isInner)(nextProps),
              });
            },
          },
          {
            key: 'render',
            value: function render() {
              if (this.props.value === null) {
                return _react2.default.createElement('span', null);
              }

              var styles = getStyles(this.props, this.context, this.state);
              var prepareStyles = this.context.muiTheme.prepareStyles;

              return _react2.default.createElement(
                'div',
                { style: prepareStyles(styles.root) },
                _react2.default.createElement('div', {
                  style: prepareStyles(styles.mark),
                }),
              );
            },
          },
        ]);

        return ClockPointer;
      })(_react.Component);

      ClockPointer.propTypes = {
        hasSelected: _react.PropTypes.bool,
        type: _react.PropTypes.oneOf(['hour', 'minute']),
        value: _react.PropTypes.number,
      };
      ClockPointer.defaultProps = {
        hasSelected: false,
        value: null,
        type: 'minute',
      };
      ClockPointer.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = ClockPointer;

      /***/
    },
    /* 796 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _ClockNumber = __webpack_require__(793);

      var _ClockNumber2 = _interopRequireDefault(_ClockNumber);

      var _ClockPointer = __webpack_require__(795);

      var _ClockPointer2 = _interopRequireDefault(_ClockPointer);

      var _timeUtils = __webpack_require__(794);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      var ClockMinutes = (function (_Component) {
        _inherits(ClockMinutes, _Component);

        function ClockMinutes() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, ClockMinutes);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    ClockMinutes,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.handleUp = function (event) {
                event.preventDefault();
                _this.setClock(event.nativeEvent, true);
              }),
              (_this.handleMove = function (event) {
                event.preventDefault();
                if (_this.isMousePressed(event) !== 1) {
                  return;
                }
                _this.setClock(event.nativeEvent, false);
              }),
              (_this.handleTouch = function (event) {
                event.preventDefault();
                _this.setClock(event.changedTouches[0], false);
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(ClockMinutes, [
          {
            key: 'componentDidMount',
            value: function componentDidMount() {
              var clockElement = this.refs.mask;

              this.center = {
                x: clockElement.offsetWidth / 2,
                y: clockElement.offsetHeight / 2,
              };

              this.basePoint = {
                x: this.center.x,
                y: 0,
              };
            },
          },
          {
            key: 'isMousePressed',
            value: function isMousePressed(event) {
              if (typeof event.buttons === 'undefined') {
                return event.nativeEvent.which;
              }
              return event.buttons;
            },
          },
          {
            key: 'setClock',
            value: function setClock(event, finish) {
              if (typeof event.offsetX === 'undefined') {
                var offset = (0, _timeUtils.getTouchEventOffsetValues)(event);

                event.offsetX = offset.offsetX;
                event.offsetY = offset.offsetY;
              }

              var minutes = this.getMinutes(event.offsetX, event.offsetY);

              this.props.onChange(minutes, finish);
            },
          },
          {
            key: 'getMinutes',
            value: function getMinutes(offsetX, offsetY) {
              var step = 6;
              var x = offsetX - this.center.x;
              var y = offsetY - this.center.y;
              var cx = this.basePoint.x - this.center.x;
              var cy = this.basePoint.y - this.center.y;

              var atan = Math.atan2(cx, cy) - Math.atan2(x, y);

              var deg = (0, _timeUtils.rad2deg)(atan);
              deg = Math.round(deg / step) * step;
              deg %= 360;

              var value = Math.floor(deg / step) || 0;

              return value;
            },
          },
          {
            key: 'getMinuteNumbers',
            value: function getMinuteNumbers() {
              var minutes = [];
              for (var i = 0; i < 12; i++) {
                minutes.push(i * 5);
              }
              var selectedMinutes = this.props.initialMinutes;
              var hasSelected = false;

              var numbers = minutes.map(function (minute) {
                var isSelected = selectedMinutes === minute;
                if (isSelected) {
                  hasSelected = true;
                }
                return _react2.default.createElement(_ClockNumber2.default, {
                  key: minute,
                  isSelected: isSelected,
                  type: 'minute',
                  value: minute,
                });
              });

              return {
                numbers: numbers,
                hasSelected: hasSelected,
                selected: selectedMinutes,
              };
            },
          },
          {
            key: 'render',
            value: function render() {
              var styles = {
                root: {
                  height: '100%',
                  width: '100%',
                  borderRadius: '100%',
                  position: 'relative',
                  pointerEvents: 'none',
                  boxSizing: 'border-box',
                },

                hitMask: {
                  height: '100%',
                  width: '100%',
                  pointerEvents: 'auto',
                },
              };

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var minutes = this.getMinuteNumbers();

              return _react2.default.createElement(
                'div',
                { ref: 'clock', style: prepareStyles(styles.root) },
                _react2.default.createElement(_ClockPointer2.default, {
                  value: minutes.selected,
                  type: 'minute',
                  hasSelected: minutes.hasSelected,
                }),
                minutes.numbers,
                _react2.default.createElement('div', {
                  ref: 'mask',
                  style: prepareStyles(styles.hitMask),
                  onTouchMove: this.handleTouch,
                  onTouchEnd: this.handleTouch,
                  onMouseUp: this.handleUp,
                  onMouseMove: this.handleMove,
                }),
              );
            },
          },
        ]);

        return ClockMinutes;
      })(_react.Component);

      ClockMinutes.propTypes = {
        initialMinutes: _react.PropTypes.number,
        onChange: _react.PropTypes.func,
      };
      ClockMinutes.defaultProps = {
        initialMinutes: new Date().getMinutes(),
        onChange: function onChange() {},
      };
      ClockMinutes.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = ClockMinutes;

      /***/
    },
    /* 797 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = undefined;

      var _Toggle = __webpack_require__(798);

      var _Toggle2 = _interopRequireDefault(_Toggle);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.default = _Toggle2.default;

      /***/
    },
    /* 798 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      var _transitions = __webpack_require__(542);

      var _transitions2 = _interopRequireDefault(_transitions);

      var _Paper = __webpack_require__(577);

      var _Paper2 = _interopRequireDefault(_Paper);

      var _EnhancedSwitch = __webpack_require__(627);

      var _EnhancedSwitch2 = _interopRequireDefault(_EnhancedSwitch);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context, state) {
        var disabled = props.disabled;
        var _context$muiTheme = context.muiTheme;
        var baseTheme = _context$muiTheme.baseTheme;
        var toggle = _context$muiTheme.toggle;

        var toggleSize = 20;
        var toggleTrackWidth = 36;
        var styles = {
          icon: {
            width: 36,
            padding: '4px 0px 6px 2px',
          },
          ripple: {
            top: -10,
            left: -10,
            color: state.switched
              ? toggle.thumbOnColor
              : baseTheme.palette.textColor,
          },
          toggleElement: {
            width: toggleTrackWidth,
          },
          track: {
            transition: _transitions2.default.easeOut(),
            width: '100%',
            height: 14,
            borderRadius: 30,
            backgroundColor: toggle.trackOffColor,
          },
          thumb: {
            transition: _transitions2.default.easeOut(),
            position: 'absolute',
            top: 1,
            left: 0,
            width: toggleSize,
            height: toggleSize,
            lineHeight: '24px',
            borderRadius: '50%',
            backgroundColor: toggle.thumbOffColor,
          },
          trackWhenSwitched: {
            backgroundColor: toggle.trackOnColor,
          },
          thumbWhenSwitched: {
            backgroundColor: toggle.thumbOnColor,
            left: '100%',
          },
          trackWhenDisabled: {
            backgroundColor: toggle.trackDisabledColor,
            cursor: 'not-allowed',
          },
          thumbWhenDisabled: {
            backgroundColor: toggle.thumbDisabledColor,
            cursor: 'not-allowed',
          },
          label: {
            color: disabled ? toggle.labelDisabledColor : toggle.labelColor,
            width: 'calc(100% - ' + (toggleTrackWidth + 10) + 'px)',
            cursor: disabled ? 'not-allowed' : 'initial',
          },
        };

        return styles;
      }

      var Toggle = (function (_Component) {
        _inherits(Toggle, _Component);

        function Toggle() {
          var _Object$getPrototypeO;

          var _temp, _this, _ret;

          _classCallCheck(this, Toggle);

          for (
            var _len = arguments.length, args = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          return (
            (_ret =
              ((_temp =
                ((_this = _possibleConstructorReturn(
                  this,
                  (_Object$getPrototypeO = Object.getPrototypeOf(
                    Toggle,
                  )).call.apply(_Object$getPrototypeO, [this].concat(args)),
                )),
                _this)),
              (_this.state = {
                switched: false,
              }),
              (_this.handleStateChange = function (newSwitched) {
                _this.setState({
                  switched: newSwitched,
                });
              }),
              (_this.handleToggle = function (event, isInputChecked) {
                if (_this.props.onToggle) {
                  _this.props.onToggle(event, isInputChecked);
                }
              }),
              _temp)),
            _possibleConstructorReturn(_this, _ret)
          );
        }

        _createClass(Toggle, [
          {
            key: 'componentWillMount',
            value: function componentWillMount() {
              var _props = this.props;
              var toggled = _props.toggled;
              var defaultToggled = _props.defaultToggled;
              var valueLink = _props.valueLink;

              if (toggled || defaultToggled || (valueLink && valueLink.value)) {
                this.setState({
                  switched: true,
                });
              }
            },
          },
          {
            key: 'isToggled',
            value: function isToggled() {
              return this.refs.enhancedSwitch.isSwitched();
            },
          },
          {
            key: 'setToggled',
            value: function setToggled(newToggledValue) {
              this.refs.enhancedSwitch.setSwitched(newToggledValue);
            },
          },
          {
            key: 'render',
            value: function render() {
              var _props2 = this.props;
              var defaultToggled = _props2.defaultToggled;
              var elementStyle = _props2.elementStyle;
              var onToggle = _props2.onToggle;
              var toggled = _props2.toggled;

              var other = _objectWithoutProperties(_props2, [
                'defaultToggled',
                'elementStyle',
                'onToggle',
                'toggled',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context, this.state);

              var trackStyles = (0, _simpleAssign2.default)(
                {},
                styles.track,
                this.props.trackStyle,
                this.state.switched && styles.trackWhenSwitched,
                this.props.disabled && styles.trackWhenDisabled,
              );

              var thumbStyles = (0, _simpleAssign2.default)(
                {},
                styles.thumb,
                this.props.thumbStyle,
                this.state.switched && styles.thumbWhenSwitched,
                this.props.disabled && styles.thumbWhenDisabled,
              );

              if (this.state.switched) {
                thumbStyles.marginLeft = 0 - thumbStyles.width;
              }

              var toggleElementStyles = (0, _simpleAssign2.default)(
                {},
                styles.toggleElement,
                elementStyle,
              );

              var toggleElement = _react2.default.createElement(
                'div',
                {
                  style: prepareStyles(
                    (0, _simpleAssign2.default)({}, toggleElementStyles),
                  ),
                },
                _react2.default.createElement('div', {
                  style: prepareStyles(
                    (0, _simpleAssign2.default)({}, trackStyles),
                  ),
                }),
                _react2.default.createElement(_Paper2.default, {
                  style: thumbStyles,
                  circle: true,
                  zDepth: 1,
                }),
              );

              var rippleStyle = (0, _simpleAssign2.default)(
                {},
                styles.ripple,
                this.props.rippleStyle,
              );

              var iconStyle = (0, _simpleAssign2.default)(
                {},
                styles.icon,
                this.props.iconStyle,
              );

              var labelStyle = (0, _simpleAssign2.default)(
                {},
                styles.label,
                this.props.labelStyle,
              );

              var enhancedSwitchProps = {
                ref: 'enhancedSwitch',
                inputType: 'checkbox',
                switchElement: toggleElement,
                rippleStyle: rippleStyle,
                rippleColor: rippleStyle.color,
                iconStyle: iconStyle,
                trackStyle: trackStyles,
                thumbStyle: thumbStyles,
                labelStyle: labelStyle,
                switched: this.state.switched,
                onSwitch: this.handleToggle,
                onParentShouldUpdate: this.handleStateChange,
                labelPosition: this.props.labelPosition,
              };

              if (this.props.hasOwnProperty('toggled')) {
                enhancedSwitchProps.checked = toggled;
              } else if (this.props.hasOwnProperty('defaultToggled')) {
                enhancedSwitchProps.defaultChecked = defaultToggled;
              }

              return _react2.default.createElement(
                _EnhancedSwitch2.default,
                _extends({}, other, enhancedSwitchProps),
              );
            },
          },
        ]);

        return Toggle;
      })(_react.Component);

      Toggle.propTypes = {
        /**
         * Determines whether the Toggle is initially turned on.
         * **Warning:** This cannot be used in conjunction with `toggled`.
         * Decide between using a controlled or uncontrolled input element and remove one of these props.
         * More info: https://fb.me/react-controlled-components
         */
        defaultToggled: _react.PropTypes.bool,
        /**
         * Will disable the toggle if true.
         */
        disabled: _react.PropTypes.bool,
        /**
         * Overrides the inline-styles of the Toggle element.
         */
        elementStyle: _react.PropTypes.object,
        /**
         * Overrides the inline-styles of the Icon element.
         */
        iconStyle: _react.PropTypes.object,
        /**
         * Overrides the inline-styles of the input element.
         */
        inputStyle: _react.PropTypes.object,
        /**
         * Label for toggle.
         */
        label: _react.PropTypes.string,
        /**
         * Where the label will be placed next to the toggle.
         */
        labelPosition: _react.PropTypes.oneOf(['left', 'right']),
        /**
         * Overrides the inline-styles of the Toggle element label.
         */
        labelStyle: _react.PropTypes.object,
        /**
         * Callback function that is fired when the toggle switch is toggled.
         */
        onToggle: _react.PropTypes.func,
        /**
         * Override style of ripple.
         */
        rippleStyle: _react.PropTypes.object,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * Override style for thumb.
         */
        thumbStyle: _react.PropTypes.object,
        /**
         * Toggled if set to true.
         */
        toggled: _react.PropTypes.bool,
        /**
         * Override style for track.
         */
        trackStyle: _react.PropTypes.object,
        /**
         * ValueLink prop for when using controlled toggle.
         */
        valueLink: _react.PropTypes.object,
      };
      Toggle.defaultProps = {
        defaultToggled: false,
        disabled: false,
        labelPosition: 'left',
      };
      Toggle.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Toggle;

      /***/
    },
    /* 799 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });
      exports.default = exports.ToolbarTitle = exports.ToolbarSeparator = exports.ToolbarGroup = exports.Toolbar = undefined;

      var _Toolbar2 = __webpack_require__(800);

      var _Toolbar3 = _interopRequireDefault(_Toolbar2);

      var _ToolbarGroup2 = __webpack_require__(801);

      var _ToolbarGroup3 = _interopRequireDefault(_ToolbarGroup2);

      var _ToolbarSeparator2 = __webpack_require__(802);

      var _ToolbarSeparator3 = _interopRequireDefault(_ToolbarSeparator2);

      var _ToolbarTitle2 = __webpack_require__(803);

      var _ToolbarTitle3 = _interopRequireDefault(_ToolbarTitle2);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      exports.Toolbar = _Toolbar3.default;
      exports.ToolbarGroup = _ToolbarGroup3.default;
      exports.ToolbarSeparator = _ToolbarSeparator3.default;
      exports.ToolbarTitle = _ToolbarTitle3.default;
      exports.default = _Toolbar3.default;

      /***/
    },
    /* 800 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var noGutter = props.noGutter;
        var _context$muiTheme = context.muiTheme;
        var baseTheme = _context$muiTheme.baseTheme;
        var toolbar = _context$muiTheme.toolbar;

        return {
          root: {
            boxSizing: 'border-box',
            WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
            backgroundColor: toolbar.backgroundColor,
            height: toolbar.height,
            padding: noGutter
              ? 0
              : '0px ' + baseTheme.spacing.desktopGutter + 'px',
            display: 'flex',
            justifyContent: 'space-between',
          },
        };
      }

      var Toolbar = (function (_Component) {
        _inherits(Toolbar, _Component);

        function Toolbar() {
          _classCallCheck(this, Toolbar);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(Toolbar).apply(this, arguments),
          );
        }

        _createClass(Toolbar, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var children = _props.children;
              var className = _props.className;
              var noGutter = _props.noGutter;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'children',
                'className',
                'noGutter',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  className: className,
                  style: prepareStyles(
                    (0, _simpleAssign2.default)({}, styles.root, style),
                  ),
                }),
                children,
              );
            },
          },
        ]);

        return Toolbar;
      })(_react.Component);

      Toolbar.propTypes = {
        /**
         * Can be a `ToolbarGroup` to render a group of related items.
         */
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * Do not apply `desktopGutter` to the `Toolbar`.
         */
        noGutter: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      Toolbar.defaultProps = {
        noGutter: false,
      };
      Toolbar.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = Toolbar;

      /***/
    },
    /* 801 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var firstChild = props.firstChild;
        var lastChild = props.lastChild;
        var _context$muiTheme = context.muiTheme;
        var baseTheme = _context$muiTheme.baseTheme;
        var button = _context$muiTheme.button;
        var toolbar = _context$muiTheme.toolbar;

        var marginHorizontal = baseTheme.spacing.desktopGutter;
        var marginVertical = (toolbar.height - button.height) / 2;

        var styles = {
          root: {
            position: 'relative',
            marginLeft: firstChild ? -marginHorizontal : undefined,
            marginRight: lastChild ? -marginHorizontal : undefined,
            display: 'flex',
            justifyContent: 'space-between',
          },
          dropDownMenu: {
            root: {
              color: toolbar.color, // removes hover color change, we want to keep it
              marginRight: baseTheme.spacing.desktopGutter,
              flex: 1,
              whiteSpace: 'nowrap',
            },
            controlBg: {
              backgroundColor: toolbar.menuHoverColor,
              borderRadius: 0,
            },
            underline: {
              display: 'none',
            },
          },
          button: {
            margin: marginVertical + 'px ' + marginHorizontal + 'px',
            position: 'relative',
          },
          icon: {
            root: {
              cursor: 'pointer',
              lineHeight: toolbar.height + 'px',
              paddingLeft: baseTheme.spacing.desktopGutter,
            },
          },
          span: {
            color: toolbar.iconColor,
            lineHeight: toolbar.height + 'px',
          },
        };

        return styles;
      }

      var ToolbarGroup = (function (_Component) {
        _inherits(ToolbarGroup, _Component);

        function ToolbarGroup() {
          _classCallCheck(this, ToolbarGroup);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(ToolbarGroup).apply(this, arguments),
          );
        }

        _createClass(ToolbarGroup, [
          {
            key: 'handleMouseLeaveFontIcon',
            value: function handleMouseLeaveFontIcon(style) {
              return function (event) {
                event.target.style.zIndex = 'auto';
                event.target.style.color = style.root.color;
              };
            },
          },
          {
            key: 'render',
            value: function render() {
              var _this2 = this;

              var _props = this.props;
              var children = _props.children;
              var className = _props.className;
              var firstChild = _props.firstChild;
              var lastChild = _props.lastChild;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'children',
                'className',
                'firstChild',
                'lastChild',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              var newChildren = _react2.default.Children.map(
                children,
                function (currentChild) {
                  if (!currentChild) {
                    return null;
                  }
                  if (!currentChild.type) {
                    return currentChild;
                  }
                  switch (currentChild.type.muiName) {
                    case 'DropDownMenu':
                      return _react2.default.cloneElement(currentChild, {
                        style: (0, _simpleAssign2.default)(
                          {},
                          styles.dropDownMenu.root,
                          currentChild.props.style,
                        ),
                        underlineStyle: styles.dropDownMenu.underline,
                      });
                    case 'RaisedButton':
                    case 'FlatButton':
                      return _react2.default.cloneElement(currentChild, {
                        style: (0, _simpleAssign2.default)(
                          {},
                          styles.button,
                          currentChild.props.style,
                        ),
                      });
                    case 'FontIcon':
                      return _react2.default.cloneElement(currentChild, {
                        style: (0, _simpleAssign2.default)(
                          {},
                          styles.icon.root,
                          currentChild.props.style,
                        ),
                        color:
                          currentChild.props.color ||
                          _this2.context.muiTheme.toolbar.iconColor,
                        hoverColor:
                          currentChild.props.hoverColor ||
                          _this2.context.muiTheme.toolbar.hoverColor,
                      });
                    case 'ToolbarSeparator':
                    case 'ToolbarTitle':
                      return _react2.default.cloneElement(currentChild, {
                        style: (0, _simpleAssign2.default)(
                          {},
                          styles.span,
                          currentChild.props.style,
                        ),
                      });
                    default:
                      return currentChild;
                  }
                },
                this,
              );

              return _react2.default.createElement(
                'div',
                _extends({}, other, {
                  className: className,
                  style: prepareStyles(
                    (0, _simpleAssign2.default)({}, styles.root, style),
                  ),
                }),
                newChildren,
              );
            },
          },
        ]);

        return ToolbarGroup;
      })(_react.Component);

      ToolbarGroup.propTypes = {
        /**
         * Can be any node or number of nodes.
         */
        children: _react.PropTypes.node,
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * Set this to true for if the `ToolbarGroup` is the first child of `Toolbar`
         * to prevent setting the left gap.
         */
        firstChild: _react.PropTypes.bool,
        /**
         * Set this to true for if the `ToolbarGroup` is the last child of `Toolbar`
         * to prevent setting the right gap.
         */
        lastChild: _react.PropTypes.bool,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      ToolbarGroup.defaultProps = {
        firstChild: false,
        lastChild: false,
      };
      ToolbarGroup.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = ToolbarGroup;

      /***/
    },
    /* 802 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var _context$muiTheme = context.muiTheme;
        var baseTheme = _context$muiTheme.baseTheme;
        var toolbar = _context$muiTheme.toolbar;

        return {
          root: {
            backgroundColor: toolbar.separatorColor,
            display: 'inline-block',
            height: baseTheme.spacing.desktopGutterMore,
            marginLeft: baseTheme.spacing.desktopGutter,
            position: 'relative',
            top: (toolbar.height - baseTheme.spacing.desktopGutterMore) / 2,
            width: 1,
          },
        };
      }

      var ToolbarSeparator = (function (_Component) {
        _inherits(ToolbarSeparator, _Component);

        function ToolbarSeparator() {
          _classCallCheck(this, ToolbarSeparator);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(ToolbarSeparator).apply(this, arguments),
          );
        }

        _createClass(ToolbarSeparator, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var className = _props.className;
              var style = _props.style;

              var other = _objectWithoutProperties(_props, [
                'className',
                'style',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              return _react2.default.createElement(
                'span',
                _extends({}, other, {
                  className: className,
                  style: prepareStyles(
                    (0, _simpleAssign2.default)({}, styles.root, style),
                  ),
                }),
              );
            },
          },
        ]);

        return ToolbarSeparator;
      })(_react.Component);

      ToolbarSeparator.muiName = 'ToolbarSeparator';
      ToolbarSeparator.propTypes = {
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
      };
      ToolbarSeparator.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = ToolbarSeparator;

      /***/
    },
    /* 803 */
    /***/ function (module, exports, __webpack_require__) {
      'use strict';

      Object.defineProperty(exports, '__esModule', {
        value: true,
      });

      var _extends =
        Object.assign ||
        function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };

      var _createClass = (function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);
          if (staticProps) defineProperties(Constructor, staticProps);
          return Constructor;
        };
      })();

      var _simpleAssign = __webpack_require__(539);

      var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

      var _react = __webpack_require__(3);

      var _react2 = _interopRequireDefault(_react);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
          if (keys.indexOf(i) >= 0) continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
          target[i] = obj[i];
        }
        return target;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError('Cannot call a class as a function');
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called",
          );
        }
        return call && (typeof call === 'object' || typeof call === 'function')
          ? call
          : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== 'function' && superClass !== null) {
          throw new TypeError(
            'Super expression must either be null or a function, not ' +
              typeof superClass,
          );
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true,
          },
        });
        if (superClass)
          Object.setPrototypeOf
            ? Object.setPrototypeOf(subClass, superClass)
            : (subClass.__proto__ = superClass);
      }

      function getStyles(props, context) {
        var _context$muiTheme = context.muiTheme;
        var baseTheme = _context$muiTheme.baseTheme;
        var toolbar = _context$muiTheme.toolbar;

        return {
          root: {
            paddingRight: baseTheme.spacing.desktopGutterLess,
            lineHeight: toolbar.height + 'px',
            fontSize: toolbar.titleFontSize,
            position: 'relative',
            textOverflow: 'ellipsis',
            whiteSpace: 'nowrap',
            overflow: 'hidden',
          },
        };
      }

      var ToolbarTitle = (function (_Component) {
        _inherits(ToolbarTitle, _Component);

        function ToolbarTitle() {
          _classCallCheck(this, ToolbarTitle);

          return _possibleConstructorReturn(
            this,
            Object.getPrototypeOf(ToolbarTitle).apply(this, arguments),
          );
        }

        _createClass(ToolbarTitle, [
          {
            key: 'render',
            value: function render() {
              var _props = this.props;
              var className = _props.className;
              var style = _props.style;
              var text = _props.text;

              var other = _objectWithoutProperties(_props, [
                'className',
                'style',
                'text',
              ]);

              var prepareStyles = this.context.muiTheme.prepareStyles;

              var styles = getStyles(this.props, this.context);

              return _react2.default.createElement(
                'span',
                _extends({}, other, {
                  className: className,
                  style: prepareStyles(
                    (0, _simpleAssign2.default)({}, styles.root, style),
                  ),
                }),
                text,
              );
            },
          },
        ]);

        return ToolbarTitle;
      })(_react.Component);

      ToolbarTitle.muiName = 'ToolbarTitle';
      ToolbarTitle.propTypes = {
        /**
         * The css class name of the root element.
         */
        className: _react.PropTypes.string,
        /**
         * Override the inline-styles of the root element.
         */
        style: _react.PropTypes.object,
        /**
         * The text to be displayed.
         */
        text: _react.PropTypes.string,
      };
      ToolbarTitle.contextTypes = {
        muiTheme: _react.PropTypes.object.isRequired,
      };
      exports.default = ToolbarTitle;

      /***/
    },
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    ,
    /* 804 */ /* 805 */ /* 806 */ /* 807 */ /* 808 */ /* 809 */ /* 810 */ /* 811 */ /* 812 */ /* 813 */ /* 814 */ /* 815 */ /* 816 */
    /***/ function (module, exports, __webpack_require__) {
      module.exports = {
        Bar: __webpack_require__(817),
        Bubble: __webpack_require__(968),
        Doughnut: __webpack_require__(969),
        Line: __webpack_require__(970),
        Pie: __webpack_require__(971),
        PolarArea: __webpack_require__(972),
        Radar: __webpack_require__(973),
        Scatter: __webpack_require__(974),
        createClass: __webpack_require__(818).createClass,
      };

      /***/
    },
    /* 817 */
    /***/ function (module, exports, __webpack_require__) {
      var vars = __webpack_require__(818);

      module.exports = vars.createClass('Bar', ['getBarsAtEvent']);

      /***/
    },
    /* 818 */
    /***/ function (module, exports, __webpack_require__) {
      // Designed to be used with the current v2.0-dev version of Chart.js
      // It's not on NPM, but if you'd like to use it you can, install it
      // by setting the chart.js version in your package.json to:
      // "chart.js": "git://github.com/danmolitor/Chart.js.git#v2.0-dev"

      // I'll try to rework this for their 2.0.0 beta as well.

      var React = __webpack_require__(3);
      var ReactDOM = __webpack_require__(130);
      var Chart = __webpack_require__(819);

      module.exports = {
        createClass: function (chartType, methodNames, dataKey) {
          var classData = {
            displayName: chartType + 'Chart',
            getInitialState: function () {
              return {};
            },
            render: function () {
              var _props = {
                ref: 'canvass',
              };
              for (var name in this.props) {
                if (this.props.hasOwnProperty(name)) {
                  if (name !== 'data' && name !== 'options') {
                    _props[name] = this.props[name];
                  }
                }
              }
              return React.createElement('canvas', _props);
            },
          };

          var extras = [
            'clear',
            'stop',
            'resize',
            'toBase64Image',
            'generateLegend',
            'update',
            'addData',
            'removeData',
          ];
          function extra(type) {
            classData[type] = function () {
              return this.state.chart[type].apply(this.state.chart, arguments);
            };
          }

          classData.componentDidMount = function () {
            this.initializeChart(this.props);
          };

          classData.componentWillUnmount = function () {
            var chart = this.state.chart;
            chart.destroy();
          };

          classData.componentWillReceiveProps = function (nextProps) {
            var chart = this.state.chart;

            if (nextProps.redraw) {
              chart.destroy(); // Reset the array of datasets
              this.initializeChart(nextProps);
            } else {
              // assign all of the properites from the next datasets to the current chart
              nextProps.data.datasets.forEach(function (set, setIndex) {
                var chartDataset = {};

                for (var property in set) {
                  if (set.hasOwnProperty(property)) {
                    chartDataset[property] = set[property];
                  }
                }

                chart.data.datasets[setIndex] = chartDataset;
              });

              chart.data.labels = nextProps.data.labels;

              chart.update();
            }
          };

          classData.initializeChart = function (nextProps) {
            var el = ReactDOM.findDOMNode(this);
            var ctx = el.getContext('2d');
            var type =
              chartType === 'PolarArea' ? 'polarArea' : chartType.toLowerCase();

            this.state.chart = new Chart(ctx, {
              type: type,
              data: nextProps.data,
              options: nextProps.options,
            });
          };

          // return the chartjs instance
          classData.getChart = function () {
            return this.state.chart;
          };

          // return the canvass element that contains the chart
          classData.getCanvass = function () {
            return this.refs.canvass;
          };

          classData.getCanvas = classData.getCanvass;

          var i;
          for (i = 0; i < extras.length; i++) {
            extra(extras[i]);
          }
          for (i = 0; i < methodNames.length; i++) {
            extra(methodNames[i]);
          }

          return React.createClass(classData);
        },
      };

      /***/
    },
    /* 819 */
    /***/ function (module, exports, __webpack_require__) {
      /**
       * @namespace Chart
       */
      var Chart = __webpack_require__(820)();

      __webpack_require__(821)(Chart);
      __webpack_require__(827)(Chart);
      __webpack_require__(828)(Chart);
      __webpack_require__(829)(Chart);
      __webpack_require__(830)(Chart);
      __webpack_require__(831)(Chart);
      __webpack_require__(832)(Chart);
      __webpack_require__(833)(Chart);
      __webpack_require__(834)(Chart);
      __webpack_require__(835)(Chart);
      __webpack_require__(836)(Chart);
      __webpack_require__(837)(Chart);
      __webpack_require__(838)(Chart);

      __webpack_require__(839)(Chart);
      __webpack_require__(840)(Chart);
      __webpack_require__(841)(Chart);
      __webpack_require__(842)(Chart);

      __webpack_require__(843)(Chart);
      __webpack_require__(844)(Chart);
      __webpack_require__(845)(Chart);
      __webpack_require__(846)(Chart);
      __webpack_require__(847)(Chart);
      __webpack_require__(848)(Chart);

      // Controllers must be loaded after elements
      // See Chart.core.datasetController.dataElementType
      __webpack_require__(955)(Chart);
      __webpack_require__(956)(Chart);
      __webpack_require__(957)(Chart);
      __webpack_require__(958)(Chart);
      __webpack_require__(959)(Chart);
      __webpack_require__(960)(Chart);

      __webpack_require__(961)(Chart);
      __webpack_require__(962)(Chart);
      __webpack_require__(963)(Chart);
      __webpack_require__(964)(Chart);
      __webpack_require__(965)(Chart);
      __webpack_require__(966)(Chart);
      __webpack_require__(967)(Chart);

      window.Chart = module.exports = Chart;

      /***/
    },
    /* 820 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function () {
        // Occupy the global variable of Chart, and create a simple base class
        var Chart = function (context, config) {
          var me = this;
          var helpers = Chart.helpers;
          me.config = config || {
            data: {
              datasets: [],
            },
          };

          // Support a jQuery'd canvas element
          if (context.length && context[0].getContext) {
            context = context[0];
          }

          // Support a canvas domnode
          if (context.getContext) {
            context = context.getContext('2d');
          }

          me.ctx = context;
          me.canvas = context.canvas;

          context.canvas.style.display =
            context.canvas.style.display || 'block';

          // Figure out what the size of the chart will be.
          // If the canvas has a specified width and height, we use those else
          // we look to see if the canvas node has a CSS width and height.
          // If there is still no height, fill the parent container
          me.width =
            context.canvas.width ||
            parseInt(helpers.getStyle(context.canvas, 'width'), 10) ||
            helpers.getMaximumWidth(context.canvas);
          me.height =
            context.canvas.height ||
            parseInt(helpers.getStyle(context.canvas, 'height'), 10) ||
            helpers.getMaximumHeight(context.canvas);

          me.aspectRatio = me.width / me.height;

          if (isNaN(me.aspectRatio) || isFinite(me.aspectRatio) === false) {
            // If the canvas has no size, try and figure out what the aspect ratio will be.
            // Some charts prefer square canvases (pie, radar, etc). If that is specified, use that
            // else use the canvas default ratio of 2
            me.aspectRatio =
              config.aspectRatio !== undefined ? config.aspectRatio : 2;
          }

          // Store the original style of the element so we can set it back
          me.originalCanvasStyleWidth = context.canvas.style.width;
          me.originalCanvasStyleHeight = context.canvas.style.height;

          // High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.
          helpers.retinaScale(me);
          me.controller = new Chart.Controller(me);

          // Always bind this so that if the responsive state changes we still work
          helpers.addResizeListener(context.canvas.parentNode, function () {
            if (me.controller && me.controller.config.options.responsive) {
              me.controller.resize();
            }
          });

          return me.controller ? me.controller : me;
        };

        // Globally expose the defaults to allow for user updating/changing
        Chart.defaults = {
          global: {
            responsive: true,
            responsiveAnimationDuration: 0,
            maintainAspectRatio: true,
            events: [
              'mousemove',
              'mouseout',
              'click',
              'touchstart',
              'touchmove',
            ],
            hover: {
              onHover: null,
              mode: 'single',
              animationDuration: 400,
            },
            onClick: null,
            defaultColor: 'rgba(0,0,0,0.1)',
            defaultFontColor: '#666',
            defaultFontFamily:
              "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
            defaultFontSize: 12,
            defaultFontStyle: 'normal',
            showLines: true,

            // Element defaults defined in element extensions
            elements: {},

            // Legend callback string
            legendCallback: function (chart) {
              var text = [];
              text.push('<ul class="' + chart.id + '-legend">');
              for (var i = 0; i < chart.data.datasets.length; i++) {
                text.push(
                  '<li><span style="background-color:' +
                    chart.data.datasets[i].backgroundColor +
                    '"></span>',
                );
                if (chart.data.datasets[i].label) {
                  text.push(chart.data.datasets[i].label);
                }
                text.push('</li>');
              }
              text.push('</ul>');

              return text.join('');
            },
          },
        };

        Chart.Chart = Chart;

        return Chart;
      };

      /***/
    },
    /* 821 */
    /***/ function (module, exports, __webpack_require__) {
      /* global window: false */
      /* global document: false */
      'use strict';

      var color = __webpack_require__(822);

      module.exports = function (Chart) {
        // Global Chart helpers object for utility methods and classes
        var helpers = (Chart.helpers = {});

        // -- Basic js utility methods
        helpers.each = function (loopable, callback, self, reverse) {
          // Check to see if null or undefined firstly.
          var i, len;
          if (helpers.isArray(loopable)) {
            len = loopable.length;
            if (reverse) {
              for (i = len - 1; i >= 0; i--) {
                callback.call(self, loopable[i], i);
              }
            } else {
              for (i = 0; i < len; i++) {
                callback.call(self, loopable[i], i);
              }
            }
          } else if (typeof loopable === 'object') {
            var keys = Object.keys(loopable);
            len = keys.length;
            for (i = 0; i < len; i++) {
              callback.call(self, loopable[keys[i]], keys[i]);
            }
          }
        };
        helpers.clone = function (obj) {
          var objClone = {};
          helpers.each(obj, function (value, key) {
            if (helpers.isArray(value)) {
              objClone[key] = value.slice(0);
            } else if (typeof value === 'object' && value !== null) {
              objClone[key] = helpers.clone(value);
            } else {
              objClone[key] = value;
            }
          });
          return objClone;
        };
        helpers.extend = function (base) {
          var setFn = function (value, key) {
            base[key] = value;
          };
          for (var i = 1, ilen = arguments.length; i < ilen; i++) {
            helpers.each(arguments[i], setFn);
          }
          return base;
        };
        // Need a special merge function to chart configs since they are now grouped
        helpers.configMerge = function (_base) {
          var base = helpers.clone(_base);
          helpers.each(Array.prototype.slice.call(arguments, 1), function (
            extension,
          ) {
            helpers.each(extension, function (value, key) {
              if (key === 'scales') {
                // Scale config merging is complex. Add out own function here for that
                base[key] = helpers.scaleMerge(
                  base.hasOwnProperty(key) ? base[key] : {},
                  value,
                );
              } else if (key === 'scale') {
                // Used in polar area & radar charts since there is only one scale
                base[key] = helpers.configMerge(
                  base.hasOwnProperty(key) ? base[key] : {},
                  Chart.scaleService.getScaleDefaults(value.type),
                  value,
                );
              } else if (
                base.hasOwnProperty(key) &&
                helpers.isArray(base[key]) &&
                helpers.isArray(value)
              ) {
                // In this case we have an array of objects replacing another array. Rather than doing a strict replace,
                // merge. This allows easy scale option merging
                var baseArray = base[key];

                helpers.each(value, function (valueObj, index) {
                  if (index < baseArray.length) {
                    if (
                      typeof baseArray[index] === 'object' &&
                      baseArray[index] !== null &&
                      typeof valueObj === 'object' &&
                      valueObj !== null
                    ) {
                      // Two objects are coming together. Do a merge of them.
                      baseArray[index] = helpers.configMerge(
                        baseArray[index],
                        valueObj,
                      );
                    } else {
                      // Just overwrite in this case since there is nothing to merge
                      baseArray[index] = valueObj;
                    }
                  } else {
                    baseArray.push(valueObj); // nothing to merge
                  }
                });
              } else if (
                base.hasOwnProperty(key) &&
                typeof base[key] === 'object' &&
                base[key] !== null &&
                typeof value === 'object'
              ) {
                // If we are overwriting an object with an object, do a merge of the properties.
                base[key] = helpers.configMerge(base[key], value);
              } else {
                // can just overwrite the value in this case
                base[key] = value;
              }
            });
          });

          return base;
        };
        helpers.scaleMerge = function (_base, extension) {
          var base = helpers.clone(_base);

          helpers.each(extension, function (value, key) {
            if (key === 'xAxes' || key === 'yAxes') {
              // These properties are arrays of items
              if (base.hasOwnProperty(key)) {
                helpers.each(value, function (valueObj, index) {
                  var axisType = helpers.getValueOrDefault(
                    valueObj.type,
                    key === 'xAxes' ? 'category' : 'linear',
                  );
                  var axisDefaults = Chart.scaleService.getScaleDefaults(
                    axisType,
                  );
                  if (index >= base[key].length || !base[key][index].type) {
                    base[key].push(helpers.configMerge(axisDefaults, valueObj));
                  } else if (
                    valueObj.type &&
                    valueObj.type !== base[key][index].type
                  ) {
                    // Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults
                    base[key][index] = helpers.configMerge(
                      base[key][index],
                      axisDefaults,
                      valueObj,
                    );
                  } else {
                    // Type is the same
                    base[key][index] = helpers.configMerge(
                      base[key][index],
                      valueObj,
                    );
                  }
                });
              } else {
                base[key] = [];
                helpers.each(value, function (valueObj) {
                  var axisType = helpers.getValueOrDefault(
                    valueObj.type,
                    key === 'xAxes' ? 'category' : 'linear',
                  );
                  base[key].push(
                    helpers.configMerge(
                      Chart.scaleService.getScaleDefaults(axisType),
                      valueObj,
                    ),
                  );
                });
              }
            } else if (
              base.hasOwnProperty(key) &&
              typeof base[key] === 'object' &&
              base[key] !== null &&
              typeof value === 'object'
            ) {
              // If we are overwriting an object with an object, do a merge of the properties.
              base[key] = helpers.configMerge(base[key], value);
            } else {
              // can just overwrite the value in this case
              base[key] = value;
            }
          });

          return base;
        };
        helpers.getValueAtIndexOrDefault = function (
          value,
          index,
          defaultValue,
        ) {
          if (value === undefined || value === null) {
            return defaultValue;
          }

          if (helpers.isArray(value)) {
            return index < value.length ? value[index] : defaultValue;
          }

          return value;
        };
        helpers.getValueOrDefault = function (value, defaultValue) {
          return value === undefined ? defaultValue : value;
        };
        helpers.indexOf = Array.prototype.indexOf
          ? function (array, item) {
              return array.indexOf(item);
            }
          : function (array, item) {
              for (var i = 0, ilen = array.length; i < ilen; ++i) {
                if (array[i] === item) {
                  return i;
                }
              }
              return -1;
            };
        helpers.where = function (collection, filterCallback) {
          if (helpers.isArray(collection) && Array.prototype.filter) {
            return collection.filter(filterCallback);
          }
          var filtered = [];

          helpers.each(collection, function (item) {
            if (filterCallback(item)) {
              filtered.push(item);
            }
          });

          return filtered;
        };
        helpers.findIndex = Array.prototype.findIndex
          ? function (array, callback, scope) {
              return array.findIndex(callback, scope);
            }
          : function (array, callback, scope) {
              scope = scope === undefined ? array : scope;
              for (var i = 0, ilen = array.length; i < ilen; ++i) {
                if (callback.call(scope, array[i], i, array)) {
                  return i;
                }
              }
              return -1;
            };
        helpers.findNextWhere = function (
          arrayToSearch,
          filterCallback,
          startIndex,
        ) {
          // Default to start of the array
          if (startIndex === undefined || startIndex === null) {
            startIndex = -1;
          }
          for (var i = startIndex + 1; i < arrayToSearch.length; i++) {
            var currentItem = arrayToSearch[i];
            if (filterCallback(currentItem)) {
              return currentItem;
            }
          }
        };
        helpers.findPreviousWhere = function (
          arrayToSearch,
          filterCallback,
          startIndex,
        ) {
          // Default to end of the array
          if (startIndex === undefined || startIndex === null) {
            startIndex = arrayToSearch.length;
          }
          for (var i = startIndex - 1; i >= 0; i--) {
            var currentItem = arrayToSearch[i];
            if (filterCallback(currentItem)) {
              return currentItem;
            }
          }
        };
        helpers.inherits = function (extensions) {
          // Basic javascript inheritance based on the model created in Backbone.js
          var me = this;
          var ChartElement =
            extensions && extensions.hasOwnProperty('constructor')
              ? extensions.constructor
              : function () {
                  return me.apply(this, arguments);
                };

          var Surrogate = function () {
            this.constructor = ChartElement;
          };
          Surrogate.prototype = me.prototype;
          ChartElement.prototype = new Surrogate();

          ChartElement.extend = helpers.inherits;

          if (extensions) {
            helpers.extend(ChartElement.prototype, extensions);
          }

          ChartElement.__super__ = me.prototype;

          return ChartElement;
        };
        helpers.noop = function () {};
        helpers.uid = (function () {
          var id = 0;
          return function () {
            return id++;
          };
        })();
        // -- Math methods
        helpers.isNumber = function (n) {
          return !isNaN(parseFloat(n)) && isFinite(n);
        };
        helpers.almostEquals = function (x, y, epsilon) {
          return Math.abs(x - y) < epsilon;
        };
        helpers.max = function (array) {
          return array.reduce(function (max, value) {
            if (!isNaN(value)) {
              return Math.max(max, value);
            }
            return max;
          }, Number.NEGATIVE_INFINITY);
        };
        helpers.min = function (array) {
          return array.reduce(function (min, value) {
            if (!isNaN(value)) {
              return Math.min(min, value);
            }
            return min;
          }, Number.POSITIVE_INFINITY);
        };
        helpers.sign = Math.sign
          ? function (x) {
              return Math.sign(x);
            }
          : function (x) {
              x = +x; // convert to a number
              if (x === 0 || isNaN(x)) {
                return x;
              }
              return x > 0 ? 1 : -1;
            };
        helpers.log10 = Math.log10
          ? function (x) {
              return Math.log10(x);
            }
          : function (x) {
              return Math.log(x) / Math.LN10;
            };
        helpers.toRadians = function (degrees) {
          return degrees * (Math.PI / 180);
        };
        helpers.toDegrees = function (radians) {
          return radians * (180 / Math.PI);
        };
        // Gets the angle from vertical upright to the point about a centre.
        helpers.getAngleFromPoint = function (centrePoint, anglePoint) {
          var distanceFromXCenter = anglePoint.x - centrePoint.x,
            distanceFromYCenter = anglePoint.y - centrePoint.y,
            radialDistanceFromCenter = Math.sqrt(
              distanceFromXCenter * distanceFromXCenter +
                distanceFromYCenter * distanceFromYCenter,
            );

          var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);

          if (angle < -0.5 * Math.PI) {
            angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]
          }

          return {
            angle: angle,
            distance: radialDistanceFromCenter,
          };
        };
        helpers.aliasPixel = function (pixelWidth) {
          return pixelWidth % 2 === 0 ? 0 : 0.5;
        };
        helpers.splineCurve = function (
          firstPoint,
          middlePoint,
          afterPoint,
          t,
        ) {
          // Props to Rob Spencer at scaled innovation for his post on splining between points
          // http://scaledinnovation.com/analytics/splines/aboutSplines.html

          // This function must also respect "skipped" points

          var previous = firstPoint.skip ? middlePoint : firstPoint,
            current = middlePoint,
            next = afterPoint.skip ? middlePoint : afterPoint;

          var d01 = Math.sqrt(
            Math.pow(current.x - previous.x, 2) +
              Math.pow(current.y - previous.y, 2),
          );
          var d12 = Math.sqrt(
            Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2),
          );

          var s01 = d01 / (d01 + d12);
          var s12 = d12 / (d01 + d12);

          // If all points are the same, s01 & s02 will be inf
          s01 = isNaN(s01) ? 0 : s01;
          s12 = isNaN(s12) ? 0 : s12;

          var fa = t * s01; // scaling factor for triangle Ta
          var fb = t * s12;

          return {
            previous: {
              x: current.x - fa * (next.x - previous.x),
              y: current.y - fa * (next.y - previous.y),
            },
            next: {
              x: current.x + fb * (next.x - previous.x),
              y: current.y + fb * (next.y - previous.y),
            },
          };
        };
        helpers.EPSILON = Number.EPSILON || 1e-14;
        helpers.splineCurveMonotone = function (points) {
          // This function calculates Bézier control points in a similar way than |splineCurve|,
          // but preserves monotonicity of the provided data and ensures no local extremums are added
          // between the dataset discrete points due to the interpolation.
          // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation

          var pointsWithTangents = (points || []).map(function (point) {
            return {
              model: point._model,
              deltaK: 0,
              mK: 0,
            };
          });

          // Calculate slopes (deltaK) and initialize tangents (mK)
          var pointsLen = pointsWithTangents.length;
          var i, pointBefore, pointCurrent, pointAfter;
          for (i = 0; i < pointsLen; ++i) {
            pointCurrent = pointsWithTangents[i];
            if (pointCurrent.model.skip) {
              continue;
            }

            pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
            pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
            if (pointAfter && !pointAfter.model.skip) {
              pointCurrent.deltaK =
                (pointAfter.model.y - pointCurrent.model.y) /
                (pointAfter.model.x - pointCurrent.model.x);
            }

            if (!pointBefore || pointBefore.model.skip) {
              pointCurrent.mK = pointCurrent.deltaK;
            } else if (!pointAfter || pointAfter.model.skip) {
              pointCurrent.mK = pointBefore.deltaK;
            } else if (
              this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)
            ) {
              pointCurrent.mK = 0;
            } else {
              pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;
            }
          }

          // Adjust tangents to ensure monotonic properties
          var alphaK, betaK, tauK, squaredMagnitude;
          for (i = 0; i < pointsLen - 1; ++i) {
            pointCurrent = pointsWithTangents[i];
            pointAfter = pointsWithTangents[i + 1];
            if (pointCurrent.model.skip || pointAfter.model.skip) {
              continue;
            }

            if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {
              pointCurrent.mK = pointAfter.mK = 0;
              continue;
            }

            alphaK = pointCurrent.mK / pointCurrent.deltaK;
            betaK = pointAfter.mK / pointCurrent.deltaK;
            squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);
            if (squaredMagnitude <= 9) {
              continue;
            }

            tauK = 3 / Math.sqrt(squaredMagnitude);
            pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;
            pointAfter.mK = betaK * tauK * pointCurrent.deltaK;
          }

          // Compute control points
          var deltaX;
          for (i = 0; i < pointsLen; ++i) {
            pointCurrent = pointsWithTangents[i];
            if (pointCurrent.model.skip) {
              continue;
            }

            pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
            pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
            if (pointBefore && !pointBefore.model.skip) {
              deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;
              pointCurrent.model.controlPointPreviousX =
                pointCurrent.model.x - deltaX;
              pointCurrent.model.controlPointPreviousY =
                pointCurrent.model.y - deltaX * pointCurrent.mK;
            }
            if (pointAfter && !pointAfter.model.skip) {
              deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;
              pointCurrent.model.controlPointNextX =
                pointCurrent.model.x + deltaX;
              pointCurrent.model.controlPointNextY =
                pointCurrent.model.y + deltaX * pointCurrent.mK;
            }
          }
        };
        helpers.nextItem = function (collection, index, loop) {
          if (loop) {
            return index >= collection.length - 1
              ? collection[0]
              : collection[index + 1];
          }
          return index >= collection.length - 1
            ? collection[collection.length - 1]
            : collection[index + 1];
        };
        helpers.previousItem = function (collection, index, loop) {
          if (loop) {
            return index <= 0
              ? collection[collection.length - 1]
              : collection[index - 1];
          }
          return index <= 0 ? collection[0] : collection[index - 1];
        };
        // Implementation of the nice number algorithm used in determining where axis labels will go
        helpers.niceNum = function (range, round) {
          var exponent = Math.floor(helpers.log10(range));
          var fraction = range / Math.pow(10, exponent);
          var niceFraction;

          if (round) {
            if (fraction < 1.5) {
              niceFraction = 1;
            } else if (fraction < 3) {
              niceFraction = 2;
            } else if (fraction < 7) {
              niceFraction = 5;
            } else {
              niceFraction = 10;
            }
          } else if (fraction <= 1.0) {
            niceFraction = 1;
          } else if (fraction <= 2) {
            niceFraction = 2;
          } else if (fraction <= 5) {
            niceFraction = 5;
          } else {
            niceFraction = 10;
          }

          return niceFraction * Math.pow(10, exponent);
        };
        // Easing functions adapted from Robert Penner's easing equations
        // http://www.robertpenner.com/easing/
        var easingEffects = (helpers.easingEffects = {
          linear: function (t) {
            return t;
          },
          easeInQuad: function (t) {
            return t * t;
          },
          easeOutQuad: function (t) {
            return -1 * t * (t - 2);
          },
          easeInOutQuad: function (t) {
            if ((t /= 1 / 2) < 1) {
              return (1 / 2) * t * t;
            }
            return (-1 / 2) * (--t * (t - 2) - 1);
          },
          easeInCubic: function (t) {
            return t * t * t;
          },
          easeOutCubic: function (t) {
            return 1 * ((t = t / 1 - 1) * t * t + 1);
          },
          easeInOutCubic: function (t) {
            if ((t /= 1 / 2) < 1) {
              return (1 / 2) * t * t * t;
            }
            return (1 / 2) * ((t -= 2) * t * t + 2);
          },
          easeInQuart: function (t) {
            return t * t * t * t;
          },
          easeOutQuart: function (t) {
            return -1 * ((t = t / 1 - 1) * t * t * t - 1);
          },
          easeInOutQuart: function (t) {
            if ((t /= 1 / 2) < 1) {
              return (1 / 2) * t * t * t * t;
            }
            return (-1 / 2) * ((t -= 2) * t * t * t - 2);
          },
          easeInQuint: function (t) {
            return 1 * (t /= 1) * t * t * t * t;
          },
          easeOutQuint: function (t) {
            return 1 * ((t = t / 1 - 1) * t * t * t * t + 1);
          },
          easeInOutQuint: function (t) {
            if ((t /= 1 / 2) < 1) {
              return (1 / 2) * t * t * t * t * t;
            }
            return (1 / 2) * ((t -= 2) * t * t * t * t + 2);
          },
          easeInSine: function (t) {
            return -1 * Math.cos((t / 1) * (Math.PI / 2)) + 1;
          },
          easeOutSine: function (t) {
            return 1 * Math.sin((t / 1) * (Math.PI / 2));
          },
          easeInOutSine: function (t) {
            return (-1 / 2) * (Math.cos((Math.PI * t) / 1) - 1);
          },
          easeInExpo: function (t) {
            return t === 0 ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));
          },
          easeOutExpo: function (t) {
            return t === 1 ? 1 : 1 * (-Math.pow(2, (-10 * t) / 1) + 1);
          },
          easeInOutExpo: function (t) {
            if (t === 0) {
              return 0;
            }
            if (t === 1) {
              return 1;
            }
            if ((t /= 1 / 2) < 1) {
              return (1 / 2) * Math.pow(2, 10 * (t - 1));
            }
            return (1 / 2) * (-Math.pow(2, -10 * --t) + 2);
          },
          easeInCirc: function (t) {
            if (t >= 1) {
              return t;
            }
            return -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);
          },
          easeOutCirc: function (t) {
            return 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);
          },
          easeInOutCirc: function (t) {
            if ((t /= 1 / 2) < 1) {
              return (-1 / 2) * (Math.sqrt(1 - t * t) - 1);
            }
            return (1 / 2) * (Math.sqrt(1 - (t -= 2) * t) + 1);
          },
          easeInElastic: function (t) {
            var s = 1.70158;
            var p = 0;
            var a = 1;
            if (t === 0) {
              return 0;
            }
            if ((t /= 1) === 1) {
              return 1;
            }
            if (!p) {
              p = 1 * 0.3;
            }
            if (a < Math.abs(1)) {
              a = 1;
              s = p / 4;
            } else {
              s = (p / (2 * Math.PI)) * Math.asin(1 / a);
            }
            return -(
              a *
              Math.pow(2, 10 * (t -= 1)) *
              Math.sin(((t * 1 - s) * (2 * Math.PI)) / p)
            );
          },
          easeOutElastic: function (t) {
            var s = 1.70158;
            var p = 0;
            var a = 1;
            if (t === 0) {
              return 0;
            }
            if ((t /= 1) === 1) {
              return 1;
            }
            if (!p) {
              p = 1 * 0.3;
            }
            if (a < Math.abs(1)) {
              a = 1;
              s = p / 4;
            } else {
              s = (p / (2 * Math.PI)) * Math.asin(1 / a);
            }
            return (
              a *
                Math.pow(2, -10 * t) *
                Math.sin(((t * 1 - s) * (2 * Math.PI)) / p) +
              1
            );
          },
          easeInOutElastic: function (t) {
            var s = 1.70158;
            var p = 0;
            var a = 1;
            if (t === 0) {
              return 0;
            }
            if ((t /= 1 / 2) === 2) {
              return 1;
            }
            if (!p) {
              p = 1 * (0.3 * 1.5);
            }
            if (a < Math.abs(1)) {
              a = 1;
              s = p / 4;
            } else {
              s = (p / (2 * Math.PI)) * Math.asin(1 / a);
            }
            if (t < 1) {
              return (
                -0.5 *
                (a *
                  Math.pow(2, 10 * (t -= 1)) *
                  Math.sin(((t * 1 - s) * (2 * Math.PI)) / p))
              );
            }
            return (
              a *
                Math.pow(2, -10 * (t -= 1)) *
                Math.sin(((t * 1 - s) * (2 * Math.PI)) / p) *
                0.5 +
              1
            );
          },
          easeInBack: function (t) {
            var s = 1.70158;
            return 1 * (t /= 1) * t * ((s + 1) * t - s);
          },
          easeOutBack: function (t) {
            var s = 1.70158;
            return 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);
          },
          easeInOutBack: function (t) {
            var s = 1.70158;
            if ((t /= 1 / 2) < 1) {
              return (1 / 2) * (t * t * (((s *= 1.525) + 1) * t - s));
            }
            return (1 / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);
          },
          easeInBounce: function (t) {
            return 1 - easingEffects.easeOutBounce(1 - t);
          },
          easeOutBounce: function (t) {
            if ((t /= 1) < 1 / 2.75) {
              return 1 * (7.5625 * t * t);
            } else if (t < 2 / 2.75) {
              return 1 * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75);
            } else if (t < 2.5 / 2.75) {
              return 1 * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375);
            }
            return 1 * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375);
          },
          easeInOutBounce: function (t) {
            if (t < 1 / 2) {
              return easingEffects.easeInBounce(t * 2) * 0.5;
            }
            return easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;
          },
        });
        // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
        helpers.requestAnimFrame = (function () {
          return (
            window.requestAnimationFrame ||
            window.webkitRequestAnimationFrame ||
            window.mozRequestAnimationFrame ||
            window.oRequestAnimationFrame ||
            window.msRequestAnimationFrame ||
            function (callback) {
              return window.setTimeout(callback, 1000 / 60);
            }
          );
        })();
        helpers.cancelAnimFrame = (function () {
          return (
            window.cancelAnimationFrame ||
            window.webkitCancelAnimationFrame ||
            window.mozCancelAnimationFrame ||
            window.oCancelAnimationFrame ||
            window.msCancelAnimationFrame ||
            function (callback) {
              return window.clearTimeout(callback, 1000 / 60);
            }
          );
        })();
        // -- DOM methods
        helpers.getRelativePosition = function (evt, chart) {
          var mouseX, mouseY;
          var e = evt.originalEvent || evt,
            canvas = evt.currentTarget || evt.srcElement,
            boundingRect = canvas.getBoundingClientRect();

          var touches = e.touches;
          if (touches && touches.length > 0) {
            mouseX = touches[0].clientX;
            mouseY = touches[0].clientY;
          } else {
            mouseX = e.clientX;
            mouseY = e.clientY;
          }

          // Scale mouse coordinates into canvas coordinates
          // by following the pattern laid out by 'jerryj' in the comments of
          // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/
          var paddingLeft = parseFloat(
            helpers.getStyle(canvas, 'padding-left'),
          );
          var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));
          var paddingRight = parseFloat(
            helpers.getStyle(canvas, 'padding-right'),
          );
          var paddingBottom = parseFloat(
            helpers.getStyle(canvas, 'padding-bottom'),
          );
          var width =
            boundingRect.right - boundingRect.left - paddingLeft - paddingRight;
          var height =
            boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;

          // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However
          // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here
          mouseX = Math.round(
            (((mouseX - boundingRect.left - paddingLeft) / width) *
              canvas.width) /
              chart.currentDevicePixelRatio,
          );
          mouseY = Math.round(
            (((mouseY - boundingRect.top - paddingTop) / height) *
              canvas.height) /
              chart.currentDevicePixelRatio,
          );

          return {
            x: mouseX,
            y: mouseY,
          };
        };
        helpers.addEvent = function (node, eventType, method) {
          if (node.addEventListener) {
            node.addEventListener(eventType, method);
          } else if (node.attachEvent) {
            node.attachEvent('on' + eventType, method);
          } else {
            node['on' + eventType] = method;
          }
        };
        helpers.removeEvent = function (node, eventType, handler) {
          if (node.removeEventListener) {
            node.removeEventListener(eventType, handler, false);
          } else if (node.detachEvent) {
            node.detachEvent('on' + eventType, handler);
          } else {
            node['on' + eventType] = helpers.noop;
          }
        };
        helpers.bindEvents = function (chartInstance, arrayOfEvents, handler) {
          // Create the events object if it's not already present
          var events = (chartInstance.events = chartInstance.events || {});

          helpers.each(arrayOfEvents, function (eventName) {
            events[eventName] = function () {
              handler.apply(chartInstance, arguments);
            };
            helpers.addEvent(
              chartInstance.chart.canvas,
              eventName,
              events[eventName],
            );
          });
        };
        helpers.unbindEvents = function (chartInstance, arrayOfEvents) {
          var canvas = chartInstance.chart.canvas;
          helpers.each(arrayOfEvents, function (handler, eventName) {
            helpers.removeEvent(canvas, eventName, handler);
          });
        };

        // Private helper function to convert max-width/max-height values that may be percentages into a number
        function parseMaxStyle(styleValue, node, parentProperty) {
          var valueInPixels;
          if (typeof styleValue === 'string') {
            valueInPixels = parseInt(styleValue, 10);

            if (styleValue.indexOf('%') !== -1) {
              // percentage * size in dimension
              valueInPixels =
                (valueInPixels / 100) * node.parentNode[parentProperty];
            }
          } else {
            valueInPixels = styleValue;
          }

          return valueInPixels;
        }

        /**
         * Returns if the given value contains an effective constraint.
         * @private
         */
        function isConstrainedValue(value) {
          return value !== undefined && value !== null && value !== 'none';
        }

        // Private helper to get a constraint dimension
        // @param domNode : the node to check the constraint on
        // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)
        // @param percentageProperty : property of parent to use when calculating width as a percentage
        // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser
        function getConstraintDimension(domNode, maxStyle, percentageProperty) {
          var view = document.defaultView;
          var parentNode = domNode.parentNode;
          var constrainedNode = view.getComputedStyle(domNode)[maxStyle];
          var constrainedContainer = view.getComputedStyle(parentNode)[
            maxStyle
          ];
          var hasCNode = isConstrainedValue(constrainedNode);
          var hasCContainer = isConstrainedValue(constrainedContainer);
          var infinity = Number.POSITIVE_INFINITY;

          if (hasCNode || hasCContainer) {
            return Math.min(
              hasCNode
                ? parseMaxStyle(constrainedNode, domNode, percentageProperty)
                : infinity,
              hasCContainer
                ? parseMaxStyle(
                    constrainedContainer,
                    parentNode,
                    percentageProperty,
                  )
                : infinity,
            );
          }

          return 'none';
        }
        // returns Number or undefined if no constraint
        helpers.getConstraintWidth = function (domNode) {
          return getConstraintDimension(domNode, 'max-width', 'clientWidth');
        };
        // returns Number or undefined if no constraint
        helpers.getConstraintHeight = function (domNode) {
          return getConstraintDimension(domNode, 'max-height', 'clientHeight');
        };
        helpers.getMaximumWidth = function (domNode) {
          var container = domNode.parentNode;
          var paddingLeft = parseInt(
            helpers.getStyle(container, 'padding-left'),
            10,
          );
          var paddingRight = parseInt(
            helpers.getStyle(container, 'padding-right'),
            10,
          );
          var w = container.clientWidth - paddingLeft - paddingRight;
          var cw = helpers.getConstraintWidth(domNode);
          return isNaN(cw) ? w : Math.min(w, cw);
        };
        helpers.getMaximumHeight = function (domNode) {
          var container = domNode.parentNode;
          var paddingTop = parseInt(
            helpers.getStyle(container, 'padding-top'),
            10,
          );
          var paddingBottom = parseInt(
            helpers.getStyle(container, 'padding-bottom'),
            10,
          );
          var h = container.clientHeight - paddingTop - paddingBottom;
          var ch = helpers.getConstraintHeight(domNode);
          return isNaN(ch) ? h : Math.min(h, ch);
        };
        helpers.getStyle = function (el, property) {
          return el.currentStyle
            ? el.currentStyle[property]
            : document.defaultView
                .getComputedStyle(el, null)
                .getPropertyValue(property);
        };
        helpers.retinaScale = function (chart) {
          var ctx = chart.ctx;
          var canvas = chart.canvas;
          var width = canvas.width;
          var height = canvas.height;
          var pixelRatio = (chart.currentDevicePixelRatio =
            window.devicePixelRatio || 1);

          if (pixelRatio !== 1) {
            canvas.height = height * pixelRatio;
            canvas.width = width * pixelRatio;
            ctx.scale(pixelRatio, pixelRatio);

            // Store the device pixel ratio so that we can go backwards in `destroy`.
            // The devicePixelRatio changes with zoom, so there are no guarantees that it is the same
            // when destroy is called
            chart.originalDevicePixelRatio =
              chart.originalDevicePixelRatio || pixelRatio;
          }

          canvas.style.width = width + 'px';
          canvas.style.height = height + 'px';
        };
        // -- Canvas methods
        helpers.clear = function (chart) {
          chart.ctx.clearRect(0, 0, chart.width, chart.height);
        };
        helpers.fontString = function (pixelSize, fontStyle, fontFamily) {
          return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;
        };
        helpers.longestText = function (ctx, font, arrayOfThings, cache) {
          cache = cache || {};
          var data = (cache.data = cache.data || {});
          var gc = (cache.garbageCollect = cache.garbageCollect || []);

          if (cache.font !== font) {
            data = cache.data = {};
            gc = cache.garbageCollect = [];
            cache.font = font;
          }

          ctx.font = font;
          var longest = 0;
          helpers.each(arrayOfThings, function (thing) {
            // Undefined strings and arrays should not be measured
            if (
              thing !== undefined &&
              thing !== null &&
              helpers.isArray(thing) !== true
            ) {
              longest = helpers.measureText(ctx, data, gc, longest, thing);
            } else if (helpers.isArray(thing)) {
              // if it is an array lets measure each element
              // to do maybe simplify this function a bit so we can do this more recursively?
              helpers.each(thing, function (nestedThing) {
                // Undefined strings and arrays should not be measured
                if (
                  nestedThing !== undefined &&
                  nestedThing !== null &&
                  !helpers.isArray(nestedThing)
                ) {
                  longest = helpers.measureText(
                    ctx,
                    data,
                    gc,
                    longest,
                    nestedThing,
                  );
                }
              });
            }
          });

          var gcLen = gc.length / 2;
          if (gcLen > arrayOfThings.length) {
            for (var i = 0; i < gcLen; i++) {
              delete data[gc[i]];
            }
            gc.splice(0, gcLen);
          }
          return longest;
        };
        helpers.measureText = function (ctx, data, gc, longest, string) {
          var textWidth = data[string];
          if (!textWidth) {
            textWidth = data[string] = ctx.measureText(string).width;
            gc.push(string);
          }
          if (textWidth > longest) {
            longest = textWidth;
          }
          return longest;
        };
        helpers.numberOfLabelLines = function (arrayOfThings) {
          var numberOfLines = 1;
          helpers.each(arrayOfThings, function (thing) {
            if (helpers.isArray(thing)) {
              if (thing.length > numberOfLines) {
                numberOfLines = thing.length;
              }
            }
          });
          return numberOfLines;
        };
        helpers.drawRoundedRectangle = function (
          ctx,
          x,
          y,
          width,
          height,
          radius,
        ) {
          ctx.beginPath();
          ctx.moveTo(x + radius, y);
          ctx.lineTo(x + width - radius, y);
          ctx.quadraticCurveTo(x + width, y, x + width, y + radius);
          ctx.lineTo(x + width, y + height - radius);
          ctx.quadraticCurveTo(
            x + width,
            y + height,
            x + width - radius,
            y + height,
          );
          ctx.lineTo(x + radius, y + height);
          ctx.quadraticCurveTo(x, y + height, x, y + height - radius);
          ctx.lineTo(x, y + radius);
          ctx.quadraticCurveTo(x, y, x + radius, y);
          ctx.closePath();
        };
        helpers.color = function (c) {
          if (!color) {
            console.error('Color.js not found!');
            return c;
          }

          /* global CanvasGradient */
          if (c instanceof CanvasGradient) {
            return color(Chart.defaults.global.defaultColor);
          }

          return color(c);
        };
        helpers.addResizeListener = function (node, callback) {
          // Hide an iframe before the node
          var hiddenIframe = document.createElement('iframe');
          var hiddenIframeClass = 'chartjs-hidden-iframe';

          if (hiddenIframe.classlist) {
            // can use classlist
            hiddenIframe.classlist.add(hiddenIframeClass);
          } else {
            hiddenIframe.setAttribute('class', hiddenIframeClass);
          }

          // Set the style
          hiddenIframe.tabIndex = -1;
          var style = hiddenIframe.style;
          style.width = '100%';
          style.display = 'block';
          style.border = 0;
          style.height = 0;
          style.margin = 0;
          style.position = 'absolute';
          style.left = 0;
          style.right = 0;
          style.top = 0;
          style.bottom = 0;

          // Insert the iframe so that contentWindow is available
          node.insertBefore(hiddenIframe, node.firstChild);

          (hiddenIframe.contentWindow || hiddenIframe).onresize = function () {
            if (callback) {
              return callback();
            }
          };
        };
        helpers.removeResizeListener = function (node) {
          var hiddenIframe = node.querySelector('.chartjs-hidden-iframe');

          // Remove the resize detect iframe
          if (hiddenIframe) {
            hiddenIframe.parentNode.removeChild(hiddenIframe);
          }
        };
        helpers.isArray = Array.isArray
          ? function (obj) {
              return Array.isArray(obj);
            }
          : function (obj) {
              return Object.prototype.toString.call(obj) === '[object Array]';
            };
        // ! @see http://stackoverflow.com/a/14853974
        helpers.arrayEquals = function (a0, a1) {
          var i, ilen, v0, v1;

          if (!a0 || !a1 || a0.length !== a1.length) {
            return false;
          }

          for (i = 0, ilen = a0.length; i < ilen; ++i) {
            v0 = a0[i];
            v1 = a1[i];

            if (v0 instanceof Array && v1 instanceof Array) {
              if (!helpers.arrayEquals(v0, v1)) {
                return false;
              }
            } else if (v0 !== v1) {
              // NOTE: two different object instances will never be equal: {x:20} != {x:20}
              return false;
            }
          }

          return true;
        };
        helpers.callCallback = function (fn, args, _tArg) {
          if (fn && typeof fn.call === 'function') {
            fn.apply(_tArg, args);
          }
        };
        helpers.getHoverColor = function (colorValue) {
          /* global CanvasPattern */
          return colorValue instanceof CanvasPattern
            ? colorValue
            : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();
        };
      };

      /***/
    },
    /* 822 */
    /***/ function (module, exports, __webpack_require__) {
      /* MIT license */
      var convert = __webpack_require__(823);
      var string = __webpack_require__(825);

      var Color = function (obj) {
        if (obj instanceof Color) {
          return obj;
        }
        if (!(this instanceof Color)) {
          return new Color(obj);
        }

        this.values = {
          rgb: [0, 0, 0],
          hsl: [0, 0, 0],
          hsv: [0, 0, 0],
          hwb: [0, 0, 0],
          cmyk: [0, 0, 0, 0],
          alpha: 1,
        };

        // parse Color() argument
        var vals;
        if (typeof obj === 'string') {
          vals = string.getRgba(obj);
          if (vals) {
            this.setValues('rgb', vals);
          } else if ((vals = string.getHsla(obj))) {
            this.setValues('hsl', vals);
          } else if ((vals = string.getHwb(obj))) {
            this.setValues('hwb', vals);
          } else {
            throw new Error('Unable to parse color from string "' + obj + '"');
          }
        } else if (typeof obj === 'object') {
          vals = obj;
          if (vals.r !== undefined || vals.red !== undefined) {
            this.setValues('rgb', vals);
          } else if (vals.l !== undefined || vals.lightness !== undefined) {
            this.setValues('hsl', vals);
          } else if (vals.v !== undefined || vals.value !== undefined) {
            this.setValues('hsv', vals);
          } else if (vals.w !== undefined || vals.whiteness !== undefined) {
            this.setValues('hwb', vals);
          } else if (vals.c !== undefined || vals.cyan !== undefined) {
            this.setValues('cmyk', vals);
          } else {
            throw new Error(
              'Unable to parse color from object ' + JSON.stringify(obj),
            );
          }
        }
      };

      Color.prototype = {
        rgb: function () {
          return this.setSpace('rgb', arguments);
        },
        hsl: function () {
          return this.setSpace('hsl', arguments);
        },
        hsv: function () {
          return this.setSpace('hsv', arguments);
        },
        hwb: function () {
          return this.setSpace('hwb', arguments);
        },
        cmyk: function () {
          return this.setSpace('cmyk', arguments);
        },

        rgbArray: function () {
          return this.values.rgb;
        },
        hslArray: function () {
          return this.values.hsl;
        },
        hsvArray: function () {
          return this.values.hsv;
        },
        hwbArray: function () {
          var values = this.values;
          if (values.alpha !== 1) {
            return values.hwb.concat([values.alpha]);
          }
          return values.hwb;
        },
        cmykArray: function () {
          return this.values.cmyk;
        },
        rgbaArray: function () {
          var values = this.values;
          return values.rgb.concat([values.alpha]);
        },
        hslaArray: function () {
          var values = this.values;
          return values.hsl.concat([values.alpha]);
        },
        alpha: function (val) {
          if (val === undefined) {
            return this.values.alpha;
          }
          this.setValues('alpha', val);
          return this;
        },

        red: function (val) {
          return this.setChannel('rgb', 0, val);
        },
        green: function (val) {
          return this.setChannel('rgb', 1, val);
        },
        blue: function (val) {
          return this.setChannel('rgb', 2, val);
        },
        hue: function (val) {
          if (val) {
            val %= 360;
            val = val < 0 ? 360 + val : val;
          }
          return this.setChannel('hsl', 0, val);
        },
        saturation: function (val) {
          return this.setChannel('hsl', 1, val);
        },
        lightness: function (val) {
          return this.setChannel('hsl', 2, val);
        },
        saturationv: function (val) {
          return this.setChannel('hsv', 1, val);
        },
        whiteness: function (val) {
          return this.setChannel('hwb', 1, val);
        },
        blackness: function (val) {
          return this.setChannel('hwb', 2, val);
        },
        value: function (val) {
          return this.setChannel('hsv', 2, val);
        },
        cyan: function (val) {
          return this.setChannel('cmyk', 0, val);
        },
        magenta: function (val) {
          return this.setChannel('cmyk', 1, val);
        },
        yellow: function (val) {
          return this.setChannel('cmyk', 2, val);
        },
        black: function (val) {
          return this.setChannel('cmyk', 3, val);
        },

        hexString: function () {
          return string.hexString(this.values.rgb);
        },
        rgbString: function () {
          return string.rgbString(this.values.rgb, this.values.alpha);
        },
        rgbaString: function () {
          return string.rgbaString(this.values.rgb, this.values.alpha);
        },
        percentString: function () {
          return string.percentString(this.values.rgb, this.values.alpha);
        },
        hslString: function () {
          return string.hslString(this.values.hsl, this.values.alpha);
        },
        hslaString: function () {
          return string.hslaString(this.values.hsl, this.values.alpha);
        },
        hwbString: function () {
          return string.hwbString(this.values.hwb, this.values.alpha);
        },
        keyword: function () {
          return string.keyword(this.values.rgb, this.values.alpha);
        },

        rgbNumber: function () {
          var rgb = this.values.rgb;
          return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];
        },

        luminosity: function () {
          // http://www.w3.org/TR/WCAG20/#relativeluminancedef
          var rgb = this.values.rgb;
          var lum = [];
          for (var i = 0; i < rgb.length; i++) {
            var chan = rgb[i] / 255;
            lum[i] =
              chan <= 0.03928
                ? chan / 12.92
                : Math.pow((chan + 0.055) / 1.055, 2.4);
          }
          return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
        },

        contrast: function (color2) {
          // http://www.w3.org/TR/WCAG20/#contrast-ratiodef
          var lum1 = this.luminosity();
          var lum2 = color2.luminosity();
          if (lum1 > lum2) {
            return (lum1 + 0.05) / (lum2 + 0.05);
          }
          return (lum2 + 0.05) / (lum1 + 0.05);
        },

        level: function (color2) {
          var contrastRatio = this.contrast(color2);
          if (contrastRatio >= 7.1) {
            return 'AAA';
          }

          return contrastRatio >= 4.5 ? 'AA' : '';
        },

        dark: function () {
          // YIQ equation from http://24ways.org/2010/calculating-color-contrast
          var rgb = this.values.rgb;
          var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
          return yiq < 128;
        },

        light: function () {
          return !this.dark();
        },

        negate: function () {
          var rgb = [];
          for (var i = 0; i < 3; i++) {
            rgb[i] = 255 - this.values.rgb[i];
          }
          this.setValues('rgb', rgb);
          return this;
        },

        lighten: function (ratio) {
          var hsl = this.values.hsl;
          hsl[2] += hsl[2] * ratio;
          this.setValues('hsl', hsl);
          return this;
        },

        darken: function (ratio) {
          var hsl = this.values.hsl;
          hsl[2] -= hsl[2] * ratio;
          this.setValues('hsl', hsl);
          return this;
        },

        saturate: function (ratio) {
          var hsl = this.values.hsl;
          hsl[1] += hsl[1] * ratio;
          this.setValues('hsl', hsl);
          return this;
        },

        desaturate: function (ratio) {
          var hsl = this.values.hsl;
          hsl[1] -= hsl[1] * ratio;
          this.setValues('hsl', hsl);
          return this;
        },

        whiten: function (ratio) {
          var hwb = this.values.hwb;
          hwb[1] += hwb[1] * ratio;
          this.setValues('hwb', hwb);
          return this;
        },

        blacken: function (ratio) {
          var hwb = this.values.hwb;
          hwb[2] += hwb[2] * ratio;
          this.setValues('hwb', hwb);
          return this;
        },

        greyscale: function () {
          var rgb = this.values.rgb;
          // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
          var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
          this.setValues('rgb', [val, val, val]);
          return this;
        },

        clearer: function (ratio) {
          var alpha = this.values.alpha;
          this.setValues('alpha', alpha - alpha * ratio);
          return this;
        },

        opaquer: function (ratio) {
          var alpha = this.values.alpha;
          this.setValues('alpha', alpha + alpha * ratio);
          return this;
        },

        rotate: function (degrees) {
          var hsl = this.values.hsl;
          var hue = (hsl[0] + degrees) % 360;
          hsl[0] = hue < 0 ? 360 + hue : hue;
          this.setValues('hsl', hsl);
          return this;
        },

        /**
         * Ported from sass implementation in C
         * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
         */
        mix: function (mixinColor, weight) {
          var color1 = this;
          var color2 = mixinColor;
          var p = weight === undefined ? 0.5 : weight;

          var w = 2 * p - 1;
          var a = color1.alpha() - color2.alpha();

          var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
          var w2 = 1 - w1;

          return this.rgb(
            w1 * color1.red() + w2 * color2.red(),
            w1 * color1.green() + w2 * color2.green(),
            w1 * color1.blue() + w2 * color2.blue(),
          ).alpha(color1.alpha() * p + color2.alpha() * (1 - p));
        },

        toJSON: function () {
          return this.rgb();
        },

        clone: function () {
          // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,
          // making the final build way to big to embed in Chart.js. So let's do it manually,
          // assuming that values to clone are 1 dimension arrays containing only numbers,
          // except 'alpha' which is a number.
          var result = new Color();
          var source = this.values;
          var target = result.values;
          var value, type;

          for (var prop in source) {
            if (source.hasOwnProperty(prop)) {
              value = source[prop];
              type = {}.toString.call(value);
              if (type === '[object Array]') {
                target[prop] = value.slice(0);
              } else if (type === '[object Number]') {
                target[prop] = value;
              } else {
                console.error('unexpected color value:', value);
              }
            }
          }

          return result;
        },
      };

      Color.prototype.spaces = {
        rgb: ['red', 'green', 'blue'],
        hsl: ['hue', 'saturation', 'lightness'],
        hsv: ['hue', 'saturation', 'value'],
        hwb: ['hue', 'whiteness', 'blackness'],
        cmyk: ['cyan', 'magenta', 'yellow', 'black'],
      };

      Color.prototype.maxes = {
        rgb: [255, 255, 255],
        hsl: [360, 100, 100],
        hsv: [360, 100, 100],
        hwb: [360, 100, 100],
        cmyk: [100, 100, 100, 100],
      };

      Color.prototype.getValues = function (space) {
        var values = this.values;
        var vals = {};

        for (var i = 0; i < space.length; i++) {
          vals[space.charAt(i)] = values[space][i];
        }

        if (values.alpha !== 1) {
          vals.a = values.alpha;
        }

        // {r: 255, g: 255, b: 255, a: 0.4}
        return vals;
      };

      Color.prototype.setValues = function (space, vals) {
        var values = this.values;
        var spaces = this.spaces;
        var maxes = this.maxes;
        var alpha = 1;
        var i;

        if (space === 'alpha') {
          alpha = vals;
        } else if (vals.length) {
          // [10, 10, 10]
          values[space] = vals.slice(0, space.length);
          alpha = vals[space.length];
        } else if (vals[space.charAt(0)] !== undefined) {
          // {r: 10, g: 10, b: 10}
          for (i = 0; i < space.length; i++) {
            values[space][i] = vals[space.charAt(i)];
          }

          alpha = vals.a;
        } else if (vals[spaces[space][0]] !== undefined) {
          // {red: 10, green: 10, blue: 10}
          var chans = spaces[space];

          for (i = 0; i < space.length; i++) {
            values[space][i] = vals[chans[i]];
          }

          alpha = vals.alpha;
        }

        values.alpha = Math.max(
          0,
          Math.min(1, alpha === undefined ? values.alpha : alpha),
        );

        if (space === 'alpha') {
          return false;
        }

        var capped;

        // cap values of the space prior converting all values
        for (i = 0; i < space.length; i++) {
          capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));
          values[space][i] = Math.round(capped);
        }

        // convert to all the other color spaces
        for (var sname in spaces) {
          if (sname !== space) {
            values[sname] = convert[space][sname](values[space]);
          }
        }

        return true;
      };

      Color.prototype.setSpace = function (space, args) {
        var vals = args[0];

        if (vals === undefined) {
          // color.rgb()
          return this.getValues(space);
        }

        // color.rgb(10, 10, 10)
        if (typeof vals === 'number') {
          vals = Array.prototype.slice.call(args);
        }

        this.setValues(space, vals);
        return this;
      };

      Color.prototype.setChannel = function (space, index, val) {
        var svalues = this.values[space];
        if (val === undefined) {
          // color.red()
          return svalues[index];
        } else if (val === svalues[index]) {
          // color.red(color.red())
          return this;
        }

        // color.red(100)
        svalues[index] = val;
        this.setValues(space, svalues);

        return this;
      };

      if (typeof window !== 'undefined') {
        window.Color = Color;
      }

      module.exports = Color;

      /***/
    },
    /* 823 */
    /***/ function (module, exports, __webpack_require__) {
      var conversions = __webpack_require__(824);

      var convert = function () {
        return new Converter();
      };

      for (var func in conversions) {
        // export Raw versions
        convert[func + 'Raw'] = (function (func) {
          // accept array or plain args
          return function (arg) {
            if (typeof arg == 'number')
              arg = Array.prototype.slice.call(arguments);
            return conversions[func](arg);
          };
        })(func);

        var pair = /(\w+)2(\w+)/.exec(func),
          from = pair[1],
          to = pair[2];

        // export rgb2hsl and ["rgb"]["hsl"]
        convert[from] = convert[from] || {};

        convert[from][to] = convert[func] = (function (func) {
          return function (arg) {
            if (typeof arg == 'number')
              arg = Array.prototype.slice.call(arguments);

            var val = conversions[func](arg);
            if (typeof val == 'string' || val === undefined) return val; // keyword

            for (var i = 0; i < val.length; i++) val[i] = Math.round(val[i]);
            return val;
          };
        })(func);
      }

      /* Converter does lazy conversion and caching */
      var Converter = function () {
        this.convs = {};
      };

      /* Either get the values for a space or
	  set the values for a space, depending on args */
      Converter.prototype.routeSpace = function (space, args) {
        var values = args[0];
        if (values === undefined) {
          // color.rgb()
          return this.getValues(space);
        }
        // color.rgb(10, 10, 10)
        if (typeof values == 'number') {
          values = Array.prototype.slice.call(args);
        }

        return this.setValues(space, values);
      };

      /* Set the values for a space, invalidating cache */
      Converter.prototype.setValues = function (space, values) {
        this.space = space;
        this.convs = {};
        this.convs[space] = values;
        return this;
      };

      /* Get the values for a space. If there's already
	  a conversion for the space, fetch it, otherwise
	  compute it */
      Converter.prototype.getValues = function (space) {
        var vals = this.convs[space];
        if (!vals) {
          var fspace = this.space,
            from = this.convs[fspace];
          vals = convert[fspace][space](from);

          this.convs[space] = vals;
        }
        return vals;
      };

      ['rgb', 'hsl', 'hsv', 'cmyk', 'keyword'].forEach(function (space) {
        Converter.prototype[space] = function (vals) {
          return this.routeSpace(space, arguments);
        };
      });

      module.exports = convert;

      /***/
    },
    /* 824 */
    /***/ function (module, exports) {
      /* MIT license */

      module.exports = {
        rgb2hsl: rgb2hsl,
        rgb2hsv: rgb2hsv,
        rgb2hwb: rgb2hwb,
        rgb2cmyk: rgb2cmyk,
        rgb2keyword: rgb2keyword,
        rgb2xyz: rgb2xyz,
        rgb2lab: rgb2lab,
        rgb2lch: rgb2lch,

        hsl2rgb: hsl2rgb,
        hsl2hsv: hsl2hsv,
        hsl2hwb: hsl2hwb,
        hsl2cmyk: hsl2cmyk,
        hsl2keyword: hsl2keyword,

        hsv2rgb: hsv2rgb,
        hsv2hsl: hsv2hsl,
        hsv2hwb: hsv2hwb,
        hsv2cmyk: hsv2cmyk,
        hsv2keyword: hsv2keyword,

        hwb2rgb: hwb2rgb,
        hwb2hsl: hwb2hsl,
        hwb2hsv: hwb2hsv,
        hwb2cmyk: hwb2cmyk,
        hwb2keyword: hwb2keyword,

        cmyk2rgb: cmyk2rgb,
        cmyk2hsl: cmyk2hsl,
        cmyk2hsv: cmyk2hsv,
        cmyk2hwb: cmyk2hwb,
        cmyk2keyword: cmyk2keyword,

        keyword2rgb: keyword2rgb,
        keyword2hsl: keyword2hsl,
        keyword2hsv: keyword2hsv,
        keyword2hwb: keyword2hwb,
        keyword2cmyk: keyword2cmyk,
        keyword2lab: keyword2lab,
        keyword2xyz: keyword2xyz,

        xyz2rgb: xyz2rgb,
        xyz2lab: xyz2lab,
        xyz2lch: xyz2lch,

        lab2xyz: lab2xyz,
        lab2rgb: lab2rgb,
        lab2lch: lab2lch,

        lch2lab: lch2lab,
        lch2xyz: lch2xyz,
        lch2rgb: lch2rgb,
      };

      function rgb2hsl(rgb) {
        var r = rgb[0] / 255,
          g = rgb[1] / 255,
          b = rgb[2] / 255,
          min = Math.min(r, g, b),
          max = Math.max(r, g, b),
          delta = max - min,
          h,
          s,
          l;

        if (max == min) h = 0;
        else if (r == max) h = (g - b) / delta;
        else if (g == max) h = 2 + (b - r) / delta;
        else if (b == max) h = 4 + (r - g) / delta;

        h = Math.min(h * 60, 360);

        if (h < 0) h += 360;

        l = (min + max) / 2;

        if (max == min) s = 0;
        else if (l <= 0.5) s = delta / (max + min);
        else s = delta / (2 - max - min);

        return [h, s * 100, l * 100];
      }

      function rgb2hsv(rgb) {
        var r = rgb[0],
          g = rgb[1],
          b = rgb[2],
          min = Math.min(r, g, b),
          max = Math.max(r, g, b),
          delta = max - min,
          h,
          s,
          v;

        if (max == 0) s = 0;
        else s = ((delta / max) * 1000) / 10;

        if (max == min) h = 0;
        else if (r == max) h = (g - b) / delta;
        else if (g == max) h = 2 + (b - r) / delta;
        else if (b == max) h = 4 + (r - g) / delta;

        h = Math.min(h * 60, 360);

        if (h < 0) h += 360;

        v = ((max / 255) * 1000) / 10;

        return [h, s, v];
      }

      function rgb2hwb(rgb) {
        var r = rgb[0],
          g = rgb[1],
          b = rgb[2],
          h = rgb2hsl(rgb)[0],
          w = (1 / 255) * Math.min(r, Math.min(g, b)),
          b = 1 - (1 / 255) * Math.max(r, Math.max(g, b));

        return [h, w * 100, b * 100];
      }

      function rgb2cmyk(rgb) {
        var r = rgb[0] / 255,
          g = rgb[1] / 255,
          b = rgb[2] / 255,
          c,
          m,
          y,
          k;

        k = Math.min(1 - r, 1 - g, 1 - b);
        c = (1 - r - k) / (1 - k) || 0;
        m = (1 - g - k) / (1 - k) || 0;
        y = (1 - b - k) / (1 - k) || 0;
        return [c * 100, m * 100, y * 100, k * 100];
      }

      function rgb2keyword(rgb) {
        return reverseKeywords[JSON.stringify(rgb)];
      }

      function rgb2xyz(rgb) {
        var r = rgb[0] / 255,
          g = rgb[1] / 255,
          b = rgb[2] / 255;

        // assume sRGB
        r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;
        g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;
        b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;

        var x = r * 0.4124 + g * 0.3576 + b * 0.1805;
        var y = r * 0.2126 + g * 0.7152 + b * 0.0722;
        var z = r * 0.0193 + g * 0.1192 + b * 0.9505;

        return [x * 100, y * 100, z * 100];
      }

      function rgb2lab(rgb) {
        var xyz = rgb2xyz(rgb),
          x = xyz[0],
          y = xyz[1],
          z = xyz[2],
          l,
          a,
          b;

        x /= 95.047;
        y /= 100;
        z /= 108.883;

        x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
        y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
        z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;

        l = 116 * y - 16;
        a = 500 * (x - y);
        b = 200 * (y - z);

        return [l, a, b];
      }

      function rgb2lch(args) {
        return lab2lch(rgb2lab(args));
      }

      function hsl2rgb(hsl) {
        var h = hsl[0] / 360,
          s = hsl[1] / 100,
          l = hsl[2] / 100,
          t1,
          t2,
          t3,
          rgb,
          val;

        if (s == 0) {
          val = l * 255;
          return [val, val, val];
        }

        if (l < 0.5) t2 = l * (1 + s);
        else t2 = l + s - l * s;
        t1 = 2 * l - t2;

        rgb = [0, 0, 0];
        for (var i = 0; i < 3; i++) {
          t3 = h + (1 / 3) * -(i - 1);
          t3 < 0 && t3++;
          t3 > 1 && t3--;

          if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;
          else if (2 * t3 < 1) val = t2;
          else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
          else val = t1;

          rgb[i] = val * 255;
        }

        return rgb;
      }

      function hsl2hsv(hsl) {
        var h = hsl[0],
          s = hsl[1] / 100,
          l = hsl[2] / 100,
          sv,
          v;

        if (l === 0) {
          // no need to do calc on black
          // also avoids divide by 0 error
          return [0, 0, 0];
        }

        l *= 2;
        s *= l <= 1 ? l : 2 - l;
        v = (l + s) / 2;
        sv = (2 * s) / (l + s);
        return [h, sv * 100, v * 100];
      }

      function hsl2hwb(args) {
        return rgb2hwb(hsl2rgb(args));
      }

      function hsl2cmyk(args) {
        return rgb2cmyk(hsl2rgb(args));
      }

      function hsl2keyword(args) {
        return rgb2keyword(hsl2rgb(args));
      }

      function hsv2rgb(hsv) {
        var h = hsv[0] / 60,
          s = hsv[1] / 100,
          v = hsv[2] / 100,
          hi = Math.floor(h) % 6;

        var f = h - Math.floor(h),
          p = 255 * v * (1 - s),
          q = 255 * v * (1 - s * f),
          t = 255 * v * (1 - s * (1 - f)),
          v = 255 * v;

        switch (hi) {
          case 0:
            return [v, t, p];
          case 1:
            return [q, v, p];
          case 2:
            return [p, v, t];
          case 3:
            return [p, q, v];
          case 4:
            return [t, p, v];
          case 5:
            return [v, p, q];
        }
      }

      function hsv2hsl(hsv) {
        var h = hsv[0],
          s = hsv[1] / 100,
          v = hsv[2] / 100,
          sl,
          l;

        l = (2 - s) * v;
        sl = s * v;
        sl /= l <= 1 ? l : 2 - l;
        sl = sl || 0;
        l /= 2;
        return [h, sl * 100, l * 100];
      }

      function hsv2hwb(args) {
        return rgb2hwb(hsv2rgb(args));
      }

      function hsv2cmyk(args) {
        return rgb2cmyk(hsv2rgb(args));
      }

      function hsv2keyword(args) {
        return rgb2keyword(hsv2rgb(args));
      }

      // http://dev.w3.org/csswg/css-color/#hwb-to-rgb
      function hwb2rgb(hwb) {
        var h = hwb[0] / 360,
          wh = hwb[1] / 100,
          bl = hwb[2] / 100,
          ratio = wh + bl,
          i,
          v,
          f,
          n;

        // wh + bl cant be > 1
        if (ratio > 1) {
          wh /= ratio;
          bl /= ratio;
        }

        i = Math.floor(6 * h);
        v = 1 - bl;
        f = 6 * h - i;
        if ((i & 0x01) != 0) {
          f = 1 - f;
        }
        n = wh + f * (v - wh); // linear interpolation

        switch (i) {
          default:
          case 6:
          case 0:
            r = v;
            g = n;
            b = wh;
            break;
          case 1:
            r = n;
            g = v;
            b = wh;
            break;
          case 2:
            r = wh;
            g = v;
            b = n;
            break;
          case 3:
            r = wh;
            g = n;
            b = v;
            break;
          case 4:
            r = n;
            g = wh;
            b = v;
            break;
          case 5:
            r = v;
            g = wh;
            b = n;
            break;
        }

        return [r * 255, g * 255, b * 255];
      }

      function hwb2hsl(args) {
        return rgb2hsl(hwb2rgb(args));
      }

      function hwb2hsv(args) {
        return rgb2hsv(hwb2rgb(args));
      }

      function hwb2cmyk(args) {
        return rgb2cmyk(hwb2rgb(args));
      }

      function hwb2keyword(args) {
        return rgb2keyword(hwb2rgb(args));
      }

      function cmyk2rgb(cmyk) {
        var c = cmyk[0] / 100,
          m = cmyk[1] / 100,
          y = cmyk[2] / 100,
          k = cmyk[3] / 100,
          r,
          g,
          b;

        r = 1 - Math.min(1, c * (1 - k) + k);
        g = 1 - Math.min(1, m * (1 - k) + k);
        b = 1 - Math.min(1, y * (1 - k) + k);
        return [r * 255, g * 255, b * 255];
      }

      function cmyk2hsl(args) {
        return rgb2hsl(cmyk2rgb(args));
      }

      function cmyk2hsv(args) {
        return rgb2hsv(cmyk2rgb(args));
      }

      function cmyk2hwb(args) {
        return rgb2hwb(cmyk2rgb(args));
      }

      function cmyk2keyword(args) {
        return rgb2keyword(cmyk2rgb(args));
      }

      function xyz2rgb(xyz) {
        var x = xyz[0] / 100,
          y = xyz[1] / 100,
          z = xyz[2] / 100,
          r,
          g,
          b;

        r = x * 3.2406 + y * -1.5372 + z * -0.4986;
        g = x * -0.9689 + y * 1.8758 + z * 0.0415;
        b = x * 0.0557 + y * -0.204 + z * 1.057;

        // assume sRGB
        r =
          r > 0.0031308
            ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055
            : (r = r * 12.92);

        g =
          g > 0.0031308
            ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055
            : (g = g * 12.92);

        b =
          b > 0.0031308
            ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055
            : (b = b * 12.92);

        r = Math.min(Math.max(0, r), 1);
        g = Math.min(Math.max(0, g), 1);
        b = Math.min(Math.max(0, b), 1);

        return [r * 255, g * 255, b * 255];
      }

      function xyz2lab(xyz) {
        var x = xyz[0],
          y = xyz[1],
          z = xyz[2],
          l,
          a,
          b;

        x /= 95.047;
        y /= 100;
        z /= 108.883;

        x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
        y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
        z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;

        l = 116 * y - 16;
        a = 500 * (x - y);
        b = 200 * (y - z);

        return [l, a, b];
      }

      function xyz2lch(args) {
        return lab2lch(xyz2lab(args));
      }

      function lab2xyz(lab) {
        var l = lab[0],
          a = lab[1],
          b = lab[2],
          x,
          y,
          z,
          y2;

        if (l <= 8) {
          y = (l * 100) / 903.3;
          y2 = 7.787 * (y / 100) + 16 / 116;
        } else {
          y = 100 * Math.pow((l + 16) / 116, 3);
          y2 = Math.pow(y / 100, 1 / 3);
        }

        x =
          x / 95.047 <= 0.008856
            ? (x = (95.047 * (a / 500 + y2 - 16 / 116)) / 7.787)
            : 95.047 * Math.pow(a / 500 + y2, 3);

        z =
          z / 108.883 <= 0.008859
            ? (z = (108.883 * (y2 - b / 200 - 16 / 116)) / 7.787)
            : 108.883 * Math.pow(y2 - b / 200, 3);

        return [x, y, z];
      }

      function lab2lch(lab) {
        var l = lab[0],
          a = lab[1],
          b = lab[2],
          hr,
          h,
          c;

        hr = Math.atan2(b, a);
        h = (hr * 360) / 2 / Math.PI;
        if (h < 0) {
          h += 360;
        }
        c = Math.sqrt(a * a + b * b);
        return [l, c, h];
      }

      function lab2rgb(args) {
        return xyz2rgb(lab2xyz(args));
      }

      function lch2lab(lch) {
        var l = lch[0],
          c = lch[1],
          h = lch[2],
          a,
          b,
          hr;

        hr = (h / 360) * 2 * Math.PI;
        a = c * Math.cos(hr);
        b = c * Math.sin(hr);
        return [l, a, b];
      }

      function lch2xyz(args) {
        return lab2xyz(lch2lab(args));
      }

      function lch2rgb(args) {
        return lab2rgb(lch2lab(args));
      }

      function keyword2rgb(keyword) {
        return cssKeywords[keyword];
      }

      function keyword2hsl(args) {
        return rgb2hsl(keyword2rgb(args));
      }

      function keyword2hsv(args) {
        return rgb2hsv(keyword2rgb(args));
      }

      function keyword2hwb(args) {
        return rgb2hwb(keyword2rgb(args));
      }

      function keyword2cmyk(args) {
        return rgb2cmyk(keyword2rgb(args));
      }

      function keyword2lab(args) {
        return rgb2lab(keyword2rgb(args));
      }

      function keyword2xyz(args) {
        return rgb2xyz(keyword2rgb(args));
      }

      var cssKeywords = {
        aliceblue: [240, 248, 255],
        antiquewhite: [250, 235, 215],
        aqua: [0, 255, 255],
        aquamarine: [127, 255, 212],
        azure: [240, 255, 255],
        beige: [245, 245, 220],
        bisque: [255, 228, 196],
        black: [0, 0, 0],
        blanchedalmond: [255, 235, 205],
        blue: [0, 0, 255],
        blueviolet: [138, 43, 226],
        brown: [165, 42, 42],
        burlywood: [222, 184, 135],
        cadetblue: [95, 158, 160],
        chartreuse: [127, 255, 0],
        chocolate: [210, 105, 30],
        coral: [255, 127, 80],
        cornflowerblue: [100, 149, 237],
        cornsilk: [255, 248, 220],
        crimson: [220, 20, 60],
        cyan: [0, 255, 255],
        darkblue: [0, 0, 139],
        darkcyan: [0, 139, 139],
        darkgoldenrod: [184, 134, 11],
        darkgray: [169, 169, 169],
        darkgreen: [0, 100, 0],
        darkgrey: [169, 169, 169],
        darkkhaki: [189, 183, 107],
        darkmagenta: [139, 0, 139],
        darkolivegreen: [85, 107, 47],
        darkorange: [255, 140, 0],
        darkorchid: [153, 50, 204],
        darkred: [139, 0, 0],
        darksalmon: [233, 150, 122],
        darkseagreen: [143, 188, 143],
        darkslateblue: [72, 61, 139],
        darkslategray: [47, 79, 79],
        darkslategrey: [47, 79, 79],
        darkturquoise: [0, 206, 209],
        darkviolet: [148, 0, 211],
        deeppink: [255, 20, 147],
        deepskyblue: [0, 191, 255],
        dimgray: [105, 105, 105],
        dimgrey: [105, 105, 105],
        dodgerblue: [30, 144, 255],
        firebrick: [178, 34, 34],
        floralwhite: [255, 250, 240],
        forestgreen: [34, 139, 34],
        fuchsia: [255, 0, 255],
        gainsboro: [220, 220, 220],
        ghostwhite: [248, 248, 255],
        gold: [255, 215, 0],
        goldenrod: [218, 165, 32],
        gray: [128, 128, 128],
        green: [0, 128, 0],
        greenyellow: [173, 255, 47],
        grey: [128, 128, 128],
        honeydew: [240, 255, 240],
        hotpink: [255, 105, 180],
        indianred: [205, 92, 92],
        indigo: [75, 0, 130],
        ivory: [255, 255, 240],
        khaki: [240, 230, 140],
        lavender: [230, 230, 250],
        lavenderblush: [255, 240, 245],
        lawngreen: [124, 252, 0],
        lemonchiffon: [255, 250, 205],
        lightblue: [173, 216, 230],
        lightcoral: [240, 128, 128],
        lightcyan: [224, 255, 255],
        lightgoldenrodyellow: [250, 250, 210],
        lightgray: [211, 211, 211],
        lightgreen: [144, 238, 144],
        lightgrey: [211, 211, 211],
        lightpink: [255, 182, 193],
        lightsalmon: [255, 160, 122],
        lightseagreen: [32, 178, 170],
        lightskyblue: [135, 206, 250],
        lightslategray: [119, 136, 153],
        lightslategrey: [119, 136, 153],
        lightsteelblue: [176, 196, 222],
        lightyellow: [255, 255, 224],
        lime: [0, 255, 0],
        limegreen: [50, 205, 50],
        linen: [250, 240, 230],
        magenta: [255, 0, 255],
        maroon: [128, 0, 0],
        mediumaquamarine: [102, 205, 170],
        mediumblue: [0, 0, 205],
        mediumorchid: [186, 85, 211],
        mediumpurple: [147, 112, 219],
        mediumseagreen: [60, 179, 113],
        mediumslateblue: [123, 104, 238],
        mediumspringgreen: [0, 250, 154],
        mediumturquoise: [72, 209, 204],
        mediumvioletred: [199, 21, 133],
        midnightblue: [25, 25, 112],
        mintcream: [245, 255, 250],
        mistyrose: [255, 228, 225],
        moccasin: [255, 228, 181],
        navajowhite: [255, 222, 173],
        navy: [0, 0, 128],
        oldlace: [253, 245, 230],
        olive: [128, 128, 0],
        olivedrab: [107, 142, 35],
        orange: [255, 165, 0],
        orangered: [255, 69, 0],
        orchid: [218, 112, 214],
        palegoldenrod: [238, 232, 170],
        palegreen: [152, 251, 152],
        paleturquoise: [175, 238, 238],
        palevioletred: [219, 112, 147],
        papayawhip: [255, 239, 213],
        peachpuff: [255, 218, 185],
        peru: [205, 133, 63],
        pink: [255, 192, 203],
        plum: [221, 160, 221],
        powderblue: [176, 224, 230],
        purple: [128, 0, 128],
        rebeccapurple: [102, 51, 153],
        red: [255, 0, 0],
        rosybrown: [188, 143, 143],
        royalblue: [65, 105, 225],
        saddlebrown: [139, 69, 19],
        salmon: [250, 128, 114],
        sandybrown: [244, 164, 96],
        seagreen: [46, 139, 87],
        seashell: [255, 245, 238],
        sienna: [160, 82, 45],
        silver: [192, 192, 192],
        skyblue: [135, 206, 235],
        slateblue: [106, 90, 205],
        slategray: [112, 128, 144],
        slategrey: [112, 128, 144],
        snow: [255, 250, 250],
        springgreen: [0, 255, 127],
        steelblue: [70, 130, 180],
        tan: [210, 180, 140],
        teal: [0, 128, 128],
        thistle: [216, 191, 216],
        tomato: [255, 99, 71],
        turquoise: [64, 224, 208],
        violet: [238, 130, 238],
        wheat: [245, 222, 179],
        white: [255, 255, 255],
        whitesmoke: [245, 245, 245],
        yellow: [255, 255, 0],
        yellowgreen: [154, 205, 50],
      };

      var reverseKeywords = {};
      for (var key in cssKeywords) {
        reverseKeywords[JSON.stringify(cssKeywords[key])] = key;
      }

      /***/
    },
    /* 825 */
    /***/ function (module, exports, __webpack_require__) {
      /* MIT license */
      var colorNames = __webpack_require__(826);

      module.exports = {
        getRgba: getRgba,
        getHsla: getHsla,
        getRgb: getRgb,
        getHsl: getHsl,
        getHwb: getHwb,
        getAlpha: getAlpha,

        hexString: hexString,
        rgbString: rgbString,
        rgbaString: rgbaString,
        percentString: percentString,
        percentaString: percentaString,
        hslString: hslString,
        hslaString: hslaString,
        hwbString: hwbString,
        keyword: keyword,
      };

      function getRgba(string) {
        if (!string) {
          return;
        }
        var abbr = /^#([a-fA-F0-9]{3})$/,
          hex = /^#([a-fA-F0-9]{6})$/,
          rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,
          per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,
          keyword = /(\w+)/;

        var rgb = [0, 0, 0],
          a = 1,
          match = string.match(abbr);
        if (match) {
          match = match[1];
          for (var i = 0; i < rgb.length; i++) {
            rgb[i] = parseInt(match[i] + match[i], 16);
          }
        } else if ((match = string.match(hex))) {
          match = match[1];
          for (var i = 0; i < rgb.length; i++) {
            rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);
          }
        } else if ((match = string.match(rgba))) {
          for (var i = 0; i < rgb.length; i++) {
            rgb[i] = parseInt(match[i + 1]);
          }
          a = parseFloat(match[4]);
        } else if ((match = string.match(per))) {
          for (var i = 0; i < rgb.length; i++) {
            rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
          }
          a = parseFloat(match[4]);
        } else if ((match = string.match(keyword))) {
          if (match[1] == 'transparent') {
            return [0, 0, 0, 0];
          }
          rgb = colorNames[match[1]];
          if (!rgb) {
            return;
          }
        }

        for (var i = 0; i < rgb.length; i++) {
          rgb[i] = scale(rgb[i], 0, 255);
        }
        if (!a && a != 0) {
          a = 1;
        } else {
          a = scale(a, 0, 1);
        }
        rgb[3] = a;
        return rgb;
      }

      function getHsla(string) {
        if (!string) {
          return;
        }
        var hsl = /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
        var match = string.match(hsl);
        if (match) {
          var alpha = parseFloat(match[4]);
          var h = scale(parseInt(match[1]), 0, 360),
            s = scale(parseFloat(match[2]), 0, 100),
            l = scale(parseFloat(match[3]), 0, 100),
            a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
          return [h, s, l, a];
        }
      }

      function getHwb(string) {
        if (!string) {
          return;
        }
        var hwb = /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
        var match = string.match(hwb);
        if (match) {
          var alpha = parseFloat(match[4]);
          var h = scale(parseInt(match[1]), 0, 360),
            w = scale(parseFloat(match[2]), 0, 100),
            b = scale(parseFloat(match[3]), 0, 100),
            a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
          return [h, w, b, a];
        }
      }

      function getRgb(string) {
        var rgba = getRgba(string);
        return rgba && rgba.slice(0, 3);
      }

      function getHsl(string) {
        var hsla = getHsla(string);
        return hsla && hsla.slice(0, 3);
      }

      function getAlpha(string) {
        var vals = getRgba(string);
        if (vals) {
          return vals[3];
        } else if ((vals = getHsla(string))) {
          return vals[3];
        } else if ((vals = getHwb(string))) {
          return vals[3];
        }
      }

      // generators
      function hexString(rgb) {
        return '#' + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);
      }

      function rgbString(rgba, alpha) {
        if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {
          return rgbaString(rgba, alpha);
        }
        return 'rgb(' + rgba[0] + ', ' + rgba[1] + ', ' + rgba[2] + ')';
      }

      function rgbaString(rgba, alpha) {
        if (alpha === undefined) {
          alpha = rgba[3] !== undefined ? rgba[3] : 1;
        }
        return (
          'rgba(' +
          rgba[0] +
          ', ' +
          rgba[1] +
          ', ' +
          rgba[2] +
          ', ' +
          alpha +
          ')'
        );
      }

      function percentString(rgba, alpha) {
        if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {
          return percentaString(rgba, alpha);
        }
        var r = Math.round((rgba[0] / 255) * 100),
          g = Math.round((rgba[1] / 255) * 100),
          b = Math.round((rgba[2] / 255) * 100);

        return 'rgb(' + r + '%, ' + g + '%, ' + b + '%)';
      }

      function percentaString(rgba, alpha) {
        var r = Math.round((rgba[0] / 255) * 100),
          g = Math.round((rgba[1] / 255) * 100),
          b = Math.round((rgba[2] / 255) * 100);
        return (
          'rgba(' +
          r +
          '%, ' +
          g +
          '%, ' +
          b +
          '%, ' +
          (alpha || rgba[3] || 1) +
          ')'
        );
      }

      function hslString(hsla, alpha) {
        if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {
          return hslaString(hsla, alpha);
        }
        return 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)';
      }

      function hslaString(hsla, alpha) {
        if (alpha === undefined) {
          alpha = hsla[3] !== undefined ? hsla[3] : 1;
        }
        return (
          'hsla(' +
          hsla[0] +
          ', ' +
          hsla[1] +
          '%, ' +
          hsla[2] +
          '%, ' +
          alpha +
          ')'
        );
      }

      // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
      // (hwb have alpha optional & 1 is default value)
      function hwbString(hwb, alpha) {
        if (alpha === undefined) {
          alpha = hwb[3] !== undefined ? hwb[3] : 1;
        }
        return (
          'hwb(' +
          hwb[0] +
          ', ' +
          hwb[1] +
          '%, ' +
          hwb[2] +
          '%' +
          (alpha !== undefined && alpha !== 1 ? ', ' + alpha : '') +
          ')'
        );
      }

      function keyword(rgb) {
        return reverseNames[rgb.slice(0, 3)];
      }

      // helpers
      function scale(num, min, max) {
        return Math.min(Math.max(min, num), max);
      }

      function hexDouble(num) {
        var str = num.toString(16).toUpperCase();
        return str.length < 2 ? '0' + str : str;
      }

      //create a list of reverse color names
      var reverseNames = {};
      for (var name in colorNames) {
        reverseNames[colorNames[name]] = name;
      }

      /***/
    },
    /* 826 */
    /***/ function (module, exports) {
      module.exports = {
        aliceblue: [240, 248, 255],
        antiquewhite: [250, 235, 215],
        aqua: [0, 255, 255],
        aquamarine: [127, 255, 212],
        azure: [240, 255, 255],
        beige: [245, 245, 220],
        bisque: [255, 228, 196],
        black: [0, 0, 0],
        blanchedalmond: [255, 235, 205],
        blue: [0, 0, 255],
        blueviolet: [138, 43, 226],
        brown: [165, 42, 42],
        burlywood: [222, 184, 135],
        cadetblue: [95, 158, 160],
        chartreuse: [127, 255, 0],
        chocolate: [210, 105, 30],
        coral: [255, 127, 80],
        cornflowerblue: [100, 149, 237],
        cornsilk: [255, 248, 220],
        crimson: [220, 20, 60],
        cyan: [0, 255, 255],
        darkblue: [0, 0, 139],
        darkcyan: [0, 139, 139],
        darkgoldenrod: [184, 134, 11],
        darkgray: [169, 169, 169],
        darkgreen: [0, 100, 0],
        darkgrey: [169, 169, 169],
        darkkhaki: [189, 183, 107],
        darkmagenta: [139, 0, 139],
        darkolivegreen: [85, 107, 47],
        darkorange: [255, 140, 0],
        darkorchid: [153, 50, 204],
        darkred: [139, 0, 0],
        darksalmon: [233, 150, 122],
        darkseagreen: [143, 188, 143],
        darkslateblue: [72, 61, 139],
        darkslategray: [47, 79, 79],
        darkslategrey: [47, 79, 79],
        darkturquoise: [0, 206, 209],
        darkviolet: [148, 0, 211],
        deeppink: [255, 20, 147],
        deepskyblue: [0, 191, 255],
        dimgray: [105, 105, 105],
        dimgrey: [105, 105, 105],
        dodgerblue: [30, 144, 255],
        firebrick: [178, 34, 34],
        floralwhite: [255, 250, 240],
        forestgreen: [34, 139, 34],
        fuchsia: [255, 0, 255],
        gainsboro: [220, 220, 220],
        ghostwhite: [248, 248, 255],
        gold: [255, 215, 0],
        goldenrod: [218, 165, 32],
        gray: [128, 128, 128],
        green: [0, 128, 0],
        greenyellow: [173, 255, 47],
        grey: [128, 128, 128],
        honeydew: [240, 255, 240],
        hotpink: [255, 105, 180],
        indianred: [205, 92, 92],
        indigo: [75, 0, 130],
        ivory: [255, 255, 240],
        khaki: [240, 230, 140],
        lavender: [230, 230, 250],
        lavenderblush: [255, 240, 245],
        lawngreen: [124, 252, 0],
        lemonchiffon: [255, 250, 205],
        lightblue: [173, 216, 230],
        lightcoral: [240, 128, 128],
        lightcyan: [224, 255, 255],
        lightgoldenrodyellow: [250, 250, 210],
        lightgray: [211, 211, 211],
        lightgreen: [144, 238, 144],
        lightgrey: [211, 211, 211],
        lightpink: [255, 182, 193],
        lightsalmon: [255, 160, 122],
        lightseagreen: [32, 178, 170],
        lightskyblue: [135, 206, 250],
        lightslategray: [119, 136, 153],
        lightslategrey: [119, 136, 153],
        lightsteelblue: [176, 196, 222],
        lightyellow: [255, 255, 224],
        lime: [0, 255, 0],
        limegreen: [50, 205, 50],
        linen: [250, 240, 230],
        magenta: [255, 0, 255],
        maroon: [128, 0, 0],
        mediumaquamarine: [102, 205, 170],
        mediumblue: [0, 0, 205],
        mediumorchid: [186, 85, 211],
        mediumpurple: [147, 112, 219],
        mediumseagreen: [60, 179, 113],
        mediumslateblue: [123, 104, 238],
        mediumspringgreen: [0, 250, 154],
        mediumturquoise: [72, 209, 204],
        mediumvioletred: [199, 21, 133],
        midnightblue: [25, 25, 112],
        mintcream: [245, 255, 250],
        mistyrose: [255, 228, 225],
        moccasin: [255, 228, 181],
        navajowhite: [255, 222, 173],
        navy: [0, 0, 128],
        oldlace: [253, 245, 230],
        olive: [128, 128, 0],
        olivedrab: [107, 142, 35],
        orange: [255, 165, 0],
        orangered: [255, 69, 0],
        orchid: [218, 112, 214],
        palegoldenrod: [238, 232, 170],
        palegreen: [152, 251, 152],
        paleturquoise: [175, 238, 238],
        palevioletred: [219, 112, 147],
        papayawhip: [255, 239, 213],
        peachpuff: [255, 218, 185],
        peru: [205, 133, 63],
        pink: [255, 192, 203],
        plum: [221, 160, 221],
        powderblue: [176, 224, 230],
        purple: [128, 0, 128],
        rebeccapurple: [102, 51, 153],
        red: [255, 0, 0],
        rosybrown: [188, 143, 143],
        royalblue: [65, 105, 225],
        saddlebrown: [139, 69, 19],
        salmon: [250, 128, 114],
        sandybrown: [244, 164, 96],
        seagreen: [46, 139, 87],
        seashell: [255, 245, 238],
        sienna: [160, 82, 45],
        silver: [192, 192, 192],
        skyblue: [135, 206, 235],
        slateblue: [106, 90, 205],
        slategray: [112, 128, 144],
        slategrey: [112, 128, 144],
        snow: [255, 250, 250],
        springgreen: [0, 255, 127],
        steelblue: [70, 130, 180],
        tan: [210, 180, 140],
        teal: [0, 128, 128],
        thistle: [216, 191, 216],
        tomato: [255, 99, 71],
        turquoise: [64, 224, 208],
        violet: [238, 130, 238],
        wheat: [245, 222, 179],
        white: [255, 255, 255],
        whitesmoke: [245, 245, 245],
        yellow: [255, 255, 0],
        yellowgreen: [154, 205, 50],
      };

      /***/
    },
    /* 827 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        // Global Chart canvas helpers object for drawing items to canvas
        var helpers = (Chart.canvasHelpers = {});

        helpers.drawPoint = function (ctx, pointStyle, radius, x, y) {
          var type, edgeLength, xOffset, yOffset, height, size;

          if (typeof pointStyle === 'object') {
            type = pointStyle.toString();
            if (
              type === '[object HTMLImageElement]' ||
              type === '[object HTMLCanvasElement]'
            ) {
              ctx.drawImage(
                pointStyle,
                x - pointStyle.width / 2,
                y - pointStyle.height / 2,
              );
              return;
            }
          }

          if (isNaN(radius) || radius <= 0) {
            return;
          }

          switch (pointStyle) {
            // Default includes circle
            default:
              ctx.beginPath();
              ctx.arc(x, y, radius, 0, Math.PI * 2);
              ctx.closePath();
              ctx.fill();
              break;
            case 'triangle':
              ctx.beginPath();
              edgeLength = (3 * radius) / Math.sqrt(3);
              height = (edgeLength * Math.sqrt(3)) / 2;
              ctx.moveTo(x - edgeLength / 2, y + height / 3);
              ctx.lineTo(x + edgeLength / 2, y + height / 3);
              ctx.lineTo(x, y - (2 * height) / 3);
              ctx.closePath();
              ctx.fill();
              break;
            case 'rect':
              size = (1 / Math.SQRT2) * radius;
              ctx.beginPath();
              ctx.fillRect(x - size, y - size, 2 * size, 2 * size);
              ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);
              break;
            case 'rectRot':
              size = (1 / Math.SQRT2) * radius;
              ctx.beginPath();
              ctx.moveTo(x - size, y);
              ctx.lineTo(x, y + size);
              ctx.lineTo(x + size, y);
              ctx.lineTo(x, y - size);
              ctx.closePath();
              ctx.fill();
              break;
            case 'cross':
              ctx.beginPath();
              ctx.moveTo(x, y + radius);
              ctx.lineTo(x, y - radius);
              ctx.moveTo(x - radius, y);
              ctx.lineTo(x + radius, y);
              ctx.closePath();
              break;
            case 'crossRot':
              ctx.beginPath();
              xOffset = Math.cos(Math.PI / 4) * radius;
              yOffset = Math.sin(Math.PI / 4) * radius;
              ctx.moveTo(x - xOffset, y - yOffset);
              ctx.lineTo(x + xOffset, y + yOffset);
              ctx.moveTo(x - xOffset, y + yOffset);
              ctx.lineTo(x + xOffset, y - yOffset);
              ctx.closePath();
              break;
            case 'star':
              ctx.beginPath();
              ctx.moveTo(x, y + radius);
              ctx.lineTo(x, y - radius);
              ctx.moveTo(x - radius, y);
              ctx.lineTo(x + radius, y);
              xOffset = Math.cos(Math.PI / 4) * radius;
              yOffset = Math.sin(Math.PI / 4) * radius;
              ctx.moveTo(x - xOffset, y - yOffset);
              ctx.lineTo(x + xOffset, y + yOffset);
              ctx.moveTo(x - xOffset, y + yOffset);
              ctx.lineTo(x + xOffset, y - yOffset);
              ctx.closePath();
              break;
            case 'line':
              ctx.beginPath();
              ctx.moveTo(x - radius, y);
              ctx.lineTo(x + radius, y);
              ctx.closePath();
              break;
            case 'dash':
              ctx.beginPath();
              ctx.moveTo(x, y);
              ctx.lineTo(x + radius, y);
              ctx.closePath();
              break;
          }

          ctx.stroke();
        };
      };

      /***/
    },
    /* 828 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;

        Chart.elements = {};

        Chart.Element = function (configuration) {
          helpers.extend(this, configuration);
          this.initialize.apply(this, arguments);
        };

        helpers.extend(Chart.Element.prototype, {
          initialize: function () {
            this.hidden = false;
          },

          pivot: function () {
            var me = this;
            if (!me._view) {
              me._view = helpers.clone(me._model);
            }
            me._start = helpers.clone(me._view);
            return me;
          },

          transition: function (ease) {
            var me = this;

            if (!me._view) {
              me._view = helpers.clone(me._model);
            }

            // No animation -> No Transition
            if (ease === 1) {
              me._view = me._model;
              me._start = null;
              return me;
            }

            if (!me._start) {
              me.pivot();
            }

            helpers.each(
              me._model,
              function (value, key) {
                if (key[0] === '_') {
                  // Only non-underscored properties
                  // Init if doesn't exist
                } else if (!me._view.hasOwnProperty(key)) {
                  if (typeof value === 'number' && !isNaN(me._view[key])) {
                    me._view[key] = value * ease;
                  } else {
                    me._view[key] = value;
                  }
                  // No unnecessary computations
                } else if (value === me._view[key]) {
                  // It's the same! Woohoo!
                  // Color transitions if possible
                } else if (typeof value === 'string') {
                  try {
                    var color = helpers
                      .color(me._model[key])
                      .mix(helpers.color(me._start[key]), ease);
                    me._view[key] = color.rgbString();
                  } catch (err) {
                    me._view[key] = value;
                  }
                  // Number transitions
                } else if (typeof value === 'number') {
                  var startVal =
                    me._start[key] !== undefined &&
                    isNaN(me._start[key]) === false
                      ? me._start[key]
                      : 0;
                  me._view[key] = (me._model[key] - startVal) * ease + startVal;
                  // Everything else
                } else {
                  me._view[key] = value;
                }
              },
              me,
            );

            return me;
          },

          tooltipPosition: function () {
            return {
              x: this._model.x,
              y: this._model.y,
            };
          },

          hasValue: function () {
            return (
              helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y)
            );
          },
        });

        Chart.Element.extend = helpers.inherits;
      };

      /***/
    },
    /* 829 */
    /***/ function (module, exports) {
      /* global window: false */
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;

        Chart.defaults.global.animation = {
          duration: 1000,
          easing: 'easeOutQuart',
          onProgress: helpers.noop,
          onComplete: helpers.noop,
        };

        Chart.Animation = Chart.Element.extend({
          currentStep: null, // the current animation step
          numSteps: 60, // default number of steps
          easing: '', // the easing to use for this animation
          render: null, // render function used by the animation service

          onAnimationProgress: null, // user specified callback to fire on each step of the animation
          onAnimationComplete: null, // user specified callback to fire when the animation finishes
        });

        Chart.animationService = {
          frameDuration: 17,
          animations: [],
          dropFrames: 0,
          request: null,
          addAnimation: function (
            chartInstance,
            animationObject,
            duration,
            lazy,
          ) {
            var me = this;

            if (!lazy) {
              chartInstance.animating = true;
            }

            for (var index = 0; index < me.animations.length; ++index) {
              if (me.animations[index].chartInstance === chartInstance) {
                // replacing an in progress animation
                me.animations[index].animationObject = animationObject;
                return;
              }
            }

            me.animations.push({
              chartInstance: chartInstance,
              animationObject: animationObject,
            });

            // If there are no animations queued, manually kickstart a digest, for lack of a better word
            if (me.animations.length === 1) {
              me.requestAnimationFrame();
            }
          },
          // Cancel the animation for a given chart instance
          cancelAnimation: function (chartInstance) {
            var index = helpers.findIndex(this.animations, function (
              animationWrapper,
            ) {
              return animationWrapper.chartInstance === chartInstance;
            });

            if (index !== -1) {
              this.animations.splice(index, 1);
              chartInstance.animating = false;
            }
          },
          requestAnimationFrame: function () {
            var me = this;
            if (me.request === null) {
              // Skip animation frame requests until the active one is executed.
              // This can happen when processing mouse events, e.g. 'mousemove'
              // and 'mouseout' events will trigger multiple renders.
              me.request = helpers.requestAnimFrame.call(window, function () {
                me.request = null;
                me.startDigest();
              });
            }
          },
          startDigest: function () {
            var me = this;

            var startTime = Date.now();
            var framesToDrop = 0;

            if (me.dropFrames > 1) {
              framesToDrop = Math.floor(me.dropFrames);
              me.dropFrames = me.dropFrames % 1;
            }

            var i = 0;
            while (i < me.animations.length) {
              if (me.animations[i].animationObject.currentStep === null) {
                me.animations[i].animationObject.currentStep = 0;
              }

              me.animations[i].animationObject.currentStep += 1 + framesToDrop;

              if (
                me.animations[i].animationObject.currentStep >
                me.animations[i].animationObject.numSteps
              ) {
                me.animations[i].animationObject.currentStep =
                  me.animations[i].animationObject.numSteps;
              }

              me.animations[i].animationObject.render(
                me.animations[i].chartInstance,
                me.animations[i].animationObject,
              );
              if (
                me.animations[i].animationObject.onAnimationProgress &&
                me.animations[i].animationObject.onAnimationProgress.call
              ) {
                me.animations[i].animationObject.onAnimationProgress.call(
                  me.animations[i].chartInstance,
                  me.animations[i],
                );
              }

              if (
                me.animations[i].animationObject.currentStep ===
                me.animations[i].animationObject.numSteps
              ) {
                if (
                  me.animations[i].animationObject.onAnimationComplete &&
                  me.animations[i].animationObject.onAnimationComplete.call
                ) {
                  me.animations[i].animationObject.onAnimationComplete.call(
                    me.animations[i].chartInstance,
                    me.animations[i],
                  );
                }

                // executed the last frame. Remove the animation.
                me.animations[i].chartInstance.animating = false;

                me.animations.splice(i, 1);
              } else {
                ++i;
              }
            }

            var endTime = Date.now();
            var dropFrames = (endTime - startTime) / me.frameDuration;

            me.dropFrames += dropFrames;

            // Do we have more stuff to animate?
            if (me.animations.length > 0) {
              me.requestAnimationFrame();
            }
          },
        };
      };

      /***/
    },
    /* 830 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;
        // Create a dictionary of chart types, to allow for extension of existing types
        Chart.types = {};

        // Store a reference to each instance - allowing us to globally resize chart instances on window resize.
        // Destroy method on the chart will remove the instance of the chart from this reference.
        Chart.instances = {};

        // Controllers available for dataset visualization eg. bar, line, slice, etc.
        Chart.controllers = {};

        /**
         * @class Chart.Controller
         * The main controller of a chart.
         */
        Chart.Controller = function (instance) {
          this.chart = instance;
          this.config = instance.config;
          this.options = this.config.options = helpers.configMerge(
            Chart.defaults.global,
            Chart.defaults[this.config.type],
            this.config.options || {},
          );
          this.id = helpers.uid();

          Object.defineProperty(this, 'data', {
            get: function () {
              return this.config.data;
            },
          });

          // Add the chart instance to the global namespace
          Chart.instances[this.id] = this;

          if (this.options.responsive) {
            // Silent resize before chart draws
            this.resize(true);
          }

          this.initialize();

          return this;
        };

        helpers.extend(
          Chart.Controller.prototype,
          /** @lends Chart.Controller */ {
            initialize: function () {
              var me = this;
              // Before init plugin notification
              Chart.plugins.notify('beforeInit', [me]);

              me.bindEvents();

              // Make sure controllers are built first so that each dataset is bound to an axis before the scales
              // are built
              me.ensureScalesHaveIDs();
              me.buildOrUpdateControllers();
              me.buildScales();
              me.updateLayout();
              me.resetElements();
              me.initToolTip();
              me.update();

              // After init plugin notification
              Chart.plugins.notify('afterInit', [me]);

              return me;
            },

            clear: function () {
              helpers.clear(this.chart);
              return this;
            },

            stop: function () {
              // Stops any current animation loop occuring
              Chart.animationService.cancelAnimation(this);
              return this;
            },

            resize: function (silent) {
              var me = this;
              var chart = me.chart;
              var canvas = chart.canvas;
              var newWidth = helpers.getMaximumWidth(canvas);
              var aspectRatio = chart.aspectRatio;
              var newHeight =
                me.options.maintainAspectRatio &&
                isNaN(aspectRatio) === false &&
                isFinite(aspectRatio) &&
                aspectRatio !== 0
                  ? newWidth / aspectRatio
                  : helpers.getMaximumHeight(canvas);

              var sizeChanged =
                chart.width !== newWidth || chart.height !== newHeight;

              if (!sizeChanged) {
                return me;
              }

              canvas.width = chart.width = newWidth;
              canvas.height = chart.height = newHeight;

              helpers.retinaScale(chart);

              // Notify any plugins about the resize
              var newSize = { width: newWidth, height: newHeight };
              Chart.plugins.notify('resize', [me, newSize]);

              // Notify of resize
              if (me.options.onResize) {
                me.options.onResize(me, newSize);
              }

              if (!silent) {
                me.stop();
                me.update(me.options.responsiveAnimationDuration);
              }

              return me;
            },

            ensureScalesHaveIDs: function () {
              var options = this.options;
              var scalesOptions = options.scales || {};
              var scaleOptions = options.scale;

              helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {
                xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;
              });

              helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {
                yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;
              });

              if (scaleOptions) {
                scaleOptions.id = scaleOptions.id || 'scale';
              }
            },

            /**
             * Builds a map of scale ID to scale object for future lookup.
             */
            buildScales: function () {
              var me = this;
              var options = me.options;
              var scales = (me.scales = {});
              var items = [];

              if (options.scales) {
                items = items.concat(
                  (options.scales.xAxes || []).map(function (xAxisOptions) {
                    return { options: xAxisOptions, dtype: 'category' };
                  }),
                  (options.scales.yAxes || []).map(function (yAxisOptions) {
                    return { options: yAxisOptions, dtype: 'linear' };
                  }),
                );
              }

              if (options.scale) {
                items.push({
                  options: options.scale,
                  dtype: 'radialLinear',
                  isDefault: true,
                });
              }

              helpers.each(items, function (item) {
                var scaleOptions = item.options;
                var scaleType = helpers.getValueOrDefault(
                  scaleOptions.type,
                  item.dtype,
                );
                var scaleClass = Chart.scaleService.getScaleConstructor(
                  scaleType,
                );
                if (!scaleClass) {
                  return;
                }

                var scale = new scaleClass({
                  id: scaleOptions.id,
                  options: scaleOptions,
                  ctx: me.chart.ctx,
                  chart: me,
                });

                scales[scale.id] = scale;

                // TODO(SB): I think we should be able to remove this custom case (options.scale)
                // and consider it as a regular scale part of the "scales"" map only! This would
                // make the logic easier and remove some useless? custom code.
                if (item.isDefault) {
                  me.scale = scale;
                }
              });

              Chart.scaleService.addScalesToLayout(this);
            },

            updateLayout: function () {
              Chart.layoutService.update(
                this,
                this.chart.width,
                this.chart.height,
              );
            },

            buildOrUpdateControllers: function () {
              var me = this;
              var types = [];
              var newControllers = [];

              helpers.each(
                me.data.datasets,
                function (dataset, datasetIndex) {
                  var meta = me.getDatasetMeta(datasetIndex);
                  if (!meta.type) {
                    meta.type = dataset.type || me.config.type;
                  }

                  types.push(meta.type);

                  if (meta.controller) {
                    meta.controller.updateIndex(datasetIndex);
                  } else {
                    meta.controller = new Chart.controllers[meta.type](
                      me,
                      datasetIndex,
                    );
                    newControllers.push(meta.controller);
                  }
                },
                me,
              );

              if (types.length > 1) {
                for (var i = 1; i < types.length; i++) {
                  if (types[i] !== types[i - 1]) {
                    me.isCombo = true;
                    break;
                  }
                }
              }

              return newControllers;
            },

            resetElements: function () {
              var me = this;
              helpers.each(
                me.data.datasets,
                function (dataset, datasetIndex) {
                  me.getDatasetMeta(datasetIndex).controller.reset();
                },
                me,
              );
            },

            update: function (animationDuration, lazy) {
              var me = this;
              Chart.plugins.notify('beforeUpdate', [me]);

              // In case the entire data object changed
              me.tooltip._data = me.data;

              // Make sure dataset controllers are updated and new controllers are reset
              var newControllers = me.buildOrUpdateControllers();

              // Make sure all dataset controllers have correct meta data counts
              helpers.each(
                me.data.datasets,
                function (dataset, datasetIndex) {
                  me.getDatasetMeta(
                    datasetIndex,
                  ).controller.buildOrUpdateElements();
                },
                me,
              );

              Chart.layoutService.update(me, me.chart.width, me.chart.height);

              // Apply changes to the dataets that require the scales to have been calculated i.e BorderColor chages
              Chart.plugins.notify('afterScaleUpdate', [me]);

              // Can only reset the new controllers after the scales have been updated
              helpers.each(newControllers, function (controller) {
                controller.reset();
              });

              me.updateDatasets();

              // Do this before render so that any plugins that need final scale updates can use it
              Chart.plugins.notify('afterUpdate', [me]);

              me.render(animationDuration, lazy);
            },

            /**
             * @method beforeDatasetsUpdate
             * @description Called before all datasets are updated. If a plugin returns false,
             * the datasets update will be cancelled until another chart update is triggered.
             * @param {Object} instance the chart instance being updated.
             * @returns {Boolean} false to cancel the datasets update.
             * @memberof Chart.PluginBase
             * @since version 2.1.5
             * @instance
             */

            /**
             * @method afterDatasetsUpdate
             * @description Called after all datasets have been updated. Note that this
             * extension will not be called if the datasets update has been cancelled.
             * @param {Object} instance the chart instance being updated.
             * @memberof Chart.PluginBase
             * @since version 2.1.5
             * @instance
             */

            /**
             * Updates all datasets unless a plugin returns false to the beforeDatasetsUpdate
             * extension, in which case no datasets will be updated and the afterDatasetsUpdate
             * notification will be skipped.
             * @protected
             * @instance
             */
            updateDatasets: function () {
              var me = this;
              var i, ilen;

              if (Chart.plugins.notify('beforeDatasetsUpdate', [me])) {
                for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
                  me.getDatasetMeta(i).controller.update();
                }

                Chart.plugins.notify('afterDatasetsUpdate', [me]);
              }
            },

            render: function (duration, lazy) {
              var me = this;
              Chart.plugins.notify('beforeRender', [me]);

              var animationOptions = me.options.animation;
              if (
                animationOptions &&
                ((typeof duration !== 'undefined' && duration !== 0) ||
                  (typeof duration === 'undefined' &&
                    animationOptions.duration !== 0))
              ) {
                var animation = new Chart.Animation();
                animation.numSteps =
                  (duration || animationOptions.duration) / 16.66; // 60 fps
                animation.easing = animationOptions.easing;

                // render function
                animation.render = function (chartInstance, animationObject) {
                  var easingFunction =
                    helpers.easingEffects[animationObject.easing];
                  var stepDecimal =
                    animationObject.currentStep / animationObject.numSteps;
                  var easeDecimal = easingFunction(stepDecimal);

                  chartInstance.draw(
                    easeDecimal,
                    stepDecimal,
                    animationObject.currentStep,
                  );
                };

                // user events
                animation.onAnimationProgress = animationOptions.onProgress;
                animation.onAnimationComplete = animationOptions.onComplete;

                Chart.animationService.addAnimation(
                  me,
                  animation,
                  duration,
                  lazy,
                );
              } else {
                me.draw();
                if (
                  animationOptions &&
                  animationOptions.onComplete &&
                  animationOptions.onComplete.call
                ) {
                  animationOptions.onComplete.call(me);
                }
              }
              return me;
            },

            draw: function (ease) {
              var me = this;
              var easingDecimal = ease || 1;
              me.clear();

              Chart.plugins.notify('beforeDraw', [me, easingDecimal]);

              // Draw all the scales
              helpers.each(
                me.boxes,
                function (box) {
                  box.draw(me.chartArea);
                },
                me,
              );
              if (me.scale) {
                me.scale.draw();
              }

              Chart.plugins.notify('beforeDatasetsDraw', [me, easingDecimal]);

              // Draw each dataset via its respective controller (reversed to support proper line stacking)
              helpers.each(
                me.data.datasets,
                function (dataset, datasetIndex) {
                  if (me.isDatasetVisible(datasetIndex)) {
                    me.getDatasetMeta(datasetIndex).controller.draw(ease);
                  }
                },
                me,
                true,
              );

              Chart.plugins.notify('afterDatasetsDraw', [me, easingDecimal]);

              // Finally draw the tooltip
              me.tooltip.transition(easingDecimal).draw();

              Chart.plugins.notify('afterDraw', [me, easingDecimal]);
            },

            // Get the single element that was clicked on
            // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw
            getElementAtEvent: function (e) {
              var me = this;
              var eventPosition = helpers.getRelativePosition(e, me.chart);
              var elementsArray = [];

              helpers.each(me.data.datasets, function (dataset, datasetIndex) {
                if (me.isDatasetVisible(datasetIndex)) {
                  var meta = me.getDatasetMeta(datasetIndex);
                  helpers.each(meta.data, function (element) {
                    if (element.inRange(eventPosition.x, eventPosition.y)) {
                      elementsArray.push(element);
                      return elementsArray;
                    }
                  });
                }
              });

              return elementsArray.slice(0, 1);
            },

            getElementsAtEvent: function (e) {
              var me = this;
              var eventPosition = helpers.getRelativePosition(e, me.chart);
              var elementsArray = [];

              var found = function () {
                if (me.data.datasets) {
                  for (var i = 0; i < me.data.datasets.length; i++) {
                    var meta = me.getDatasetMeta(i);
                    if (me.isDatasetVisible(i)) {
                      for (var j = 0; j < meta.data.length; j++) {
                        if (
                          meta.data[j].inRange(eventPosition.x, eventPosition.y)
                        ) {
                          return meta.data[j];
                        }
                      }
                    }
                  }
                }
              }.call(me);

              if (!found) {
                return elementsArray;
              }

              helpers.each(
                me.data.datasets,
                function (dataset, datasetIndex) {
                  if (me.isDatasetVisible(datasetIndex)) {
                    var meta = me.getDatasetMeta(datasetIndex),
                      element = meta.data[found._index];
                    if (element && !element._view.skip) {
                      elementsArray.push(element);
                    }
                  }
                },
                me,
              );

              return elementsArray;
            },

            getElementsAtXAxis: function (e) {
              var me = this;
              var eventPosition = helpers.getRelativePosition(e, me.chart);
              var elementsArray = [];

              var found = function () {
                if (me.data.datasets) {
                  for (var i = 0; i < me.data.datasets.length; i++) {
                    var meta = me.getDatasetMeta(i);
                    if (me.isDatasetVisible(i)) {
                      for (var j = 0; j < meta.data.length; j++) {
                        if (
                          meta.data[j].inLabelRange(
                            eventPosition.x,
                            eventPosition.y,
                          )
                        ) {
                          return meta.data[j];
                        }
                      }
                    }
                  }
                }
              }.call(me);

              if (!found) {
                return elementsArray;
              }

              helpers.each(
                me.data.datasets,
                function (dataset, datasetIndex) {
                  if (me.isDatasetVisible(datasetIndex)) {
                    var meta = me.getDatasetMeta(datasetIndex);
                    var index = helpers.findIndex(meta.data, function (it) {
                      return found._model.x === it._model.x;
                    });
                    if (index !== -1 && !meta.data[index]._view.skip) {
                      elementsArray.push(meta.data[index]);
                    }
                  }
                },
                me,
              );

              return elementsArray;
            },

            getElementsAtEventForMode: function (e, mode) {
              var me = this;
              switch (mode) {
                case 'single':
                  return me.getElementAtEvent(e);
                case 'label':
                  return me.getElementsAtEvent(e);
                case 'dataset':
                  return me.getDatasetAtEvent(e);
                case 'x-axis':
                  return me.getElementsAtXAxis(e);
                default:
                  return e;
              }
            },

            getDatasetAtEvent: function (e) {
              var elementsArray = this.getElementAtEvent(e);

              if (elementsArray.length > 0) {
                elementsArray = this.getDatasetMeta(
                  elementsArray[0]._datasetIndex,
                ).data;
              }

              return elementsArray;
            },

            getDatasetMeta: function (datasetIndex) {
              var me = this;
              var dataset = me.data.datasets[datasetIndex];
              if (!dataset._meta) {
                dataset._meta = {};
              }

              var meta = dataset._meta[me.id];
              if (!meta) {
                meta = dataset._meta[me.id] = {
                  type: null,
                  data: [],
                  dataset: null,
                  controller: null,
                  hidden: null, // See isDatasetVisible() comment
                  xAxisID: null,
                  yAxisID: null,
                };
              }

              return meta;
            },

            getVisibleDatasetCount: function () {
              var count = 0;
              for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {
                if (this.isDatasetVisible(i)) {
                  count++;
                }
              }
              return count;
            },

            isDatasetVisible: function (datasetIndex) {
              var meta = this.getDatasetMeta(datasetIndex);

              // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,
              // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.
              return typeof meta.hidden === 'boolean'
                ? !meta.hidden
                : !this.data.datasets[datasetIndex].hidden;
            },

            generateLegend: function () {
              return this.options.legendCallback(this);
            },

            destroy: function () {
              var me = this;
              me.stop();
              me.clear();
              helpers.unbindEvents(me, me.events);
              helpers.removeResizeListener(me.chart.canvas.parentNode);

              // Reset canvas height/width attributes
              var canvas = me.chart.canvas;
              canvas.width = me.chart.width;
              canvas.height = me.chart.height;

              // if we scaled the canvas in response to a devicePixelRatio !== 1, we need to undo that transform here
              if (me.chart.originalDevicePixelRatio !== undefined) {
                me.chart.ctx.scale(
                  1 / me.chart.originalDevicePixelRatio,
                  1 / me.chart.originalDevicePixelRatio,
                );
              }

              // Reset to the old style since it may have been changed by the device pixel ratio changes
              canvas.style.width = me.chart.originalCanvasStyleWidth;
              canvas.style.height = me.chart.originalCanvasStyleHeight;

              Chart.plugins.notify('destroy', [me]);

              delete Chart.instances[me.id];
            },

            toBase64Image: function () {
              return this.chart.canvas.toDataURL.apply(
                this.chart.canvas,
                arguments,
              );
            },

            initToolTip: function () {
              var me = this;
              me.tooltip = new Chart.Tooltip(
                {
                  _chart: me.chart,
                  _chartInstance: me,
                  _data: me.data,
                  _options: me.options.tooltips,
                },
                me,
              );
            },

            bindEvents: function () {
              var me = this;
              helpers.bindEvents(me, me.options.events, function (evt) {
                me.eventHandler(evt);
              });
            },

            updateHoverStyle: function (elements, mode, enabled) {
              var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';
              var element, i, ilen;

              switch (mode) {
                case 'single':
                  elements = [elements[0]];
                  break;
                case 'label':
                case 'dataset':
                case 'x-axis':
                  // elements = elements;
                  break;
                default:
                  // unsupported mode
                  return;
              }

              for (i = 0, ilen = elements.length; i < ilen; ++i) {
                element = elements[i];
                if (element) {
                  this.getDatasetMeta(element._datasetIndex).controller[method](
                    element,
                  );
                }
              }
            },

            eventHandler: function (e) {
              var me = this;
              var tooltip = me.tooltip;
              var options = me.options || {};
              var hoverOptions = options.hover;
              var tooltipsOptions = options.tooltips;

              me.lastActive = me.lastActive || [];
              me.lastTooltipActive = me.lastTooltipActive || [];

              // Find Active Elements for hover and tooltips
              if (e.type === 'mouseout') {
                me.active = [];
                me.tooltipActive = [];
              } else {
                me.active = me.getElementsAtEventForMode(e, hoverOptions.mode);
                me.tooltipActive = me.getElementsAtEventForMode(
                  e,
                  tooltipsOptions.mode,
                );
              }

              // On Hover hook
              if (hoverOptions.onHover) {
                hoverOptions.onHover.call(me, me.active);
              }

              if (me.legend && me.legend.handleEvent) {
                me.legend.handleEvent(e);
              }

              if (e.type === 'mouseup' || e.type === 'click') {
                if (options.onClick) {
                  options.onClick.call(me, e, me.active);
                }
              }

              // Remove styling for last active (even if it may still be active)
              if (me.lastActive.length) {
                me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);
              }

              // Built in hover styling
              if (me.active.length && hoverOptions.mode) {
                me.updateHoverStyle(me.active, hoverOptions.mode, true);
              }

              // Built in Tooltips
              if (tooltipsOptions.enabled || tooltipsOptions.custom) {
                tooltip.initialize();
                tooltip._active = me.tooltipActive;
                tooltip.update(true);
              }

              // Hover animations
              tooltip.pivot();

              if (!me.animating) {
                // If entering, leaving, or changing elements, animate the change via pivot
                if (
                  !helpers.arrayEquals(me.active, me.lastActive) ||
                  !helpers.arrayEquals(me.tooltipActive, me.lastTooltipActive)
                ) {
                  me.stop();

                  if (tooltipsOptions.enabled || tooltipsOptions.custom) {
                    tooltip.update(true);
                  }

                  // We only need to render at this point. Updating will cause scales to be
                  // recomputed generating flicker & using more memory than necessary.
                  me.render(hoverOptions.animationDuration, true);
                }
              }

              // Remember Last Actives
              me.lastActive = me.active;
              me.lastTooltipActive = me.tooltipActive;
              return me;
            },
          },
        );
      };

      /***/
    },
    /* 831 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;
        var noop = helpers.noop;

        // Base class for all dataset controllers (line, bar, etc)
        Chart.DatasetController = function (chart, datasetIndex) {
          this.initialize(chart, datasetIndex);
        };

        helpers.extend(Chart.DatasetController.prototype, {
          /**
           * Element type used to generate a meta dataset (e.g. Chart.element.Line).
           * @type {Chart.core.element}
           */
          datasetElementType: null,

          /**
           * Element type used to generate a meta data (e.g. Chart.element.Point).
           * @type {Chart.core.element}
           */
          dataElementType: null,

          initialize: function (chart, datasetIndex) {
            var me = this;
            me.chart = chart;
            me.index = datasetIndex;
            me.linkScales();
            me.addElements();
          },

          updateIndex: function (datasetIndex) {
            this.index = datasetIndex;
          },

          linkScales: function () {
            var me = this;
            var meta = me.getMeta();
            var dataset = me.getDataset();

            if (meta.xAxisID === null) {
              meta.xAxisID =
                dataset.xAxisID || me.chart.options.scales.xAxes[0].id;
            }
            if (meta.yAxisID === null) {
              meta.yAxisID =
                dataset.yAxisID || me.chart.options.scales.yAxes[0].id;
            }
          },

          getDataset: function () {
            return this.chart.data.datasets[this.index];
          },

          getMeta: function () {
            return this.chart.getDatasetMeta(this.index);
          },

          getScaleForId: function (scaleID) {
            return this.chart.scales[scaleID];
          },

          reset: function () {
            this.update(true);
          },

          createMetaDataset: function () {
            var me = this;
            var type = me.datasetElementType;
            return (
              type &&
              new type({
                _chart: me.chart.chart,
                _datasetIndex: me.index,
              })
            );
          },

          createMetaData: function (index) {
            var me = this;
            var type = me.dataElementType;
            return (
              type &&
              new type({
                _chart: me.chart.chart,
                _datasetIndex: me.index,
                _index: index,
              })
            );
          },

          addElements: function () {
            var me = this;
            var meta = me.getMeta();
            var data = me.getDataset().data || [];
            var metaData = meta.data;
            var i, ilen;

            for (i = 0, ilen = data.length; i < ilen; ++i) {
              metaData[i] = metaData[i] || me.createMetaData(meta, i);
            }

            meta.dataset = meta.dataset || me.createMetaDataset();
          },

          addElementAndReset: function (index) {
            var me = this;
            var element = me.createMetaData(index);
            me.getMeta().data.splice(index, 0, element);
            me.updateElement(element, index, true);
          },

          buildOrUpdateElements: function () {
            // Handle the number of data points changing
            var meta = this.getMeta(),
              md = meta.data,
              numData = this.getDataset().data.length,
              numMetaData = md.length;

            // Make sure that we handle number of datapoints changing
            if (numData < numMetaData) {
              // Remove excess bars for data points that have been removed
              md.splice(numData, numMetaData - numData);
            } else if (numData > numMetaData) {
              // Add new elements
              for (var index = numMetaData; index < numData; ++index) {
                this.addElementAndReset(index);
              }
            }
          },

          update: noop,

          draw: function (ease) {
            var easingDecimal = ease || 1;
            helpers.each(this.getMeta().data, function (element) {
              element.transition(easingDecimal).draw();
            });
          },

          removeHoverStyle: function (element, elementOpts) {
            var dataset = this.chart.data.datasets[element._datasetIndex],
              index = element._index,
              custom = element.custom || {},
              valueOrDefault = helpers.getValueAtIndexOrDefault,
              model = element._model;

            model.backgroundColor = custom.backgroundColor
              ? custom.backgroundColor
              : valueOrDefault(
                  dataset.backgroundColor,
                  index,
                  elementOpts.backgroundColor,
                );
            model.borderColor = custom.borderColor
              ? custom.borderColor
              : valueOrDefault(
                  dataset.borderColor,
                  index,
                  elementOpts.borderColor,
                );
            model.borderWidth = custom.borderWidth
              ? custom.borderWidth
              : valueOrDefault(
                  dataset.borderWidth,
                  index,
                  elementOpts.borderWidth,
                );
          },

          setHoverStyle: function (element) {
            var dataset = this.chart.data.datasets[element._datasetIndex],
              index = element._index,
              custom = element.custom || {},
              valueOrDefault = helpers.getValueAtIndexOrDefault,
              getHoverColor = helpers.getHoverColor,
              model = element._model;

            model.backgroundColor = custom.hoverBackgroundColor
              ? custom.hoverBackgroundColor
              : valueOrDefault(
                  dataset.hoverBackgroundColor,
                  index,
                  getHoverColor(model.backgroundColor),
                );
            model.borderColor = custom.hoverBorderColor
              ? custom.hoverBorderColor
              : valueOrDefault(
                  dataset.hoverBorderColor,
                  index,
                  getHoverColor(model.borderColor),
                );
            model.borderWidth = custom.hoverBorderWidth
              ? custom.hoverBorderWidth
              : valueOrDefault(
                  dataset.hoverBorderWidth,
                  index,
                  model.borderWidth,
                );
          },
        });

        Chart.DatasetController.extend = helpers.inherits;
      };

      /***/
    },
    /* 832 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;

        // The layout service is very self explanatory.  It's responsible for the layout within a chart.
        // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need
        // It is this service's responsibility of carrying out that layout.
        Chart.layoutService = {
          defaults: {},

          // Register a box to a chartInstance. A box is simply a reference to an object that requires layout. eg. Scales, Legend, Plugins.
          addBox: function (chartInstance, box) {
            if (!chartInstance.boxes) {
              chartInstance.boxes = [];
            }
            chartInstance.boxes.push(box);
          },

          removeBox: function (chartInstance, box) {
            if (!chartInstance.boxes) {
              return;
            }
            chartInstance.boxes.splice(chartInstance.boxes.indexOf(box), 1);
          },

          // The most important function
          update: function (chartInstance, width, height) {
            if (!chartInstance) {
              return;
            }

            var xPadding = 0;
            var yPadding = 0;

            var leftBoxes = helpers.where(chartInstance.boxes, function (box) {
              return box.options.position === 'left';
            });
            var rightBoxes = helpers.where(chartInstance.boxes, function (box) {
              return box.options.position === 'right';
            });
            var topBoxes = helpers.where(chartInstance.boxes, function (box) {
              return box.options.position === 'top';
            });
            var bottomBoxes = helpers.where(chartInstance.boxes, function (
              box,
            ) {
              return box.options.position === 'bottom';
            });

            // Boxes that overlay the chartarea such as the radialLinear scale
            var chartAreaBoxes = helpers.where(chartInstance.boxes, function (
              box,
            ) {
              return box.options.position === 'chartArea';
            });

            // Ensure that full width boxes are at the very top / bottom
            topBoxes.sort(function (a, b) {
              return (
                (b.options.fullWidth ? 1 : 0) - (a.options.fullWidth ? 1 : 0)
              );
            });
            bottomBoxes.sort(function (a, b) {
              return (
                (a.options.fullWidth ? 1 : 0) - (b.options.fullWidth ? 1 : 0)
              );
            });

            // Essentially we now have any number of boxes on each of the 4 sides.
            // Our canvas looks like the following.
            // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and
            // B1 is the bottom axis
            // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays
            // These locations are single-box locations only, when trying to register a chartArea location that is already taken,
            // an error will be thrown.
            //
            // |----------------------------------------------------|
            // |                  T1 (Full Width)                   |
            // |----------------------------------------------------|
            // |    |    |                 T2                  |    |
            // |    |----|-------------------------------------|----|
            // |    |    | C1 |                           | C2 |    |
            // |    |    |----|                           |----|    |
            // |    |    |                                     |    |
            // | L1 | L2 |           ChartArea (C0)            | R1 |
            // |    |    |                                     |    |
            // |    |    |----|                           |----|    |
            // |    |    | C3 |                           | C4 |    |
            // |    |----|-------------------------------------|----|
            // |    |    |                 B1                  |    |
            // |----------------------------------------------------|
            // |                  B2 (Full Width)                   |
            // |----------------------------------------------------|
            //
            // What we do to find the best sizing, we do the following
            // 1. Determine the minimum size of the chart area.
            // 2. Split the remaining width equally between each vertical axis
            // 3. Split the remaining height equally between each horizontal axis
            // 4. Give each layout the maximum size it can be. The layout will return it's minimum size
            // 5. Adjust the sizes of each axis based on it's minimum reported size.
            // 6. Refit each axis
            // 7. Position each axis in the final location
            // 8. Tell the chart the final location of the chart area
            // 9. Tell any axes that overlay the chart area the positions of the chart area

            // Step 1
            var chartWidth = width - 2 * xPadding;
            var chartHeight = height - 2 * yPadding;
            var chartAreaWidth = chartWidth / 2; // min 50%
            var chartAreaHeight = chartHeight / 2; // min 50%

            // Step 2
            var verticalBoxWidth =
              (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);

            // Step 3
            var horizontalBoxHeight =
              (height - chartAreaHeight) /
              (topBoxes.length + bottomBoxes.length);

            // Step 4
            var maxChartAreaWidth = chartWidth;
            var maxChartAreaHeight = chartHeight;
            var minBoxSizes = [];

            function getMinimumBoxSize(box) {
              var minSize;
              var isHorizontal = box.isHorizontal();

              if (isHorizontal) {
                minSize = box.update(
                  box.options.fullWidth ? chartWidth : maxChartAreaWidth,
                  horizontalBoxHeight,
                );
                maxChartAreaHeight -= minSize.height;
              } else {
                minSize = box.update(verticalBoxWidth, chartAreaHeight);
                maxChartAreaWidth -= minSize.width;
              }

              minBoxSizes.push({
                horizontal: isHorizontal,
                minSize: minSize,
                box: box,
              });
            }

            helpers.each(
              leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes),
              getMinimumBoxSize,
            );

            // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could
            // be if the axes are drawn at their minimum sizes.

            // Steps 5 & 6
            var totalLeftBoxesWidth = xPadding;
            var totalRightBoxesWidth = xPadding;
            var totalTopBoxesHeight = yPadding;
            var totalBottomBoxesHeight = yPadding;

            // Function to fit a box
            function fitBox(box) {
              var minBoxSize = helpers.findNextWhere(minBoxSizes, function (
                minBox,
              ) {
                return minBox.box === box;
              });

              if (minBoxSize) {
                if (box.isHorizontal()) {
                  var scaleMargin = {
                    left: totalLeftBoxesWidth,
                    right: totalRightBoxesWidth,
                    top: 0,
                    bottom: 0,
                  };

                  // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends
                  // on the margin. Sometimes they need to increase in size slightly
                  box.update(
                    box.options.fullWidth ? chartWidth : maxChartAreaWidth,
                    chartHeight / 2,
                    scaleMargin,
                  );
                } else {
                  box.update(minBoxSize.minSize.width, maxChartAreaHeight);
                }
              }
            }

            // Update, and calculate the left and right margins for the horizontal boxes
            helpers.each(leftBoxes.concat(rightBoxes), fitBox);

            helpers.each(leftBoxes, function (box) {
              totalLeftBoxesWidth += box.width;
            });

            helpers.each(rightBoxes, function (box) {
              totalRightBoxesWidth += box.width;
            });

            // Set the Left and Right margins for the horizontal boxes
            helpers.each(topBoxes.concat(bottomBoxes), fitBox);

            // Figure out how much margin is on the top and bottom of the vertical boxes
            helpers.each(topBoxes, function (box) {
              totalTopBoxesHeight += box.height;
            });

            helpers.each(bottomBoxes, function (box) {
              totalBottomBoxesHeight += box.height;
            });

            function finalFitVerticalBox(box) {
              var minBoxSize = helpers.findNextWhere(minBoxSizes, function (
                minSize,
              ) {
                return minSize.box === box;
              });

              var scaleMargin = {
                left: 0,
                right: 0,
                top: totalTopBoxesHeight,
                bottom: totalBottomBoxesHeight,
              };

              if (minBoxSize) {
                box.update(
                  minBoxSize.minSize.width,
                  maxChartAreaHeight,
                  scaleMargin,
                );
              }
            }

            // Let the left layout know the final margin
            helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);

            // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)
            totalLeftBoxesWidth = xPadding;
            totalRightBoxesWidth = xPadding;
            totalTopBoxesHeight = yPadding;
            totalBottomBoxesHeight = yPadding;

            helpers.each(leftBoxes, function (box) {
              totalLeftBoxesWidth += box.width;
            });

            helpers.each(rightBoxes, function (box) {
              totalRightBoxesWidth += box.width;
            });

            helpers.each(topBoxes, function (box) {
              totalTopBoxesHeight += box.height;
            });
            helpers.each(bottomBoxes, function (box) {
              totalBottomBoxesHeight += box.height;
            });

            // Figure out if our chart area changed. This would occur if the dataset layout label rotation
            // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do
            // without calling `fit` again
            var newMaxChartAreaHeight =
              height - totalTopBoxesHeight - totalBottomBoxesHeight;
            var newMaxChartAreaWidth =
              width - totalLeftBoxesWidth - totalRightBoxesWidth;

            if (
              newMaxChartAreaWidth !== maxChartAreaWidth ||
              newMaxChartAreaHeight !== maxChartAreaHeight
            ) {
              helpers.each(leftBoxes, function (box) {
                box.height = newMaxChartAreaHeight;
              });

              helpers.each(rightBoxes, function (box) {
                box.height = newMaxChartAreaHeight;
              });

              helpers.each(topBoxes, function (box) {
                if (!box.options.fullWidth) {
                  box.width = newMaxChartAreaWidth;
                }
              });

              helpers.each(bottomBoxes, function (box) {
                if (!box.options.fullWidth) {
                  box.width = newMaxChartAreaWidth;
                }
              });

              maxChartAreaHeight = newMaxChartAreaHeight;
              maxChartAreaWidth = newMaxChartAreaWidth;
            }

            // Step 7 - Position the boxes
            var left = xPadding;
            var top = yPadding;

            function placeBox(box) {
              if (box.isHorizontal()) {
                box.left = box.options.fullWidth
                  ? xPadding
                  : totalLeftBoxesWidth;
                box.right = box.options.fullWidth
                  ? width - xPadding
                  : totalLeftBoxesWidth + maxChartAreaWidth;
                box.top = top;
                box.bottom = top + box.height;

                // Move to next point
                top = box.bottom;
              } else {
                box.left = left;
                box.right = left + box.width;
                box.top = totalTopBoxesHeight;
                box.bottom = totalTopBoxesHeight + maxChartAreaHeight;

                // Move to next point
                left = box.right;
              }
            }

            helpers.each(leftBoxes.concat(topBoxes), placeBox);

            // Account for chart width and height
            left += maxChartAreaWidth;
            top += maxChartAreaHeight;

            helpers.each(rightBoxes, placeBox);
            helpers.each(bottomBoxes, placeBox);

            // Step 8
            chartInstance.chartArea = {
              left: totalLeftBoxesWidth,
              top: totalTopBoxesHeight,
              right: totalLeftBoxesWidth + maxChartAreaWidth,
              bottom: totalTopBoxesHeight + maxChartAreaHeight,
            };

            // Step 9
            helpers.each(chartAreaBoxes, function (box) {
              box.left = chartInstance.chartArea.left;
              box.top = chartInstance.chartArea.top;
              box.right = chartInstance.chartArea.right;
              box.bottom = chartInstance.chartArea.bottom;

              box.update(maxChartAreaWidth, maxChartAreaHeight);
            });
          },
        };
      };

      /***/
    },
    /* 833 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;

        Chart.scaleService = {
          // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then
          // use the new chart options to grab the correct scale
          constructors: {},
          // Use a registration function so that we can move to an ES6 map when we no longer need to support
          // old browsers

          // Scale config defaults
          defaults: {},
          registerScaleType: function (type, scaleConstructor, defaults) {
            this.constructors[type] = scaleConstructor;
            this.defaults[type] = helpers.clone(defaults);
          },
          getScaleConstructor: function (type) {
            return this.constructors.hasOwnProperty(type)
              ? this.constructors[type]
              : undefined;
          },
          getScaleDefaults: function (type) {
            // Return the scale defaults merged with the global settings so that we always use the latest ones
            return this.defaults.hasOwnProperty(type)
              ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type])
              : {};
          },
          updateScaleDefaults: function (type, additions) {
            var defaults = this.defaults;
            if (defaults.hasOwnProperty(type)) {
              defaults[type] = helpers.extend(defaults[type], additions);
            }
          },
          addScalesToLayout: function (chartInstance) {
            // Adds each scale to the chart.boxes array to be sized accordingly
            helpers.each(chartInstance.scales, function (scale) {
              Chart.layoutService.addBox(chartInstance, scale);
            });
          },
        };
      };

      /***/
    },
    /* 834 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var noop = Chart.helpers.noop;

        /**
         * The plugin service singleton
         * @namespace Chart.plugins
         * @since 2.1.0
         */
        Chart.plugins = {
          _plugins: [],

          /**
           * Registers the given plugin(s) if not already registered.
           * @param {Array|Object} plugins plugin instance(s).
           */
          register: function (plugins) {
            var p = this._plugins;
            [].concat(plugins).forEach(function (plugin) {
              if (p.indexOf(plugin) === -1) {
                p.push(plugin);
              }
            });
          },

          /**
           * Unregisters the given plugin(s) only if registered.
           * @param {Array|Object} plugins plugin instance(s).
           */
          unregister: function (plugins) {
            var p = this._plugins;
            [].concat(plugins).forEach(function (plugin) {
              var idx = p.indexOf(plugin);
              if (idx !== -1) {
                p.splice(idx, 1);
              }
            });
          },

          /**
           * Remove all registered p^lugins.
           * @since 2.1.5
           */
          clear: function () {
            this._plugins = [];
          },

          /**
           * Returns the number of registered plugins?
           * @returns {Number}
           * @since 2.1.5
           */
          count: function () {
            return this._plugins.length;
          },

          /**
           * Returns all registered plugin intances.
           * @returns {Array} array of plugin objects.
           * @since 2.1.5
           */
          getAll: function () {
            return this._plugins;
          },

          /**
           * Calls registered plugins on the specified extension, with the given args. This
           * method immediately returns as soon as a plugin explicitly returns false. The
           * returned value can be used, for instance, to interrupt the current action.
           * @param {String} extension the name of the plugin method to call (e.g. 'beforeUpdate').
           * @param {Array} [args] extra arguments to apply to the extension call.
           * @returns {Boolean} false if any of the plugins return false, else returns true.
           */
          notify: function (extension, args) {
            var plugins = this._plugins;
            var ilen = plugins.length;
            var i, plugin;

            for (i = 0; i < ilen; ++i) {
              plugin = plugins[i];
              if (typeof plugin[extension] === 'function') {
                if (plugin[extension].apply(plugin, args || []) === false) {
                  return false;
                }
              }
            }

            return true;
          },
        };

        /**
         * Plugin extension methods.
         * @interface Chart.PluginBase
         * @since 2.1.0
         */
        Chart.PluginBase = Chart.Element.extend({
          // Called at start of chart init
          beforeInit: noop,

          // Called at end of chart init
          afterInit: noop,

          // Called at start of update
          beforeUpdate: noop,

          // Called at end of update
          afterUpdate: noop,

          // Called at start of draw
          beforeDraw: noop,

          // Called at end of draw
          afterDraw: noop,

          // Called during destroy
          destroy: noop,
        });

        /**
         * Provided for backward compatibility, use Chart.plugins instead
         * @namespace Chart.pluginService
         * @deprecated since version 2.1.5
         * @todo remove me at version 3
         */
        Chart.pluginService = Chart.plugins;
      };

      /***/
    },
    /* 835 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;

        Chart.defaults.scale = {
          display: true,
          position: 'left',

          // grid line settings
          gridLines: {
            display: true,
            color: 'rgba(0, 0, 0, 0.1)',
            lineWidth: 1,
            drawBorder: true,
            drawOnChartArea: true,
            drawTicks: true,
            tickMarkLength: 10,
            zeroLineWidth: 1,
            zeroLineColor: 'rgba(0,0,0,0.25)',
            offsetGridLines: false,
            borderDash: [],
            borderDashOffset: 0.0,
          },

          // scale label
          scaleLabel: {
            // actual label
            labelString: '',

            // display property
            display: false,
          },

          // label settings
          ticks: {
            beginAtZero: false,
            minRotation: 0,
            maxRotation: 50,
            mirror: false,
            padding: 10,
            reverse: false,
            display: true,
            autoSkip: true,
            autoSkipPadding: 0,
            labelOffset: 0,
            // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.
            callback: function (value) {
              return helpers.isArray(value) ? value : '' + value;
            },
          },
        };

        Chart.Scale = Chart.Element.extend({
          // These methods are ordered by lifecyle. Utilities then follow.
          // Any function defined here is inherited by all scale types.
          // Any function can be extended by the scale type

          beforeUpdate: function () {
            helpers.callCallback(this.options.beforeUpdate, [this]);
          },
          update: function (maxWidth, maxHeight, margins) {
            var me = this;

            // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
            me.beforeUpdate();

            // Absorb the master measurements
            me.maxWidth = maxWidth;
            me.maxHeight = maxHeight;
            me.margins = helpers.extend(
              {
                left: 0,
                right: 0,
                top: 0,
                bottom: 0,
              },
              margins,
            );

            // Dimensions
            me.beforeSetDimensions();
            me.setDimensions();
            me.afterSetDimensions();

            // Data min/max
            me.beforeDataLimits();
            me.determineDataLimits();
            me.afterDataLimits();

            // Ticks
            me.beforeBuildTicks();
            me.buildTicks();
            me.afterBuildTicks();

            me.beforeTickToLabelConversion();
            me.convertTicksToLabels();
            me.afterTickToLabelConversion();

            // Tick Rotation
            me.beforeCalculateTickRotation();
            me.calculateTickRotation();
            me.afterCalculateTickRotation();
            // Fit
            me.beforeFit();
            me.fit();
            me.afterFit();
            //
            me.afterUpdate();

            return me.minSize;
          },
          afterUpdate: function () {
            helpers.callCallback(this.options.afterUpdate, [this]);
          },

          //

          beforeSetDimensions: function () {
            helpers.callCallback(this.options.beforeSetDimensions, [this]);
          },
          setDimensions: function () {
            var me = this;
            // Set the unconstrained dimension before label rotation
            if (me.isHorizontal()) {
              // Reset position before calculating rotation
              me.width = me.maxWidth;
              me.left = 0;
              me.right = me.width;
            } else {
              me.height = me.maxHeight;

              // Reset position before calculating rotation
              me.top = 0;
              me.bottom = me.height;
            }

            // Reset padding
            me.paddingLeft = 0;
            me.paddingTop = 0;
            me.paddingRight = 0;
            me.paddingBottom = 0;
          },
          afterSetDimensions: function () {
            helpers.callCallback(this.options.afterSetDimensions, [this]);
          },

          // Data limits
          beforeDataLimits: function () {
            helpers.callCallback(this.options.beforeDataLimits, [this]);
          },
          determineDataLimits: helpers.noop,
          afterDataLimits: function () {
            helpers.callCallback(this.options.afterDataLimits, [this]);
          },

          //
          beforeBuildTicks: function () {
            helpers.callCallback(this.options.beforeBuildTicks, [this]);
          },
          buildTicks: helpers.noop,
          afterBuildTicks: function () {
            helpers.callCallback(this.options.afterBuildTicks, [this]);
          },

          beforeTickToLabelConversion: function () {
            helpers.callCallback(this.options.beforeTickToLabelConversion, [
              this,
            ]);
          },
          convertTicksToLabels: function () {
            var me = this;
            // Convert ticks to strings
            me.ticks = me.ticks.map(function (numericalTick, index, ticks) {
              if (me.options.ticks.userCallback) {
                return me.options.ticks.userCallback(
                  numericalTick,
                  index,
                  ticks,
                );
              }
              return me.options.ticks.callback(numericalTick, index, ticks);
            }, me);
          },
          afterTickToLabelConversion: function () {
            helpers.callCallback(this.options.afterTickToLabelConversion, [
              this,
            ]);
          },

          //

          beforeCalculateTickRotation: function () {
            helpers.callCallback(this.options.beforeCalculateTickRotation, [
              this,
            ]);
          },
          calculateTickRotation: function () {
            var me = this;
            var context = me.ctx;
            var globalDefaults = Chart.defaults.global;
            var optionTicks = me.options.ticks;

            // Get the width of each grid by calculating the difference
            // between x offsets between 0 and 1.
            var tickFontSize = helpers.getValueOrDefault(
              optionTicks.fontSize,
              globalDefaults.defaultFontSize,
            );
            var tickFontStyle = helpers.getValueOrDefault(
              optionTicks.fontStyle,
              globalDefaults.defaultFontStyle,
            );
            var tickFontFamily = helpers.getValueOrDefault(
              optionTicks.fontFamily,
              globalDefaults.defaultFontFamily,
            );
            var tickLabelFont = helpers.fontString(
              tickFontSize,
              tickFontStyle,
              tickFontFamily,
            );
            context.font = tickLabelFont;

            var firstWidth = context.measureText(me.ticks[0]).width;
            var lastWidth = context.measureText(me.ticks[me.ticks.length - 1])
              .width;
            var firstRotated;

            me.labelRotation = optionTicks.minRotation || 0;
            me.paddingRight = 0;
            me.paddingLeft = 0;

            if (me.options.display) {
              if (me.isHorizontal()) {
                me.paddingRight = lastWidth / 2 + 3;
                me.paddingLeft = firstWidth / 2 + 3;

                if (!me.longestTextCache) {
                  me.longestTextCache = {};
                }
                var originalLabelWidth = helpers.longestText(
                  context,
                  tickLabelFont,
                  me.ticks,
                  me.longestTextCache,
                );
                var labelWidth = originalLabelWidth;
                var cosRotation;
                var sinRotation;

                // Allow 3 pixels x2 padding either side for label readability
                // only the index matters for a dataset scale, but we want a consistent interface between scales
                var tickWidth =
                  me.getPixelForTick(1) - me.getPixelForTick(0) - 6;

                // Max label rotation can be set or default to 90 - also act as a loop counter
                while (
                  labelWidth > tickWidth &&
                  me.labelRotation < optionTicks.maxRotation
                ) {
                  cosRotation = Math.cos(helpers.toRadians(me.labelRotation));
                  sinRotation = Math.sin(helpers.toRadians(me.labelRotation));

                  firstRotated = cosRotation * firstWidth;

                  // We're right aligning the text now.
                  if (firstRotated + tickFontSize / 2 > me.yLabelWidth) {
                    me.paddingLeft = firstRotated + tickFontSize / 2;
                  }

                  me.paddingRight = tickFontSize / 2;

                  if (sinRotation * originalLabelWidth > me.maxHeight) {
                    // go back one step
                    me.labelRotation--;
                    break;
                  }

                  me.labelRotation++;
                  labelWidth = cosRotation * originalLabelWidth;
                }
              }
            }

            if (me.margins) {
              me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);
              me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);
            }
          },
          afterCalculateTickRotation: function () {
            helpers.callCallback(this.options.afterCalculateTickRotation, [
              this,
            ]);
          },

          //

          beforeFit: function () {
            helpers.callCallback(this.options.beforeFit, [this]);
          },
          fit: function () {
            var me = this;
            // Reset
            var minSize = (me.minSize = {
              width: 0,
              height: 0,
            });

            var opts = me.options;
            var globalDefaults = Chart.defaults.global;
            var tickOpts = opts.ticks;
            var scaleLabelOpts = opts.scaleLabel;
            var gridLineOpts = opts.gridLines;
            var display = opts.display;
            var isHorizontal = me.isHorizontal();

            var tickFontSize = helpers.getValueOrDefault(
              tickOpts.fontSize,
              globalDefaults.defaultFontSize,
            );
            var tickFontStyle = helpers.getValueOrDefault(
              tickOpts.fontStyle,
              globalDefaults.defaultFontStyle,
            );
            var tickFontFamily = helpers.getValueOrDefault(
              tickOpts.fontFamily,
              globalDefaults.defaultFontFamily,
            );
            var tickLabelFont = helpers.fontString(
              tickFontSize,
              tickFontStyle,
              tickFontFamily,
            );

            var scaleLabelFontSize = helpers.getValueOrDefault(
              scaleLabelOpts.fontSize,
              globalDefaults.defaultFontSize,
            );

            var tickMarkLength = opts.gridLines.tickMarkLength;

            // Width
            if (isHorizontal) {
              // subtract the margins to line up with the chartArea if we are a full width scale
              minSize.width = me.isFullWidth()
                ? me.maxWidth - me.margins.left - me.margins.right
                : me.maxWidth;
            } else {
              minSize.width =
                display && gridLineOpts.drawTicks ? tickMarkLength : 0;
            }

            // height
            if (isHorizontal) {
              minSize.height =
                display && gridLineOpts.drawTicks ? tickMarkLength : 0;
            } else {
              minSize.height = me.maxHeight; // fill all the height
            }

            // Are we showing a title for the scale?
            if (scaleLabelOpts.display && display) {
              if (isHorizontal) {
                minSize.height += scaleLabelFontSize * 1.5;
              } else {
                minSize.width += scaleLabelFontSize * 1.5;
              }
            }

            if (tickOpts.display && display) {
              // Don't bother fitting the ticks if we are not showing them
              if (!me.longestTextCache) {
                me.longestTextCache = {};
              }

              var largestTextWidth = helpers.longestText(
                me.ctx,
                tickLabelFont,
                me.ticks,
                me.longestTextCache,
              );
              var tallestLabelHeightInLines = helpers.numberOfLabelLines(
                me.ticks,
              );
              var lineSpace = tickFontSize * 0.5;

              if (isHorizontal) {
                // A horizontal axis is more constrained by the height.
                me.longestLabelWidth = largestTextWidth;

                // TODO - improve this calculation
                var labelHeight =
                  Math.sin(helpers.toRadians(me.labelRotation)) *
                    me.longestLabelWidth +
                  tickFontSize * tallestLabelHeightInLines +
                  lineSpace * tallestLabelHeightInLines;

                minSize.height = Math.min(
                  me.maxHeight,
                  minSize.height + labelHeight,
                );
                me.ctx.font = tickLabelFont;

                var firstLabelWidth = me.ctx.measureText(me.ticks[0]).width;
                var lastLabelWidth = me.ctx.measureText(
                  me.ticks[me.ticks.length - 1],
                ).width;

                // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated
                // by the font height
                var cosRotation = Math.cos(helpers.toRadians(me.labelRotation));
                var sinRotation = Math.sin(helpers.toRadians(me.labelRotation));
                me.paddingLeft =
                  me.labelRotation !== 0
                    ? cosRotation * firstLabelWidth + 3
                    : firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges
                me.paddingRight =
                  me.labelRotation !== 0
                    ? sinRotation * (tickFontSize / 2) + 3
                    : lastLabelWidth / 2 + 3; // when rotated
              } else {
                // A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first
                var maxLabelWidth = me.maxWidth - minSize.width;

                // Account for padding
                var mirror = tickOpts.mirror;
                if (!mirror) {
                  largestTextWidth += me.options.ticks.padding;
                } else {
                  // If mirrored text is on the inside so don't expand
                  largestTextWidth = 0;
                }

                if (largestTextWidth < maxLabelWidth) {
                  // We don't need all the room
                  minSize.width += largestTextWidth;
                } else {
                  // Expand to max size
                  minSize.width = me.maxWidth;
                }

                me.paddingTop = tickFontSize / 2;
                me.paddingBottom = tickFontSize / 2;
              }
            }

            if (me.margins) {
              me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);
              me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);
              me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);
              me.paddingBottom = Math.max(
                me.paddingBottom - me.margins.bottom,
                0,
              );
            }

            me.width = minSize.width;
            me.height = minSize.height;
          },
          afterFit: function () {
            helpers.callCallback(this.options.afterFit, [this]);
          },

          // Shared Methods
          isHorizontal: function () {
            return (
              this.options.position === 'top' ||
              this.options.position === 'bottom'
            );
          },
          isFullWidth: function () {
            return this.options.fullWidth;
          },

          // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not
          getRightValue: function (rawValue) {
            // Null and undefined values first
            if (rawValue === null || typeof rawValue === 'undefined') {
              return NaN;
            }
            // isNaN(object) returns true, so make sure NaN is checking for a number
            if (typeof rawValue === 'number' && isNaN(rawValue)) {
              return NaN;
            }
            // If it is in fact an object, dive in one more level
            if (typeof rawValue === 'object') {
              if (rawValue instanceof Date || rawValue.isValid) {
                return rawValue;
              }
              return this.getRightValue(
                this.isHorizontal() ? rawValue.x : rawValue.y,
              );
            }

            // Value is good, return it
            return rawValue;
          },

          // Used to get the value to display in the tooltip for the data at the given index
          // function getLabelForIndex(index, datasetIndex)
          getLabelForIndex: helpers.noop,

          // Used to get data value locations.  Value can either be an index or a numerical value
          getPixelForValue: helpers.noop,

          // Used to get the data value from a given pixel. This is the inverse of getPixelForValue
          getValueForPixel: helpers.noop,

          // Used for tick location, should
          getPixelForTick: function (index, includeOffset) {
            var me = this;
            if (me.isHorizontal()) {
              var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
              var tickWidth =
                innerWidth /
                Math.max(
                  me.ticks.length -
                    (me.options.gridLines.offsetGridLines ? 0 : 1),
                  1,
                );
              var pixel = tickWidth * index + me.paddingLeft;

              if (includeOffset) {
                pixel += tickWidth / 2;
              }

              var finalVal = me.left + Math.round(pixel);
              finalVal += me.isFullWidth() ? me.margins.left : 0;
              return finalVal;
            }
            var innerHeight = me.height - (me.paddingTop + me.paddingBottom);
            return me.top + index * (innerHeight / (me.ticks.length - 1));
          },

          // Utility for getting the pixel location of a percentage of scale
          getPixelForDecimal: function (decimal /* , includeOffset*/) {
            var me = this;
            if (me.isHorizontal()) {
              var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
              var valueOffset = innerWidth * decimal + me.paddingLeft;

              var finalVal = me.left + Math.round(valueOffset);
              finalVal += me.isFullWidth() ? me.margins.left : 0;
              return finalVal;
            }
            return me.top + decimal * me.height;
          },

          getBasePixel: function () {
            var me = this;
            var min = me.min;
            var max = me.max;

            return me.getPixelForValue(
              me.beginAtZero
                ? 0
                : min < 0 && max < 0
                ? max
                : min > 0 && max > 0
                ? min
                : 0,
            );
          },

          // Actualy draw the scale on the canvas
          // @param {rectangle} chartArea : the area of the chart to draw full grid lines on
          draw: function (chartArea) {
            var me = this;
            var options = me.options;
            if (!options.display) {
              return;
            }

            var context = me.ctx;
            var globalDefaults = Chart.defaults.global;
            var optionTicks = options.ticks;
            var gridLines = options.gridLines;
            var scaleLabel = options.scaleLabel;

            var isRotated = me.labelRotation !== 0;
            var skipRatio;
            var useAutoskipper = optionTicks.autoSkip;
            var isHorizontal = me.isHorizontal();

            // figure out the maximum number of gridlines to show
            var maxTicks;
            if (optionTicks.maxTicksLimit) {
              maxTicks = optionTicks.maxTicksLimit;
            }

            var tickFontColor = helpers.getValueOrDefault(
              optionTicks.fontColor,
              globalDefaults.defaultFontColor,
            );
            var tickFontSize = helpers.getValueOrDefault(
              optionTicks.fontSize,
              globalDefaults.defaultFontSize,
            );
            var tickFontStyle = helpers.getValueOrDefault(
              optionTicks.fontStyle,
              globalDefaults.defaultFontStyle,
            );
            var tickFontFamily = helpers.getValueOrDefault(
              optionTicks.fontFamily,
              globalDefaults.defaultFontFamily,
            );
            var tickLabelFont = helpers.fontString(
              tickFontSize,
              tickFontStyle,
              tickFontFamily,
            );
            var tl = gridLines.tickMarkLength;
            var borderDash = helpers.getValueOrDefault(
              gridLines.borderDash,
              globalDefaults.borderDash,
            );
            var borderDashOffset = helpers.getValueOrDefault(
              gridLines.borderDashOffset,
              globalDefaults.borderDashOffset,
            );

            var scaleLabelFontColor = helpers.getValueOrDefault(
              scaleLabel.fontColor,
              globalDefaults.defaultFontColor,
            );
            var scaleLabelFontSize = helpers.getValueOrDefault(
              scaleLabel.fontSize,
              globalDefaults.defaultFontSize,
            );
            var scaleLabelFontStyle = helpers.getValueOrDefault(
              scaleLabel.fontStyle,
              globalDefaults.defaultFontStyle,
            );
            var scaleLabelFontFamily = helpers.getValueOrDefault(
              scaleLabel.fontFamily,
              globalDefaults.defaultFontFamily,
            );
            var scaleLabelFont = helpers.fontString(
              scaleLabelFontSize,
              scaleLabelFontStyle,
              scaleLabelFontFamily,
            );

            var labelRotationRadians = helpers.toRadians(me.labelRotation);
            var cosRotation = Math.cos(labelRotationRadians);
            var longestRotatedLabel = me.longestLabelWidth * cosRotation;

            // Make sure we draw text in the correct color and font
            context.fillStyle = tickFontColor;

            var itemsToDraw = [];

            if (isHorizontal) {
              skipRatio = false;

              // Only calculate the skip ratio with the half width of longestRotateLabel if we got an actual rotation
              // See #2584
              if (isRotated) {
                longestRotatedLabel /= 2;
              }

              if (
                (longestRotatedLabel + optionTicks.autoSkipPadding) *
                  me.ticks.length >
                me.width - (me.paddingLeft + me.paddingRight)
              ) {
                skipRatio =
                  1 +
                  Math.floor(
                    ((longestRotatedLabel + optionTicks.autoSkipPadding) *
                      me.ticks.length) /
                      (me.width - (me.paddingLeft + me.paddingRight)),
                  );
              }

              // if they defined a max number of optionTicks,
              // increase skipRatio until that number is met
              if (maxTicks && me.ticks.length > maxTicks) {
                while (
                  !skipRatio ||
                  me.ticks.length / (skipRatio || 1) > maxTicks
                ) {
                  if (!skipRatio) {
                    skipRatio = 1;
                  }
                  skipRatio += 1;
                }
              }

              if (!useAutoskipper) {
                skipRatio = false;
              }
            }

            var xTickStart =
              options.position === 'right' ? me.left : me.right - tl;
            var xTickEnd =
              options.position === 'right' ? me.left + tl : me.right;
            var yTickStart =
              options.position === 'bottom' ? me.top : me.bottom - tl;
            var yTickEnd =
              options.position === 'bottom' ? me.top + tl : me.bottom;

            helpers.each(me.ticks, function (label, index) {
              // If the callback returned a null or undefined value, do not draw this line
              if (label === undefined || label === null) {
                return;
              }

              var isLastTick = me.ticks.length === index + 1;

              // Since we always show the last tick,we need may need to hide the last shown one before
              var shouldSkip =
                (skipRatio > 1 && index % skipRatio > 0) ||
                (index % skipRatio === 0 &&
                  index + skipRatio >= me.ticks.length);
              if (
                (shouldSkip && !isLastTick) ||
                label === undefined ||
                label === null
              ) {
                return;
              }

              var lineWidth, lineColor;
              if (
                index ===
                (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)
              ) {
                // Draw the first index specially
                lineWidth = gridLines.zeroLineWidth;
                lineColor = gridLines.zeroLineColor;
              } else {
                lineWidth = helpers.getValueAtIndexOrDefault(
                  gridLines.lineWidth,
                  index,
                );
                lineColor = helpers.getValueAtIndexOrDefault(
                  gridLines.color,
                  index,
                );
              }

              // Common properties
              var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;
              var textAlign = 'middle';
              var textBaseline = 'middle';

              if (isHorizontal) {
                if (!isRotated) {
                  textBaseline = options.position === 'top' ? 'bottom' : 'top';
                }

                textAlign = isRotated ? 'right' : 'center';

                var xLineValue =
                  me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines
                labelX =
                  me.getPixelForTick(index, gridLines.offsetGridLines) +
                  optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)
                labelY = isRotated
                  ? me.top + 12
                  : options.position === 'top'
                  ? me.bottom - tl
                  : me.top + tl;

                tx1 = tx2 = x1 = x2 = xLineValue;
                ty1 = yTickStart;
                ty2 = yTickEnd;
                y1 = chartArea.top;
                y2 = chartArea.bottom;
              } else {
                if (options.position === 'left') {
                  if (optionTicks.mirror) {
                    labelX = me.right + optionTicks.padding;
                    textAlign = 'left';
                  } else {
                    labelX = me.right - optionTicks.padding;
                    textAlign = 'right';
                  }
                  // right side
                } else if (optionTicks.mirror) {
                  labelX = me.left - optionTicks.padding;
                  textAlign = 'right';
                } else {
                  labelX = me.left + optionTicks.padding;
                  textAlign = 'left';
                }

                var yLineValue = me.getPixelForTick(index); // xvalues for grid lines
                yLineValue += helpers.aliasPixel(lineWidth);
                labelY = me.getPixelForTick(index, gridLines.offsetGridLines);

                tx1 = xTickStart;
                tx2 = xTickEnd;
                x1 = chartArea.left;
                x2 = chartArea.right;
                ty1 = ty2 = y1 = y2 = yLineValue;
              }

              itemsToDraw.push({
                tx1: tx1,
                ty1: ty1,
                tx2: tx2,
                ty2: ty2,
                x1: x1,
                y1: y1,
                x2: x2,
                y2: y2,
                labelX: labelX,
                labelY: labelY,
                glWidth: lineWidth,
                glColor: lineColor,
                glBorderDash: borderDash,
                glBorderDashOffset: borderDashOffset,
                rotation: -1 * labelRotationRadians,
                label: label,
                textBaseline: textBaseline,
                textAlign: textAlign,
              });
            });

            // Draw all of the tick labels, tick marks, and grid lines at the correct places
            helpers.each(itemsToDraw, function (itemToDraw) {
              if (gridLines.display) {
                context.save();
                context.lineWidth = itemToDraw.glWidth;
                context.strokeStyle = itemToDraw.glColor;
                if (context.setLineDash) {
                  context.setLineDash(itemToDraw.glBorderDash);
                  context.lineDashOffset = itemToDraw.glBorderDashOffset;
                }

                context.beginPath();

                if (gridLines.drawTicks) {
                  context.moveTo(itemToDraw.tx1, itemToDraw.ty1);
                  context.lineTo(itemToDraw.tx2, itemToDraw.ty2);
                }

                if (gridLines.drawOnChartArea) {
                  context.moveTo(itemToDraw.x1, itemToDraw.y1);
                  context.lineTo(itemToDraw.x2, itemToDraw.y2);
                }

                context.stroke();
                context.restore();
              }

              if (optionTicks.display) {
                context.save();
                context.translate(itemToDraw.labelX, itemToDraw.labelY);
                context.rotate(itemToDraw.rotation);
                context.font = tickLabelFont;
                context.textBaseline = itemToDraw.textBaseline;
                context.textAlign = itemToDraw.textAlign;

                var label = itemToDraw.label;
                if (helpers.isArray(label)) {
                  for (
                    var i = 0, y = -(label.length - 1) * tickFontSize * 0.75;
                    i < label.length;
                    ++i
                  ) {
                    // We just make sure the multiline element is a string here..
                    context.fillText('' + label[i], 0, y);
                    // apply same lineSpacing as calculated @ L#320
                    y += tickFontSize * 1.5;
                  }
                } else {
                  context.fillText(label, 0, 0);
                }
                context.restore();
              }
            });

            if (scaleLabel.display) {
              // Draw the scale label
              var scaleLabelX;
              var scaleLabelY;
              var rotation = 0;

              if (isHorizontal) {
                scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width
                scaleLabelY =
                  options.position === 'bottom'
                    ? me.bottom - scaleLabelFontSize / 2
                    : me.top + scaleLabelFontSize / 2;
              } else {
                var isLeft = options.position === 'left';
                scaleLabelX = isLeft
                  ? me.left + scaleLabelFontSize / 2
                  : me.right - scaleLabelFontSize / 2;
                scaleLabelY = me.top + (me.bottom - me.top) / 2;
                rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;
              }

              context.save();
              context.translate(scaleLabelX, scaleLabelY);
              context.rotate(rotation);
              context.textAlign = 'center';
              context.textBaseline = 'middle';
              context.fillStyle = scaleLabelFontColor; // render in correct colour
              context.font = scaleLabelFont;
              context.fillText(scaleLabel.labelString, 0, 0);
              context.restore();
            }

            if (gridLines.drawBorder) {
              // Draw the line at the edge of the axis
              context.lineWidth = helpers.getValueAtIndexOrDefault(
                gridLines.lineWidth,
                0,
              );
              context.strokeStyle = helpers.getValueAtIndexOrDefault(
                gridLines.color,
                0,
              );
              var x1 = me.left,
                x2 = me.right,
                y1 = me.top,
                y2 = me.bottom;

              var aliasPixel = helpers.aliasPixel(context.lineWidth);
              if (isHorizontal) {
                y1 = y2 = options.position === 'top' ? me.bottom : me.top;
                y1 += aliasPixel;
                y2 += aliasPixel;
              } else {
                x1 = x2 = options.position === 'left' ? me.right : me.left;
                x1 += aliasPixel;
                x2 += aliasPixel;
              }

              context.beginPath();
              context.moveTo(x1, y1);
              context.lineTo(x2, y2);
              context.stroke();
            }
          },
        });
      };

      /***/
    },
    /* 836 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;

        Chart.defaults.global.title = {
          display: false,
          position: 'top',
          fullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)

          fontStyle: 'bold',
          padding: 10,

          // actual title
          text: '',
        };

        var noop = helpers.noop;
        Chart.Title = Chart.Element.extend({
          initialize: function (config) {
            var me = this;
            helpers.extend(me, config);
            me.options = helpers.configMerge(
              Chart.defaults.global.title,
              config.options,
            );

            // Contains hit boxes for each dataset (in dataset order)
            me.legendHitBoxes = [];
          },

          // These methods are ordered by lifecyle. Utilities then follow.

          beforeUpdate: function () {
            var chartOpts = this.chart.options;
            if (chartOpts && chartOpts.title) {
              this.options = helpers.configMerge(
                Chart.defaults.global.title,
                chartOpts.title,
              );
            }
          },
          update: function (maxWidth, maxHeight, margins) {
            var me = this;

            // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
            me.beforeUpdate();

            // Absorb the master measurements
            me.maxWidth = maxWidth;
            me.maxHeight = maxHeight;
            me.margins = margins;

            // Dimensions
            me.beforeSetDimensions();
            me.setDimensions();
            me.afterSetDimensions();
            // Labels
            me.beforeBuildLabels();
            me.buildLabels();
            me.afterBuildLabels();

            // Fit
            me.beforeFit();
            me.fit();
            me.afterFit();
            //
            me.afterUpdate();

            return me.minSize;
          },
          afterUpdate: noop,

          //

          beforeSetDimensions: noop,
          setDimensions: function () {
            var me = this;
            // Set the unconstrained dimension before label rotation
            if (me.isHorizontal()) {
              // Reset position before calculating rotation
              me.width = me.maxWidth;
              me.left = 0;
              me.right = me.width;
            } else {
              me.height = me.maxHeight;

              // Reset position before calculating rotation
              me.top = 0;
              me.bottom = me.height;
            }

            // Reset padding
            me.paddingLeft = 0;
            me.paddingTop = 0;
            me.paddingRight = 0;
            me.paddingBottom = 0;

            // Reset minSize
            me.minSize = {
              width: 0,
              height: 0,
            };
          },
          afterSetDimensions: noop,

          //

          beforeBuildLabels: noop,
          buildLabels: noop,
          afterBuildLabels: noop,

          //

          beforeFit: noop,
          fit: function () {
            var me = this,
              valueOrDefault = helpers.getValueOrDefault,
              opts = me.options,
              globalDefaults = Chart.defaults.global,
              display = opts.display,
              fontSize = valueOrDefault(
                opts.fontSize,
                globalDefaults.defaultFontSize,
              ),
              minSize = me.minSize;

            if (me.isHorizontal()) {
              minSize.width = me.maxWidth; // fill all the width
              minSize.height = display ? fontSize + opts.padding * 2 : 0;
            } else {
              minSize.width = display ? fontSize + opts.padding * 2 : 0;
              minSize.height = me.maxHeight; // fill all the height
            }

            me.width = minSize.width;
            me.height = minSize.height;
          },
          afterFit: noop,

          // Shared Methods
          isHorizontal: function () {
            var pos = this.options.position;
            return pos === 'top' || pos === 'bottom';
          },

          // Actualy draw the title block on the canvas
          draw: function () {
            var me = this,
              ctx = me.ctx,
              valueOrDefault = helpers.getValueOrDefault,
              opts = me.options,
              globalDefaults = Chart.defaults.global;

            if (opts.display) {
              var fontSize = valueOrDefault(
                  opts.fontSize,
                  globalDefaults.defaultFontSize,
                ),
                fontStyle = valueOrDefault(
                  opts.fontStyle,
                  globalDefaults.defaultFontStyle,
                ),
                fontFamily = valueOrDefault(
                  opts.fontFamily,
                  globalDefaults.defaultFontFamily,
                ),
                titleFont = helpers.fontString(fontSize, fontStyle, fontFamily),
                rotation = 0,
                titleX,
                titleY,
                top = me.top,
                left = me.left,
                bottom = me.bottom,
                right = me.right;

              ctx.fillStyle = valueOrDefault(
                opts.fontColor,
                globalDefaults.defaultFontColor,
              ); // render in correct colour
              ctx.font = titleFont;

              // Horizontal
              if (me.isHorizontal()) {
                titleX = left + (right - left) / 2; // midpoint of the width
                titleY = top + (bottom - top) / 2; // midpoint of the height
              } else {
                titleX =
                  opts.position === 'left'
                    ? left + fontSize / 2
                    : right - fontSize / 2;
                titleY = top + (bottom - top) / 2;
                rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);
              }

              ctx.save();
              ctx.translate(titleX, titleY);
              ctx.rotate(rotation);
              ctx.textAlign = 'center';
              ctx.textBaseline = 'middle';
              ctx.fillText(opts.text, 0, 0);
              ctx.restore();
            }
          },
        });

        // Register the title plugin
        Chart.plugins.register({
          beforeInit: function (chartInstance) {
            var opts = chartInstance.options;
            var titleOpts = opts.title;

            if (titleOpts) {
              chartInstance.titleBlock = new Chart.Title({
                ctx: chartInstance.chart.ctx,
                options: titleOpts,
                chart: chartInstance,
              });

              Chart.layoutService.addBox(
                chartInstance,
                chartInstance.titleBlock,
              );
            }
          },
        });
      };

      /***/
    },
    /* 837 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;
        var noop = helpers.noop;

        Chart.defaults.global.legend = {
          display: true,
          position: 'top',
          fullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)
          reverse: false,

          // a callback that will handle
          onClick: function (e, legendItem) {
            var index = legendItem.datasetIndex;
            var ci = this.chart;
            var meta = ci.getDatasetMeta(index);

            // See controller.isDatasetVisible comment
            meta.hidden =
              meta.hidden === null ? !ci.data.datasets[index].hidden : null;

            // We hid a dataset ... rerender the chart
            ci.update();
          },

          onHover: null,

          labels: {
            boxWidth: 40,
            padding: 10,
            // Generates labels shown in the legend
            // Valid properties to return:
            // text : text to display
            // fillStyle : fill of coloured box
            // strokeStyle: stroke of coloured box
            // hidden : if this legend item refers to a hidden item
            // lineCap : cap style for line
            // lineDash
            // lineDashOffset :
            // lineJoin :
            // lineWidth :
            generateLabels: function (chart) {
              var data = chart.data;
              return helpers.isArray(data.datasets)
                ? data.datasets.map(function (dataset, i) {
                    return {
                      text: dataset.label,
                      fillStyle: !helpers.isArray(dataset.backgroundColor)
                        ? dataset.backgroundColor
                        : dataset.backgroundColor[0],
                      hidden: !chart.isDatasetVisible(i),
                      lineCap: dataset.borderCapStyle,
                      lineDash: dataset.borderDash,
                      lineDashOffset: dataset.borderDashOffset,
                      lineJoin: dataset.borderJoinStyle,
                      lineWidth: dataset.borderWidth,
                      strokeStyle: dataset.borderColor,
                      pointStyle: dataset.pointStyle,

                      // Below is extra data used for toggling the datasets
                      datasetIndex: i,
                    };
                  }, this)
                : [];
            },
          },
        };

        Chart.Legend = Chart.Element.extend({
          initialize: function (config) {
            helpers.extend(this, config);

            // Contains hit boxes for each dataset (in dataset order)
            this.legendHitBoxes = [];

            // Are we in doughnut mode which has a different data type
            this.doughnutMode = false;
          },

          // These methods are ordered by lifecyle. Utilities then follow.
          // Any function defined here is inherited by all legend types.
          // Any function can be extended by the legend type

          beforeUpdate: noop,
          update: function (maxWidth, maxHeight, margins) {
            var me = this;

            // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
            me.beforeUpdate();

            // Absorb the master measurements
            me.maxWidth = maxWidth;
            me.maxHeight = maxHeight;
            me.margins = margins;

            // Dimensions
            me.beforeSetDimensions();
            me.setDimensions();
            me.afterSetDimensions();
            // Labels
            me.beforeBuildLabels();
            me.buildLabels();
            me.afterBuildLabels();

            // Fit
            me.beforeFit();
            me.fit();
            me.afterFit();
            //
            me.afterUpdate();

            return me.minSize;
          },
          afterUpdate: noop,

          //

          beforeSetDimensions: noop,
          setDimensions: function () {
            var me = this;
            // Set the unconstrained dimension before label rotation
            if (me.isHorizontal()) {
              // Reset position before calculating rotation
              me.width = me.maxWidth;
              me.left = 0;
              me.right = me.width;
            } else {
              me.height = me.maxHeight;

              // Reset position before calculating rotation
              me.top = 0;
              me.bottom = me.height;
            }

            // Reset padding
            me.paddingLeft = 0;
            me.paddingTop = 0;
            me.paddingRight = 0;
            me.paddingBottom = 0;

            // Reset minSize
            me.minSize = {
              width: 0,
              height: 0,
            };
          },
          afterSetDimensions: noop,

          //

          beforeBuildLabels: noop,
          buildLabels: function () {
            var me = this;
            me.legendItems = me.options.labels.generateLabels.call(
              me,
              me.chart,
            );
            if (me.options.reverse) {
              me.legendItems.reverse();
            }
          },
          afterBuildLabels: noop,

          //

          beforeFit: noop,
          fit: function () {
            var me = this;
            var opts = me.options;
            var labelOpts = opts.labels;
            var display = opts.display;

            var ctx = me.ctx;

            var globalDefault = Chart.defaults.global,
              itemOrDefault = helpers.getValueOrDefault,
              fontSize = itemOrDefault(
                labelOpts.fontSize,
                globalDefault.defaultFontSize,
              ),
              fontStyle = itemOrDefault(
                labelOpts.fontStyle,
                globalDefault.defaultFontStyle,
              ),
              fontFamily = itemOrDefault(
                labelOpts.fontFamily,
                globalDefault.defaultFontFamily,
              ),
              labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);

            // Reset hit boxes
            var hitboxes = (me.legendHitBoxes = []);

            var minSize = me.minSize;
            var isHorizontal = me.isHorizontal();

            if (isHorizontal) {
              minSize.width = me.maxWidth; // fill all the width
              minSize.height = display ? 10 : 0;
            } else {
              minSize.width = display ? 10 : 0;
              minSize.height = me.maxHeight; // fill all the height
            }

            // Increase sizes here
            if (display) {
              ctx.font = labelFont;

              if (isHorizontal) {
                // Labels

                // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one
                var lineWidths = (me.lineWidths = [0]);
                var totalHeight = me.legendItems.length
                  ? fontSize + labelOpts.padding
                  : 0;

                ctx.textAlign = 'left';
                ctx.textBaseline = 'top';

                helpers.each(me.legendItems, function (legendItem, i) {
                  var boxWidth = labelOpts.usePointStyle
                    ? fontSize * Math.sqrt(2)
                    : labelOpts.boxWidth;

                  var width =
                    boxWidth +
                    fontSize / 2 +
                    ctx.measureText(legendItem.text).width;
                  if (
                    lineWidths[lineWidths.length - 1] +
                      width +
                      labelOpts.padding >=
                    me.width
                  ) {
                    totalHeight += fontSize + labelOpts.padding;
                    lineWidths[lineWidths.length] = me.left;
                  }

                  // Store the hitbox width and height here. Final position will be updated in `draw`
                  hitboxes[i] = {
                    left: 0,
                    top: 0,
                    width: width,
                    height: fontSize,
                  };

                  lineWidths[lineWidths.length - 1] +=
                    width + labelOpts.padding;
                });

                minSize.height += totalHeight;
              } else {
                var vPadding = labelOpts.padding;
                var columnWidths = (me.columnWidths = []);
                var totalWidth = labelOpts.padding;
                var currentColWidth = 0;
                var currentColHeight = 0;
                var itemHeight = fontSize + vPadding;

                helpers.each(me.legendItems, function (legendItem, i) {
                  // If usePointStyle is set, multiple boxWidth by 2 since it represents
                  // the radius and not truly the width
                  var boxWidth = labelOpts.usePointStyle
                    ? 2 * labelOpts.boxWidth
                    : labelOpts.boxWidth;

                  var itemWidth =
                    boxWidth +
                    fontSize / 2 +
                    ctx.measureText(legendItem.text).width;

                  // If too tall, go to new column
                  if (currentColHeight + itemHeight > minSize.height) {
                    totalWidth += currentColWidth + labelOpts.padding;
                    columnWidths.push(currentColWidth); // previous column width

                    currentColWidth = 0;
                    currentColHeight = 0;
                  }

                  // Get max width
                  currentColWidth = Math.max(currentColWidth, itemWidth);
                  currentColHeight += itemHeight;

                  // Store the hitbox width and height here. Final position will be updated in `draw`
                  hitboxes[i] = {
                    left: 0,
                    top: 0,
                    width: itemWidth,
                    height: fontSize,
                  };
                });

                totalWidth += currentColWidth;
                columnWidths.push(currentColWidth);
                minSize.width += totalWidth;
              }
            }

            me.width = minSize.width;
            me.height = minSize.height;
          },
          afterFit: noop,

          // Shared Methods
          isHorizontal: function () {
            return (
              this.options.position === 'top' ||
              this.options.position === 'bottom'
            );
          },

          // Actualy draw the legend on the canvas
          draw: function () {
            var me = this;
            var opts = me.options;
            var labelOpts = opts.labels;
            var globalDefault = Chart.defaults.global,
              lineDefault = globalDefault.elements.line,
              legendWidth = me.width,
              lineWidths = me.lineWidths;

            if (opts.display) {
              var ctx = me.ctx,
                cursor,
                itemOrDefault = helpers.getValueOrDefault,
                fontColor = itemOrDefault(
                  labelOpts.fontColor,
                  globalDefault.defaultFontColor,
                ),
                fontSize = itemOrDefault(
                  labelOpts.fontSize,
                  globalDefault.defaultFontSize,
                ),
                fontStyle = itemOrDefault(
                  labelOpts.fontStyle,
                  globalDefault.defaultFontStyle,
                ),
                fontFamily = itemOrDefault(
                  labelOpts.fontFamily,
                  globalDefault.defaultFontFamily,
                ),
                labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);

              // Canvas setup
              ctx.textAlign = 'left';
              ctx.textBaseline = 'top';
              ctx.lineWidth = 0.5;
              ctx.strokeStyle = fontColor; // for strikethrough effect
              ctx.fillStyle = fontColor; // render in correct colour
              ctx.font = labelFont;

              var boxWidth = labelOpts.boxWidth,
                hitboxes = me.legendHitBoxes;

              // current position
              var drawLegendBox = function (x, y, legendItem) {
                if (isNaN(boxWidth) || boxWidth <= 0) {
                  return;
                }

                // Set the ctx for the box
                ctx.save();

                ctx.fillStyle = itemOrDefault(
                  legendItem.fillStyle,
                  globalDefault.defaultColor,
                );
                ctx.lineCap = itemOrDefault(
                  legendItem.lineCap,
                  lineDefault.borderCapStyle,
                );
                ctx.lineDashOffset = itemOrDefault(
                  legendItem.lineDashOffset,
                  lineDefault.borderDashOffset,
                );
                ctx.lineJoin = itemOrDefault(
                  legendItem.lineJoin,
                  lineDefault.borderJoinStyle,
                );
                ctx.lineWidth = itemOrDefault(
                  legendItem.lineWidth,
                  lineDefault.borderWidth,
                );
                ctx.strokeStyle = itemOrDefault(
                  legendItem.strokeStyle,
                  globalDefault.defaultColor,
                );
                var isLineWidthZero =
                  itemOrDefault(
                    legendItem.lineWidth,
                    lineDefault.borderWidth,
                  ) === 0;

                if (ctx.setLineDash) {
                  // IE 9 and 10 do not support line dash
                  ctx.setLineDash(
                    itemOrDefault(legendItem.lineDash, lineDefault.borderDash),
                  );
                }

                if (opts.labels && opts.labels.usePointStyle) {
                  // Recalulate x and y for drawPoint() because its expecting
                  // x and y to be center of figure (instead of top left)
                  var radius = (fontSize * Math.SQRT2) / 2;
                  var offSet = radius / Math.SQRT2;
                  var centerX = x + offSet;
                  var centerY = y + offSet;

                  // Draw pointStyle as legend symbol
                  Chart.canvasHelpers.drawPoint(
                    ctx,
                    legendItem.pointStyle,
                    radius,
                    centerX,
                    centerY,
                  );
                } else {
                  // Draw box as legend symbol
                  if (!isLineWidthZero) {
                    ctx.strokeRect(x, y, boxWidth, fontSize);
                  }
                  ctx.fillRect(x, y, boxWidth, fontSize);
                }

                ctx.restore();
              };
              var fillText = function (x, y, legendItem, textWidth) {
                ctx.fillText(legendItem.text, boxWidth + fontSize / 2 + x, y);

                if (legendItem.hidden) {
                  // Strikethrough the text if hidden
                  ctx.beginPath();
                  ctx.lineWidth = 2;
                  ctx.moveTo(boxWidth + fontSize / 2 + x, y + fontSize / 2);
                  ctx.lineTo(
                    boxWidth + fontSize / 2 + x + textWidth,
                    y + fontSize / 2,
                  );
                  ctx.stroke();
                }
              };

              // Horizontal
              var isHorizontal = me.isHorizontal();
              if (isHorizontal) {
                cursor = {
                  x: me.left + (legendWidth - lineWidths[0]) / 2,
                  y: me.top + labelOpts.padding,
                  line: 0,
                };
              } else {
                cursor = {
                  x: me.left + labelOpts.padding,
                  y: me.top + labelOpts.padding,
                  line: 0,
                };
              }

              var itemHeight = fontSize + labelOpts.padding;
              helpers.each(me.legendItems, function (legendItem, i) {
                var textWidth = ctx.measureText(legendItem.text).width,
                  width = labelOpts.usePointStyle
                    ? fontSize + fontSize / 2 + textWidth
                    : boxWidth + fontSize / 2 + textWidth,
                  x = cursor.x,
                  y = cursor.y;

                if (isHorizontal) {
                  if (x + width >= legendWidth) {
                    y = cursor.y += itemHeight;
                    cursor.line++;
                    x = cursor.x =
                      me.left + (legendWidth - lineWidths[cursor.line]) / 2;
                  }
                } else if (y + itemHeight > me.bottom) {
                  x = cursor.x =
                    x + me.columnWidths[cursor.line] + labelOpts.padding;
                  y = cursor.y = me.top;
                  cursor.line++;
                }

                drawLegendBox(x, y, legendItem);

                hitboxes[i].left = x;
                hitboxes[i].top = y;

                // Fill the actual label
                fillText(x, y, legendItem, textWidth);

                if (isHorizontal) {
                  cursor.x += width + labelOpts.padding;
                } else {
                  cursor.y += itemHeight;
                }
              });
            }
          },

          // Handle an event
          handleEvent: function (e) {
            var me = this;
            var opts = me.options;
            var type = e.type === 'mouseup' ? 'click' : e.type;

            if (type === 'mousemove') {
              if (!opts.onHover) {
                return;
              }
            } else if (type === 'click') {
              if (!opts.onClick) {
                return;
              }
            } else {
              return;
            }

            var position = helpers.getRelativePosition(e, me.chart.chart),
              x = position.x,
              y = position.y;

            if (
              x >= me.left &&
              x <= me.right &&
              y >= me.top &&
              y <= me.bottom
            ) {
              // See if we are touching one of the dataset boxes
              var lh = me.legendHitBoxes;
              for (var i = 0; i < lh.length; ++i) {
                var hitBox = lh[i];

                if (
                  x >= hitBox.left &&
                  x <= hitBox.left + hitBox.width &&
                  y >= hitBox.top &&
                  y <= hitBox.top + hitBox.height
                ) {
                  // Touching an element
                  if (type === 'click') {
                    opts.onClick.call(me, e, me.legendItems[i]);
                    break;
                  } else if (type === 'mousemove') {
                    opts.onHover.call(me, e, me.legendItems[i]);
                    break;
                  }
                }
              }
            }
          },
        });

        // Register the legend plugin
        Chart.plugins.register({
          beforeInit: function (chartInstance) {
            var opts = chartInstance.options;
            var legendOpts = opts.legend;

            if (legendOpts) {
              chartInstance.legend = new Chart.Legend({
                ctx: chartInstance.chart.ctx,
                options: legendOpts,
                chart: chartInstance,
              });

              Chart.layoutService.addBox(chartInstance, chartInstance.legend);
            }
          },
        });
      };

      /***/
    },
    /* 838 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;

        Chart.defaults.global.tooltips = {
          enabled: true,
          custom: null,
          mode: 'single',
          backgroundColor: 'rgba(0,0,0,0.8)',
          titleFontStyle: 'bold',
          titleSpacing: 2,
          titleMarginBottom: 6,
          titleFontColor: '#fff',
          titleAlign: 'left',
          bodySpacing: 2,
          bodyFontColor: '#fff',
          bodyAlign: 'left',
          footerFontStyle: 'bold',
          footerSpacing: 2,
          footerMarginTop: 6,
          footerFontColor: '#fff',
          footerAlign: 'left',
          yPadding: 6,
          xPadding: 6,
          yAlign: 'center',
          xAlign: 'center',
          caretSize: 5,
          cornerRadius: 6,
          multiKeyBackground: '#fff',
          callbacks: {
            // Args are: (tooltipItems, data)
            beforeTitle: helpers.noop,
            title: function (tooltipItems, data) {
              // Pick first xLabel for now
              var title = '';
              var labels = data.labels;
              var labelCount = labels ? labels.length : 0;

              if (tooltipItems.length > 0) {
                var item = tooltipItems[0];

                if (item.xLabel) {
                  title = item.xLabel;
                } else if (labelCount > 0 && item.index < labelCount) {
                  title = labels[item.index];
                }
              }

              return title;
            },
            afterTitle: helpers.noop,

            // Args are: (tooltipItems, data)
            beforeBody: helpers.noop,

            // Args are: (tooltipItem, data)
            beforeLabel: helpers.noop,
            label: function (tooltipItem, data) {
              var datasetLabel =
                data.datasets[tooltipItem.datasetIndex].label || '';
              return datasetLabel + ': ' + tooltipItem.yLabel;
            },
            labelColor: function (tooltipItem, chartInstance) {
              var meta = chartInstance.getDatasetMeta(tooltipItem.datasetIndex);
              var activeElement = meta.data[tooltipItem.index];
              var view = activeElement._view;
              return {
                borderColor: view.borderColor,
                backgroundColor: view.backgroundColor,
              };
            },
            afterLabel: helpers.noop,

            // Args are: (tooltipItems, data)
            afterBody: helpers.noop,

            // Args are: (tooltipItems, data)
            beforeFooter: helpers.noop,
            footer: helpers.noop,
            afterFooter: helpers.noop,
          },
        };

        // Helper to push or concat based on if the 2nd parameter is an array or not
        function pushOrConcat(base, toPush) {
          if (toPush) {
            if (helpers.isArray(toPush)) {
              // base = base.concat(toPush);
              Array.prototype.push.apply(base, toPush);
            } else {
              base.push(toPush);
            }
          }

          return base;
        }

        function getAveragePosition(elements) {
          if (!elements.length) {
            return false;
          }

          var i, len;
          var xPositions = [];
          var yPositions = [];

          for (i = 0, len = elements.length; i < len; ++i) {
            var el = elements[i];
            if (el && el.hasValue()) {
              var pos = el.tooltipPosition();
              xPositions.push(pos.x);
              yPositions.push(pos.y);
            }
          }

          var x = 0,
            y = 0;
          for (i = 0; i < xPositions.length; ++i) {
            if (xPositions[i]) {
              x += xPositions[i];
              y += yPositions[i];
            }
          }

          return {
            x: Math.round(x / xPositions.length),
            y: Math.round(y / xPositions.length),
          };
        }

        // Private helper to create a tooltip iteam model
        // @param element : the chart element (point, arc, bar) to create the tooltip item for
        // @return : new tooltip item
        function createTooltipItem(element) {
          var xScale = element._xScale;
          var yScale = element._yScale || element._scale; // handle radar || polarArea charts
          var index = element._index,
            datasetIndex = element._datasetIndex;

          return {
            xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',
            yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',
            index: index,
            datasetIndex: datasetIndex,
          };
        }

        Chart.Tooltip = Chart.Element.extend({
          initialize: function () {
            var me = this;
            var globalDefaults = Chart.defaults.global;
            var tooltipOpts = me._options;
            var getValueOrDefault = helpers.getValueOrDefault;

            helpers.extend(me, {
              _model: {
                // Positioning
                xPadding: tooltipOpts.xPadding,
                yPadding: tooltipOpts.yPadding,
                xAlign: tooltipOpts.xAlign,
                yAlign: tooltipOpts.yAlign,

                // Body
                bodyFontColor: tooltipOpts.bodyFontColor,
                _bodyFontFamily: getValueOrDefault(
                  tooltipOpts.bodyFontFamily,
                  globalDefaults.defaultFontFamily,
                ),
                _bodyFontStyle: getValueOrDefault(
                  tooltipOpts.bodyFontStyle,
                  globalDefaults.defaultFontStyle,
                ),
                _bodyAlign: tooltipOpts.bodyAlign,
                bodyFontSize: getValueOrDefault(
                  tooltipOpts.bodyFontSize,
                  globalDefaults.defaultFontSize,
                ),
                bodySpacing: tooltipOpts.bodySpacing,

                // Title
                titleFontColor: tooltipOpts.titleFontColor,
                _titleFontFamily: getValueOrDefault(
                  tooltipOpts.titleFontFamily,
                  globalDefaults.defaultFontFamily,
                ),
                _titleFontStyle: getValueOrDefault(
                  tooltipOpts.titleFontStyle,
                  globalDefaults.defaultFontStyle,
                ),
                titleFontSize: getValueOrDefault(
                  tooltipOpts.titleFontSize,
                  globalDefaults.defaultFontSize,
                ),
                _titleAlign: tooltipOpts.titleAlign,
                titleSpacing: tooltipOpts.titleSpacing,
                titleMarginBottom: tooltipOpts.titleMarginBottom,

                // Footer
                footerFontColor: tooltipOpts.footerFontColor,
                _footerFontFamily: getValueOrDefault(
                  tooltipOpts.footerFontFamily,
                  globalDefaults.defaultFontFamily,
                ),
                _footerFontStyle: getValueOrDefault(
                  tooltipOpts.footerFontStyle,
                  globalDefaults.defaultFontStyle,
                ),
                footerFontSize: getValueOrDefault(
                  tooltipOpts.footerFontSize,
                  globalDefaults.defaultFontSize,
                ),
                _footerAlign: tooltipOpts.footerAlign,
                footerSpacing: tooltipOpts.footerSpacing,
                footerMarginTop: tooltipOpts.footerMarginTop,

                // Appearance
                caretSize: tooltipOpts.caretSize,
                cornerRadius: tooltipOpts.cornerRadius,
                backgroundColor: tooltipOpts.backgroundColor,
                opacity: 0,
                legendColorBackground: tooltipOpts.multiKeyBackground,
              },
            });
          },

          // Get the title
          // Args are: (tooltipItem, data)
          getTitle: function () {
            var me = this;
            var opts = me._options;
            var callbacks = opts.callbacks;

            var beforeTitle = callbacks.beforeTitle.apply(me, arguments),
              title = callbacks.title.apply(me, arguments),
              afterTitle = callbacks.afterTitle.apply(me, arguments);

            var lines = [];
            lines = pushOrConcat(lines, beforeTitle);
            lines = pushOrConcat(lines, title);
            lines = pushOrConcat(lines, afterTitle);

            return lines;
          },

          // Args are: (tooltipItem, data)
          getBeforeBody: function () {
            var lines = this._options.callbacks.beforeBody.apply(
              this,
              arguments,
            );
            return helpers.isArray(lines)
              ? lines
              : lines !== undefined
              ? [lines]
              : [];
          },

          // Args are: (tooltipItem, data)
          getBody: function (tooltipItems, data) {
            var me = this;
            var callbacks = me._options.callbacks;
            var bodyItems = [];

            helpers.each(tooltipItems, function (tooltipItem) {
              var bodyItem = {
                before: [],
                lines: [],
                after: [],
              };
              pushOrConcat(
                bodyItem.before,
                callbacks.beforeLabel.call(me, tooltipItem, data),
              );
              pushOrConcat(
                bodyItem.lines,
                callbacks.label.call(me, tooltipItem, data),
              );
              pushOrConcat(
                bodyItem.after,
                callbacks.afterLabel.call(me, tooltipItem, data),
              );

              bodyItems.push(bodyItem);
            });

            return bodyItems;
          },

          // Args are: (tooltipItem, data)
          getAfterBody: function () {
            var lines = this._options.callbacks.afterBody.apply(
              this,
              arguments,
            );
            return helpers.isArray(lines)
              ? lines
              : lines !== undefined
              ? [lines]
              : [];
          },

          // Get the footer and beforeFooter and afterFooter lines
          // Args are: (tooltipItem, data)
          getFooter: function () {
            var me = this;
            var callbacks = me._options.callbacks;

            var beforeFooter = callbacks.beforeFooter.apply(me, arguments);
            var footer = callbacks.footer.apply(me, arguments);
            var afterFooter = callbacks.afterFooter.apply(me, arguments);

            var lines = [];
            lines = pushOrConcat(lines, beforeFooter);
            lines = pushOrConcat(lines, footer);
            lines = pushOrConcat(lines, afterFooter);

            return lines;
          },

          update: function (changed) {
            var me = this;
            var opts = me._options;
            var model = me._model;
            var active = me._active;

            var data = me._data;
            var chartInstance = me._chartInstance;

            var i, len;

            if (active.length) {
              model.opacity = 1;

              var labelColors = [],
                tooltipPosition = getAveragePosition(active);

              var tooltipItems = [];
              for (i = 0, len = active.length; i < len; ++i) {
                tooltipItems.push(createTooltipItem(active[i]));
              }

              // If the user provided a sorting function, use it to modify the tooltip items
              if (opts.itemSort) {
                tooltipItems = tooltipItems.sort(function (a, b) {
                  return opts.itemSort(a, b, data);
                });
              }

              // If there is more than one item, show color items
              if (active.length > 1) {
                helpers.each(tooltipItems, function (tooltipItem) {
                  labelColors.push(
                    opts.callbacks.labelColor.call(
                      me,
                      tooltipItem,
                      chartInstance,
                    ),
                  );
                });
              }

              // Build the Text Lines
              helpers.extend(model, {
                title: me.getTitle(tooltipItems, data),
                beforeBody: me.getBeforeBody(tooltipItems, data),
                body: me.getBody(tooltipItems, data),
                afterBody: me.getAfterBody(tooltipItems, data),
                footer: me.getFooter(tooltipItems, data),
                x: Math.round(tooltipPosition.x),
                y: Math.round(tooltipPosition.y),
                caretPadding: helpers.getValueOrDefault(
                  tooltipPosition.padding,
                  2,
                ),
                labelColors: labelColors,
              });

              // We need to determine alignment of
              var tooltipSize = me.getTooltipSize(model);
              me.determineAlignment(tooltipSize); // Smart Tooltip placement to stay on the canvas

              helpers.extend(model, me.getBackgroundPoint(model, tooltipSize));
            } else {
              me._model.opacity = 0;
            }

            if (changed && opts.custom) {
              opts.custom.call(me, model);
            }

            return me;
          },
          getTooltipSize: function (vm) {
            var ctx = this._chart.ctx;

            var size = {
              height: vm.yPadding * 2, // Tooltip Padding
              width: 0,
            };

            // Count of all lines in the body
            var body = vm.body;
            var combinedBodyLength = body.reduce(function (count, bodyItem) {
              return (
                count +
                bodyItem.before.length +
                bodyItem.lines.length +
                bodyItem.after.length
              );
            }, 0);
            combinedBodyLength += vm.beforeBody.length + vm.afterBody.length;

            var titleLineCount = vm.title.length;
            var footerLineCount = vm.footer.length;
            var titleFontSize = vm.titleFontSize,
              bodyFontSize = vm.bodyFontSize,
              footerFontSize = vm.footerFontSize;

            size.height += titleLineCount * titleFontSize; // Title Lines
            size.height += (titleLineCount - 1) * vm.titleSpacing; // Title Line Spacing
            size.height += titleLineCount ? vm.titleMarginBottom : 0; // Title's bottom Margin
            size.height += combinedBodyLength * bodyFontSize; // Body Lines
            size.height += combinedBodyLength
              ? (combinedBodyLength - 1) * vm.bodySpacing
              : 0; // Body Line Spacing
            size.height += footerLineCount ? vm.footerMarginTop : 0; // Footer Margin
            size.height += footerLineCount * footerFontSize; // Footer Lines
            size.height += footerLineCount
              ? (footerLineCount - 1) * vm.footerSpacing
              : 0; // Footer Line Spacing

            // Title width
            var widthPadding = 0;
            var maxLineWidth = function (line) {
              size.width = Math.max(
                size.width,
                ctx.measureText(line).width + widthPadding,
              );
            };

            ctx.font = helpers.fontString(
              titleFontSize,
              vm._titleFontStyle,
              vm._titleFontFamily,
            );
            helpers.each(vm.title, maxLineWidth);

            // Body width
            ctx.font = helpers.fontString(
              bodyFontSize,
              vm._bodyFontStyle,
              vm._bodyFontFamily,
            );
            helpers.each(vm.beforeBody.concat(vm.afterBody), maxLineWidth);

            // Body lines may include some extra width due to the color box
            widthPadding = body.length > 1 ? bodyFontSize + 2 : 0;
            helpers.each(body, function (bodyItem) {
              helpers.each(bodyItem.before, maxLineWidth);
              helpers.each(bodyItem.lines, maxLineWidth);
              helpers.each(bodyItem.after, maxLineWidth);
            });

            // Reset back to 0
            widthPadding = 0;

            // Footer width
            ctx.font = helpers.fontString(
              footerFontSize,
              vm._footerFontStyle,
              vm._footerFontFamily,
            );
            helpers.each(vm.footer, maxLineWidth);

            // Add padding
            size.width += 2 * vm.xPadding;

            return size;
          },
          determineAlignment: function (size) {
            var me = this;
            var model = me._model;
            var chart = me._chart;
            var chartArea = me._chartInstance.chartArea;

            if (model.y < size.height) {
              model.yAlign = 'top';
            } else if (model.y > chart.height - size.height) {
              model.yAlign = 'bottom';
            }

            var lf, rf; // functions to determine left, right alignment
            var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart
            var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges
            var midX = (chartArea.left + chartArea.right) / 2;
            var midY = (chartArea.top + chartArea.bottom) / 2;

            if (model.yAlign === 'center') {
              lf = function (x) {
                return x <= midX;
              };
              rf = function (x) {
                return x > midX;
              };
            } else {
              lf = function (x) {
                return x <= size.width / 2;
              };
              rf = function (x) {
                return x >= chart.width - size.width / 2;
              };
            }

            olf = function (x) {
              return x + size.width > chart.width;
            };
            orf = function (x) {
              return x - size.width < 0;
            };
            yf = function (y) {
              return y <= midY ? 'top' : 'bottom';
            };

            if (lf(model.x)) {
              model.xAlign = 'left';

              // Is tooltip too wide and goes over the right side of the chart.?
              if (olf(model.x)) {
                model.xAlign = 'center';
                model.yAlign = yf(model.y);
              }
            } else if (rf(model.x)) {
              model.xAlign = 'right';

              // Is tooltip too wide and goes outside left edge of canvas?
              if (orf(model.x)) {
                model.xAlign = 'center';
                model.yAlign = yf(model.y);
              }
            }
          },
          getBackgroundPoint: function (vm, size) {
            // Background Position
            var pt = {
              x: vm.x,
              y: vm.y,
            };

            var caretSize = vm.caretSize,
              caretPadding = vm.caretPadding,
              cornerRadius = vm.cornerRadius,
              xAlign = vm.xAlign,
              yAlign = vm.yAlign,
              paddingAndSize = caretSize + caretPadding,
              radiusAndPadding = cornerRadius + caretPadding;

            if (xAlign === 'right') {
              pt.x -= size.width;
            } else if (xAlign === 'center') {
              pt.x -= size.width / 2;
            }

            if (yAlign === 'top') {
              pt.y += paddingAndSize;
            } else if (yAlign === 'bottom') {
              pt.y -= size.height + paddingAndSize;
            } else {
              pt.y -= size.height / 2;
            }

            if (yAlign === 'center') {
              if (xAlign === 'left') {
                pt.x += paddingAndSize;
              } else if (xAlign === 'right') {
                pt.x -= paddingAndSize;
              }
            } else if (xAlign === 'left') {
              pt.x -= radiusAndPadding;
            } else if (xAlign === 'right') {
              pt.x += radiusAndPadding;
            }

            return pt;
          },
          drawCaret: function (tooltipPoint, size, opacity) {
            var vm = this._view;
            var ctx = this._chart.ctx;
            var x1, x2, x3;
            var y1, y2, y3;
            var caretSize = vm.caretSize;
            var cornerRadius = vm.cornerRadius;
            var xAlign = vm.xAlign,
              yAlign = vm.yAlign;
            var ptX = tooltipPoint.x,
              ptY = tooltipPoint.y;
            var width = size.width,
              height = size.height;

            if (yAlign === 'center') {
              // Left or right side
              if (xAlign === 'left') {
                x1 = ptX;
                x2 = x1 - caretSize;
                x3 = x1;
              } else {
                x1 = ptX + width;
                x2 = x1 + caretSize;
                x3 = x1;
              }

              y2 = ptY + height / 2;
              y1 = y2 - caretSize;
              y3 = y2 + caretSize;
            } else {
              if (xAlign === 'left') {
                x1 = ptX + cornerRadius;
                x2 = x1 + caretSize;
                x3 = x2 + caretSize;
              } else if (xAlign === 'right') {
                x1 = ptX + width - cornerRadius;
                x2 = x1 - caretSize;
                x3 = x2 - caretSize;
              } else {
                x2 = ptX + width / 2;
                x1 = x2 - caretSize;
                x3 = x2 + caretSize;
              }

              if (yAlign === 'top') {
                y1 = ptY;
                y2 = y1 - caretSize;
                y3 = y1;
              } else {
                y1 = ptY + height;
                y2 = y1 + caretSize;
                y3 = y1;
              }
            }

            var bgColor = helpers.color(vm.backgroundColor);
            ctx.fillStyle = bgColor
              .alpha(opacity * bgColor.alpha())
              .rgbString();
            ctx.beginPath();
            ctx.moveTo(x1, y1);
            ctx.lineTo(x2, y2);
            ctx.lineTo(x3, y3);
            ctx.closePath();
            ctx.fill();
          },
          drawTitle: function (pt, vm, ctx, opacity) {
            var title = vm.title;

            if (title.length) {
              ctx.textAlign = vm._titleAlign;
              ctx.textBaseline = 'top';

              var titleFontSize = vm.titleFontSize,
                titleSpacing = vm.titleSpacing;

              var titleFontColor = helpers.color(vm.titleFontColor);
              ctx.fillStyle = titleFontColor
                .alpha(opacity * titleFontColor.alpha())
                .rgbString();
              ctx.font = helpers.fontString(
                titleFontSize,
                vm._titleFontStyle,
                vm._titleFontFamily,
              );

              var i, len;
              for (i = 0, len = title.length; i < len; ++i) {
                ctx.fillText(title[i], pt.x, pt.y);
                pt.y += titleFontSize + titleSpacing; // Line Height and spacing

                if (i + 1 === title.length) {
                  pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing
                }
              }
            }
          },
          drawBody: function (pt, vm, ctx, opacity) {
            var bodyFontSize = vm.bodyFontSize;
            var bodySpacing = vm.bodySpacing;
            var body = vm.body;

            ctx.textAlign = vm._bodyAlign;
            ctx.textBaseline = 'top';

            var bodyFontColor = helpers.color(vm.bodyFontColor);
            var textColor = bodyFontColor
              .alpha(opacity * bodyFontColor.alpha())
              .rgbString();
            ctx.fillStyle = textColor;
            ctx.font = helpers.fontString(
              bodyFontSize,
              vm._bodyFontStyle,
              vm._bodyFontFamily,
            );

            // Before Body
            var xLinePadding = 0;
            var fillLineOfText = function (line) {
              ctx.fillText(line, pt.x + xLinePadding, pt.y);
              pt.y += bodyFontSize + bodySpacing;
            };

            // Before body lines
            helpers.each(vm.beforeBody, fillLineOfText);

            var drawColorBoxes = body.length > 1;
            xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0;

            // Draw body lines now
            helpers.each(body, function (bodyItem, i) {
              helpers.each(bodyItem.before, fillLineOfText);

              helpers.each(bodyItem.lines, function (line) {
                // Draw Legend-like boxes if needed
                if (drawColorBoxes) {
                  // Fill a white rect so that colours merge nicely if the opacity is < 1
                  ctx.fillStyle = helpers
                    .color(vm.legendColorBackground)
                    .alpha(opacity)
                    .rgbaString();
                  ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);

                  // Border
                  ctx.strokeStyle = helpers
                    .color(vm.labelColors[i].borderColor)
                    .alpha(opacity)
                    .rgbaString();
                  ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);

                  // Inner square
                  ctx.fillStyle = helpers
                    .color(vm.labelColors[i].backgroundColor)
                    .alpha(opacity)
                    .rgbaString();
                  ctx.fillRect(
                    pt.x + 1,
                    pt.y + 1,
                    bodyFontSize - 2,
                    bodyFontSize - 2,
                  );

                  ctx.fillStyle = textColor;
                }

                fillLineOfText(line);
              });

              helpers.each(bodyItem.after, fillLineOfText);
            });

            // Reset back to 0 for after body
            xLinePadding = 0;

            // After body lines
            helpers.each(vm.afterBody, fillLineOfText);
            pt.y -= bodySpacing; // Remove last body spacing
          },
          drawFooter: function (pt, vm, ctx, opacity) {
            var footer = vm.footer;

            if (footer.length) {
              pt.y += vm.footerMarginTop;

              ctx.textAlign = vm._footerAlign;
              ctx.textBaseline = 'top';

              var footerFontColor = helpers.color(vm.footerFontColor);
              ctx.fillStyle = footerFontColor
                .alpha(opacity * footerFontColor.alpha())
                .rgbString();
              ctx.font = helpers.fontString(
                vm.footerFontSize,
                vm._footerFontStyle,
                vm._footerFontFamily,
              );

              helpers.each(footer, function (line) {
                ctx.fillText(line, pt.x, pt.y);
                pt.y += vm.footerFontSize + vm.footerSpacing;
              });
            }
          },
          draw: function () {
            var ctx = this._chart.ctx;
            var vm = this._view;

            if (vm.opacity === 0) {
              return;
            }

            var tooltipSize = this.getTooltipSize(vm);
            var pt = {
              x: vm.x,
              y: vm.y,
            };

            // IE11/Edge does not like very small opacities, so snap to 0
            var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;

            if (this._options.enabled) {
              // Draw Background
              var bgColor = helpers.color(vm.backgroundColor);
              ctx.fillStyle = bgColor
                .alpha(opacity * bgColor.alpha())
                .rgbString();
              helpers.drawRoundedRectangle(
                ctx,
                pt.x,
                pt.y,
                tooltipSize.width,
                tooltipSize.height,
                vm.cornerRadius,
              );
              ctx.fill();

              // Draw Caret
              this.drawCaret(pt, tooltipSize, opacity);

              // Draw Title, Body, and Footer
              pt.x += vm.xPadding;
              pt.y += vm.yPadding;

              // Titles
              this.drawTitle(pt, vm, ctx, opacity);

              // Body
              this.drawBody(pt, vm, ctx, opacity);

              // Footer
              this.drawFooter(pt, vm, ctx, opacity);
            }
          },
        });
      };

      /***/
    },
    /* 839 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers,
          globalOpts = Chart.defaults.global;

        globalOpts.elements.arc = {
          backgroundColor: globalOpts.defaultColor,
          borderColor: '#fff',
          borderWidth: 2,
        };

        Chart.elements.Arc = Chart.Element.extend({
          inLabelRange: function (mouseX) {
            var vm = this._view;

            if (vm) {
              return (
                Math.pow(mouseX - vm.x, 2) <
                Math.pow(vm.radius + vm.hoverRadius, 2)
              );
            }
            return false;
          },
          inRange: function (chartX, chartY) {
            var vm = this._view;

            if (vm) {
              var pointRelativePosition = helpers.getAngleFromPoint(vm, {
                  x: chartX,
                  y: chartY,
                }),
                angle = pointRelativePosition.angle,
                distance = pointRelativePosition.distance;

              // Sanitise angle range
              var startAngle = vm.startAngle;
              var endAngle = vm.endAngle;
              while (endAngle < startAngle) {
                endAngle += 2.0 * Math.PI;
              }
              while (angle > endAngle) {
                angle -= 2.0 * Math.PI;
              }
              while (angle < startAngle) {
                angle += 2.0 * Math.PI;
              }

              // Check if within the range of the open/close angle
              var betweenAngles = angle >= startAngle && angle <= endAngle,
                withinRadius =
                  distance >= vm.innerRadius && distance <= vm.outerRadius;

              return betweenAngles && withinRadius;
            }
            return false;
          },
          tooltipPosition: function () {
            var vm = this._view;

            var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2,
              rangeFromCentre =
                (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;
            return {
              x: vm.x + Math.cos(centreAngle) * rangeFromCentre,
              y: vm.y + Math.sin(centreAngle) * rangeFromCentre,
            };
          },
          draw: function () {
            var ctx = this._chart.ctx,
              vm = this._view,
              sA = vm.startAngle,
              eA = vm.endAngle;

            ctx.beginPath();

            ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);
            ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);

            ctx.closePath();
            ctx.strokeStyle = vm.borderColor;
            ctx.lineWidth = vm.borderWidth;

            ctx.fillStyle = vm.backgroundColor;

            ctx.fill();
            ctx.lineJoin = 'bevel';

            if (vm.borderWidth) {
              ctx.stroke();
            }
          },
        });
      };

      /***/
    },
    /* 840 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;
        var globalDefaults = Chart.defaults.global;

        Chart.defaults.global.elements.line = {
          tension: 0.4,
          backgroundColor: globalDefaults.defaultColor,
          borderWidth: 3,
          borderColor: globalDefaults.defaultColor,
          borderCapStyle: 'butt',
          borderDash: [],
          borderDashOffset: 0.0,
          borderJoinStyle: 'miter',
          capBezierPoints: true,
          fill: true, // do we fill in the area between the line and its base axis
        };

        Chart.elements.Line = Chart.Element.extend({
          draw: function () {
            var me = this;
            var vm = me._view;
            var spanGaps = vm.spanGaps;
            var scaleZero = vm.scaleZero;
            var loop = me._loop;

            var ctx = me._chart.ctx;
            ctx.save();

            // Helper function to draw a line to a point
            function lineToPoint(previousPoint, point) {
              var pointVM = point._view;
              if (point._view.steppedLine === true) {
                ctx.lineTo(pointVM.x, previousPoint._view.y);
                ctx.lineTo(pointVM.x, pointVM.y);
              } else if (point._view.tension === 0) {
                ctx.lineTo(pointVM.x, pointVM.y);
              } else {
                ctx.bezierCurveTo(
                  previousPoint._view.controlPointNextX,
                  previousPoint._view.controlPointNextY,
                  pointVM.controlPointPreviousX,
                  pointVM.controlPointPreviousY,
                  pointVM.x,
                  pointVM.y,
                );
              }
            }

            var points = me._children.slice(); // clone array
            var lastDrawnIndex = -1;

            // If we are looping, adding the first point again
            if (loop && points.length) {
              points.push(points[0]);
            }

            var index, current, previous, currentVM;

            // Fill Line
            if (points.length && vm.fill) {
              ctx.beginPath();

              for (index = 0; index < points.length; ++index) {
                current = points[index];
                previous = helpers.previousItem(points, index);
                currentVM = current._view;

                // First point moves to it's starting position no matter what
                if (index === 0) {
                  if (loop) {
                    ctx.moveTo(scaleZero.x, scaleZero.y);
                  } else {
                    ctx.moveTo(currentVM.x, scaleZero);
                  }

                  if (!currentVM.skip) {
                    lastDrawnIndex = index;
                    ctx.lineTo(currentVM.x, currentVM.y);
                  }
                } else {
                  previous =
                    lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];

                  if (currentVM.skip) {
                    // Only do this if this is the first point that is skipped
                    if (!spanGaps && lastDrawnIndex === index - 1) {
                      if (loop) {
                        ctx.lineTo(scaleZero.x, scaleZero.y);
                      } else {
                        ctx.lineTo(previous._view.x, scaleZero);
                      }
                    }
                  } else {
                    if (lastDrawnIndex !== index - 1) {
                      // There was a gap and this is the first point after the gap. If we've never drawn a point, this is a special case.
                      // If the first data point is NaN, then there is no real gap to skip
                      if (spanGaps && lastDrawnIndex !== -1) {
                        // We are spanning the gap, so simple draw a line to this point
                        lineToPoint(previous, current);
                      } else if (loop) {
                        ctx.lineTo(currentVM.x, currentVM.y);
                      } else {
                        ctx.lineTo(currentVM.x, scaleZero);
                        ctx.lineTo(currentVM.x, currentVM.y);
                      }
                    } else {
                      // Line to next point
                      lineToPoint(previous, current);
                    }
                    lastDrawnIndex = index;
                  }
                }
              }

              if (!loop && lastDrawnIndex !== -1) {
                ctx.lineTo(points[lastDrawnIndex]._view.x, scaleZero);
              }

              ctx.fillStyle = vm.backgroundColor || globalDefaults.defaultColor;
              ctx.closePath();
              ctx.fill();
            }

            // Stroke Line Options
            var globalOptionLineElements = globalDefaults.elements.line;
            ctx.lineCap =
              vm.borderCapStyle || globalOptionLineElements.borderCapStyle;

            // IE 9 and 10 do not support line dash
            if (ctx.setLineDash) {
              ctx.setLineDash(
                vm.borderDash || globalOptionLineElements.borderDash,
              );
            }

            ctx.lineDashOffset =
              vm.borderDashOffset || globalOptionLineElements.borderDashOffset;
            ctx.lineJoin =
              vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;
            ctx.lineWidth =
              vm.borderWidth || globalOptionLineElements.borderWidth;
            ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;

            // Stroke Line
            ctx.beginPath();
            lastDrawnIndex = -1;

            for (index = 0; index < points.length; ++index) {
              current = points[index];
              previous = helpers.previousItem(points, index);
              currentVM = current._view;

              // First point moves to it's starting position no matter what
              if (index === 0) {
                if (!currentVM.skip) {
                  ctx.moveTo(currentVM.x, currentVM.y);
                  lastDrawnIndex = index;
                }
              } else {
                previous =
                  lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];

                if (!currentVM.skip) {
                  if (
                    (lastDrawnIndex !== index - 1 && !spanGaps) ||
                    lastDrawnIndex === -1
                  ) {
                    // There was a gap and this is the first point after the gap
                    ctx.moveTo(currentVM.x, currentVM.y);
                  } else {
                    // Line to next point
                    lineToPoint(previous, current);
                  }
                  lastDrawnIndex = index;
                }
              }
            }

            ctx.stroke();
            ctx.restore();
          },
        });
      };

      /***/
    },
    /* 841 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers,
          globalOpts = Chart.defaults.global,
          defaultColor = globalOpts.defaultColor;

        globalOpts.elements.point = {
          radius: 3,
          pointStyle: 'circle',
          backgroundColor: defaultColor,
          borderWidth: 1,
          borderColor: defaultColor,
          // Hover
          hitRadius: 1,
          hoverRadius: 4,
          hoverBorderWidth: 1,
        };

        Chart.elements.Point = Chart.Element.extend({
          inRange: function (mouseX, mouseY) {
            var vm = this._view;
            return vm
              ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) <
                  Math.pow(vm.hitRadius + vm.radius, 2)
              : false;
          },
          inLabelRange: function (mouseX) {
            var vm = this._view;
            return vm
              ? Math.pow(mouseX - vm.x, 2) <
                  Math.pow(vm.radius + vm.hitRadius, 2)
              : false;
          },
          tooltipPosition: function () {
            var vm = this._view;
            return {
              x: vm.x,
              y: vm.y,
              padding: vm.radius + vm.borderWidth,
            };
          },
          draw: function () {
            var vm = this._view;
            var ctx = this._chart.ctx;
            var pointStyle = vm.pointStyle;
            var radius = vm.radius;
            var x = vm.x;
            var y = vm.y;

            if (vm.skip) {
              return;
            }

            ctx.strokeStyle = vm.borderColor || defaultColor;
            ctx.lineWidth = helpers.getValueOrDefault(
              vm.borderWidth,
              globalOpts.elements.point.borderWidth,
            );
            ctx.fillStyle = vm.backgroundColor || defaultColor;

            Chart.canvasHelpers.drawPoint(ctx, pointStyle, radius, x, y);
          },
        });
      };

      /***/
    },
    /* 842 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var globalOpts = Chart.defaults.global;

        globalOpts.elements.rectangle = {
          backgroundColor: globalOpts.defaultColor,
          borderWidth: 0,
          borderColor: globalOpts.defaultColor,
          borderSkipped: 'bottom',
        };

        Chart.elements.Rectangle = Chart.Element.extend({
          draw: function () {
            var ctx = this._chart.ctx;
            var vm = this._view;

            var halfWidth = vm.width / 2,
              leftX = vm.x - halfWidth,
              rightX = vm.x + halfWidth,
              top = vm.base - (vm.base - vm.y),
              halfStroke = vm.borderWidth / 2;

            // Canvas doesn't allow us to stroke inside the width so we can
            // adjust the sizes to fit if we're setting a stroke on the line
            if (vm.borderWidth) {
              leftX += halfStroke;
              rightX -= halfStroke;
              top += halfStroke;
            }

            ctx.beginPath();
            ctx.fillStyle = vm.backgroundColor;
            ctx.strokeStyle = vm.borderColor;
            ctx.lineWidth = vm.borderWidth;

            // Corner points, from bottom-left to bottom-right clockwise
            // | 1 2 |
            // | 0 3 |
            var corners = [
              [leftX, vm.base],
              [leftX, top],
              [rightX, top],
              [rightX, vm.base],
            ];

            // Find first (starting) corner with fallback to 'bottom'
            var borders = ['bottom', 'left', 'top', 'right'];
            var startCorner = borders.indexOf(vm.borderSkipped, 0);
            if (startCorner === -1) {
              startCorner = 0;
            }

            function cornerAt(index) {
              return corners[(startCorner + index) % 4];
            }

            // Draw rectangle from 'startCorner'
            ctx.moveTo.apply(ctx, cornerAt(0));
            for (var i = 1; i < 4; i++) {
              ctx.lineTo.apply(ctx, cornerAt(i));
            }

            ctx.fill();
            if (vm.borderWidth) {
              ctx.stroke();
            }
          },
          height: function () {
            var vm = this._view;
            return vm.base - vm.y;
          },
          inRange: function (mouseX, mouseY) {
            var vm = this._view;
            return vm
              ? vm.y < vm.base
                ? mouseX >= vm.x - vm.width / 2 &&
                  mouseX <= vm.x + vm.width / 2 &&
                  mouseY >= vm.y &&
                  mouseY <= vm.base
                : mouseX >= vm.x - vm.width / 2 &&
                  mouseX <= vm.x + vm.width / 2 &&
                  mouseY >= vm.base &&
                  mouseY <= vm.y
              : false;
          },
          inLabelRange: function (mouseX) {
            var vm = this._view;
            return vm
              ? mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2
              : false;
          },
          tooltipPosition: function () {
            var vm = this._view;
            return {
              x: vm.x,
              y: vm.y,
            };
          },
        });
      };

      /***/
    },
    /* 843 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers,
          noop = helpers.noop;

        Chart.LinearScaleBase = Chart.Scale.extend({
          handleTickRangeOptions: function () {
            var me = this;
            var opts = me.options;
            var tickOpts = opts.ticks;

            // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,
            // do nothing since that would make the chart weird. If the user really wants a weird chart
            // axis, they can manually override it
            if (tickOpts.beginAtZero) {
              var minSign = helpers.sign(me.min);
              var maxSign = helpers.sign(me.max);

              if (minSign < 0 && maxSign < 0) {
                // move the top up to 0
                me.max = 0;
              } else if (minSign > 0 && maxSign > 0) {
                // move the botttom down to 0
                me.min = 0;
              }
            }

            if (tickOpts.min !== undefined) {
              me.min = tickOpts.min;
            } else if (tickOpts.suggestedMin !== undefined) {
              me.min = Math.min(me.min, tickOpts.suggestedMin);
            }

            if (tickOpts.max !== undefined) {
              me.max = tickOpts.max;
            } else if (tickOpts.suggestedMax !== undefined) {
              me.max = Math.max(me.max, tickOpts.suggestedMax);
            }

            if (me.min === me.max) {
              me.max++;

              if (!tickOpts.beginAtZero) {
                me.min--;
              }
            }
          },
          getTickLimit: noop,
          handleDirectionalChanges: noop,

          buildTicks: function () {
            var me = this;
            var opts = me.options;
            var ticks = (me.ticks = []);
            var tickOpts = opts.ticks;
            var getValueOrDefault = helpers.getValueOrDefault;

            // Figure out what the max number of ticks we can support it is based on the size of
            // the axis area. For now, we say that the minimum tick spacing in pixels must be 50
            // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
            // the graph

            var maxTicks = me.getTickLimit();

            // Make sure we always have at least 2 ticks
            maxTicks = Math.max(2, maxTicks);

            // To get a "nice" value for the tick spacing, we will use the appropriately named
            // "nice number" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks
            // for details.

            var spacing;
            var fixedStepSizeSet =
              (tickOpts.fixedStepSize && tickOpts.fixedStepSize > 0) ||
              (tickOpts.stepSize && tickOpts.stepSize > 0);
            if (fixedStepSizeSet) {
              spacing = getValueOrDefault(
                tickOpts.fixedStepSize,
                tickOpts.stepSize,
              );
            } else {
              var niceRange = helpers.niceNum(me.max - me.min, false);
              spacing = helpers.niceNum(niceRange / (maxTicks - 1), true);
            }
            var niceMin = Math.floor(me.min / spacing) * spacing;
            var niceMax = Math.ceil(me.max / spacing) * spacing;
            var numSpaces = (niceMax - niceMin) / spacing;

            // If very close to our rounded value, use it.
            if (
              helpers.almostEquals(
                numSpaces,
                Math.round(numSpaces),
                spacing / 1000,
              )
            ) {
              numSpaces = Math.round(numSpaces);
            } else {
              numSpaces = Math.ceil(numSpaces);
            }

            // Put the values into the ticks array
            ticks.push(tickOpts.min !== undefined ? tickOpts.min : niceMin);
            for (var j = 1; j < numSpaces; ++j) {
              ticks.push(niceMin + j * spacing);
            }
            ticks.push(tickOpts.max !== undefined ? tickOpts.max : niceMax);

            me.handleDirectionalChanges();

            // At this point, we need to update our max and min given the tick values since we have expanded the
            // range of the scale
            me.max = helpers.max(ticks);
            me.min = helpers.min(ticks);

            if (tickOpts.reverse) {
              ticks.reverse();

              me.start = me.max;
              me.end = me.min;
            } else {
              me.start = me.min;
              me.end = me.max;
            }
          },
          convertTicksToLabels: function () {
            var me = this;
            me.ticksAsNumbers = me.ticks.slice();
            me.zeroLineIndex = me.ticks.indexOf(0);

            Chart.Scale.prototype.convertTicksToLabels.call(me);
          },
        });
      };

      /***/
    },
    /* 844 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;
        // Default config for a category scale
        var defaultConfig = {
          position: 'bottom',
        };

        var DatasetScale = Chart.Scale.extend({
          /**
           * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use tose
           * else fall back to data.labels
           * @private
           */
          getLabels: function () {
            var data = this.chart.data;
            return (
              (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels
            );
          },
          // Implement this so that
          determineDataLimits: function () {
            var me = this;
            var labels = me.getLabels();
            me.minIndex = 0;
            me.maxIndex = labels.length - 1;
            var findIndex;

            if (me.options.ticks.min !== undefined) {
              // user specified min value
              findIndex = helpers.indexOf(labels, me.options.ticks.min);
              me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;
            }

            if (me.options.ticks.max !== undefined) {
              // user specified max value
              findIndex = helpers.indexOf(labels, me.options.ticks.max);
              me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;
            }

            me.min = labels[me.minIndex];
            me.max = labels[me.maxIndex];
          },

          buildTicks: function () {
            var me = this;
            var labels = me.getLabels();
            // If we are viewing some subset of labels, slice the original array
            me.ticks =
              me.minIndex === 0 && me.maxIndex === labels.length - 1
                ? labels
                : labels.slice(me.minIndex, me.maxIndex + 1);
          },

          getLabelForIndex: function (index, datasetIndex) {
            var me = this;
            var data = me.chart.data;
            var isHorizontal = me.isHorizontal();

            if (
              (data.xLabels && isHorizontal) ||
              (data.yLabels && !isHorizontal)
            ) {
              return me.getRightValue(data.datasets[datasetIndex].data[index]);
            }
            return me.ticks[index];
          },

          // Used to get data value locations.  Value can either be an index or a numerical value
          getPixelForValue: function (
            value,
            index,
            datasetIndex,
            includeOffset,
          ) {
            var me = this;
            // 1 is added because we need the length but we have the indexes
            var offsetAmt = Math.max(
              me.maxIndex +
                1 -
                me.minIndex -
                (me.options.gridLines.offsetGridLines ? 0 : 1),
              1,
            );

            if (value !== undefined && isNaN(index)) {
              var labels = me.getLabels();
              var idx = labels.indexOf(value);
              index = idx !== -1 ? idx : index;
            }

            if (me.isHorizontal()) {
              var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
              var valueWidth = innerWidth / offsetAmt;
              var widthOffset =
                valueWidth * (index - me.minIndex) + me.paddingLeft;

              if (
                (me.options.gridLines.offsetGridLines && includeOffset) ||
                (me.maxIndex === me.minIndex && includeOffset)
              ) {
                widthOffset += valueWidth / 2;
              }

              return me.left + Math.round(widthOffset);
            }
            var innerHeight = me.height - (me.paddingTop + me.paddingBottom);
            var valueHeight = innerHeight / offsetAmt;
            var heightOffset =
              valueHeight * (index - me.minIndex) + me.paddingTop;

            if (me.options.gridLines.offsetGridLines && includeOffset) {
              heightOffset += valueHeight / 2;
            }

            return me.top + Math.round(heightOffset);
          },
          getPixelForTick: function (index, includeOffset) {
            return this.getPixelForValue(
              this.ticks[index],
              index + this.minIndex,
              null,
              includeOffset,
            );
          },
          getValueForPixel: function (pixel) {
            var me = this;
            var value;
            var offsetAmt = Math.max(
              me.ticks.length - (me.options.gridLines.offsetGridLines ? 0 : 1),
              1,
            );
            var horz = me.isHorizontal();
            var innerDimension = horz
              ? me.width - (me.paddingLeft + me.paddingRight)
              : me.height - (me.paddingTop + me.paddingBottom);
            var valueDimension = innerDimension / offsetAmt;

            pixel -= horz ? me.left : me.top;

            if (me.options.gridLines.offsetGridLines) {
              pixel -= valueDimension / 2;
            }
            pixel -= horz ? me.paddingLeft : me.paddingTop;

            if (pixel <= 0) {
              value = 0;
            } else {
              value = Math.round(pixel / valueDimension);
            }

            return value;
          },
          getBasePixel: function () {
            return this.bottom;
          },
        });

        Chart.scaleService.registerScaleType(
          'category',
          DatasetScale,
          defaultConfig,
        );
      };

      /***/
    },
    /* 845 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;

        var defaultConfig = {
          position: 'left',
          ticks: {
            callback: function (tickValue, index, ticks) {
              // If we have lots of ticks, don't use the ones
              var delta =
                ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];

              // If we have a number like 2.5 as the delta, figure out how many decimal places we need
              if (Math.abs(delta) > 1) {
                if (tickValue !== Math.floor(tickValue)) {
                  // not an integer
                  delta = tickValue - Math.floor(tickValue);
                }
              }

              var logDelta = helpers.log10(Math.abs(delta));
              var tickString = '';

              if (tickValue !== 0) {
                var numDecimal = -1 * Math.floor(logDelta);
                numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places
                tickString = tickValue.toFixed(numDecimal);
              } else {
                tickString = '0'; // never show decimal places for 0
              }

              return tickString;
            },
          },
        };

        var LinearScale = Chart.LinearScaleBase.extend({
          determineDataLimits: function () {
            var me = this;
            var opts = me.options;
            var chart = me.chart;
            var data = chart.data;
            var datasets = data.datasets;
            var isHorizontal = me.isHorizontal();

            function IDMatches(meta) {
              return isHorizontal
                ? meta.xAxisID === me.id
                : meta.yAxisID === me.id;
            }

            // First Calculate the range
            me.min = null;
            me.max = null;

            if (opts.stacked) {
              var valuesPerType = {};

              helpers.each(datasets, function (dataset, datasetIndex) {
                var meta = chart.getDatasetMeta(datasetIndex);
                if (valuesPerType[meta.type] === undefined) {
                  valuesPerType[meta.type] = {
                    positiveValues: [],
                    negativeValues: [],
                  };
                }

                // Store these per type
                var positiveValues = valuesPerType[meta.type].positiveValues;
                var negativeValues = valuesPerType[meta.type].negativeValues;

                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                  helpers.each(dataset.data, function (rawValue, index) {
                    var value = +me.getRightValue(rawValue);
                    if (isNaN(value) || meta.data[index].hidden) {
                      return;
                    }

                    positiveValues[index] = positiveValues[index] || 0;
                    negativeValues[index] = negativeValues[index] || 0;

                    if (opts.relativePoints) {
                      positiveValues[index] = 100;
                    } else if (value < 0) {
                      negativeValues[index] += value;
                    } else {
                      positiveValues[index] += value;
                    }
                  });
                }
              });

              helpers.each(valuesPerType, function (valuesForType) {
                var values = valuesForType.positiveValues.concat(
                  valuesForType.negativeValues,
                );
                var minVal = helpers.min(values);
                var maxVal = helpers.max(values);
                me.min = me.min === null ? minVal : Math.min(me.min, minVal);
                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
              });
            } else {
              helpers.each(datasets, function (dataset, datasetIndex) {
                var meta = chart.getDatasetMeta(datasetIndex);
                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                  helpers.each(dataset.data, function (rawValue, index) {
                    var value = +me.getRightValue(rawValue);
                    if (isNaN(value) || meta.data[index].hidden) {
                      return;
                    }

                    if (me.min === null) {
                      me.min = value;
                    } else if (value < me.min) {
                      me.min = value;
                    }

                    if (me.max === null) {
                      me.max = value;
                    } else if (value > me.max) {
                      me.max = value;
                    }
                  });
                }
              });
            }

            // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
            this.handleTickRangeOptions();
          },
          getTickLimit: function () {
            var maxTicks;
            var me = this;
            var tickOpts = me.options.ticks;

            if (me.isHorizontal()) {
              maxTicks = Math.min(
                tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11,
                Math.ceil(me.width / 50),
              );
            } else {
              // The factor of 2 used to scale the font size has been experimentally determined.
              var tickFontSize = helpers.getValueOrDefault(
                tickOpts.fontSize,
                Chart.defaults.global.defaultFontSize,
              );
              maxTicks = Math.min(
                tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11,
                Math.ceil(me.height / (2 * tickFontSize)),
              );
            }

            return maxTicks;
          },
          // Called after the ticks are built. We need
          handleDirectionalChanges: function () {
            if (!this.isHorizontal()) {
              // We are in a vertical orientation. The top value is the highest. So reverse the array
              this.ticks.reverse();
            }
          },
          getLabelForIndex: function (index, datasetIndex) {
            return +this.getRightValue(
              this.chart.data.datasets[datasetIndex].data[index],
            );
          },
          // Utils
          getPixelForValue: function (value) {
            // This must be called after fit has been run so that
            // this.left, this.top, this.right, and this.bottom have been defined
            var me = this;
            var paddingLeft = me.paddingLeft;
            var paddingBottom = me.paddingBottom;
            var start = me.start;

            var rightValue = +me.getRightValue(value);
            var pixel;
            var innerDimension;
            var range = me.end - start;

            if (me.isHorizontal()) {
              innerDimension = me.width - (paddingLeft + me.paddingRight);
              pixel = me.left + (innerDimension / range) * (rightValue - start);
              return Math.round(pixel + paddingLeft);
            }
            innerDimension = me.height - (me.paddingTop + paddingBottom);
            pixel =
              me.bottom -
              paddingBottom -
              (innerDimension / range) * (rightValue - start);
            return Math.round(pixel);
          },
          getValueForPixel: function (pixel) {
            var me = this;
            var isHorizontal = me.isHorizontal();
            var paddingLeft = me.paddingLeft;
            var paddingBottom = me.paddingBottom;
            var innerDimension = isHorizontal
              ? me.width - (paddingLeft + me.paddingRight)
              : me.height - (me.paddingTop + paddingBottom);
            var offset =
              (isHorizontal
                ? pixel - me.left - paddingLeft
                : me.bottom - paddingBottom - pixel) / innerDimension;
            return me.start + (me.end - me.start) * offset;
          },
          getPixelForTick: function (index) {
            return this.getPixelForValue(this.ticksAsNumbers[index]);
          },
        });
        Chart.scaleService.registerScaleType(
          'linear',
          LinearScale,
          defaultConfig,
        );
      };

      /***/
    },
    /* 846 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;

        var defaultConfig = {
          position: 'left',

          // label settings
          ticks: {
            callback: function (value, index, arr) {
              var remain =
                value / Math.pow(10, Math.floor(helpers.log10(value)));

              if (value === 0) {
                return '0';
              } else if (
                remain === 1 ||
                remain === 2 ||
                remain === 5 ||
                index === 0 ||
                index === arr.length - 1
              ) {
                return value.toExponential();
              }
              return '';
            },
          },
        };

        var LogarithmicScale = Chart.Scale.extend({
          determineDataLimits: function () {
            var me = this;
            var opts = me.options;
            var tickOpts = opts.ticks;
            var chart = me.chart;
            var data = chart.data;
            var datasets = data.datasets;
            var getValueOrDefault = helpers.getValueOrDefault;
            var isHorizontal = me.isHorizontal();
            function IDMatches(meta) {
              return isHorizontal
                ? meta.xAxisID === me.id
                : meta.yAxisID === me.id;
            }

            // Calculate Range
            me.min = null;
            me.max = null;
            me.minNotZero = null;

            if (opts.stacked) {
              var valuesPerType = {};

              helpers.each(datasets, function (dataset, datasetIndex) {
                var meta = chart.getDatasetMeta(datasetIndex);
                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                  if (valuesPerType[meta.type] === undefined) {
                    valuesPerType[meta.type] = [];
                  }

                  helpers.each(dataset.data, function (rawValue, index) {
                    var values = valuesPerType[meta.type];
                    var value = +me.getRightValue(rawValue);
                    if (isNaN(value) || meta.data[index].hidden) {
                      return;
                    }

                    values[index] = values[index] || 0;

                    if (opts.relativePoints) {
                      values[index] = 100;
                    } else {
                      // Don't need to split positive and negative since the log scale can't handle a 0 crossing
                      values[index] += value;
                    }
                  });
                }
              });

              helpers.each(valuesPerType, function (valuesForType) {
                var minVal = helpers.min(valuesForType);
                var maxVal = helpers.max(valuesForType);
                me.min = me.min === null ? minVal : Math.min(me.min, minVal);
                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
              });
            } else {
              helpers.each(datasets, function (dataset, datasetIndex) {
                var meta = chart.getDatasetMeta(datasetIndex);
                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
                  helpers.each(dataset.data, function (rawValue, index) {
                    var value = +me.getRightValue(rawValue);
                    if (isNaN(value) || meta.data[index].hidden) {
                      return;
                    }

                    if (me.min === null) {
                      me.min = value;
                    } else if (value < me.min) {
                      me.min = value;
                    }

                    if (me.max === null) {
                      me.max = value;
                    } else if (value > me.max) {
                      me.max = value;
                    }

                    if (
                      value !== 0 &&
                      (me.minNotZero === null || value < me.minNotZero)
                    ) {
                      me.minNotZero = value;
                    }
                  });
                }
              });
            }

            me.min = getValueOrDefault(tickOpts.min, me.min);
            me.max = getValueOrDefault(tickOpts.max, me.max);

            if (me.min === me.max) {
              if (me.min !== 0 && me.min !== null) {
                me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);
                me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);
              } else {
                me.min = 1;
                me.max = 10;
              }
            }
          },
          buildTicks: function () {
            var me = this;
            var opts = me.options;
            var tickOpts = opts.ticks;
            var getValueOrDefault = helpers.getValueOrDefault;

            // Reset the ticks array. Later on, we will draw a grid line at these positions
            // The array simply contains the numerical value of the spots where ticks will be
            var ticks = (me.ticks = []);

            // Figure out what the max number of ticks we can support it is based on the size of
            // the axis area. For now, we say that the minimum tick spacing in pixels must be 50
            // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
            // the graph

            var tickVal = getValueOrDefault(
              tickOpts.min,
              Math.pow(10, Math.floor(helpers.log10(me.min))),
            );

            while (tickVal < me.max) {
              ticks.push(tickVal);

              var exp;
              var significand;

              if (tickVal === 0) {
                exp = Math.floor(helpers.log10(me.minNotZero));
                significand = Math.round(me.minNotZero / Math.pow(10, exp));
              } else {
                exp = Math.floor(helpers.log10(tickVal));
                significand = Math.floor(tickVal / Math.pow(10, exp)) + 1;
              }

              if (significand === 10) {
                significand = 1;
                ++exp;
              }

              tickVal = significand * Math.pow(10, exp);
            }

            var lastTick = getValueOrDefault(tickOpts.max, tickVal);
            ticks.push(lastTick);

            if (!me.isHorizontal()) {
              // We are in a vertical orientation. The top value is the highest. So reverse the array
              ticks.reverse();
            }

            // At this point, we need to update our max and min given the tick values since we have expanded the
            // range of the scale
            me.max = helpers.max(ticks);
            me.min = helpers.min(ticks);

            if (tickOpts.reverse) {
              ticks.reverse();

              me.start = me.max;
              me.end = me.min;
            } else {
              me.start = me.min;
              me.end = me.max;
            }
          },
          convertTicksToLabels: function () {
            this.tickValues = this.ticks.slice();

            Chart.Scale.prototype.convertTicksToLabels.call(this);
          },
          // Get the correct tooltip label
          getLabelForIndex: function (index, datasetIndex) {
            return +this.getRightValue(
              this.chart.data.datasets[datasetIndex].data[index],
            );
          },
          getPixelForTick: function (index) {
            return this.getPixelForValue(this.tickValues[index]);
          },
          getPixelForValue: function (value) {
            var me = this;
            var innerDimension;
            var pixel;

            var start = me.start;
            var newVal = +me.getRightValue(value);
            var range;
            var paddingTop = me.paddingTop;
            var paddingBottom = me.paddingBottom;
            var paddingLeft = me.paddingLeft;
            var opts = me.options;
            var tickOpts = opts.ticks;

            if (me.isHorizontal()) {
              range = helpers.log10(me.end) - helpers.log10(start); // todo: if start === 0
              if (newVal === 0) {
                pixel = me.left + paddingLeft;
              } else {
                innerDimension = me.width - (paddingLeft + me.paddingRight);
                pixel =
                  me.left +
                  (innerDimension / range) *
                    (helpers.log10(newVal) - helpers.log10(start));
                pixel += paddingLeft;
              }
            } else {
              // Bottom - top since pixels increase downard on a screen
              innerDimension = me.height - (paddingTop + paddingBottom);
              if (start === 0 && !tickOpts.reverse) {
                range = helpers.log10(me.end) - helpers.log10(me.minNotZero);
                if (newVal === start) {
                  pixel = me.bottom - paddingBottom;
                } else if (newVal === me.minNotZero) {
                  pixel = me.bottom - paddingBottom - innerDimension * 0.02;
                } else {
                  pixel =
                    me.bottom -
                    paddingBottom -
                    innerDimension * 0.02 -
                    ((innerDimension * 0.98) / range) *
                      (helpers.log10(newVal) - helpers.log10(me.minNotZero));
                }
              } else if (me.end === 0 && tickOpts.reverse) {
                range = helpers.log10(me.start) - helpers.log10(me.minNotZero);
                if (newVal === me.end) {
                  pixel = me.top + paddingTop;
                } else if (newVal === me.minNotZero) {
                  pixel = me.top + paddingTop + innerDimension * 0.02;
                } else {
                  pixel =
                    me.top +
                    paddingTop +
                    innerDimension * 0.02 +
                    ((innerDimension * 0.98) / range) *
                      (helpers.log10(newVal) - helpers.log10(me.minNotZero));
                }
              } else {
                range = helpers.log10(me.end) - helpers.log10(start);
                innerDimension = me.height - (paddingTop + paddingBottom);
                pixel =
                  me.bottom -
                  paddingBottom -
                  (innerDimension / range) *
                    (helpers.log10(newVal) - helpers.log10(start));
              }
            }
            return pixel;
          },
          getValueForPixel: function (pixel) {
            var me = this;
            var range = helpers.log10(me.end) - helpers.log10(me.start);
            var value, innerDimension;

            if (me.isHorizontal()) {
              innerDimension = me.width - (me.paddingLeft + me.paddingRight);
              value =
                me.start *
                Math.pow(
                  10,
                  ((pixel - me.left - me.paddingLeft) * range) / innerDimension,
                );
            } else {
              // todo: if start === 0
              innerDimension = me.height - (me.paddingTop + me.paddingBottom);
              value =
                Math.pow(
                  10,
                  ((me.bottom - me.paddingBottom - pixel) * range) /
                    innerDimension,
                ) / me.start;
            }
            return value;
          },
        });
        Chart.scaleService.registerScaleType(
          'logarithmic',
          LogarithmicScale,
          defaultConfig,
        );
      };

      /***/
    },
    /* 847 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;
        var globalDefaults = Chart.defaults.global;

        var defaultConfig = {
          display: true,

          // Boolean - Whether to animate scaling the chart from the centre
          animate: true,
          lineArc: false,
          position: 'chartArea',

          angleLines: {
            display: true,
            color: 'rgba(0, 0, 0, 0.1)',
            lineWidth: 1,
          },

          // label settings
          ticks: {
            // Boolean - Show a backdrop to the scale label
            showLabelBackdrop: true,

            // String - The colour of the label backdrop
            backdropColor: 'rgba(255,255,255,0.75)',

            // Number - The backdrop padding above & below the label in pixels
            backdropPaddingY: 2,

            // Number - The backdrop padding to the side of the label in pixels
            backdropPaddingX: 2,
          },

          pointLabels: {
            // Number - Point label font size in pixels
            fontSize: 10,

            // Function - Used to convert point labels
            callback: function (label) {
              return label;
            },
          },
        };

        var LinearRadialScale = Chart.LinearScaleBase.extend({
          getValueCount: function () {
            return this.chart.data.labels.length;
          },
          setDimensions: function () {
            var me = this;
            var opts = me.options;
            var tickOpts = opts.ticks;
            // Set the unconstrained dimension before label rotation
            me.width = me.maxWidth;
            me.height = me.maxHeight;
            me.xCenter = Math.round(me.width / 2);
            me.yCenter = Math.round(me.height / 2);

            var minSize = helpers.min([me.height, me.width]);
            var tickFontSize = helpers.getValueOrDefault(
              tickOpts.fontSize,
              globalDefaults.defaultFontSize,
            );
            me.drawingArea = opts.display
              ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY)
              : minSize / 2;
          },
          determineDataLimits: function () {
            var me = this;
            var chart = me.chart;
            me.min = null;
            me.max = null;

            helpers.each(chart.data.datasets, function (dataset, datasetIndex) {
              if (chart.isDatasetVisible(datasetIndex)) {
                var meta = chart.getDatasetMeta(datasetIndex);

                helpers.each(dataset.data, function (rawValue, index) {
                  var value = +me.getRightValue(rawValue);
                  if (isNaN(value) || meta.data[index].hidden) {
                    return;
                  }

                  if (me.min === null) {
                    me.min = value;
                  } else if (value < me.min) {
                    me.min = value;
                  }

                  if (me.max === null) {
                    me.max = value;
                  } else if (value > me.max) {
                    me.max = value;
                  }
                });
              }
            });

            // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
            me.handleTickRangeOptions();
          },
          getTickLimit: function () {
            var tickOpts = this.options.ticks;
            var tickFontSize = helpers.getValueOrDefault(
              tickOpts.fontSize,
              globalDefaults.defaultFontSize,
            );
            return Math.min(
              tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11,
              Math.ceil(this.drawingArea / (1.5 * tickFontSize)),
            );
          },
          convertTicksToLabels: function () {
            var me = this;
            Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me);

            // Point labels
            me.pointLabels = me.chart.data.labels.map(
              me.options.pointLabels.callback,
              me,
            );
          },
          getLabelForIndex: function (index, datasetIndex) {
            return +this.getRightValue(
              this.chart.data.datasets[datasetIndex].data[index],
            );
          },
          fit: function () {
            /*
             * Right, this is really confusing and there is a lot of maths going on here
             * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9
             *
             * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif
             *
             * Solution:
             *
             * We assume the radius of the polygon is half the size of the canvas at first
             * at each index we check if the text overlaps.
             *
             * Where it does, we store that angle and that index.
             *
             * After finding the largest index and angle we calculate how much we need to remove
             * from the shape radius to move the point inwards by that x.
             *
             * We average the left and right distances to get the maximum shape radius that can fit in the box
             * along with labels.
             *
             * Once we have that, we can find the centre point for the chart, by taking the x text protrusion
             * on each side, removing that from the size, halving it and adding the left x protrusion width.
             *
             * This will mean we have a shape fitted to the canvas, as large as it can be with the labels
             * and position it in the most space efficient manner
             *
             * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif
             */

            var pointLabels = this.options.pointLabels;
            var pointLabelFontSize = helpers.getValueOrDefault(
              pointLabels.fontSize,
              globalDefaults.defaultFontSize,
            );
            var pointLabeFontStyle = helpers.getValueOrDefault(
              pointLabels.fontStyle,
              globalDefaults.defaultFontStyle,
            );
            var pointLabeFontFamily = helpers.getValueOrDefault(
              pointLabels.fontFamily,
              globalDefaults.defaultFontFamily,
            );
            var pointLabeFont = helpers.fontString(
              pointLabelFontSize,
              pointLabeFontStyle,
              pointLabeFontFamily,
            );

            // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.
            // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points
            var largestPossibleRadius = helpers.min([
                this.height / 2 - pointLabelFontSize - 5,
                this.width / 2,
              ]),
              pointPosition,
              i,
              textWidth,
              halfTextWidth,
              furthestRight = this.width,
              furthestRightIndex,
              furthestRightAngle,
              furthestLeft = 0,
              furthestLeftIndex,
              furthestLeftAngle,
              xProtrusionLeft,
              xProtrusionRight,
              radiusReductionRight,
              radiusReductionLeft;
            this.ctx.font = pointLabeFont;

            for (i = 0; i < this.getValueCount(); i++) {
              // 5px to space the text slightly out - similar to what we do in the draw function.
              pointPosition = this.getPointPosition(i, largestPossibleRadius);
              textWidth =
                this.ctx.measureText(
                  this.pointLabels[i] ? this.pointLabels[i] : '',
                ).width + 5;

              // Add quarter circle to make degree 0 mean top of circle
              var angleRadians = this.getIndexAngle(i) + Math.PI / 2;
              var angle = ((angleRadians * 360) / (2 * Math.PI)) % 360;

              if (angle === 0 || angle === 180) {
                // At angle 0 and 180, we're at exactly the top/bottom
                // of the radar chart, so text will be aligned centrally, so we'll half it and compare
                // w/left and right text sizes
                halfTextWidth = textWidth / 2;
                if (pointPosition.x + halfTextWidth > furthestRight) {
                  furthestRight = pointPosition.x + halfTextWidth;
                  furthestRightIndex = i;
                }
                if (pointPosition.x - halfTextWidth < furthestLeft) {
                  furthestLeft = pointPosition.x - halfTextWidth;
                  furthestLeftIndex = i;
                }
              } else if (angle < 180) {
                // Less than half the values means we'll left align the text
                if (pointPosition.x + textWidth > furthestRight) {
                  furthestRight = pointPosition.x + textWidth;
                  furthestRightIndex = i;
                }
                // More than half the values means we'll right align the text
              } else if (pointPosition.x - textWidth < furthestLeft) {
                furthestLeft = pointPosition.x - textWidth;
                furthestLeftIndex = i;
              }
            }

            xProtrusionLeft = furthestLeft;
            xProtrusionRight = Math.ceil(furthestRight - this.width);

            furthestRightAngle = this.getIndexAngle(furthestRightIndex);
            furthestLeftAngle = this.getIndexAngle(furthestLeftIndex);

            radiusReductionRight =
              xProtrusionRight / Math.sin(furthestRightAngle + Math.PI / 2);
            radiusReductionLeft =
              xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI / 2);

            // Ensure we actually need to reduce the size of the chart
            radiusReductionRight = helpers.isNumber(radiusReductionRight)
              ? radiusReductionRight
              : 0;
            radiusReductionLeft = helpers.isNumber(radiusReductionLeft)
              ? radiusReductionLeft
              : 0;

            this.drawingArea = Math.round(
              largestPossibleRadius -
                (radiusReductionLeft + radiusReductionRight) / 2,
            );
            this.setCenterPoint(radiusReductionLeft, radiusReductionRight);
          },
          setCenterPoint: function (leftMovement, rightMovement) {
            var me = this;
            var maxRight = me.width - rightMovement - me.drawingArea,
              maxLeft = leftMovement + me.drawingArea;

            me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);
            // Always vertically in the centre as the text height doesn't change
            me.yCenter = Math.round(me.height / 2 + me.top);
          },

          getIndexAngle: function (index) {
            var angleMultiplier = (Math.PI * 2) / this.getValueCount();
            var startAngle =
              this.chart.options && this.chart.options.startAngle
                ? this.chart.options.startAngle
                : 0;

            var startAngleRadians = (startAngle * Math.PI * 2) / 360;

            // Start from the top instead of right, so remove a quarter of the circle
            return index * angleMultiplier - Math.PI / 2 + startAngleRadians;
          },
          getDistanceFromCenterForValue: function (value) {
            var me = this;

            if (value === null) {
              return 0; // null always in center
            }

            // Take into account half font size + the yPadding of the top value
            var scalingFactor = me.drawingArea / (me.max - me.min);
            if (me.options.reverse) {
              return (me.max - value) * scalingFactor;
            }
            return (value - me.min) * scalingFactor;
          },
          getPointPosition: function (index, distanceFromCenter) {
            var me = this;
            var thisAngle = me.getIndexAngle(index);
            return {
              x:
                Math.round(Math.cos(thisAngle) * distanceFromCenter) +
                me.xCenter,
              y:
                Math.round(Math.sin(thisAngle) * distanceFromCenter) +
                me.yCenter,
            };
          },
          getPointPositionForValue: function (index, value) {
            return this.getPointPosition(
              index,
              this.getDistanceFromCenterForValue(value),
            );
          },

          getBasePosition: function () {
            var me = this;
            var min = me.min;
            var max = me.max;

            return me.getPointPositionForValue(
              0,
              me.beginAtZero
                ? 0
                : min < 0 && max < 0
                ? max
                : min > 0 && max > 0
                ? min
                : 0,
            );
          },

          draw: function () {
            var me = this;
            var opts = me.options;
            var gridLineOpts = opts.gridLines;
            var tickOpts = opts.ticks;
            var angleLineOpts = opts.angleLines;
            var pointLabelOpts = opts.pointLabels;
            var getValueOrDefault = helpers.getValueOrDefault;

            if (opts.display) {
              var ctx = me.ctx;

              // Tick Font
              var tickFontSize = getValueOrDefault(
                tickOpts.fontSize,
                globalDefaults.defaultFontSize,
              );
              var tickFontStyle = getValueOrDefault(
                tickOpts.fontStyle,
                globalDefaults.defaultFontStyle,
              );
              var tickFontFamily = getValueOrDefault(
                tickOpts.fontFamily,
                globalDefaults.defaultFontFamily,
              );
              var tickLabelFont = helpers.fontString(
                tickFontSize,
                tickFontStyle,
                tickFontFamily,
              );

              helpers.each(me.ticks, function (label, index) {
                // Don't draw a centre value (if it is minimum)
                if (index > 0 || opts.reverse) {
                  var yCenterOffset = me.getDistanceFromCenterForValue(
                    me.ticksAsNumbers[index],
                  );
                  var yHeight = me.yCenter - yCenterOffset;

                  // Draw circular lines around the scale
                  if (gridLineOpts.display && index !== 0) {
                    ctx.strokeStyle = helpers.getValueAtIndexOrDefault(
                      gridLineOpts.color,
                      index - 1,
                    );
                    ctx.lineWidth = helpers.getValueAtIndexOrDefault(
                      gridLineOpts.lineWidth,
                      index - 1,
                    );

                    if (opts.lineArc) {
                      // Draw circular arcs between the points
                      ctx.beginPath();
                      ctx.arc(
                        me.xCenter,
                        me.yCenter,
                        yCenterOffset,
                        0,
                        Math.PI * 2,
                      );
                      ctx.closePath();
                      ctx.stroke();
                    } else {
                      // Draw straight lines connecting each index
                      ctx.beginPath();
                      for (var i = 0; i < me.getValueCount(); i++) {
                        var pointPosition = me.getPointPosition(
                          i,
                          yCenterOffset,
                        );
                        if (i === 0) {
                          ctx.moveTo(pointPosition.x, pointPosition.y);
                        } else {
                          ctx.lineTo(pointPosition.x, pointPosition.y);
                        }
                      }
                      ctx.closePath();
                      ctx.stroke();
                    }
                  }

                  if (tickOpts.display) {
                    var tickFontColor = getValueOrDefault(
                      tickOpts.fontColor,
                      globalDefaults.defaultFontColor,
                    );
                    ctx.font = tickLabelFont;

                    if (tickOpts.showLabelBackdrop) {
                      var labelWidth = ctx.measureText(label).width;
                      ctx.fillStyle = tickOpts.backdropColor;
                      ctx.fillRect(
                        me.xCenter - labelWidth / 2 - tickOpts.backdropPaddingX,
                        yHeight - tickFontSize / 2 - tickOpts.backdropPaddingY,
                        labelWidth + tickOpts.backdropPaddingX * 2,
                        tickFontSize + tickOpts.backdropPaddingY * 2,
                      );
                    }

                    ctx.textAlign = 'center';
                    ctx.textBaseline = 'middle';
                    ctx.fillStyle = tickFontColor;
                    ctx.fillText(label, me.xCenter, yHeight);
                  }
                }
              });

              if (!opts.lineArc) {
                ctx.lineWidth = angleLineOpts.lineWidth;
                ctx.strokeStyle = angleLineOpts.color;

                var outerDistance = me.getDistanceFromCenterForValue(
                  opts.reverse ? me.min : me.max,
                );

                // Point Label Font
                var pointLabelFontSize = getValueOrDefault(
                  pointLabelOpts.fontSize,
                  globalDefaults.defaultFontSize,
                );
                var pointLabeFontStyle = getValueOrDefault(
                  pointLabelOpts.fontStyle,
                  globalDefaults.defaultFontStyle,
                );
                var pointLabeFontFamily = getValueOrDefault(
                  pointLabelOpts.fontFamily,
                  globalDefaults.defaultFontFamily,
                );
                var pointLabeFont = helpers.fontString(
                  pointLabelFontSize,
                  pointLabeFontStyle,
                  pointLabeFontFamily,
                );

                for (var i = me.getValueCount() - 1; i >= 0; i--) {
                  if (angleLineOpts.display) {
                    var outerPosition = me.getPointPosition(i, outerDistance);
                    ctx.beginPath();
                    ctx.moveTo(me.xCenter, me.yCenter);
                    ctx.lineTo(outerPosition.x, outerPosition.y);
                    ctx.stroke();
                    ctx.closePath();
                  }
                  // Extra 3px out for some label spacing
                  var pointLabelPosition = me.getPointPosition(
                    i,
                    outerDistance + 5,
                  );

                  // Keep this in loop since we may support array properties here
                  var pointLabelFontColor = getValueOrDefault(
                    pointLabelOpts.fontColor,
                    globalDefaults.defaultFontColor,
                  );
                  ctx.font = pointLabeFont;
                  ctx.fillStyle = pointLabelFontColor;

                  var pointLabels = me.pointLabels;

                  // Add quarter circle to make degree 0 mean top of circle
                  var angleRadians = this.getIndexAngle(i) + Math.PI / 2;
                  var angle = ((angleRadians * 360) / (2 * Math.PI)) % 360;

                  if (angle === 0 || angle === 180) {
                    ctx.textAlign = 'center';
                  } else if (angle < 180) {
                    ctx.textAlign = 'left';
                  } else {
                    ctx.textAlign = 'right';
                  }

                  // Set the correct text baseline based on outer positioning
                  if (angle === 90 || angle === 270) {
                    ctx.textBaseline = 'middle';
                  } else if (angle > 270 || angle < 90) {
                    ctx.textBaseline = 'bottom';
                  } else {
                    ctx.textBaseline = 'top';
                  }

                  ctx.fillText(
                    pointLabels[i] ? pointLabels[i] : '',
                    pointLabelPosition.x,
                    pointLabelPosition.y,
                  );
                }
              }
            }
          },
        });
        Chart.scaleService.registerScaleType(
          'radialLinear',
          LinearRadialScale,
          defaultConfig,
        );
      };

      /***/
    },
    /* 848 */
    /***/ function (module, exports, __webpack_require__) {
      /* global window: false */
      'use strict';

      var moment = __webpack_require__(849);
      moment = typeof moment === 'function' ? moment : window.moment;

      module.exports = function (Chart) {
        var helpers = Chart.helpers;
        var time = {
          units: [
            {
              name: 'millisecond',
              steps: [1, 2, 5, 10, 20, 50, 100, 250, 500],
            },
            {
              name: 'second',
              steps: [1, 2, 5, 10, 30],
            },
            {
              name: 'minute',
              steps: [1, 2, 5, 10, 30],
            },
            {
              name: 'hour',
              steps: [1, 2, 3, 6, 12],
            },
            {
              name: 'day',
              steps: [1, 2, 5],
            },
            {
              name: 'week',
              maxStep: 4,
            },
            {
              name: 'month',
              maxStep: 3,
            },
            {
              name: 'quarter',
              maxStep: 4,
            },
            {
              name: 'year',
              maxStep: false,
            },
          ],
        };

        var defaultConfig = {
          position: 'bottom',

          time: {
            parser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment
            format: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/
            unit: false, // false == automatic or override with week, month, year, etc.
            round: false, // none, or override with week, month, year, etc.
            displayFormat: false, // DEPRECATED
            isoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/
            minUnit: 'millisecond',

            // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/
            displayFormats: {
              millisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,
              second: 'h:mm:ss a', // 11:20:01 AM
              minute: 'h:mm:ss a', // 11:20:01 AM
              hour: 'MMM D, hA', // Sept 4, 5PM
              day: 'll', // Sep 4 2015
              week: 'll', // Week 46, or maybe "[W]WW - YYYY" ?
              month: 'MMM YYYY', // Sept 2015
              quarter: '[Q]Q - YYYY', // Q3
              year: 'YYYY', // 2015
            },
          },
          ticks: {
            autoSkip: false,
          },
        };

        var TimeScale = Chart.Scale.extend({
          initialize: function () {
            if (!moment) {
              throw new Error(
                'Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com',
              );
            }

            Chart.Scale.prototype.initialize.call(this);
          },
          getLabelMoment: function (datasetIndex, index) {
            if (datasetIndex === null || index === null) {
              return null;
            }

            if (typeof this.labelMoments[datasetIndex] !== 'undefined') {
              return this.labelMoments[datasetIndex][index];
            }

            return null;
          },
          getLabelDiff: function (datasetIndex, index) {
            var me = this;
            if (datasetIndex === null || index === null) {
              return null;
            }

            if (me.labelDiffs === undefined) {
              me.buildLabelDiffs();
            }

            if (typeof me.labelDiffs[datasetIndex] !== 'undefined') {
              return me.labelDiffs[datasetIndex][index];
            }

            return null;
          },
          getMomentStartOf: function (tick) {
            var me = this;
            if (
              me.options.time.unit === 'week' &&
              me.options.time.isoWeekday !== false
            ) {
              return tick
                .clone()
                .startOf('isoWeek')
                .isoWeekday(me.options.time.isoWeekday);
            }
            return tick.clone().startOf(me.tickUnit);
          },
          determineDataLimits: function () {
            var me = this;
            me.labelMoments = [];

            // Only parse these once. If the dataset does not have data as x,y pairs, we will use
            // these
            var scaleLabelMoments = [];
            if (me.chart.data.labels && me.chart.data.labels.length > 0) {
              helpers.each(
                me.chart.data.labels,
                function (label) {
                  var labelMoment = me.parseTime(label);

                  if (labelMoment.isValid()) {
                    if (me.options.time.round) {
                      labelMoment.startOf(me.options.time.round);
                    }
                    scaleLabelMoments.push(labelMoment);
                  }
                },
                me,
              );

              me.firstTick = moment.min.call(me, scaleLabelMoments);
              me.lastTick = moment.max.call(me, scaleLabelMoments);
            } else {
              me.firstTick = null;
              me.lastTick = null;
            }

            helpers.each(
              me.chart.data.datasets,
              function (dataset, datasetIndex) {
                var momentsForDataset = [];
                var datasetVisible = me.chart.isDatasetVisible(datasetIndex);

                if (
                  typeof dataset.data[0] === 'object' &&
                  dataset.data[0] !== null
                ) {
                  helpers.each(
                    dataset.data,
                    function (value) {
                      var labelMoment = me.parseTime(me.getRightValue(value));

                      if (labelMoment.isValid()) {
                        if (me.options.time.round) {
                          labelMoment.startOf(me.options.time.round);
                        }
                        momentsForDataset.push(labelMoment);

                        if (datasetVisible) {
                          // May have gone outside the scale ranges, make sure we keep the first and last ticks updated
                          me.firstTick =
                            me.firstTick !== null
                              ? moment.min(me.firstTick, labelMoment)
                              : labelMoment;
                          me.lastTick =
                            me.lastTick !== null
                              ? moment.max(me.lastTick, labelMoment)
                              : labelMoment;
                        }
                      }
                    },
                    me,
                  );
                } else {
                  // We have no labels. Use the ones from the scale
                  momentsForDataset = scaleLabelMoments;
                }

                me.labelMoments.push(momentsForDataset);
              },
              me,
            );

            // Set these after we've done all the data
            if (me.options.time.min) {
              me.firstTick = me.parseTime(me.options.time.min);
            }

            if (me.options.time.max) {
              me.lastTick = me.parseTime(me.options.time.max);
            }

            // We will modify these, so clone for later
            me.firstTick = (me.firstTick || moment()).clone();
            me.lastTick = (me.lastTick || moment()).clone();
          },
          buildLabelDiffs: function () {
            var me = this;
            me.labelDiffs = [];
            var scaleLabelDiffs = [];
            // Parse common labels once
            if (me.chart.data.labels && me.chart.data.labels.length > 0) {
              helpers.each(
                me.chart.data.labels,
                function (label) {
                  var labelMoment = me.parseTime(label);

                  if (labelMoment.isValid()) {
                    if (me.options.time.round) {
                      labelMoment.startOf(me.options.time.round);
                    }
                    scaleLabelDiffs.push(
                      labelMoment.diff(me.firstTick, me.tickUnit, true),
                    );
                  }
                },
                me,
              );
            }

            helpers.each(
              me.chart.data.datasets,
              function (dataset) {
                var diffsForDataset = [];

                if (
                  typeof dataset.data[0] === 'object' &&
                  dataset.data[0] !== null
                ) {
                  helpers.each(
                    dataset.data,
                    function (value) {
                      var labelMoment = me.parseTime(me.getRightValue(value));

                      if (labelMoment.isValid()) {
                        if (me.options.time.round) {
                          labelMoment.startOf(me.options.time.round);
                        }
                        diffsForDataset.push(
                          labelMoment.diff(me.firstTick, me.tickUnit, true),
                        );
                      }
                    },
                    me,
                  );
                } else {
                  // We have no labels. Use common ones
                  diffsForDataset = scaleLabelDiffs;
                }

                me.labelDiffs.push(diffsForDataset);
              },
              me,
            );
          },
          buildTicks: function () {
            var me = this;

            me.ctx.save();
            var tickFontSize = helpers.getValueOrDefault(
              me.options.ticks.fontSize,
              Chart.defaults.global.defaultFontSize,
            );
            var tickFontStyle = helpers.getValueOrDefault(
              me.options.ticks.fontStyle,
              Chart.defaults.global.defaultFontStyle,
            );
            var tickFontFamily = helpers.getValueOrDefault(
              me.options.ticks.fontFamily,
              Chart.defaults.global.defaultFontFamily,
            );
            var tickLabelFont = helpers.fontString(
              tickFontSize,
              tickFontStyle,
              tickFontFamily,
            );
            me.ctx.font = tickLabelFont;

            me.ticks = [];
            me.unitScale = 1; // How much we scale the unit by, ie 2 means 2x unit per step
            me.scaleSizeInUnits = 0; // How large the scale is in the base unit (seconds, minutes, etc)

            // Set unit override if applicable
            if (me.options.time.unit) {
              me.tickUnit = me.options.time.unit || 'day';
              me.displayFormat = me.options.time.displayFormats[me.tickUnit];
              me.scaleSizeInUnits = me.lastTick.diff(
                me.firstTick,
                me.tickUnit,
                true,
              );
              me.unitScale = helpers.getValueOrDefault(
                me.options.time.unitStepSize,
                1,
              );
            } else {
              // Determine the smallest needed unit of the time
              var innerWidth = me.isHorizontal()
                ? me.width - (me.paddingLeft + me.paddingRight)
                : me.height - (me.paddingTop + me.paddingBottom);

              // Crude approximation of what the label length might be
              var tempFirstLabel = me.tickFormatFunction(me.firstTick, 0, []);
              var tickLabelWidth = me.ctx.measureText(tempFirstLabel).width;
              var cosRotation = Math.cos(
                helpers.toRadians(me.options.ticks.maxRotation),
              );
              var sinRotation = Math.sin(
                helpers.toRadians(me.options.ticks.maxRotation),
              );
              tickLabelWidth =
                tickLabelWidth * cosRotation + tickFontSize * sinRotation;
              var labelCapacity = innerWidth / tickLabelWidth;

              // Start as small as possible
              me.tickUnit = me.options.time.minUnit;
              me.scaleSizeInUnits = me.lastTick.diff(
                me.firstTick,
                me.tickUnit,
                true,
              );
              me.displayFormat = me.options.time.displayFormats[me.tickUnit];

              var unitDefinitionIndex = 0;
              var unitDefinition = time.units[unitDefinitionIndex];

              // While we aren't ideal and we don't have units left
              while (unitDefinitionIndex < time.units.length) {
                // Can we scale this unit. If `false` we can scale infinitely
                me.unitScale = 1;

                if (
                  helpers.isArray(unitDefinition.steps) &&
                  Math.ceil(me.scaleSizeInUnits / labelCapacity) <
                    helpers.max(unitDefinition.steps)
                ) {
                  // Use one of the prefedined steps
                  for (var idx = 0; idx < unitDefinition.steps.length; ++idx) {
                    if (
                      unitDefinition.steps[idx] >=
                      Math.ceil(me.scaleSizeInUnits / labelCapacity)
                    ) {
                      me.unitScale = helpers.getValueOrDefault(
                        me.options.time.unitStepSize,
                        unitDefinition.steps[idx],
                      );
                      break;
                    }
                  }

                  break;
                } else if (
                  unitDefinition.maxStep === false ||
                  Math.ceil(me.scaleSizeInUnits / labelCapacity) <
                    unitDefinition.maxStep
                ) {
                  // We have a max step. Scale this unit
                  me.unitScale = helpers.getValueOrDefault(
                    me.options.time.unitStepSize,
                    Math.ceil(me.scaleSizeInUnits / labelCapacity),
                  );
                  break;
                } else {
                  // Move to the next unit up
                  ++unitDefinitionIndex;
                  unitDefinition = time.units[unitDefinitionIndex];

                  me.tickUnit = unitDefinition.name;
                  var leadingUnitBuffer = me.firstTick.diff(
                    me.getMomentStartOf(me.firstTick),
                    me.tickUnit,
                    true,
                  );
                  var trailingUnitBuffer = me
                    .getMomentStartOf(me.lastTick.clone().add(1, me.tickUnit))
                    .diff(me.lastTick, me.tickUnit, true);
                  me.scaleSizeInUnits =
                    me.lastTick.diff(me.firstTick, me.tickUnit, true) +
                    leadingUnitBuffer +
                    trailingUnitBuffer;
                  me.displayFormat =
                    me.options.time.displayFormats[unitDefinition.name];
                }
              }
            }

            var roundedStart;

            // Only round the first tick if we have no hard minimum
            if (!me.options.time.min) {
              me.firstTick = me.getMomentStartOf(me.firstTick);
              roundedStart = me.firstTick;
            } else {
              roundedStart = me.getMomentStartOf(me.firstTick);
            }

            // Only round the last tick if we have no hard maximum
            if (!me.options.time.max) {
              var roundedEnd = me.getMomentStartOf(me.lastTick);
              var delta = roundedEnd.diff(me.lastTick, me.tickUnit, true);
              if (delta < 0) {
                // Do not use end of because we need me to be in the next time unit
                me.lastTick = me.getMomentStartOf(
                  me.lastTick.add(1, me.tickUnit),
                );
              } else if (delta >= 0) {
                me.lastTick = roundedEnd;
              }

              me.scaleSizeInUnits = me.lastTick.diff(
                me.firstTick,
                me.tickUnit,
                true,
              );
            }

            // Tick displayFormat override
            if (me.options.time.displayFormat) {
              me.displayFormat = me.options.time.displayFormat;
            }

            // first tick. will have been rounded correctly if options.time.min is not specified
            me.ticks.push(me.firstTick.clone());

            // For every unit in between the first and last moment, create a moment and add it to the ticks tick
            for (var i = 1; i <= me.scaleSizeInUnits; ++i) {
              var newTick = roundedStart.clone().add(i, me.tickUnit);

              // Are we greater than the max time
              if (
                me.options.time.max &&
                newTick.diff(me.lastTick, me.tickUnit, true) >= 0
              ) {
                break;
              }

              if (i % me.unitScale === 0) {
                me.ticks.push(newTick);
              }
            }

            // Always show the right tick
            var diff = me.ticks[me.ticks.length - 1].diff(
              me.lastTick,
              me.tickUnit,
            );
            if (diff !== 0 || me.scaleSizeInUnits === 0) {
              // this is a weird case. If the <max> option is the same as the end option, we can't just diff the times because the tick was created from the roundedStart
              // but the last tick was not rounded.
              if (me.options.time.max) {
                me.ticks.push(me.lastTick.clone());
                me.scaleSizeInUnits = me.lastTick.diff(
                  me.ticks[0],
                  me.tickUnit,
                  true,
                );
              } else {
                me.ticks.push(me.lastTick.clone());
                me.scaleSizeInUnits = me.lastTick.diff(
                  me.firstTick,
                  me.tickUnit,
                  true,
                );
              }
            }

            me.ctx.restore();

            // Invalidate label diffs cache
            me.labelDiffs = undefined;
          },
          // Get tooltip label
          getLabelForIndex: function (index, datasetIndex) {
            var me = this;
            var label =
              me.chart.data.labels && index < me.chart.data.labels.length
                ? me.chart.data.labels[index]
                : '';

            if (
              typeof me.chart.data.datasets[datasetIndex].data[0] === 'object'
            ) {
              label = me.getRightValue(
                me.chart.data.datasets[datasetIndex].data[index],
              );
            }

            // Format nicely
            if (me.options.time.tooltipFormat) {
              label = me.parseTime(label).format(me.options.time.tooltipFormat);
            }

            return label;
          },
          // Function to format an individual tick mark
          tickFormatFunction: function (tick, index, ticks) {
            var formattedTick = tick.format(this.displayFormat);
            var tickOpts = this.options.ticks;
            var callback = helpers.getValueOrDefault(
              tickOpts.callback,
              tickOpts.userCallback,
            );

            if (callback) {
              return callback(formattedTick, index, ticks);
            }
            return formattedTick;
          },
          convertTicksToLabels: function () {
            var me = this;
            me.tickMoments = me.ticks;
            me.ticks = me.ticks.map(me.tickFormatFunction, me);
          },
          getPixelForValue: function (value, index, datasetIndex) {
            var me = this;
            var offset = null;
            if (index !== undefined && datasetIndex !== undefined) {
              offset = me.getLabelDiff(datasetIndex, index);
            }

            if (offset === null) {
              if (!value || !value.isValid) {
                // not already a moment object
                value = me.parseTime(me.getRightValue(value));
              }
              if (value && value.isValid && value.isValid()) {
                offset = value.diff(me.firstTick, me.tickUnit, true);
              }
            }

            if (offset !== null) {
              var decimal =
                offset !== 0 ? offset / me.scaleSizeInUnits : offset;

              if (me.isHorizontal()) {
                var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
                var valueOffset = innerWidth * decimal + me.paddingLeft;

                return me.left + Math.round(valueOffset);
              }
              var innerHeight = me.height - (me.paddingTop + me.paddingBottom);
              var heightOffset = innerHeight * decimal + me.paddingTop;

              return me.top + Math.round(heightOffset);
            }
          },
          getPixelForTick: function (index) {
            return this.getPixelForValue(this.tickMoments[index], null, null);
          },
          getValueForPixel: function (pixel) {
            var me = this;
            var innerDimension = me.isHorizontal()
              ? me.width - (me.paddingLeft + me.paddingRight)
              : me.height - (me.paddingTop + me.paddingBottom);
            var offset =
              (pixel -
                (me.isHorizontal()
                  ? me.left + me.paddingLeft
                  : me.top + me.paddingTop)) /
              innerDimension;
            offset *= me.scaleSizeInUnits;
            return me.firstTick
              .clone()
              .add(moment.duration(offset, me.tickUnit).asSeconds(), 'seconds');
          },
          parseTime: function (label) {
            var me = this;
            if (typeof me.options.time.parser === 'string') {
              return moment(label, me.options.time.parser);
            }
            if (typeof me.options.time.parser === 'function') {
              return me.options.time.parser(label);
            }
            // Date objects
            if (
              typeof label.getMonth === 'function' ||
              typeof label === 'number'
            ) {
              return moment(label);
            }
            // Moment support
            if (label.isValid && label.isValid()) {
              return label;
            }
            // Custom parsing (return an instance of moment)
            if (
              typeof me.options.time.format !== 'string' &&
              me.options.time.format.call
            ) {
              console.warn(
                'options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale',
              );
              return me.options.time.format(label);
            }
            // Moment format parsing
            return moment(label, me.options.time.format);
          },
        });
        Chart.scaleService.registerScaleType('time', TimeScale, defaultConfig);
      };

      /***/
    },
    /* 849 */
    /***/ function (module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */ (function (module) {
        //! moment.js
        //! version : 2.15.2
        //! authors : Tim Wood, Iskren Chernev, Moment.js contributors
        //! license : MIT
        //! momentjs.com

        (function (global, factory) {
          true
            ? (module.exports = factory())
            : typeof define === 'function' && define.amd
            ? define(factory)
            : (global.moment = factory());
        })(this, function () {
          'use strict';

          var hookCallback;

          function utils_hooks__hooks() {
            return hookCallback.apply(null, arguments);
          }

          // This is done to register the method called with moment()
          // without creating circular dependencies.
          function setHookCallback(callback) {
            hookCallback = callback;
          }

          function isArray(input) {
            return (
              input instanceof Array ||
              Object.prototype.toString.call(input) === '[object Array]'
            );
          }

          function isObject(input) {
            // IE8 will treat undefined and null as object if it wasn't for
            // input != null
            return (
              input != null &&
              Object.prototype.toString.call(input) === '[object Object]'
            );
          }

          function isObjectEmpty(obj) {
            var k;
            for (k in obj) {
              // even if its not own property I'd still call it non-empty
              return false;
            }
            return true;
          }

          function isDate(input) {
            return (
              input instanceof Date ||
              Object.prototype.toString.call(input) === '[object Date]'
            );
          }

          function map(arr, fn) {
            var res = [],
              i;
            for (i = 0; i < arr.length; ++i) {
              res.push(fn(arr[i], i));
            }
            return res;
          }

          function hasOwnProp(a, b) {
            return Object.prototype.hasOwnProperty.call(a, b);
          }

          function extend(a, b) {
            for (var i in b) {
              if (hasOwnProp(b, i)) {
                a[i] = b[i];
              }
            }

            if (hasOwnProp(b, 'toString')) {
              a.toString = b.toString;
            }

            if (hasOwnProp(b, 'valueOf')) {
              a.valueOf = b.valueOf;
            }

            return a;
          }

          function create_utc__createUTC(input, format, locale, strict) {
            return createLocalOrUTC(input, format, locale, strict, true).utc();
          }

          function defaultParsingFlags() {
            // We need to deep clone this object.
            return {
              empty: false,
              unusedTokens: [],
              unusedInput: [],
              overflow: -2,
              charsLeftOver: 0,
              nullInput: false,
              invalidMonth: null,
              invalidFormat: false,
              userInvalidated: false,
              iso: false,
              parsedDateParts: [],
              meridiem: null,
            };
          }

          function getParsingFlags(m) {
            if (m._pf == null) {
              m._pf = defaultParsingFlags();
            }
            return m._pf;
          }

          var some;
          if (Array.prototype.some) {
            some = Array.prototype.some;
          } else {
            some = function (fun) {
              var t = Object(this);
              var len = t.length >>> 0;

              for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                  return true;
                }
              }

              return false;
            };
          }

          function valid__isValid(m) {
            if (m._isValid == null) {
              var flags = getParsingFlags(m);
              var parsedParts = some.call(flags.parsedDateParts, function (i) {
                return i != null;
              });
              var isNowValid =
                !isNaN(m._d.getTime()) &&
                flags.overflow < 0 &&
                !flags.empty &&
                !flags.invalidMonth &&
                !flags.invalidWeekday &&
                !flags.nullInput &&
                !flags.invalidFormat &&
                !flags.userInvalidated &&
                (!flags.meridiem || (flags.meridiem && parsedParts));

              if (m._strict) {
                isNowValid =
                  isNowValid &&
                  flags.charsLeftOver === 0 &&
                  flags.unusedTokens.length === 0 &&
                  flags.bigHour === undefined;
              }

              if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
              } else {
                return isNowValid;
              }
            }
            return m._isValid;
          }

          function valid__createInvalid(flags) {
            var m = create_utc__createUTC(NaN);
            if (flags != null) {
              extend(getParsingFlags(m), flags);
            } else {
              getParsingFlags(m).userInvalidated = true;
            }

            return m;
          }

          function isUndefined(input) {
            return input === void 0;
          }

          // Plugins that add properties should also add the key here (null value),
          // so we can properly clone ourselves.
          var momentProperties = (utils_hooks__hooks.momentProperties = []);

          function copyConfig(to, from) {
            var i, prop, val;

            if (!isUndefined(from._isAMomentObject)) {
              to._isAMomentObject = from._isAMomentObject;
            }
            if (!isUndefined(from._i)) {
              to._i = from._i;
            }
            if (!isUndefined(from._f)) {
              to._f = from._f;
            }
            if (!isUndefined(from._l)) {
              to._l = from._l;
            }
            if (!isUndefined(from._strict)) {
              to._strict = from._strict;
            }
            if (!isUndefined(from._tzm)) {
              to._tzm = from._tzm;
            }
            if (!isUndefined(from._isUTC)) {
              to._isUTC = from._isUTC;
            }
            if (!isUndefined(from._offset)) {
              to._offset = from._offset;
            }
            if (!isUndefined(from._pf)) {
              to._pf = getParsingFlags(from);
            }
            if (!isUndefined(from._locale)) {
              to._locale = from._locale;
            }

            if (momentProperties.length > 0) {
              for (i in momentProperties) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                  to[prop] = val;
                }
              }
            }

            return to;
          }

          var updateInProgress = false;

          // Moment prototype object
          function Moment(config) {
            copyConfig(this, config);
            this._d = new Date(config._d != null ? config._d.getTime() : NaN);
            // Prevent infinite loop in case updateOffset creates new moment
            // objects.
            if (updateInProgress === false) {
              updateInProgress = true;
              utils_hooks__hooks.updateOffset(this);
              updateInProgress = false;
            }
          }

          function isMoment(obj) {
            return (
              obj instanceof Moment ||
              (obj != null && obj._isAMomentObject != null)
            );
          }

          function absFloor(number) {
            if (number < 0) {
              // -0 -> 0
              return Math.ceil(number) || 0;
            } else {
              return Math.floor(number);
            }
          }

          function toInt(argumentForCoercion) {
            var coercedNumber = +argumentForCoercion,
              value = 0;

            if (coercedNumber !== 0 && isFinite(coercedNumber)) {
              value = absFloor(coercedNumber);
            }

            return value;
          }

          // compare two arrays, return the number of differences
          function compareArrays(array1, array2, dontConvert) {
            var len = Math.min(array1.length, array2.length),
              lengthDiff = Math.abs(array1.length - array2.length),
              diffs = 0,
              i;
            for (i = 0; i < len; i++) {
              if (
                (dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
              ) {
                diffs++;
              }
            }
            return diffs + lengthDiff;
          }

          function warn(msg) {
            if (
              utils_hooks__hooks.suppressDeprecationWarnings === false &&
              typeof console !== 'undefined' &&
              console.warn
            ) {
              console.warn('Deprecation warning: ' + msg);
            }
          }

          function deprecate(msg, fn) {
            var firstTime = true;

            return extend(function () {
              if (utils_hooks__hooks.deprecationHandler != null) {
                utils_hooks__hooks.deprecationHandler(null, msg);
              }
              if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                  arg = '';
                  if (typeof arguments[i] === 'object') {
                    arg += '\n[' + i + '] ';
                    for (var key in arguments[0]) {
                      arg += key + ': ' + arguments[0][key] + ', ';
                    }
                    arg = arg.slice(0, -2); // Remove trailing comma and space
                  } else {
                    arg = arguments[i];
                  }
                  args.push(arg);
                }
                warn(
                  msg +
                    '\nArguments: ' +
                    Array.prototype.slice.call(args).join('') +
                    '\n' +
                    new Error().stack,
                );
                firstTime = false;
              }
              return fn.apply(this, arguments);
            }, fn);
          }

          var deprecations = {};

          function deprecateSimple(name, msg) {
            if (utils_hooks__hooks.deprecationHandler != null) {
              utils_hooks__hooks.deprecationHandler(name, msg);
            }
            if (!deprecations[name]) {
              warn(msg);
              deprecations[name] = true;
            }
          }

          utils_hooks__hooks.suppressDeprecationWarnings = false;
          utils_hooks__hooks.deprecationHandler = null;

          function isFunction(input) {
            return (
              input instanceof Function ||
              Object.prototype.toString.call(input) === '[object Function]'
            );
          }

          function locale_set__set(config) {
            var prop, i;
            for (i in config) {
              prop = config[i];
              if (isFunction(prop)) {
                this[i] = prop;
              } else {
                this['_' + i] = prop;
              }
            }
            this._config = config;
            // Lenient ordinal parsing accepts just a number in addition to
            // number + (possibly) stuff coming from _ordinalParseLenient.
            this._ordinalParseLenient = new RegExp(
              this._ordinalParse.source + '|' + /\d{1,2}/.source,
            );
          }

          function mergeConfigs(parentConfig, childConfig) {
            var res = extend({}, parentConfig),
              prop;
            for (prop in childConfig) {
              if (hasOwnProp(childConfig, prop)) {
                if (
                  isObject(parentConfig[prop]) &&
                  isObject(childConfig[prop])
                ) {
                  res[prop] = {};
                  extend(res[prop], parentConfig[prop]);
                  extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                  res[prop] = childConfig[prop];
                } else {
                  delete res[prop];
                }
              }
            }
            for (prop in parentConfig) {
              if (
                hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])
              ) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
              }
            }
            return res;
          }

          function Locale(config) {
            if (config != null) {
              this.set(config);
            }
          }

          var keys;

          if (Object.keys) {
            keys = Object.keys;
          } else {
            keys = function (obj) {
              var i,
                res = [];
              for (i in obj) {
                if (hasOwnProp(obj, i)) {
                  res.push(i);
                }
              }
              return res;
            };
          }

          var defaultCalendar = {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
          };

          function locale_calendar__calendar(key, mom, now) {
            var output = this._calendar[key] || this._calendar['sameElse'];
            return isFunction(output) ? output.call(mom, now) : output;
          }

          var defaultLongDateFormat = {
            LTS: 'h:mm:ss A',
            LT: 'h:mm A',
            L: 'MM/DD/YYYY',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY h:mm A',
            LLLL: 'dddd, MMMM D, YYYY h:mm A',
          };

          function longDateFormat(key) {
            var format = this._longDateFormat[key],
              formatUpper = this._longDateFormat[key.toUpperCase()];

            if (format || !formatUpper) {
              return format;
            }

            this._longDateFormat[key] = formatUpper.replace(
              /MMMM|MM|DD|dddd/g,
              function (val) {
                return val.slice(1);
              },
            );

            return this._longDateFormat[key];
          }

          var defaultInvalidDate = 'Invalid date';

          function invalidDate() {
            return this._invalidDate;
          }

          var defaultOrdinal = '%d';
          var defaultOrdinalParse = /\d{1,2}/;

          function ordinal(number) {
            return this._ordinal.replace('%d', number);
          }

          var defaultRelativeTime = {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
          };

          function relative__relativeTime(
            number,
            withoutSuffix,
            string,
            isFuture,
          ) {
            var output = this._relativeTime[string];
            return isFunction(output)
              ? output(number, withoutSuffix, string, isFuture)
              : output.replace(/%d/i, number);
          }

          function pastFuture(diff, output) {
            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
            return isFunction(format)
              ? format(output)
              : format.replace(/%s/i, output);
          }

          var aliases = {};

          function addUnitAlias(unit, shorthand) {
            var lowerCase = unit.toLowerCase();
            aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[
              shorthand
            ] = unit;
          }

          function normalizeUnits(units) {
            return typeof units === 'string'
              ? aliases[units] || aliases[units.toLowerCase()]
              : undefined;
          }

          function normalizeObjectUnits(inputObject) {
            var normalizedInput = {},
              normalizedProp,
              prop;

            for (prop in inputObject) {
              if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                  normalizedInput[normalizedProp] = inputObject[prop];
                }
              }
            }

            return normalizedInput;
          }

          var priorities = {};

          function addUnitPriority(unit, priority) {
            priorities[unit] = priority;
          }

          function getPrioritizedUnits(unitsObj) {
            var units = [];
            for (var u in unitsObj) {
              units.push({ unit: u, priority: priorities[u] });
            }
            units.sort(function (a, b) {
              return a.priority - b.priority;
            });
            return units;
          }

          function makeGetSet(unit, keepTime) {
            return function (value) {
              if (value != null) {
                get_set__set(this, unit, value);
                utils_hooks__hooks.updateOffset(this, keepTime);
                return this;
              } else {
                return get_set__get(this, unit);
              }
            };
          }

          function get_set__get(mom, unit) {
            return mom.isValid()
              ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
              : NaN;
          }

          function get_set__set(mom, unit, value) {
            if (mom.isValid()) {
              mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
          }

          // MOMENTS

          function stringGet(units) {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
              return this[units]();
            }
            return this;
          }

          function stringSet(units, value) {
            if (typeof units === 'object') {
              units = normalizeObjectUnits(units);
              var prioritized = getPrioritizedUnits(units);
              for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
              }
            } else {
              units = normalizeUnits(units);
              if (isFunction(this[units])) {
                return this[units](value);
              }
            }
            return this;
          }

          function zeroFill(number, targetLength, forceSign) {
            var absNumber = '' + Math.abs(number),
              zerosToFill = targetLength - absNumber.length,
              sign = number >= 0;
            return (
              (sign ? (forceSign ? '+' : '') : '-') +
              Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
              absNumber
            );
          }

          var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

          var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

          var formatFunctions = {};

          var formatTokenFunctions = {};

          // token:    'M'
          // padded:   ['MM', 2]
          // ordinal:  'Mo'
          // callback: function () { this.month() + 1 }
          function addFormatToken(token, padded, ordinal, callback) {
            var func = callback;
            if (typeof callback === 'string') {
              func = function () {
                return this[callback]();
              };
            }
            if (token) {
              formatTokenFunctions[token] = func;
            }
            if (padded) {
              formatTokenFunctions[padded[0]] = function () {
                return zeroFill(
                  func.apply(this, arguments),
                  padded[1],
                  padded[2],
                );
              };
            }
            if (ordinal) {
              formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(
                  func.apply(this, arguments),
                  token,
                );
              };
            }
          }

          function removeFormattingTokens(input) {
            if (input.match(/\[[\s\S]/)) {
              return input.replace(/^\[|\]$/g, '');
            }
            return input.replace(/\\/g, '');
          }

          function makeFormatFunction(format) {
            var array = format.match(formattingTokens),
              i,
              length;

            for (i = 0, length = array.length; i < length; i++) {
              if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
              } else {
                array[i] = removeFormattingTokens(array[i]);
              }
            }

            return function (mom) {
              var output = '',
                i;
              for (i = 0; i < length; i++) {
                output +=
                  array[i] instanceof Function
                    ? array[i].call(mom, format)
                    : array[i];
              }
              return output;
            };
          }

          // format date using native date object
          function formatMoment(m, format) {
            if (!m.isValid()) {
              return m.localeData().invalidDate();
            }

            format = expandFormat(format, m.localeData());
            formatFunctions[format] =
              formatFunctions[format] || makeFormatFunction(format);

            return formatFunctions[format](m);
          }

          function expandFormat(format, locale) {
            var i = 5;

            function replaceLongDateFormatTokens(input) {
              return locale.longDateFormat(input) || input;
            }

            localFormattingTokens.lastIndex = 0;
            while (i >= 0 && localFormattingTokens.test(format)) {
              format = format.replace(
                localFormattingTokens,
                replaceLongDateFormatTokens,
              );
              localFormattingTokens.lastIndex = 0;
              i -= 1;
            }

            return format;
          }

          var match1 = /\d/; //       0 - 9
          var match2 = /\d\d/; //      00 - 99
          var match3 = /\d{3}/; //     000 - 999
          var match4 = /\d{4}/; //    0000 - 9999
          var match6 = /[+-]?\d{6}/; // -999999 - 999999
          var match1to2 = /\d\d?/; //       0 - 99
          var match3to4 = /\d\d\d\d?/; //     999 - 9999
          var match5to6 = /\d\d\d\d\d\d?/; //   99999 - 999999
          var match1to3 = /\d{1,3}/; //       0 - 999
          var match1to4 = /\d{1,4}/; //       0 - 9999
          var match1to6 = /[+-]?\d{1,6}/; // -999999 - 999999

          var matchUnsigned = /\d+/; //       0 - inf
          var matchSigned = /[+-]?\d+/; //    -inf - inf

          var matchOffset = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
          var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

          var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

          // any word (or two) characters or numbers including two/three word month in arabic.
          // includes scottish gaelic two word and hyphenated months
          var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;

          var regexes = {};

          function addRegexToken(token, regex, strictRegex) {
            regexes[token] = isFunction(regex)
              ? regex
              : function (isStrict, localeData) {
                  return isStrict && strictRegex ? strictRegex : regex;
                };
          }

          function getParseRegexForToken(token, config) {
            if (!hasOwnProp(regexes, token)) {
              return new RegExp(unescapeFormat(token));
            }

            return regexes[token](config._strict, config._locale);
          }

          // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
          function unescapeFormat(s) {
            return regexEscape(
              s
                .replace('\\', '')
                .replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (
                  matched,
                  p1,
                  p2,
                  p3,
                  p4,
                ) {
                  return p1 || p2 || p3 || p4;
                }),
            );
          }

          function regexEscape(s) {
            return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
          }

          var tokens = {};

          function addParseToken(token, callback) {
            var i,
              func = callback;
            if (typeof token === 'string') {
              token = [token];
            }
            if (typeof callback === 'number') {
              func = function (input, array) {
                array[callback] = toInt(input);
              };
            }
            for (i = 0; i < token.length; i++) {
              tokens[token[i]] = func;
            }
          }

          function addWeekParseToken(token, callback) {
            addParseToken(token, function (input, array, config, token) {
              config._w = config._w || {};
              callback(input, config._w, config, token);
            });
          }

          function addTimeToArrayFromToken(token, input, config) {
            if (input != null && hasOwnProp(tokens, token)) {
              tokens[token](input, config._a, config, token);
            }
          }

          var YEAR = 0;
          var MONTH = 1;
          var DATE = 2;
          var HOUR = 3;
          var MINUTE = 4;
          var SECOND = 5;
          var MILLISECOND = 6;
          var WEEK = 7;
          var WEEKDAY = 8;

          var indexOf;

          if (Array.prototype.indexOf) {
            indexOf = Array.prototype.indexOf;
          } else {
            indexOf = function (o) {
              // I know
              var i;
              for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                  return i;
                }
              }
              return -1;
            };
          }

          function daysInMonth(year, month) {
            return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
          }

          // FORMATTING

          addFormatToken('M', ['MM', 2], 'Mo', function () {
            return this.month() + 1;
          });

          addFormatToken('MMM', 0, 0, function (format) {
            return this.localeData().monthsShort(this, format);
          });

          addFormatToken('MMMM', 0, 0, function (format) {
            return this.localeData().months(this, format);
          });

          // ALIASES

          addUnitAlias('month', 'M');

          // PRIORITY

          addUnitPriority('month', 8);

          // PARSING

          addRegexToken('M', match1to2);
          addRegexToken('MM', match1to2, match2);
          addRegexToken('MMM', function (isStrict, locale) {
            return locale.monthsShortRegex(isStrict);
          });
          addRegexToken('MMMM', function (isStrict, locale) {
            return locale.monthsRegex(isStrict);
          });

          addParseToken(['M', 'MM'], function (input, array) {
            array[MONTH] = toInt(input) - 1;
          });

          addParseToken(['MMM', 'MMMM'], function (
            input,
            array,
            config,
            token,
          ) {
            var month = config._locale.monthsParse(
              input,
              token,
              config._strict,
            );
            // if we didn't find a month name, mark the date as invalid.
            if (month != null) {
              array[MONTH] = month;
            } else {
              getParsingFlags(config).invalidMonth = input;
            }
          });

          // LOCALES

          var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
          var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_',
          );
          function localeMonths(m, format) {
            if (!m) {
              return this._months;
            }
            return isArray(this._months)
              ? this._months[m.month()]
              : this._months[
                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                    ? 'format'
                    : 'standalone'
                ][m.month()];
          }

          var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
            '_',
          );
          function localeMonthsShort(m, format) {
            if (!m) {
              return this._monthsShort;
            }
            return isArray(this._monthsShort)
              ? this._monthsShort[m.month()]
              : this._monthsShort[
                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
                ][m.month()];
          }

          function units_month__handleStrictParse(monthName, format, strict) {
            var i,
              ii,
              mom,
              llc = monthName.toLocaleLowerCase();
            if (!this._monthsParse) {
              // this is not used
              this._monthsParse = [];
              this._longMonthsParse = [];
              this._shortMonthsParse = [];
              for (i = 0; i < 12; ++i) {
                mom = create_utc__createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(
                  mom,
                  '',
                ).toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(
                  mom,
                  '',
                ).toLocaleLowerCase();
              }
            }

            if (strict) {
              if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
              } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
              }
            } else {
              if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
              } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
              }
            }
          }

          function localeMonthsParse(monthName, format, strict) {
            var i, mom, regex;

            if (this._monthsParseExact) {
              return units_month__handleStrictParse.call(
                this,
                monthName,
                format,
                strict,
              );
            }

            if (!this._monthsParse) {
              this._monthsParse = [];
              this._longMonthsParse = [];
              this._shortMonthsParse = [];
            }

            // TODO: add sorting
            // Sorting makes sure if one month (or abbr) is a prefix of another
            // see sorting in computeMonthsParse
            for (i = 0; i < 12; i++) {
              // make the regex if we don't have it already
              mom = create_utc__createUTC([2000, i]);
              if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp(
                  '^' + this.months(mom, '').replace('.', '') + '$',
                  'i',
                );
                this._shortMonthsParse[i] = new RegExp(
                  '^' + this.monthsShort(mom, '').replace('.', '') + '$',
                  'i',
                );
              }
              if (!strict && !this._monthsParse[i]) {
                regex =
                  '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
              }
              // test the regex
              if (
                strict &&
                format === 'MMMM' &&
                this._longMonthsParse[i].test(monthName)
              ) {
                return i;
              } else if (
                strict &&
                format === 'MMM' &&
                this._shortMonthsParse[i].test(monthName)
              ) {
                return i;
              } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
              }
            }
          }

          // MOMENTS

          function setMonth(mom, value) {
            var dayOfMonth;

            if (!mom.isValid()) {
              // No op
              return mom;
            }

            if (typeof value === 'string') {
              if (/^\d+$/.test(value)) {
                value = toInt(value);
              } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (typeof value !== 'number') {
                  return mom;
                }
              }
            }

            dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
            mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](
              value,
              dayOfMonth,
            );
            return mom;
          }

          function getSetMonth(value) {
            if (value != null) {
              setMonth(this, value);
              utils_hooks__hooks.updateOffset(this, true);
              return this;
            } else {
              return get_set__get(this, 'Month');
            }
          }

          function getDaysInMonth() {
            return daysInMonth(this.year(), this.month());
          }

          var defaultMonthsShortRegex = matchWord;
          function monthsShortRegex(isStrict) {
            if (this._monthsParseExact) {
              if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
              }
              if (isStrict) {
                return this._monthsShortStrictRegex;
              } else {
                return this._monthsShortRegex;
              }
            } else {
              if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
              }
              return this._monthsShortStrictRegex && isStrict
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex;
            }
          }

          var defaultMonthsRegex = matchWord;
          function monthsRegex(isStrict) {
            if (this._monthsParseExact) {
              if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
              }
              if (isStrict) {
                return this._monthsStrictRegex;
              } else {
                return this._monthsRegex;
              }
            } else {
              if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
              }
              return this._monthsStrictRegex && isStrict
                ? this._monthsStrictRegex
                : this._monthsRegex;
            }
          }

          function computeMonthsParse() {
            function cmpLenRev(a, b) {
              return b.length - a.length;
            }

            var shortPieces = [],
              longPieces = [],
              mixedPieces = [],
              i,
              mom;
            for (i = 0; i < 12; i++) {
              // make the regex if we don't have it already
              mom = create_utc__createUTC([2000, i]);
              shortPieces.push(this.monthsShort(mom, ''));
              longPieces.push(this.months(mom, ''));
              mixedPieces.push(this.months(mom, ''));
              mixedPieces.push(this.monthsShort(mom, ''));
            }
            // Sorting makes sure if one month (or abbr) is a prefix of another it
            // will match the longer piece.
            shortPieces.sort(cmpLenRev);
            longPieces.sort(cmpLenRev);
            mixedPieces.sort(cmpLenRev);
            for (i = 0; i < 12; i++) {
              shortPieces[i] = regexEscape(shortPieces[i]);
              longPieces[i] = regexEscape(longPieces[i]);
            }
            for (i = 0; i < 24; i++) {
              mixedPieces[i] = regexEscape(mixedPieces[i]);
            }

            this._monthsRegex = new RegExp(
              '^(' + mixedPieces.join('|') + ')',
              'i',
            );
            this._monthsShortRegex = this._monthsRegex;
            this._monthsStrictRegex = new RegExp(
              '^(' + longPieces.join('|') + ')',
              'i',
            );
            this._monthsShortStrictRegex = new RegExp(
              '^(' + shortPieces.join('|') + ')',
              'i',
            );
          }

          // FORMATTING

          addFormatToken('Y', 0, 0, function () {
            var y = this.year();
            return y <= 9999 ? '' + y : '+' + y;
          });

          addFormatToken(0, ['YY', 2], 0, function () {
            return this.year() % 100;
          });

          addFormatToken(0, ['YYYY', 4], 0, 'year');
          addFormatToken(0, ['YYYYY', 5], 0, 'year');
          addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

          // ALIASES

          addUnitAlias('year', 'y');

          // PRIORITIES

          addUnitPriority('year', 1);

          // PARSING

          addRegexToken('Y', matchSigned);
          addRegexToken('YY', match1to2, match2);
          addRegexToken('YYYY', match1to4, match4);
          addRegexToken('YYYYY', match1to6, match6);
          addRegexToken('YYYYYY', match1to6, match6);

          addParseToken(['YYYYY', 'YYYYYY'], YEAR);
          addParseToken('YYYY', function (input, array) {
            array[YEAR] =
              input.length === 2
                ? utils_hooks__hooks.parseTwoDigitYear(input)
                : toInt(input);
          });
          addParseToken('YY', function (input, array) {
            array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);
          });
          addParseToken('Y', function (input, array) {
            array[YEAR] = parseInt(input, 10);
          });

          // HELPERS

          function daysInYear(year) {
            return isLeapYear(year) ? 366 : 365;
          }

          function isLeapYear(year) {
            return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
          }

          // HOOKS

          utils_hooks__hooks.parseTwoDigitYear = function (input) {
            return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
          };

          // MOMENTS

          var getSetYear = makeGetSet('FullYear', true);

          function getIsLeapYear() {
            return isLeapYear(this.year());
          }

          function createDate(y, m, d, h, M, s, ms) {
            //can't just apply() to create a date:
            //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
            var date = new Date(y, m, d, h, M, s, ms);

            //the date constructor remaps years 0-99 to 1900-1999
            if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
              date.setFullYear(y);
            }
            return date;
          }

          function createUTCDate(y) {
            var date = new Date(Date.UTC.apply(null, arguments));

            //the Date.UTC function remaps years 0-99 to 1900-1999
            if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
              date.setUTCFullYear(y);
            }
            return date;
          }

          // start-of-first-week - start-of-year
          function firstWeekOffset(year, dow, doy) {
            var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
              fwd = 7 + dow - doy,
              // first-week day local weekday -- which local weekday is fwd
              fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

            return -fwdlw + fwd - 1;
          }

          //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
          function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
            var localWeekday = (7 + weekday - dow) % 7,
              weekOffset = firstWeekOffset(year, dow, doy),
              dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
              resYear,
              resDayOfYear;

            if (dayOfYear <= 0) {
              resYear = year - 1;
              resDayOfYear = daysInYear(resYear) + dayOfYear;
            } else if (dayOfYear > daysInYear(year)) {
              resYear = year + 1;
              resDayOfYear = dayOfYear - daysInYear(year);
            } else {
              resYear = year;
              resDayOfYear = dayOfYear;
            }

            return {
              year: resYear,
              dayOfYear: resDayOfYear,
            };
          }

          function weekOfYear(mom, dow, doy) {
            var weekOffset = firstWeekOffset(mom.year(), dow, doy),
              week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
              resWeek,
              resYear;

            if (week < 1) {
              resYear = mom.year() - 1;
              resWeek = week + weeksInYear(resYear, dow, doy);
            } else if (week > weeksInYear(mom.year(), dow, doy)) {
              resWeek = week - weeksInYear(mom.year(), dow, doy);
              resYear = mom.year() + 1;
            } else {
              resYear = mom.year();
              resWeek = week;
            }

            return {
              week: resWeek,
              year: resYear,
            };
          }

          function weeksInYear(year, dow, doy) {
            var weekOffset = firstWeekOffset(year, dow, doy),
              weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
            return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
          }

          // FORMATTING

          addFormatToken('w', ['ww', 2], 'wo', 'week');
          addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

          // ALIASES

          addUnitAlias('week', 'w');
          addUnitAlias('isoWeek', 'W');

          // PRIORITIES

          addUnitPriority('week', 5);
          addUnitPriority('isoWeek', 5);

          // PARSING

          addRegexToken('w', match1to2);
          addRegexToken('ww', match1to2, match2);
          addRegexToken('W', match1to2);
          addRegexToken('WW', match1to2, match2);

          addWeekParseToken(['w', 'ww', 'W', 'WW'], function (
            input,
            week,
            config,
            token,
          ) {
            week[token.substr(0, 1)] = toInt(input);
          });

          // HELPERS

          // LOCALES

          function localeWeek(mom) {
            return weekOfYear(mom, this._week.dow, this._week.doy).week;
          }

          var defaultLocaleWeek = {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 1st is the first week of the year.
          };

          function localeFirstDayOfWeek() {
            return this._week.dow;
          }

          function localeFirstDayOfYear() {
            return this._week.doy;
          }

          // MOMENTS

          function getSetWeek(input) {
            var week = this.localeData().week(this);
            return input == null ? week : this.add((input - week) * 7, 'd');
          }

          function getSetISOWeek(input) {
            var week = weekOfYear(this, 1, 4).week;
            return input == null ? week : this.add((input - week) * 7, 'd');
          }

          // FORMATTING

          addFormatToken('d', 0, 'do', 'day');

          addFormatToken('dd', 0, 0, function (format) {
            return this.localeData().weekdaysMin(this, format);
          });

          addFormatToken('ddd', 0, 0, function (format) {
            return this.localeData().weekdaysShort(this, format);
          });

          addFormatToken('dddd', 0, 0, function (format) {
            return this.localeData().weekdays(this, format);
          });

          addFormatToken('e', 0, 0, 'weekday');
          addFormatToken('E', 0, 0, 'isoWeekday');

          // ALIASES

          addUnitAlias('day', 'd');
          addUnitAlias('weekday', 'e');
          addUnitAlias('isoWeekday', 'E');

          // PRIORITY
          addUnitPriority('day', 11);
          addUnitPriority('weekday', 11);
          addUnitPriority('isoWeekday', 11);

          // PARSING

          addRegexToken('d', match1to2);
          addRegexToken('e', match1to2);
          addRegexToken('E', match1to2);
          addRegexToken('dd', function (isStrict, locale) {
            return locale.weekdaysMinRegex(isStrict);
          });
          addRegexToken('ddd', function (isStrict, locale) {
            return locale.weekdaysShortRegex(isStrict);
          });
          addRegexToken('dddd', function (isStrict, locale) {
            return locale.weekdaysRegex(isStrict);
          });

          addWeekParseToken(['dd', 'ddd', 'dddd'], function (
            input,
            week,
            config,
            token,
          ) {
            var weekday = config._locale.weekdaysParse(
              input,
              token,
              config._strict,
            );
            // if we didn't get a weekday name, mark the date as invalid
            if (weekday != null) {
              week.d = weekday;
            } else {
              getParsingFlags(config).invalidWeekday = input;
            }
          });

          addWeekParseToken(['d', 'e', 'E'], function (
            input,
            week,
            config,
            token,
          ) {
            week[token] = toInt(input);
          });

          // HELPERS

          function parseWeekday(input, locale) {
            if (typeof input !== 'string') {
              return input;
            }

            if (!isNaN(input)) {
              return parseInt(input, 10);
            }

            input = locale.weekdaysParse(input);
            if (typeof input === 'number') {
              return input;
            }

            return null;
          }

          function parseIsoWeekday(input, locale) {
            if (typeof input === 'string') {
              return locale.weekdaysParse(input) % 7 || 7;
            }
            return isNaN(input) ? null : input;
          }

          // LOCALES

          var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_',
          );
          function localeWeekdays(m, format) {
            if (!m) {
              return this._weekdays;
            }
            return isArray(this._weekdays)
              ? this._weekdays[m.day()]
              : this._weekdays[
                  this._weekdays.isFormat.test(format) ? 'format' : 'standalone'
                ][m.day()];
          }

          var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split(
            '_',
          );
          function localeWeekdaysShort(m) {
            return m ? this._weekdaysShort[m.day()] : this._weekdaysShort;
          }

          var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
          function localeWeekdaysMin(m) {
            return m ? this._weekdaysMin[m.day()] : this._weekdaysMin;
          }

          function day_of_week__handleStrictParse(weekdayName, format, strict) {
            var i,
              ii,
              mom,
              llc = weekdayName.toLocaleLowerCase();
            if (!this._weekdaysParse) {
              this._weekdaysParse = [];
              this._shortWeekdaysParse = [];
              this._minWeekdaysParse = [];

              for (i = 0; i < 7; ++i) {
                mom = create_utc__createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(
                  mom,
                  '',
                ).toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(
                  mom,
                  '',
                ).toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(
                  mom,
                  '',
                ).toLocaleLowerCase();
              }
            }

            if (strict) {
              if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
              } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
              } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
              }
            } else {
              if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
              } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
              } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                  return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
              }
            }
          }

          function localeWeekdaysParse(weekdayName, format, strict) {
            var i, mom, regex;

            if (this._weekdaysParseExact) {
              return day_of_week__handleStrictParse.call(
                this,
                weekdayName,
                format,
                strict,
              );
            }

            if (!this._weekdaysParse) {
              this._weekdaysParse = [];
              this._minWeekdaysParse = [];
              this._shortWeekdaysParse = [];
              this._fullWeekdaysParse = [];
            }

            for (i = 0; i < 7; i++) {
              // make the regex if we don't have it already

              mom = create_utc__createUTC([2000, 1]).day(i);
              if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp(
                  '^' + this.weekdays(mom, '').replace('.', '.?') + '$',
                  'i',
                );
                this._shortWeekdaysParse[i] = new RegExp(
                  '^' + this.weekdaysShort(mom, '').replace('.', '.?') + '$',
                  'i',
                );
                this._minWeekdaysParse[i] = new RegExp(
                  '^' + this.weekdaysMin(mom, '').replace('.', '.?') + '$',
                  'i',
                );
              }
              if (!this._weekdaysParse[i]) {
                regex =
                  '^' +
                  this.weekdays(mom, '') +
                  '|^' +
                  this.weekdaysShort(mom, '') +
                  '|^' +
                  this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(
                  regex.replace('.', ''),
                  'i',
                );
              }
              // test the regex
              if (
                strict &&
                format === 'dddd' &&
                this._fullWeekdaysParse[i].test(weekdayName)
              ) {
                return i;
              } else if (
                strict &&
                format === 'ddd' &&
                this._shortWeekdaysParse[i].test(weekdayName)
              ) {
                return i;
              } else if (
                strict &&
                format === 'dd' &&
                this._minWeekdaysParse[i].test(weekdayName)
              ) {
                return i;
              } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
              }
            }
          }

          // MOMENTS

          function getSetDayOfWeek(input) {
            if (!this.isValid()) {
              return input != null ? this : NaN;
            }
            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
            if (input != null) {
              input = parseWeekday(input, this.localeData());
              return this.add(input - day, 'd');
            } else {
              return day;
            }
          }

          function getSetLocaleDayOfWeek(input) {
            if (!this.isValid()) {
              return input != null ? this : NaN;
            }
            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
            return input == null ? weekday : this.add(input - weekday, 'd');
          }

          function getSetISODayOfWeek(input) {
            if (!this.isValid()) {
              return input != null ? this : NaN;
            }

            // behaves the same as moment#day except
            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
            // as a setter, sunday should belong to the previous week.

            if (input != null) {
              var weekday = parseIsoWeekday(input, this.localeData());
              return this.day(this.day() % 7 ? weekday : weekday - 7);
            } else {
              return this.day() || 7;
            }
          }

          var defaultWeekdaysRegex = matchWord;
          function weekdaysRegex(isStrict) {
            if (this._weekdaysParseExact) {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
              }
              if (isStrict) {
                return this._weekdaysStrictRegex;
              } else {
                return this._weekdaysRegex;
              }
            } else {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
              }
              return this._weekdaysStrictRegex && isStrict
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex;
            }
          }

          var defaultWeekdaysShortRegex = matchWord;
          function weekdaysShortRegex(isStrict) {
            if (this._weekdaysParseExact) {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
              }
              if (isStrict) {
                return this._weekdaysShortStrictRegex;
              } else {
                return this._weekdaysShortRegex;
              }
            } else {
              if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
              }
              return this._weekdaysShortStrictRegex && isStrict
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex;
            }
          }

          var defaultWeekdaysMinRegex = matchWord;
          function weekdaysMinRegex(isStrict) {
            if (this._weekdaysParseExact) {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
              }
              if (isStrict) {
                return this._weekdaysMinStrictRegex;
              } else {
                return this._weekdaysMinRegex;
              }
            } else {
              if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
              }
              return this._weekdaysMinStrictRegex && isStrict
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex;
            }
          }

          function computeWeekdaysParse() {
            function cmpLenRev(a, b) {
              return b.length - a.length;
            }

            var minPieces = [],
              shortPieces = [],
              longPieces = [],
              mixedPieces = [],
              i,
              mom,
              minp,
              shortp,
              longp;
            for (i = 0; i < 7; i++) {
              // make the regex if we don't have it already
              mom = create_utc__createUTC([2000, 1]).day(i);
              minp = this.weekdaysMin(mom, '');
              shortp = this.weekdaysShort(mom, '');
              longp = this.weekdays(mom, '');
              minPieces.push(minp);
              shortPieces.push(shortp);
              longPieces.push(longp);
              mixedPieces.push(minp);
              mixedPieces.push(shortp);
              mixedPieces.push(longp);
            }
            // Sorting makes sure if one weekday (or abbr) is a prefix of another it
            // will match the longer piece.
            minPieces.sort(cmpLenRev);
            shortPieces.sort(cmpLenRev);
            longPieces.sort(cmpLenRev);
            mixedPieces.sort(cmpLenRev);
            for (i = 0; i < 7; i++) {
              shortPieces[i] = regexEscape(shortPieces[i]);
              longPieces[i] = regexEscape(longPieces[i]);
              mixedPieces[i] = regexEscape(mixedPieces[i]);
            }

            this._weekdaysRegex = new RegExp(
              '^(' + mixedPieces.join('|') + ')',
              'i',
            );
            this._weekdaysShortRegex = this._weekdaysRegex;
            this._weekdaysMinRegex = this._weekdaysRegex;

            this._weekdaysStrictRegex = new RegExp(
              '^(' + longPieces.join('|') + ')',
              'i',
            );
            this._weekdaysShortStrictRegex = new RegExp(
              '^(' + shortPieces.join('|') + ')',
              'i',
            );
            this._weekdaysMinStrictRegex = new RegExp(
              '^(' + minPieces.join('|') + ')',
              'i',
            );
          }

          // FORMATTING

          function hFormat() {
            return this.hours() % 12 || 12;
          }

          function kFormat() {
            return this.hours() || 24;
          }

          addFormatToken('H', ['HH', 2], 0, 'hour');
          addFormatToken('h', ['hh', 2], 0, hFormat);
          addFormatToken('k', ['kk', 2], 0, kFormat);

          addFormatToken('hmm', 0, 0, function () {
            return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
          });

          addFormatToken('hmmss', 0, 0, function () {
            return (
              '' +
              hFormat.apply(this) +
              zeroFill(this.minutes(), 2) +
              zeroFill(this.seconds(), 2)
            );
          });

          addFormatToken('Hmm', 0, 0, function () {
            return '' + this.hours() + zeroFill(this.minutes(), 2);
          });

          addFormatToken('Hmmss', 0, 0, function () {
            return (
              '' +
              this.hours() +
              zeroFill(this.minutes(), 2) +
              zeroFill(this.seconds(), 2)
            );
          });

          function meridiem(token, lowercase) {
            addFormatToken(token, 0, 0, function () {
              return this.localeData().meridiem(
                this.hours(),
                this.minutes(),
                lowercase,
              );
            });
          }

          meridiem('a', true);
          meridiem('A', false);

          // ALIASES

          addUnitAlias('hour', 'h');

          // PRIORITY
          addUnitPriority('hour', 13);

          // PARSING

          function matchMeridiem(isStrict, locale) {
            return locale._meridiemParse;
          }

          addRegexToken('a', matchMeridiem);
          addRegexToken('A', matchMeridiem);
          addRegexToken('H', match1to2);
          addRegexToken('h', match1to2);
          addRegexToken('HH', match1to2, match2);
          addRegexToken('hh', match1to2, match2);

          addRegexToken('hmm', match3to4);
          addRegexToken('hmmss', match5to6);
          addRegexToken('Hmm', match3to4);
          addRegexToken('Hmmss', match5to6);

          addParseToken(['H', 'HH'], HOUR);
          addParseToken(['a', 'A'], function (input, array, config) {
            config._isPm = config._locale.isPM(input);
            config._meridiem = input;
          });
          addParseToken(['h', 'hh'], function (input, array, config) {
            array[HOUR] = toInt(input);
            getParsingFlags(config).bigHour = true;
          });
          addParseToken('hmm', function (input, array, config) {
            var pos = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos));
            array[MINUTE] = toInt(input.substr(pos));
            getParsingFlags(config).bigHour = true;
          });
          addParseToken('hmmss', function (input, array, config) {
            var pos1 = input.length - 4;
            var pos2 = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos1));
            array[MINUTE] = toInt(input.substr(pos1, 2));
            array[SECOND] = toInt(input.substr(pos2));
            getParsingFlags(config).bigHour = true;
          });
          addParseToken('Hmm', function (input, array, config) {
            var pos = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos));
            array[MINUTE] = toInt(input.substr(pos));
          });
          addParseToken('Hmmss', function (input, array, config) {
            var pos1 = input.length - 4;
            var pos2 = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos1));
            array[MINUTE] = toInt(input.substr(pos1, 2));
            array[SECOND] = toInt(input.substr(pos2));
          });

          // LOCALES

          function localeIsPM(input) {
            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
            // Using charAt should be more compatible.
            return (input + '').toLowerCase().charAt(0) === 'p';
          }

          var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
          function localeMeridiem(hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? 'pm' : 'PM';
            } else {
              return isLower ? 'am' : 'AM';
            }
          }

          // MOMENTS

          // Setting the hour should keep the time, because the user explicitly
          // specified which hour he wants. So trying to maintain the same hour (in
          // a new timezone) makes sense. Adding/subtracting hours does not follow
          // this rule.
          var getSetHour = makeGetSet('Hours', true);

          var baseConfig = {
            calendar: defaultCalendar,
            longDateFormat: defaultLongDateFormat,
            invalidDate: defaultInvalidDate,
            ordinal: defaultOrdinal,
            ordinalParse: defaultOrdinalParse,
            relativeTime: defaultRelativeTime,

            months: defaultLocaleMonths,
            monthsShort: defaultLocaleMonthsShort,

            week: defaultLocaleWeek,

            weekdays: defaultLocaleWeekdays,
            weekdaysMin: defaultLocaleWeekdaysMin,
            weekdaysShort: defaultLocaleWeekdaysShort,

            meridiemParse: defaultLocaleMeridiemParse,
          };

          // internal storage for locale config files
          var locales = {};
          var globalLocale;

          function normalizeLocale(key) {
            return key ? key.toLowerCase().replace('_', '-') : key;
          }

          // pick the locale from the array
          // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
          // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
          function chooseLocale(names) {
            var i = 0,
              j,
              next,
              locale,
              split;

            while (i < names.length) {
              split = normalizeLocale(names[i]).split('-');
              j = split.length;
              next = normalizeLocale(names[i + 1]);
              next = next ? next.split('-') : null;
              while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                  return locale;
                }
                if (
                  next &&
                  next.length >= j &&
                  compareArrays(split, next, true) >= j - 1
                ) {
                  //the next array item is better than a shallower substring of this one
                  break;
                }
                j--;
              }
              i++;
            }
            return null;
          }

          function loadLocale(name) {
            var oldLocale = null;
            // TODO: Find a better way to register and load all the locales in Node
            if (
              !locales[name] &&
              typeof module !== 'undefined' &&
              module &&
              module.exports
            ) {
              try {
                oldLocale = globalLocale._abbr;
                __webpack_require__(850)('./' + name);
                // because defineLocale currently also sets the global locale, we
                // want to undo that for lazy loaded locales
                locale_locales__getSetGlobalLocale(oldLocale);
              } catch (e) {}
            }
            return locales[name];
          }

          // This function will load locale and then set the global locale.  If
          // no arguments are passed in, it will simply return the current global
          // locale key.
          function locale_locales__getSetGlobalLocale(key, values) {
            var data;
            if (key) {
              if (isUndefined(values)) {
                data = locale_locales__getLocale(key);
              } else {
                data = defineLocale(key, values);
              }

              if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
              }
            }

            return globalLocale._abbr;
          }

          function defineLocale(name, config) {
            if (config !== null) {
              var parentConfig = baseConfig;
              config.abbr = name;
              if (locales[name] != null) {
                deprecateSimple(
                  'defineLocaleOverride',
                  'use moment.updateLocale(localeName, config) to change ' +
                    'an existing locale. moment.defineLocale(localeName, ' +
                    'config) should only be used for creating a new locale ' +
                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.',
                );
                parentConfig = locales[name]._config;
              } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                  parentConfig = locales[config.parentLocale]._config;
                } else {
                  // treat as if there is no base config
                  deprecateSimple(
                    'parentLocaleUndefined',
                    'specified parentLocale is not defined yet. See http://momentjs.com/guides/#/warnings/parent-locale/',
                  );
                }
              }
              locales[name] = new Locale(mergeConfigs(parentConfig, config));

              // backwards compat for now: also set the locale
              locale_locales__getSetGlobalLocale(name);

              return locales[name];
            } else {
              // useful for testing
              delete locales[name];
              return null;
            }
          }

          function updateLocale(name, config) {
            if (config != null) {
              var locale,
                parentConfig = baseConfig;
              // MERGE
              if (locales[name] != null) {
                parentConfig = locales[name]._config;
              }
              config = mergeConfigs(parentConfig, config);
              locale = new Locale(config);
              locale.parentLocale = locales[name];
              locales[name] = locale;

              // backwards compat for now: also set the locale
              locale_locales__getSetGlobalLocale(name);
            } else {
              // pass null for config to unupdate, useful for tests
              if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                  locales[name] = locales[name].parentLocale;
                } else if (locales[name] != null) {
                  delete locales[name];
                }
              }
            }
            return locales[name];
          }

          // returns locale data
          function locale_locales__getLocale(key) {
            var locale;

            if (key && key._locale && key._locale._abbr) {
              key = key._locale._abbr;
            }

            if (!key) {
              return globalLocale;
            }

            if (!isArray(key)) {
              //short-circuit everything else
              locale = loadLocale(key);
              if (locale) {
                return locale;
              }
              key = [key];
            }

            return chooseLocale(key);
          }

          function locale_locales__listLocales() {
            return keys(locales);
          }

          function checkOverflow(m) {
            var overflow;
            var a = m._a;

            if (a && getParsingFlags(m).overflow === -2) {
              overflow =
                a[MONTH] < 0 || a[MONTH] > 11
                  ? MONTH
                  : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                  ? DATE
                  : a[HOUR] < 0 ||
                    a[HOUR] > 24 ||
                    (a[HOUR] === 24 &&
                      (a[MINUTE] !== 0 ||
                        a[SECOND] !== 0 ||
                        a[MILLISECOND] !== 0))
                  ? HOUR
                  : a[MINUTE] < 0 || a[MINUTE] > 59
                  ? MINUTE
                  : a[SECOND] < 0 || a[SECOND] > 59
                  ? SECOND
                  : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                  ? MILLISECOND
                  : -1;

              if (
                getParsingFlags(m)._overflowDayOfYear &&
                (overflow < YEAR || overflow > DATE)
              ) {
                overflow = DATE;
              }
              if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
              }
              if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
              }

              getParsingFlags(m).overflow = overflow;
            }

            return m;
          }

          // iso 8601 regex
          // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
          var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/;
          var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/;

          var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

          var isoDates = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
            ['YYYY-DDD', /\d{4}-\d{3}/],
            ['YYYY-MM', /\d{4}-\d\d/, false],
            ['YYYYYYMMDD', /[+-]\d{10}/],
            ['YYYYMMDD', /\d{8}/],
            // YYYYMM is NOT allowed by the standard
            ['GGGG[W]WWE', /\d{4}W\d{3}/],
            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
            ['YYYYDDD', /\d{7}/],
          ];

          // iso time formats and regexes
          var isoTimes = [
            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
            ['HH:mm', /\d\d:\d\d/],
            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
            ['HHmmss', /\d\d\d\d\d\d/],
            ['HHmm', /\d\d\d\d/],
            ['HH', /\d\d/],
          ];

          var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

          // date from iso format
          function configFromISO(config) {
            var i,
              l,
              string = config._i,
              match =
                extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
              allowTime,
              dateFormat,
              timeFormat,
              tzFormat;

            if (match) {
              getParsingFlags(config).iso = true;

              for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                  dateFormat = isoDates[i][0];
                  allowTime = isoDates[i][2] !== false;
                  break;
                }
              }
              if (dateFormat == null) {
                config._isValid = false;
                return;
              }
              if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                  if (isoTimes[i][1].exec(match[3])) {
                    // match[2] should be 'T' or space
                    timeFormat = (match[2] || ' ') + isoTimes[i][0];
                    break;
                  }
                }
                if (timeFormat == null) {
                  config._isValid = false;
                  return;
                }
              }
              if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
              }
              if (match[4]) {
                if (tzRegex.exec(match[4])) {
                  tzFormat = 'Z';
                } else {
                  config._isValid = false;
                  return;
                }
              }
              config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
              configFromStringAndFormat(config);
            } else {
              config._isValid = false;
            }
          }

          // date from iso format or fallback
          function configFromString(config) {
            var matched = aspNetJsonRegex.exec(config._i);

            if (matched !== null) {
              config._d = new Date(+matched[1]);
              return;
            }

            configFromISO(config);
            if (config._isValid === false) {
              delete config._isValid;
              utils_hooks__hooks.createFromInputFallback(config);
            }
          }

          utils_hooks__hooks.createFromInputFallback = deprecate(
            'value provided is not in a recognized ISO format. moment construction falls back to js Date(), ' +
              'which is not reliable across all browsers and versions. Non ISO date formats are ' +
              'discouraged and will be removed in an upcoming major release. Please refer to ' +
              'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
            function (config) {
              config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
            },
          );

          // Pick the first defined of two or three arguments.
          function defaults(a, b, c) {
            if (a != null) {
              return a;
            }
            if (b != null) {
              return b;
            }
            return c;
          }

          function currentDateArray(config) {
            // hooks is actually the exported moment object
            var nowValue = new Date(utils_hooks__hooks.now());
            if (config._useUTC) {
              return [
                nowValue.getUTCFullYear(),
                nowValue.getUTCMonth(),
                nowValue.getUTCDate(),
              ];
            }
            return [
              nowValue.getFullYear(),
              nowValue.getMonth(),
              nowValue.getDate(),
            ];
          }

          // convert an array to a date.
          // the array should mirror the parameters below
          // note: all values past the year are optional and will default to the lowest possible value.
          // [year, month, day , hour, minute, second, millisecond]
          function configFromArray(config) {
            var i,
              date,
              input = [],
              currentDate,
              yearToUse;

            if (config._d) {
              return;
            }

            currentDate = currentDateArray(config);

            //compute day of the year from weeks and weekdays
            if (
              config._w &&
              config._a[DATE] == null &&
              config._a[MONTH] == null
            ) {
              dayOfYearFromWeekInfo(config);
            }

            //if the day of the year is set, figure out what it is
            if (config._dayOfYear) {
              yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

              if (config._dayOfYear > daysInYear(yearToUse)) {
                getParsingFlags(config)._overflowDayOfYear = true;
              }

              date = createUTCDate(yearToUse, 0, config._dayOfYear);
              config._a[MONTH] = date.getUTCMonth();
              config._a[DATE] = date.getUTCDate();
            }

            // Default to current date.
            // * if no year, month, day of month are given, default to today
            // * if day of month is given, default month and year
            // * if month is given, default only year
            // * if year is given, don't default anything
            for (i = 0; i < 3 && config._a[i] == null; ++i) {
              config._a[i] = input[i] = currentDate[i];
            }

            // Zero out whatever was not defaulted, including time
            for (; i < 7; i++) {
              config._a[i] = input[i] =
                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
            }

            // Check for 24:00:00.000
            if (
              config._a[HOUR] === 24 &&
              config._a[MINUTE] === 0 &&
              config._a[SECOND] === 0 &&
              config._a[MILLISECOND] === 0
            ) {
              config._nextDay = true;
              config._a[HOUR] = 0;
            }

            config._d = (config._useUTC ? createUTCDate : createDate).apply(
              null,
              input,
            );
            // Apply timezone offset from input. The actual utcOffset can be changed
            // with parseZone.
            if (config._tzm != null) {
              config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
            }

            if (config._nextDay) {
              config._a[HOUR] = 24;
            }
          }

          function dayOfYearFromWeekInfo(config) {
            var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

            w = config._w;
            if (w.GG != null || w.W != null || w.E != null) {
              dow = 1;
              doy = 4;

              // TODO: We need to take the current isoWeekYear, but that depends on
              // how we interpret now (local, utc, fixed offset). So create
              // a now version of current config (take local/utc/offset flags, and
              // create now).
              weekYear = defaults(
                w.GG,
                config._a[YEAR],
                weekOfYear(local__createLocal(), 1, 4).year,
              );
              week = defaults(w.W, 1);
              weekday = defaults(w.E, 1);
              if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
              }
            } else {
              dow = config._locale._week.dow;
              doy = config._locale._week.doy;

              weekYear = defaults(
                w.gg,
                config._a[YEAR],
                weekOfYear(local__createLocal(), dow, doy).year,
              );
              week = defaults(w.w, 1);

              if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                  weekdayOverflow = true;
                }
              } else if (w.e != null) {
                // local weekday -- counting starts from begining of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                  weekdayOverflow = true;
                }
              } else {
                // default to begining of week
                weekday = dow;
              }
            }
            if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
              getParsingFlags(config)._overflowWeeks = true;
            } else if (weekdayOverflow != null) {
              getParsingFlags(config)._overflowWeekday = true;
            } else {
              temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
              config._a[YEAR] = temp.year;
              config._dayOfYear = temp.dayOfYear;
            }
          }

          // constant that refers to the ISO standard
          utils_hooks__hooks.ISO_8601 = function () {};

          // date from string and format string
          function configFromStringAndFormat(config) {
            // TODO: Move this to another part of the creation flow to prevent circular deps
            if (config._f === utils_hooks__hooks.ISO_8601) {
              configFromISO(config);
              return;
            }

            config._a = [];
            getParsingFlags(config).empty = true;

            // This array is used to make a Date, either with `new Date` or `Date.UTC`
            var string = '' + config._i,
              i,
              parsedInput,
              tokens,
              token,
              skipped,
              stringLength = string.length,
              totalParsedInputLength = 0;

            tokens =
              expandFormat(config._f, config._locale).match(formattingTokens) ||
              [];

            for (i = 0; i < tokens.length; i++) {
              token = tokens[i];
              parsedInput = (string.match(
                getParseRegexForToken(token, config),
              ) || [])[0];
              // console.log('token', token, 'parsedInput', parsedInput,
              //         'regex', getParseRegexForToken(token, config));
              if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                  getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(
                  string.indexOf(parsedInput) + parsedInput.length,
                );
                totalParsedInputLength += parsedInput.length;
              }
              // don't parse if it's not a known token
              if (formatTokenFunctions[token]) {
                if (parsedInput) {
                  getParsingFlags(config).empty = false;
                } else {
                  getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
              } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
              }
            }

            // add remaining unparsed input length to the string
            getParsingFlags(config).charsLeftOver =
              stringLength - totalParsedInputLength;
            if (string.length > 0) {
              getParsingFlags(config).unusedInput.push(string);
            }

            // clear _12h flag if hour is <= 12
            if (
              config._a[HOUR] <= 12 &&
              getParsingFlags(config).bigHour === true &&
              config._a[HOUR] > 0
            ) {
              getParsingFlags(config).bigHour = undefined;
            }

            getParsingFlags(config).parsedDateParts = config._a.slice(0);
            getParsingFlags(config).meridiem = config._meridiem;
            // handle meridiem
            config._a[HOUR] = meridiemFixWrap(
              config._locale,
              config._a[HOUR],
              config._meridiem,
            );

            configFromArray(config);
            checkOverflow(config);
          }

          function meridiemFixWrap(locale, hour, meridiem) {
            var isPm;

            if (meridiem == null) {
              // nothing to do
              return hour;
            }
            if (locale.meridiemHour != null) {
              return locale.meridiemHour(hour, meridiem);
            } else if (locale.isPM != null) {
              // Fallback
              isPm = locale.isPM(meridiem);
              if (isPm && hour < 12) {
                hour += 12;
              }
              if (!isPm && hour === 12) {
                hour = 0;
              }
              return hour;
            } else {
              // this is not supposed to happen
              return hour;
            }
          }

          // date from string and array of format strings
          function configFromStringAndArray(config) {
            var tempConfig, bestMoment, scoreToBeat, i, currentScore;

            if (config._f.length === 0) {
              getParsingFlags(config).invalidFormat = true;
              config._d = new Date(NaN);
              return;
            }

            for (i = 0; i < config._f.length; i++) {
              currentScore = 0;
              tempConfig = copyConfig({}, config);
              if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
              }
              tempConfig._f = config._f[i];
              configFromStringAndFormat(tempConfig);

              if (!valid__isValid(tempConfig)) {
                continue;
              }

              // if there is any input that was not parsed add a penalty for that format
              currentScore += getParsingFlags(tempConfig).charsLeftOver;

              //or tokens
              currentScore +=
                getParsingFlags(tempConfig).unusedTokens.length * 10;

              getParsingFlags(tempConfig).score = currentScore;

              if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
              }
            }

            extend(config, bestMoment || tempConfig);
          }

          function configFromObject(config) {
            if (config._d) {
              return;
            }

            var i = normalizeObjectUnits(config._i);
            config._a = map(
              [
                i.year,
                i.month,
                i.day || i.date,
                i.hour,
                i.minute,
                i.second,
                i.millisecond,
              ],
              function (obj) {
                return obj && parseInt(obj, 10);
              },
            );

            configFromArray(config);
          }

          function createFromConfig(config) {
            var res = new Moment(checkOverflow(prepareConfig(config)));
            if (res._nextDay) {
              // Adding is smart enough around DST
              res.add(1, 'd');
              res._nextDay = undefined;
            }

            return res;
          }

          function prepareConfig(config) {
            var input = config._i,
              format = config._f;

            config._locale =
              config._locale || locale_locales__getLocale(config._l);

            if (input === null || (format === undefined && input === '')) {
              return valid__createInvalid({ nullInput: true });
            }

            if (typeof input === 'string') {
              config._i = input = config._locale.preparse(input);
            }

            if (isMoment(input)) {
              return new Moment(checkOverflow(input));
            } else if (isArray(format)) {
              configFromStringAndArray(config);
            } else if (isDate(input)) {
              config._d = input;
            } else if (format) {
              configFromStringAndFormat(config);
            } else {
              configFromInput(config);
            }

            if (!valid__isValid(config)) {
              config._d = null;
            }

            return config;
          }

          function configFromInput(config) {
            var input = config._i;
            if (input === undefined) {
              config._d = new Date(utils_hooks__hooks.now());
            } else if (isDate(input)) {
              config._d = new Date(input.valueOf());
            } else if (typeof input === 'string') {
              configFromString(config);
            } else if (isArray(input)) {
              config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
              });
              configFromArray(config);
            } else if (typeof input === 'object') {
              configFromObject(config);
            } else if (typeof input === 'number') {
              // from milliseconds
              config._d = new Date(input);
            } else {
              utils_hooks__hooks.createFromInputFallback(config);
            }
          }

          function createLocalOrUTC(input, format, locale, strict, isUTC) {
            var c = {};

            if (typeof locale === 'boolean') {
              strict = locale;
              locale = undefined;
            }

            if (
              (isObject(input) && isObjectEmpty(input)) ||
              (isArray(input) && input.length === 0)
            ) {
              input = undefined;
            }
            // object construction must be done this way.
            // https://github.com/moment/moment/issues/1423
            c._isAMomentObject = true;
            c._useUTC = c._isUTC = isUTC;
            c._l = locale;
            c._i = input;
            c._f = format;
            c._strict = strict;

            return createFromConfig(c);
          }

          function local__createLocal(input, format, locale, strict) {
            return createLocalOrUTC(input, format, locale, strict, false);
          }

          var prototypeMin = deprecate(
            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
              var other = local__createLocal.apply(null, arguments);
              if (this.isValid() && other.isValid()) {
                return other < this ? this : other;
              } else {
                return valid__createInvalid();
              }
            },
          );

          var prototypeMax = deprecate(
            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
              var other = local__createLocal.apply(null, arguments);
              if (this.isValid() && other.isValid()) {
                return other > this ? this : other;
              } else {
                return valid__createInvalid();
              }
            },
          );

          // Pick a moment m from moments so that m[fn](other) is true for all
          // other. This relies on the function fn to be transitive.
          //
          // moments should either be an array of moment objects or an array, whose
          // first element is an array of moment objects.
          function pickBy(fn, moments) {
            var res, i;
            if (moments.length === 1 && isArray(moments[0])) {
              moments = moments[0];
            }
            if (!moments.length) {
              return local__createLocal();
            }
            res = moments[0];
            for (i = 1; i < moments.length; ++i) {
              if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
              }
            }
            return res;
          }

          // TODO: Use [].sort instead?
          function min() {
            var args = [].slice.call(arguments, 0);

            return pickBy('isBefore', args);
          }

          function max() {
            var args = [].slice.call(arguments, 0);

            return pickBy('isAfter', args);
          }

          var now = function () {
            return Date.now ? Date.now() : +new Date();
          };

          function Duration(duration) {
            var normalizedInput = normalizeObjectUnits(duration),
              years = normalizedInput.year || 0,
              quarters = normalizedInput.quarter || 0,
              months = normalizedInput.month || 0,
              weeks = normalizedInput.week || 0,
              days = normalizedInput.day || 0,
              hours = normalizedInput.hour || 0,
              minutes = normalizedInput.minute || 0,
              seconds = normalizedInput.second || 0,
              milliseconds = normalizedInput.millisecond || 0;

            // representation for dateAddRemove
            this._milliseconds =
              +milliseconds +
              seconds * 1e3 + // 1000
              minutes * 6e4 + // 1000 * 60
              hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
            // Because of dateAddRemove treats 24 hours as different from a
            // day when working around DST, we need to store them separately
            this._days = +days + weeks * 7;
            // It is impossible translate months into days without knowing
            // which months you are are talking about, so we have to store
            // it separately.
            this._months = +months + quarters * 3 + years * 12;

            this._data = {};

            this._locale = locale_locales__getLocale();

            this._bubble();
          }

          function isDuration(obj) {
            return obj instanceof Duration;
          }

          function absRound(number) {
            if (number < 0) {
              return Math.round(-1 * number) * -1;
            } else {
              return Math.round(number);
            }
          }

          // FORMATTING

          function offset(token, separator) {
            addFormatToken(token, 0, 0, function () {
              var offset = this.utcOffset();
              var sign = '+';
              if (offset < 0) {
                offset = -offset;
                sign = '-';
              }
              return (
                sign +
                zeroFill(~~(offset / 60), 2) +
                separator +
                zeroFill(~~offset % 60, 2)
              );
            });
          }

          offset('Z', ':');
          offset('ZZ', '');

          // PARSING

          addRegexToken('Z', matchShortOffset);
          addRegexToken('ZZ', matchShortOffset);
          addParseToken(['Z', 'ZZ'], function (input, array, config) {
            config._useUTC = true;
            config._tzm = offsetFromString(matchShortOffset, input);
          });

          // HELPERS

          // timezone chunker
          // '+10:00' > ['10',  '00']
          // '-1530'  > ['-15', '30']
          var chunkOffset = /([\+\-]|\d\d)/gi;

          function offsetFromString(matcher, string) {
            var matches = (string || '').match(matcher) || [];
            var chunk = matches[matches.length - 1] || [];
            var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
            var minutes = +(parts[1] * 60) + toInt(parts[2]);

            return parts[0] === '+' ? minutes : -minutes;
          }

          // Return a moment from input, that is local/utc/zone equivalent to model.
          function cloneWithOffset(input, model) {
            var res, diff;
            if (model._isUTC) {
              res = model.clone();
              diff =
                (isMoment(input) || isDate(input)
                  ? input.valueOf()
                  : local__createLocal(input).valueOf()) - res.valueOf();
              // Use low-level api, because this fn is low-level api.
              res._d.setTime(res._d.valueOf() + diff);
              utils_hooks__hooks.updateOffset(res, false);
              return res;
            } else {
              return local__createLocal(input).local();
            }
          }

          function getDateOffset(m) {
            // On Firefox.24 Date#getTimezoneOffset returns a floating point.
            // https://github.com/moment/moment/pull/1871
            return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
          }

          // HOOKS

          // This function will be called whenever a moment is mutated.
          // It is intended to keep the offset in sync with the timezone.
          utils_hooks__hooks.updateOffset = function () {};

          // MOMENTS

          // keepLocalTime = true means only change the timezone, without
          // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
          // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
          // +0200, so we adjust the time as needed, to be valid.
          //
          // Keeping the time actually adds/subtracts (one hour)
          // from the actual represented time. That is why we call updateOffset
          // a second time. In case it wants us to change the offset again
          // _changeInProgress == true case, then we have to adjust, because
          // there is no such time in the given timezone.
          function getSetOffset(input, keepLocalTime) {
            var offset = this._offset || 0,
              localAdjust;
            if (!this.isValid()) {
              return input != null ? this : NaN;
            }
            if (input != null) {
              if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
              } else if (Math.abs(input) < 16) {
                input = input * 60;
              }
              if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
              }
              this._offset = input;
              this._isUTC = true;
              if (localAdjust != null) {
                this.add(localAdjust, 'm');
              }
              if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                  add_subtract__addSubtract(
                    this,
                    create__createDuration(input - offset, 'm'),
                    1,
                    false,
                  );
                } else if (!this._changeInProgress) {
                  this._changeInProgress = true;
                  utils_hooks__hooks.updateOffset(this, true);
                  this._changeInProgress = null;
                }
              }
              return this;
            } else {
              return this._isUTC ? offset : getDateOffset(this);
            }
          }

          function getSetZone(input, keepLocalTime) {
            if (input != null) {
              if (typeof input !== 'string') {
                input = -input;
              }

              this.utcOffset(input, keepLocalTime);

              return this;
            } else {
              return -this.utcOffset();
            }
          }

          function setOffsetToUTC(keepLocalTime) {
            return this.utcOffset(0, keepLocalTime);
          }

          function setOffsetToLocal(keepLocalTime) {
            if (this._isUTC) {
              this.utcOffset(0, keepLocalTime);
              this._isUTC = false;

              if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
              }
            }
            return this;
          }

          function setOffsetToParsedOffset() {
            if (this._tzm) {
              this.utcOffset(this._tzm);
            } else if (typeof this._i === 'string') {
              var tZone = offsetFromString(matchOffset, this._i);

              if (tZone === 0) {
                this.utcOffset(0, true);
              } else {
                this.utcOffset(offsetFromString(matchOffset, this._i));
              }
            }
            return this;
          }

          function hasAlignedHourOffset(input) {
            if (!this.isValid()) {
              return false;
            }
            input = input ? local__createLocal(input).utcOffset() : 0;

            return (this.utcOffset() - input) % 60 === 0;
          }

          function isDaylightSavingTime() {
            return (
              this.utcOffset() > this.clone().month(0).utcOffset() ||
              this.utcOffset() > this.clone().month(5).utcOffset()
            );
          }

          function isDaylightSavingTimeShifted() {
            if (!isUndefined(this._isDSTShifted)) {
              return this._isDSTShifted;
            }

            var c = {};

            copyConfig(c, this);
            c = prepareConfig(c);

            if (c._a) {
              var other = c._isUTC
                ? create_utc__createUTC(c._a)
                : local__createLocal(c._a);
              this._isDSTShifted =
                this.isValid() && compareArrays(c._a, other.toArray()) > 0;
            } else {
              this._isDSTShifted = false;
            }

            return this._isDSTShifted;
          }

          function isLocal() {
            return this.isValid() ? !this._isUTC : false;
          }

          function isUtcOffset() {
            return this.isValid() ? this._isUTC : false;
          }

          function isUtc() {
            return this.isValid() ? this._isUTC && this._offset === 0 : false;
          }

          // ASP.NET json date format regex
          var aspNetRegex = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

          // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
          // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
          // and further modified to allow for strings containing both week and day
          var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;

          function create__createDuration(input, key) {
            var duration = input,
              // matching against regexp is expensive, do it on demand
              match = null,
              sign,
              ret,
              diffRes;

            if (isDuration(input)) {
              duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months,
              };
            } else if (typeof input === 'number') {
              duration = {};
              if (key) {
                duration[key] = input;
              } else {
                duration.milliseconds = input;
              }
            } else if (!!(match = aspNetRegex.exec(input))) {
              sign = match[1] === '-' ? -1 : 1;
              duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
              };
            } else if (!!(match = isoRegex.exec(input))) {
              sign = match[1] === '-' ? -1 : 1;
              duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign),
              };
            } else if (duration == null) {
              // checks for null or undefined
              duration = {};
            } else if (
              typeof duration === 'object' &&
              ('from' in duration || 'to' in duration)
            ) {
              diffRes = momentsDifference(
                local__createLocal(duration.from),
                local__createLocal(duration.to),
              );

              duration = {};
              duration.ms = diffRes.milliseconds;
              duration.M = diffRes.months;
            }

            ret = new Duration(duration);

            if (isDuration(input) && hasOwnProp(input, '_locale')) {
              ret._locale = input._locale;
            }

            return ret;
          }

          create__createDuration.fn = Duration.prototype;

          function parseIso(inp, sign) {
            // We'd normally use ~~inp for this, but unfortunately it also
            // converts floats to ints.
            // inp may be undefined, so careful calling replace on it.
            var res = inp && parseFloat(inp.replace(',', '.'));
            // apply sign while we're at it
            return (isNaN(res) ? 0 : res) * sign;
          }

          function positiveMomentsDifference(base, other) {
            var res = { milliseconds: 0, months: 0 };

            res.months =
              other.month() - base.month() + (other.year() - base.year()) * 12;
            if (base.clone().add(res.months, 'M').isAfter(other)) {
              --res.months;
            }

            res.milliseconds = +other - +base.clone().add(res.months, 'M');

            return res;
          }

          function momentsDifference(base, other) {
            var res;
            if (!(base.isValid() && other.isValid())) {
              return { milliseconds: 0, months: 0 };
            }

            other = cloneWithOffset(other, base);
            if (base.isBefore(other)) {
              res = positiveMomentsDifference(base, other);
            } else {
              res = positiveMomentsDifference(other, base);
              res.milliseconds = -res.milliseconds;
              res.months = -res.months;
            }

            return res;
          }

          // TODO: remove 'name' arg after deprecation is removed
          function createAdder(direction, name) {
            return function (val, period) {
              var dur, tmp;
              //invert the arguments, but complain about it
              if (period !== null && !isNaN(+period)) {
                deprecateSimple(
                  name,
                  'moment().' +
                    name +
                    '(period, number) is deprecated. Please use moment().' +
                    name +
                    '(number, period). ' +
                    'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.',
                );
                tmp = val;
                val = period;
                period = tmp;
              }

              val = typeof val === 'string' ? +val : val;
              dur = create__createDuration(val, period);
              add_subtract__addSubtract(this, dur, direction);
              return this;
            };
          }

          function add_subtract__addSubtract(
            mom,
            duration,
            isAdding,
            updateOffset,
          ) {
            var milliseconds = duration._milliseconds,
              days = absRound(duration._days),
              months = absRound(duration._months);

            if (!mom.isValid()) {
              // No op
              return;
            }

            updateOffset = updateOffset == null ? true : updateOffset;

            if (milliseconds) {
              mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
            }
            if (days) {
              get_set__set(
                mom,
                'Date',
                get_set__get(mom, 'Date') + days * isAdding,
              );
            }
            if (months) {
              setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);
            }
            if (updateOffset) {
              utils_hooks__hooks.updateOffset(mom, days || months);
            }
          }

          var add_subtract__add = createAdder(1, 'add');
          var add_subtract__subtract = createAdder(-1, 'subtract');

          function getCalendarFormat(myMoment, now) {
            var diff = myMoment.diff(now, 'days', true);
            return diff < -6
              ? 'sameElse'
              : diff < -1
              ? 'lastWeek'
              : diff < 0
              ? 'lastDay'
              : diff < 1
              ? 'sameDay'
              : diff < 2
              ? 'nextDay'
              : diff < 7
              ? 'nextWeek'
              : 'sameElse';
          }

          function moment_calendar__calendar(time, formats) {
            // We want to compare the start of today, vs this.
            // Getting start-of-today depends on whether we're local/utc/offset or not.
            var now = time || local__createLocal(),
              sod = cloneWithOffset(now, this).startOf('day'),
              format =
                utils_hooks__hooks.calendarFormat(this, sod) || 'sameElse';

            var output =
              formats &&
              (isFunction(formats[format])
                ? formats[format].call(this, now)
                : formats[format]);

            return this.format(
              output ||
                this.localeData().calendar(
                  format,
                  this,
                  local__createLocal(now),
                ),
            );
          }

          function clone() {
            return new Moment(this);
          }

          function isAfter(input, units) {
            var localInput = isMoment(input)
              ? input
              : local__createLocal(input);
            if (!(this.isValid() && localInput.isValid())) {
              return false;
            }
            units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
            if (units === 'millisecond') {
              return this.valueOf() > localInput.valueOf();
            } else {
              return (
                localInput.valueOf() < this.clone().startOf(units).valueOf()
              );
            }
          }

          function isBefore(input, units) {
            var localInput = isMoment(input)
              ? input
              : local__createLocal(input);
            if (!(this.isValid() && localInput.isValid())) {
              return false;
            }
            units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
            if (units === 'millisecond') {
              return this.valueOf() < localInput.valueOf();
            } else {
              return this.clone().endOf(units).valueOf() < localInput.valueOf();
            }
          }

          function isBetween(from, to, units, inclusivity) {
            inclusivity = inclusivity || '()';
            return (
              (inclusivity[0] === '('
                ? this.isAfter(from, units)
                : !this.isBefore(from, units)) &&
              (inclusivity[1] === ')'
                ? this.isBefore(to, units)
                : !this.isAfter(to, units))
            );
          }

          function isSame(input, units) {
            var localInput = isMoment(input)
                ? input
                : local__createLocal(input),
              inputMs;
            if (!(this.isValid() && localInput.isValid())) {
              return false;
            }
            units = normalizeUnits(units || 'millisecond');
            if (units === 'millisecond') {
              return this.valueOf() === localInput.valueOf();
            } else {
              inputMs = localInput.valueOf();
              return (
                this.clone().startOf(units).valueOf() <= inputMs &&
                inputMs <= this.clone().endOf(units).valueOf()
              );
            }
          }

          function isSameOrAfter(input, units) {
            return this.isSame(input, units) || this.isAfter(input, units);
          }

          function isSameOrBefore(input, units) {
            return this.isSame(input, units) || this.isBefore(input, units);
          }

          function diff(input, units, asFloat) {
            var that, zoneDelta, delta, output;

            if (!this.isValid()) {
              return NaN;
            }

            that = cloneWithOffset(input, this);

            if (!that.isValid()) {
              return NaN;
            }

            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

            units = normalizeUnits(units);

            if (units === 'year' || units === 'month' || units === 'quarter') {
              output = monthDiff(this, that);
              if (units === 'quarter') {
                output = output / 3;
              } else if (units === 'year') {
                output = output / 12;
              }
            } else {
              delta = this - that;
              output =
                units === 'second'
                  ? delta / 1e3 // 1000
                  : units === 'minute'
                  ? delta / 6e4 // 1000 * 60
                  : units === 'hour'
                  ? delta / 36e5 // 1000 * 60 * 60
                  : units === 'day'
                  ? (delta - zoneDelta) / 864e5 // 1000 * 60 * 60 * 24, negate dst
                  : units === 'week'
                  ? (delta - zoneDelta) / 6048e5 // 1000 * 60 * 60 * 24 * 7, negate dst
                  : delta;
            }
            return asFloat ? output : absFloor(output);
          }

          function monthDiff(a, b) {
            // difference in months
            var wholeMonthDiff =
                (b.year() - a.year()) * 12 + (b.month() - a.month()),
              // b is in (anchor - 1 month, anchor + 1 month)
              anchor = a.clone().add(wholeMonthDiff, 'months'),
              anchor2,
              adjust;

            if (b - anchor < 0) {
              anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
              // linear across the month
              adjust = (b - anchor) / (anchor - anchor2);
            } else {
              anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
              // linear across the month
              adjust = (b - anchor) / (anchor2 - anchor);
            }

            //check for negative zero, return zero if negative zero
            return -(wholeMonthDiff + adjust) || 0;
          }

          utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
          utils_hooks__hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

          function toString() {
            return this.clone()
              .locale('en')
              .format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
          }

          function moment_format__toISOString() {
            var m = this.clone().utc();
            if (0 < m.year() && m.year() <= 9999) {
              if (isFunction(Date.prototype.toISOString)) {
                // native implementation is ~50x faster, use it when we can
                return this.toDate().toISOString();
              } else {
                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
              }
            } else {
              return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
            }
          }

          function format(inputString) {
            if (!inputString) {
              inputString = this.isUtc()
                ? utils_hooks__hooks.defaultFormatUtc
                : utils_hooks__hooks.defaultFormat;
            }
            var output = formatMoment(this, inputString);
            return this.localeData().postformat(output);
          }

          function from(time, withoutSuffix) {
            if (
              this.isValid() &&
              ((isMoment(time) && time.isValid()) ||
                local__createLocal(time).isValid())
            ) {
              return create__createDuration({ to: this, from: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
            } else {
              return this.localeData().invalidDate();
            }
          }

          function fromNow(withoutSuffix) {
            return this.from(local__createLocal(), withoutSuffix);
          }

          function to(time, withoutSuffix) {
            if (
              this.isValid() &&
              ((isMoment(time) && time.isValid()) ||
                local__createLocal(time).isValid())
            ) {
              return create__createDuration({ from: this, to: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
            } else {
              return this.localeData().invalidDate();
            }
          }

          function toNow(withoutSuffix) {
            return this.to(local__createLocal(), withoutSuffix);
          }

          // If passed a locale key, it will set the locale for this
          // instance.  Otherwise, it will return the locale configuration
          // variables for this instance.
          function locale(key) {
            var newLocaleData;

            if (key === undefined) {
              return this._locale._abbr;
            } else {
              newLocaleData = locale_locales__getLocale(key);
              if (newLocaleData != null) {
                this._locale = newLocaleData;
              }
              return this;
            }
          }

          var lang = deprecate(
            'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
            function (key) {
              if (key === undefined) {
                return this.localeData();
              } else {
                return this.locale(key);
              }
            },
          );

          function localeData() {
            return this._locale;
          }

          function startOf(units) {
            units = normalizeUnits(units);
            // the following switch intentionally omits break keywords
            // to utilize falling through the cases.
            switch (units) {
              case 'year':
                this.month(0);
              /* falls through */
              case 'quarter':
              case 'month':
                this.date(1);
              /* falls through */
              case 'week':
              case 'isoWeek':
              case 'day':
              case 'date':
                this.hours(0);
              /* falls through */
              case 'hour':
                this.minutes(0);
              /* falls through */
              case 'minute':
                this.seconds(0);
              /* falls through */
              case 'second':
                this.milliseconds(0);
            }

            // weeks are a special case
            if (units === 'week') {
              this.weekday(0);
            }
            if (units === 'isoWeek') {
              this.isoWeekday(1);
            }

            // quarters are also special
            if (units === 'quarter') {
              this.month(Math.floor(this.month() / 3) * 3);
            }

            return this;
          }

          function endOf(units) {
            units = normalizeUnits(units);
            if (units === undefined || units === 'millisecond') {
              return this;
            }

            // 'date' is an alias for 'day', so it should be considered as such.
            if (units === 'date') {
              units = 'day';
            }

            return this.startOf(units)
              .add(1, units === 'isoWeek' ? 'week' : units)
              .subtract(1, 'ms');
          }

          function to_type__valueOf() {
            return this._d.valueOf() - (this._offset || 0) * 60000;
          }

          function unix() {
            return Math.floor(this.valueOf() / 1000);
          }

          function toDate() {
            return new Date(this.valueOf());
          }

          function toArray() {
            var m = this;
            return [
              m.year(),
              m.month(),
              m.date(),
              m.hour(),
              m.minute(),
              m.second(),
              m.millisecond(),
            ];
          }

          function toObject() {
            var m = this;
            return {
              years: m.year(),
              months: m.month(),
              date: m.date(),
              hours: m.hours(),
              minutes: m.minutes(),
              seconds: m.seconds(),
              milliseconds: m.milliseconds(),
            };
          }

          function toJSON() {
            // new Date(NaN).toJSON() === null
            return this.isValid() ? this.toISOString() : null;
          }

          function moment_valid__isValid() {
            return valid__isValid(this);
          }

          function parsingFlags() {
            return extend({}, getParsingFlags(this));
          }

          function invalidAt() {
            return getParsingFlags(this).overflow;
          }

          function creationData() {
            return {
              input: this._i,
              format: this._f,
              locale: this._locale,
              isUTC: this._isUTC,
              strict: this._strict,
            };
          }

          // FORMATTING

          addFormatToken(0, ['gg', 2], 0, function () {
            return this.weekYear() % 100;
          });

          addFormatToken(0, ['GG', 2], 0, function () {
            return this.isoWeekYear() % 100;
          });

          function addWeekYearFormatToken(token, getter) {
            addFormatToken(0, [token, token.length], 0, getter);
          }

          addWeekYearFormatToken('gggg', 'weekYear');
          addWeekYearFormatToken('ggggg', 'weekYear');
          addWeekYearFormatToken('GGGG', 'isoWeekYear');
          addWeekYearFormatToken('GGGGG', 'isoWeekYear');

          // ALIASES

          addUnitAlias('weekYear', 'gg');
          addUnitAlias('isoWeekYear', 'GG');

          // PRIORITY

          addUnitPriority('weekYear', 1);
          addUnitPriority('isoWeekYear', 1);

          // PARSING

          addRegexToken('G', matchSigned);
          addRegexToken('g', matchSigned);
          addRegexToken('GG', match1to2, match2);
          addRegexToken('gg', match1to2, match2);
          addRegexToken('GGGG', match1to4, match4);
          addRegexToken('gggg', match1to4, match4);
          addRegexToken('GGGGG', match1to6, match6);
          addRegexToken('ggggg', match1to6, match6);

          addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (
            input,
            week,
            config,
            token,
          ) {
            week[token.substr(0, 2)] = toInt(input);
          });

          addWeekParseToken(['gg', 'GG'], function (
            input,
            week,
            config,
            token,
          ) {
            week[token] = utils_hooks__hooks.parseTwoDigitYear(input);
          });

          // MOMENTS

          function getSetWeekYear(input) {
            return getSetWeekYearHelper.call(
              this,
              input,
              this.week(),
              this.weekday(),
              this.localeData()._week.dow,
              this.localeData()._week.doy,
            );
          }

          function getSetISOWeekYear(input) {
            return getSetWeekYearHelper.call(
              this,
              input,
              this.isoWeek(),
              this.isoWeekday(),
              1,
              4,
            );
          }

          function getISOWeeksInYear() {
            return weeksInYear(this.year(), 1, 4);
          }

          function getWeeksInYear() {
            var weekInfo = this.localeData()._week;
            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
          }

          function getSetWeekYearHelper(input, week, weekday, dow, doy) {
            var weeksTarget;
            if (input == null) {
              return weekOfYear(this, dow, doy).year;
            } else {
              weeksTarget = weeksInYear(input, dow, doy);
              if (week > weeksTarget) {
                week = weeksTarget;
              }
              return setWeekAll.call(this, input, week, weekday, dow, doy);
            }
          }

          function setWeekAll(weekYear, week, weekday, dow, doy) {
            var dayOfYearData = dayOfYearFromWeeks(
                weekYear,
                week,
                weekday,
                dow,
                doy,
              ),
              date = createUTCDate(
                dayOfYearData.year,
                0,
                dayOfYearData.dayOfYear,
              );

            this.year(date.getUTCFullYear());
            this.month(date.getUTCMonth());
            this.date(date.getUTCDate());
            return this;
          }

          // FORMATTING

          addFormatToken('Q', 0, 'Qo', 'quarter');

          // ALIASES

          addUnitAlias('quarter', 'Q');

          // PRIORITY

          addUnitPriority('quarter', 7);

          // PARSING

          addRegexToken('Q', match1);
          addParseToken('Q', function (input, array) {
            array[MONTH] = (toInt(input) - 1) * 3;
          });

          // MOMENTS

          function getSetQuarter(input) {
            return input == null
              ? Math.ceil((this.month() + 1) / 3)
              : this.month((input - 1) * 3 + (this.month() % 3));
          }

          // FORMATTING

          addFormatToken('D', ['DD', 2], 'Do', 'date');

          // ALIASES

          addUnitAlias('date', 'D');

          // PRIOROITY
          addUnitPriority('date', 9);

          // PARSING

          addRegexToken('D', match1to2);
          addRegexToken('DD', match1to2, match2);
          addRegexToken('Do', function (isStrict, locale) {
            return isStrict
              ? locale._ordinalParse
              : locale._ordinalParseLenient;
          });

          addParseToken(['D', 'DD'], DATE);
          addParseToken('Do', function (input, array) {
            array[DATE] = toInt(input.match(match1to2)[0], 10);
          });

          // MOMENTS

          var getSetDayOfMonth = makeGetSet('Date', true);

          // FORMATTING

          addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

          // ALIASES

          addUnitAlias('dayOfYear', 'DDD');

          // PRIORITY
          addUnitPriority('dayOfYear', 4);

          // PARSING

          addRegexToken('DDD', match1to3);
          addRegexToken('DDDD', match3);
          addParseToken(['DDD', 'DDDD'], function (input, array, config) {
            config._dayOfYear = toInt(input);
          });

          // HELPERS

          // MOMENTS

          function getSetDayOfYear(input) {
            var dayOfYear =
              Math.round(
                (this.clone().startOf('day') - this.clone().startOf('year')) /
                  864e5,
              ) + 1;
            return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
          }

          // FORMATTING

          addFormatToken('m', ['mm', 2], 0, 'minute');

          // ALIASES

          addUnitAlias('minute', 'm');

          // PRIORITY

          addUnitPriority('minute', 14);

          // PARSING

          addRegexToken('m', match1to2);
          addRegexToken('mm', match1to2, match2);
          addParseToken(['m', 'mm'], MINUTE);

          // MOMENTS

          var getSetMinute = makeGetSet('Minutes', false);

          // FORMATTING

          addFormatToken('s', ['ss', 2], 0, 'second');

          // ALIASES

          addUnitAlias('second', 's');

          // PRIORITY

          addUnitPriority('second', 15);

          // PARSING

          addRegexToken('s', match1to2);
          addRegexToken('ss', match1to2, match2);
          addParseToken(['s', 'ss'], SECOND);

          // MOMENTS

          var getSetSecond = makeGetSet('Seconds', false);

          // FORMATTING

          addFormatToken('S', 0, 0, function () {
            return ~~(this.millisecond() / 100);
          });

          addFormatToken(0, ['SS', 2], 0, function () {
            return ~~(this.millisecond() / 10);
          });

          addFormatToken(0, ['SSS', 3], 0, 'millisecond');
          addFormatToken(0, ['SSSS', 4], 0, function () {
            return this.millisecond() * 10;
          });
          addFormatToken(0, ['SSSSS', 5], 0, function () {
            return this.millisecond() * 100;
          });
          addFormatToken(0, ['SSSSSS', 6], 0, function () {
            return this.millisecond() * 1000;
          });
          addFormatToken(0, ['SSSSSSS', 7], 0, function () {
            return this.millisecond() * 10000;
          });
          addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
            return this.millisecond() * 100000;
          });
          addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
            return this.millisecond() * 1000000;
          });

          // ALIASES

          addUnitAlias('millisecond', 'ms');

          // PRIORITY

          addUnitPriority('millisecond', 16);

          // PARSING

          addRegexToken('S', match1to3, match1);
          addRegexToken('SS', match1to3, match2);
          addRegexToken('SSS', match1to3, match3);

          var token;
          for (token = 'SSSS'; token.length <= 9; token += 'S') {
            addRegexToken(token, matchUnsigned);
          }

          function parseMs(input, array) {
            array[MILLISECOND] = toInt(('0.' + input) * 1000);
          }

          for (token = 'S'; token.length <= 9; token += 'S') {
            addParseToken(token, parseMs);
          }
          // MOMENTS

          var getSetMillisecond = makeGetSet('Milliseconds', false);

          // FORMATTING

          addFormatToken('z', 0, 0, 'zoneAbbr');
          addFormatToken('zz', 0, 0, 'zoneName');

          // MOMENTS

          function getZoneAbbr() {
            return this._isUTC ? 'UTC' : '';
          }

          function getZoneName() {
            return this._isUTC ? 'Coordinated Universal Time' : '';
          }

          var momentPrototype__proto = Moment.prototype;

          momentPrototype__proto.add = add_subtract__add;
          momentPrototype__proto.calendar = moment_calendar__calendar;
          momentPrototype__proto.clone = clone;
          momentPrototype__proto.diff = diff;
          momentPrototype__proto.endOf = endOf;
          momentPrototype__proto.format = format;
          momentPrototype__proto.from = from;
          momentPrototype__proto.fromNow = fromNow;
          momentPrototype__proto.to = to;
          momentPrototype__proto.toNow = toNow;
          momentPrototype__proto.get = stringGet;
          momentPrototype__proto.invalidAt = invalidAt;
          momentPrototype__proto.isAfter = isAfter;
          momentPrototype__proto.isBefore = isBefore;
          momentPrototype__proto.isBetween = isBetween;
          momentPrototype__proto.isSame = isSame;
          momentPrototype__proto.isSameOrAfter = isSameOrAfter;
          momentPrototype__proto.isSameOrBefore = isSameOrBefore;
          momentPrototype__proto.isValid = moment_valid__isValid;
          momentPrototype__proto.lang = lang;
          momentPrototype__proto.locale = locale;
          momentPrototype__proto.localeData = localeData;
          momentPrototype__proto.max = prototypeMax;
          momentPrototype__proto.min = prototypeMin;
          momentPrototype__proto.parsingFlags = parsingFlags;
          momentPrototype__proto.set = stringSet;
          momentPrototype__proto.startOf = startOf;
          momentPrototype__proto.subtract = add_subtract__subtract;
          momentPrototype__proto.toArray = toArray;
          momentPrototype__proto.toObject = toObject;
          momentPrototype__proto.toDate = toDate;
          momentPrototype__proto.toISOString = moment_format__toISOString;
          momentPrototype__proto.toJSON = toJSON;
          momentPrototype__proto.toString = toString;
          momentPrototype__proto.unix = unix;
          momentPrototype__proto.valueOf = to_type__valueOf;
          momentPrototype__proto.creationData = creationData;

          // Year
          momentPrototype__proto.year = getSetYear;
          momentPrototype__proto.isLeapYear = getIsLeapYear;

          // Week Year
          momentPrototype__proto.weekYear = getSetWeekYear;
          momentPrototype__proto.isoWeekYear = getSetISOWeekYear;

          // Quarter
          momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;

          // Month
          momentPrototype__proto.month = getSetMonth;
          momentPrototype__proto.daysInMonth = getDaysInMonth;

          // Week
          momentPrototype__proto.week = momentPrototype__proto.weeks = getSetWeek;
          momentPrototype__proto.isoWeek = momentPrototype__proto.isoWeeks = getSetISOWeek;
          momentPrototype__proto.weeksInYear = getWeeksInYear;
          momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;

          // Day
          momentPrototype__proto.date = getSetDayOfMonth;
          momentPrototype__proto.day = momentPrototype__proto.days = getSetDayOfWeek;
          momentPrototype__proto.weekday = getSetLocaleDayOfWeek;
          momentPrototype__proto.isoWeekday = getSetISODayOfWeek;
          momentPrototype__proto.dayOfYear = getSetDayOfYear;

          // Hour
          momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;

          // Minute
          momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;

          // Second
          momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;

          // Millisecond
          momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;

          // Offset
          momentPrototype__proto.utcOffset = getSetOffset;
          momentPrototype__proto.utc = setOffsetToUTC;
          momentPrototype__proto.local = setOffsetToLocal;
          momentPrototype__proto.parseZone = setOffsetToParsedOffset;
          momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;
          momentPrototype__proto.isDST = isDaylightSavingTime;
          momentPrototype__proto.isLocal = isLocal;
          momentPrototype__proto.isUtcOffset = isUtcOffset;
          momentPrototype__proto.isUtc = isUtc;
          momentPrototype__proto.isUTC = isUtc;

          // Timezone
          momentPrototype__proto.zoneAbbr = getZoneAbbr;
          momentPrototype__proto.zoneName = getZoneName;

          // Deprecations
          momentPrototype__proto.dates = deprecate(
            'dates accessor is deprecated. Use date instead.',
            getSetDayOfMonth,
          );
          momentPrototype__proto.months = deprecate(
            'months accessor is deprecated. Use month instead',
            getSetMonth,
          );
          momentPrototype__proto.years = deprecate(
            'years accessor is deprecated. Use year instead',
            getSetYear,
          );
          momentPrototype__proto.zone = deprecate(
            'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
            getSetZone,
          );
          momentPrototype__proto.isDSTShifted = deprecate(
            'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
            isDaylightSavingTimeShifted,
          );

          var momentPrototype = momentPrototype__proto;

          function moment__createUnix(input) {
            return local__createLocal(input * 1000);
          }

          function moment__createInZone() {
            return local__createLocal.apply(null, arguments).parseZone();
          }

          function preParsePostFormat(string) {
            return string;
          }

          var prototype__proto = Locale.prototype;

          prototype__proto.calendar = locale_calendar__calendar;
          prototype__proto.longDateFormat = longDateFormat;
          prototype__proto.invalidDate = invalidDate;
          prototype__proto.ordinal = ordinal;
          prototype__proto.preparse = preParsePostFormat;
          prototype__proto.postformat = preParsePostFormat;
          prototype__proto.relativeTime = relative__relativeTime;
          prototype__proto.pastFuture = pastFuture;
          prototype__proto.set = locale_set__set;

          // Month
          prototype__proto.months = localeMonths;
          prototype__proto.monthsShort = localeMonthsShort;
          prototype__proto.monthsParse = localeMonthsParse;
          prototype__proto.monthsRegex = monthsRegex;
          prototype__proto.monthsShortRegex = monthsShortRegex;

          // Week
          prototype__proto.week = localeWeek;
          prototype__proto.firstDayOfYear = localeFirstDayOfYear;
          prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;

          // Day of Week
          prototype__proto.weekdays = localeWeekdays;
          prototype__proto.weekdaysMin = localeWeekdaysMin;
          prototype__proto.weekdaysShort = localeWeekdaysShort;
          prototype__proto.weekdaysParse = localeWeekdaysParse;

          prototype__proto.weekdaysRegex = weekdaysRegex;
          prototype__proto.weekdaysShortRegex = weekdaysShortRegex;
          prototype__proto.weekdaysMinRegex = weekdaysMinRegex;

          // Hours
          prototype__proto.isPM = localeIsPM;
          prototype__proto.meridiem = localeMeridiem;

          function lists__get(format, index, field, setter) {
            var locale = locale_locales__getLocale();
            var utc = create_utc__createUTC().set(setter, index);
            return locale[field](utc, format);
          }

          function listMonthsImpl(format, index, field) {
            if (typeof format === 'number') {
              index = format;
              format = undefined;
            }

            format = format || '';

            if (index != null) {
              return lists__get(format, index, field, 'month');
            }

            var i;
            var out = [];
            for (i = 0; i < 12; i++) {
              out[i] = lists__get(format, i, field, 'month');
            }
            return out;
          }

          // ()
          // (5)
          // (fmt, 5)
          // (fmt)
          // (true)
          // (true, 5)
          // (true, fmt, 5)
          // (true, fmt)
          function listWeekdaysImpl(localeSorted, format, index, field) {
            if (typeof localeSorted === 'boolean') {
              if (typeof format === 'number') {
                index = format;
                format = undefined;
              }

              format = format || '';
            } else {
              format = localeSorted;
              index = format;
              localeSorted = false;

              if (typeof format === 'number') {
                index = format;
                format = undefined;
              }

              format = format || '';
            }

            var locale = locale_locales__getLocale(),
              shift = localeSorted ? locale._week.dow : 0;

            if (index != null) {
              return lists__get(format, (index + shift) % 7, field, 'day');
            }

            var i;
            var out = [];
            for (i = 0; i < 7; i++) {
              out[i] = lists__get(format, (i + shift) % 7, field, 'day');
            }
            return out;
          }

          function lists__listMonths(format, index) {
            return listMonthsImpl(format, index, 'months');
          }

          function lists__listMonthsShort(format, index) {
            return listMonthsImpl(format, index, 'monthsShort');
          }

          function lists__listWeekdays(localeSorted, format, index) {
            return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
          }

          function lists__listWeekdaysShort(localeSorted, format, index) {
            return listWeekdaysImpl(
              localeSorted,
              format,
              index,
              'weekdaysShort',
            );
          }

          function lists__listWeekdaysMin(localeSorted, format, index) {
            return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
          }

          locale_locales__getSetGlobalLocale('en', {
            ordinalParse: /\d{1,2}(th|st|nd|rd)/,
            ordinal: function (number) {
              var b = number % 10,
                output =
                  toInt((number % 100) / 10) === 1
                    ? 'th'
                    : b === 1
                    ? 'st'
                    : b === 2
                    ? 'nd'
                    : b === 3
                    ? 'rd'
                    : 'th';
              return number + output;
            },
          });

          // Side effect imports
          utils_hooks__hooks.lang = deprecate(
            'moment.lang is deprecated. Use moment.locale instead.',
            locale_locales__getSetGlobalLocale,
          );
          utils_hooks__hooks.langData = deprecate(
            'moment.langData is deprecated. Use moment.localeData instead.',
            locale_locales__getLocale,
          );

          var mathAbs = Math.abs;

          function duration_abs__abs() {
            var data = this._data;

            this._milliseconds = mathAbs(this._milliseconds);
            this._days = mathAbs(this._days);
            this._months = mathAbs(this._months);

            data.milliseconds = mathAbs(data.milliseconds);
            data.seconds = mathAbs(data.seconds);
            data.minutes = mathAbs(data.minutes);
            data.hours = mathAbs(data.hours);
            data.months = mathAbs(data.months);
            data.years = mathAbs(data.years);

            return this;
          }

          function duration_add_subtract__addSubtract(
            duration,
            input,
            value,
            direction,
          ) {
            var other = create__createDuration(input, value);

            duration._milliseconds += direction * other._milliseconds;
            duration._days += direction * other._days;
            duration._months += direction * other._months;

            return duration._bubble();
          }

          // supports only 2.0-style add(1, 's') or add(duration)
          function duration_add_subtract__add(input, value) {
            return duration_add_subtract__addSubtract(this, input, value, 1);
          }

          // supports only 2.0-style subtract(1, 's') or subtract(duration)
          function duration_add_subtract__subtract(input, value) {
            return duration_add_subtract__addSubtract(this, input, value, -1);
          }

          function absCeil(number) {
            if (number < 0) {
              return Math.floor(number);
            } else {
              return Math.ceil(number);
            }
          }

          function bubble() {
            var milliseconds = this._milliseconds;
            var days = this._days;
            var months = this._months;
            var data = this._data;
            var seconds, minutes, hours, years, monthsFromDays;

            // if we have a mix of positive and negative values, bubble down first
            // check: https://github.com/moment/moment/issues/2166
            if (
              !(
                (milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0)
              )
            ) {
              milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
              days = 0;
              months = 0;
            }

            // The following code bubbles up values, see the tests for
            // examples of what that means.
            data.milliseconds = milliseconds % 1000;

            seconds = absFloor(milliseconds / 1000);
            data.seconds = seconds % 60;

            minutes = absFloor(seconds / 60);
            data.minutes = minutes % 60;

            hours = absFloor(minutes / 60);
            data.hours = hours % 24;

            days += absFloor(hours / 24);

            // convert days to months
            monthsFromDays = absFloor(daysToMonths(days));
            months += monthsFromDays;
            days -= absCeil(monthsToDays(monthsFromDays));

            // 12 months -> 1 year
            years = absFloor(months / 12);
            months %= 12;

            data.days = days;
            data.months = months;
            data.years = years;

            return this;
          }

          function daysToMonths(days) {
            // 400 years have 146097 days (taking into account leap year rules)
            // 400 years have 12 months === 4800
            return (days * 4800) / 146097;
          }

          function monthsToDays(months) {
            // the reverse of daysToMonths
            return (months * 146097) / 4800;
          }

          function as(units) {
            var days;
            var months;
            var milliseconds = this._milliseconds;

            units = normalizeUnits(units);

            if (units === 'month' || units === 'year') {
              days = this._days + milliseconds / 864e5;
              months = this._months + daysToMonths(days);
              return units === 'month' ? months : months / 12;
            } else {
              // handle milliseconds separately because of floating point math errors (issue #1867)
              days = this._days + Math.round(monthsToDays(this._months));
              switch (units) {
                case 'week':
                  return days / 7 + milliseconds / 6048e5;
                case 'day':
                  return days + milliseconds / 864e5;
                case 'hour':
                  return days * 24 + milliseconds / 36e5;
                case 'minute':
                  return days * 1440 + milliseconds / 6e4;
                case 'second':
                  return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond':
                  return Math.floor(days * 864e5) + milliseconds;
                default:
                  throw new Error('Unknown unit ' + units);
              }
            }
          }

          // TODO: Use this.as('ms')?
          function duration_as__valueOf() {
            return (
              this._milliseconds +
              this._days * 864e5 +
              (this._months % 12) * 2592e6 +
              toInt(this._months / 12) * 31536e6
            );
          }

          function makeAs(alias) {
            return function () {
              return this.as(alias);
            };
          }

          var asMilliseconds = makeAs('ms');
          var asSeconds = makeAs('s');
          var asMinutes = makeAs('m');
          var asHours = makeAs('h');
          var asDays = makeAs('d');
          var asWeeks = makeAs('w');
          var asMonths = makeAs('M');
          var asYears = makeAs('y');

          function duration_get__get(units) {
            units = normalizeUnits(units);
            return this[units + 's']();
          }

          function makeGetter(name) {
            return function () {
              return this._data[name];
            };
          }

          var milliseconds = makeGetter('milliseconds');
          var seconds = makeGetter('seconds');
          var minutes = makeGetter('minutes');
          var hours = makeGetter('hours');
          var days = makeGetter('days');
          var months = makeGetter('months');
          var years = makeGetter('years');

          function weeks() {
            return absFloor(this.days() / 7);
          }

          var round = Math.round;
          var thresholds = {
            s: 45, // seconds to minute
            m: 45, // minutes to hour
            h: 22, // hours to day
            d: 26, // days to month
            M: 11, // months to year
          };

          // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
          function substituteTimeAgo(
            string,
            number,
            withoutSuffix,
            isFuture,
            locale,
          ) {
            return locale.relativeTime(
              number || 1,
              !!withoutSuffix,
              string,
              isFuture,
            );
          }

          function duration_humanize__relativeTime(
            posNegDuration,
            withoutSuffix,
            locale,
          ) {
            var duration = create__createDuration(posNegDuration).abs();
            var seconds = round(duration.as('s'));
            var minutes = round(duration.as('m'));
            var hours = round(duration.as('h'));
            var days = round(duration.as('d'));
            var months = round(duration.as('M'));
            var years = round(duration.as('y'));

            var a = (seconds < thresholds.s && ['s', seconds]) ||
              (minutes <= 1 && ['m']) ||
              (minutes < thresholds.m && ['mm', minutes]) ||
              (hours <= 1 && ['h']) ||
              (hours < thresholds.h && ['hh', hours]) ||
              (days <= 1 && ['d']) ||
              (days < thresholds.d && ['dd', days]) ||
              (months <= 1 && ['M']) ||
              (months < thresholds.M && ['MM', months]) ||
              (years <= 1 && ['y']) || ['yy', years];

            a[2] = withoutSuffix;
            a[3] = +posNegDuration > 0;
            a[4] = locale;
            return substituteTimeAgo.apply(null, a);
          }

          // This function allows you to set the rounding function for relative time strings
          function duration_humanize__getSetRelativeTimeRounding(
            roundingFunction,
          ) {
            if (roundingFunction === undefined) {
              return round;
            }
            if (typeof roundingFunction === 'function') {
              round = roundingFunction;
              return true;
            }
            return false;
          }

          // This function allows you to set a threshold for relative time strings
          function duration_humanize__getSetRelativeTimeThreshold(
            threshold,
            limit,
          ) {
            if (thresholds[threshold] === undefined) {
              return false;
            }
            if (limit === undefined) {
              return thresholds[threshold];
            }
            thresholds[threshold] = limit;
            return true;
          }

          function humanize(withSuffix) {
            var locale = this.localeData();
            var output = duration_humanize__relativeTime(
              this,
              !withSuffix,
              locale,
            );

            if (withSuffix) {
              output = locale.pastFuture(+this, output);
            }

            return locale.postformat(output);
          }

          var iso_string__abs = Math.abs;

          function iso_string__toISOString() {
            // for ISO strings we do not use the normal bubbling rules:
            //  * milliseconds bubble up until they become hours
            //  * days do not bubble at all
            //  * months bubble up until they become years
            // This is because there is no context-free conversion between hours and days
            // (think of clock changes)
            // and also not between days and months (28-31 days per month)
            var seconds = iso_string__abs(this._milliseconds) / 1000;
            var days = iso_string__abs(this._days);
            var months = iso_string__abs(this._months);
            var minutes, hours, years;

            // 3600 seconds -> 60 minutes -> 1 hour
            minutes = absFloor(seconds / 60);
            hours = absFloor(minutes / 60);
            seconds %= 60;
            minutes %= 60;

            // 12 months -> 1 year
            years = absFloor(months / 12);
            months %= 12;

            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
            var Y = years;
            var M = months;
            var D = days;
            var h = hours;
            var m = minutes;
            var s = seconds;
            var total = this.asSeconds();

            if (!total) {
              // this is the same as C#'s (Noda) and python (isodate)...
              // but not other JS (goog.date)
              return 'P0D';
            }

            return (
              (total < 0 ? '-' : '') +
              'P' +
              (Y ? Y + 'Y' : '') +
              (M ? M + 'M' : '') +
              (D ? D + 'D' : '') +
              (h || m || s ? 'T' : '') +
              (h ? h + 'H' : '') +
              (m ? m + 'M' : '') +
              (s ? s + 'S' : '')
            );
          }

          var duration_prototype__proto = Duration.prototype;

          duration_prototype__proto.abs = duration_abs__abs;
          duration_prototype__proto.add = duration_add_subtract__add;
          duration_prototype__proto.subtract = duration_add_subtract__subtract;
          duration_prototype__proto.as = as;
          duration_prototype__proto.asMilliseconds = asMilliseconds;
          duration_prototype__proto.asSeconds = asSeconds;
          duration_prototype__proto.asMinutes = asMinutes;
          duration_prototype__proto.asHours = asHours;
          duration_prototype__proto.asDays = asDays;
          duration_prototype__proto.asWeeks = asWeeks;
          duration_prototype__proto.asMonths = asMonths;
          duration_prototype__proto.asYears = asYears;
          duration_prototype__proto.valueOf = duration_as__valueOf;
          duration_prototype__proto._bubble = bubble;
          duration_prototype__proto.get = duration_get__get;
          duration_prototype__proto.milliseconds = milliseconds;
          duration_prototype__proto.seconds = seconds;
          duration_prototype__proto.minutes = minutes;
          duration_prototype__proto.hours = hours;
          duration_prototype__proto.days = days;
          duration_prototype__proto.weeks = weeks;
          duration_prototype__proto.months = months;
          duration_prototype__proto.years = years;
          duration_prototype__proto.humanize = humanize;
          duration_prototype__proto.toISOString = iso_string__toISOString;
          duration_prototype__proto.toString = iso_string__toISOString;
          duration_prototype__proto.toJSON = iso_string__toISOString;
          duration_prototype__proto.locale = locale;
          duration_prototype__proto.localeData = localeData;

          // Deprecations
          duration_prototype__proto.toIsoString = deprecate(
            'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
            iso_string__toISOString,
          );
          duration_prototype__proto.lang = lang;

          // Side effect imports

          // FORMATTING

          addFormatToken('X', 0, 0, 'unix');
          addFormatToken('x', 0, 0, 'valueOf');

          // PARSING

          addRegexToken('x', matchSigned);
          addRegexToken('X', matchTimestamp);
          addParseToken('X', function (input, array, config) {
            config._d = new Date(parseFloat(input, 10) * 1000);
          });
          addParseToken('x', function (input, array, config) {
            config._d = new Date(toInt(input));
          });

          // Side effect imports

          utils_hooks__hooks.version = '2.15.2';

          setHookCallback(local__createLocal);

          utils_hooks__hooks.fn = momentPrototype;
          utils_hooks__hooks.min = min;
          utils_hooks__hooks.max = max;
          utils_hooks__hooks.now = now;
          utils_hooks__hooks.utc = create_utc__createUTC;
          utils_hooks__hooks.unix = moment__createUnix;
          utils_hooks__hooks.months = lists__listMonths;
          utils_hooks__hooks.isDate = isDate;
          utils_hooks__hooks.locale = locale_locales__getSetGlobalLocale;
          utils_hooks__hooks.invalid = valid__createInvalid;
          utils_hooks__hooks.duration = create__createDuration;
          utils_hooks__hooks.isMoment = isMoment;
          utils_hooks__hooks.weekdays = lists__listWeekdays;
          utils_hooks__hooks.parseZone = moment__createInZone;
          utils_hooks__hooks.localeData = locale_locales__getLocale;
          utils_hooks__hooks.isDuration = isDuration;
          utils_hooks__hooks.monthsShort = lists__listMonthsShort;
          utils_hooks__hooks.weekdaysMin = lists__listWeekdaysMin;
          utils_hooks__hooks.defineLocale = defineLocale;
          utils_hooks__hooks.updateLocale = updateLocale;
          utils_hooks__hooks.locales = locale_locales__listLocales;
          utils_hooks__hooks.weekdaysShort = lists__listWeekdaysShort;
          utils_hooks__hooks.normalizeUnits = normalizeUnits;
          utils_hooks__hooks.relativeTimeRounding = duration_humanize__getSetRelativeTimeRounding;
          utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;
          utils_hooks__hooks.calendarFormat = getCalendarFormat;
          utils_hooks__hooks.prototype = momentPrototype;

          var _moment = utils_hooks__hooks;

          return _moment;
        });
        /* WEBPACK VAR INJECTION */
      }.call(exports, __webpack_require__(123)(module)));

      /***/
    },
    /* 850 */
    /***/ function (module, exports, __webpack_require__) {
      var map = {
        './af': 851,
        './af.js': 851,
        './ar': 852,
        './ar-ly': 853,
        './ar-ly.js': 853,
        './ar-ma': 854,
        './ar-ma.js': 854,
        './ar-sa': 855,
        './ar-sa.js': 855,
        './ar-tn': 856,
        './ar-tn.js': 856,
        './ar.js': 852,
        './az': 857,
        './az.js': 857,
        './be': 858,
        './be.js': 858,
        './bg': 859,
        './bg.js': 859,
        './bn': 860,
        './bn.js': 860,
        './bo': 861,
        './bo.js': 861,
        './br': 862,
        './br.js': 862,
        './bs': 863,
        './bs.js': 863,
        './ca': 864,
        './ca.js': 864,
        './cs': 865,
        './cs.js': 865,
        './cv': 866,
        './cv.js': 866,
        './cy': 867,
        './cy.js': 867,
        './da': 868,
        './da.js': 868,
        './de': 869,
        './de-at': 870,
        './de-at.js': 870,
        './de.js': 869,
        './dv': 871,
        './dv.js': 871,
        './el': 872,
        './el.js': 872,
        './en-au': 873,
        './en-au.js': 873,
        './en-ca': 874,
        './en-ca.js': 874,
        './en-gb': 875,
        './en-gb.js': 875,
        './en-ie': 876,
        './en-ie.js': 876,
        './en-nz': 877,
        './en-nz.js': 877,
        './eo': 878,
        './eo.js': 878,
        './es': 879,
        './es-do': 880,
        './es-do.js': 880,
        './es.js': 879,
        './et': 881,
        './et.js': 881,
        './eu': 882,
        './eu.js': 882,
        './fa': 883,
        './fa.js': 883,
        './fi': 884,
        './fi.js': 884,
        './fo': 885,
        './fo.js': 885,
        './fr': 886,
        './fr-ca': 887,
        './fr-ca.js': 887,
        './fr-ch': 888,
        './fr-ch.js': 888,
        './fr.js': 886,
        './fy': 889,
        './fy.js': 889,
        './gd': 890,
        './gd.js': 890,
        './gl': 891,
        './gl.js': 891,
        './he': 892,
        './he.js': 892,
        './hi': 893,
        './hi.js': 893,
        './hr': 894,
        './hr.js': 894,
        './hu': 895,
        './hu.js': 895,
        './hy-am': 896,
        './hy-am.js': 896,
        './id': 897,
        './id.js': 897,
        './is': 898,
        './is.js': 898,
        './it': 899,
        './it.js': 899,
        './ja': 900,
        './ja.js': 900,
        './jv': 901,
        './jv.js': 901,
        './ka': 902,
        './ka.js': 902,
        './kk': 903,
        './kk.js': 903,
        './km': 904,
        './km.js': 904,
        './ko': 905,
        './ko.js': 905,
        './ky': 906,
        './ky.js': 906,
        './lb': 907,
        './lb.js': 907,
        './lo': 908,
        './lo.js': 908,
        './lt': 909,
        './lt.js': 909,
        './lv': 910,
        './lv.js': 910,
        './me': 911,
        './me.js': 911,
        './mi': 912,
        './mi.js': 912,
        './mk': 913,
        './mk.js': 913,
        './ml': 914,
        './ml.js': 914,
        './mr': 915,
        './mr.js': 915,
        './ms': 916,
        './ms-my': 917,
        './ms-my.js': 917,
        './ms.js': 916,
        './my': 918,
        './my.js': 918,
        './nb': 919,
        './nb.js': 919,
        './ne': 920,
        './ne.js': 920,
        './nl': 921,
        './nl.js': 921,
        './nn': 922,
        './nn.js': 922,
        './pa-in': 923,
        './pa-in.js': 923,
        './pl': 924,
        './pl.js': 924,
        './pt': 925,
        './pt-br': 926,
        './pt-br.js': 926,
        './pt.js': 925,
        './ro': 927,
        './ro.js': 927,
        './ru': 928,
        './ru.js': 928,
        './se': 929,
        './se.js': 929,
        './si': 930,
        './si.js': 930,
        './sk': 931,
        './sk.js': 931,
        './sl': 932,
        './sl.js': 932,
        './sq': 933,
        './sq.js': 933,
        './sr': 934,
        './sr-cyrl': 935,
        './sr-cyrl.js': 935,
        './sr.js': 934,
        './ss': 936,
        './ss.js': 936,
        './sv': 937,
        './sv.js': 937,
        './sw': 938,
        './sw.js': 938,
        './ta': 939,
        './ta.js': 939,
        './te': 940,
        './te.js': 940,
        './th': 941,
        './th.js': 941,
        './tl-ph': 942,
        './tl-ph.js': 942,
        './tlh': 943,
        './tlh.js': 943,
        './tr': 944,
        './tr.js': 944,
        './tzl': 945,
        './tzl.js': 945,
        './tzm': 946,
        './tzm-latn': 947,
        './tzm-latn.js': 947,
        './tzm.js': 946,
        './uk': 948,
        './uk.js': 948,
        './uz': 949,
        './uz.js': 949,
        './vi': 950,
        './vi.js': 950,
        './x-pseudo': 951,
        './x-pseudo.js': 951,
        './zh-cn': 952,
        './zh-cn.js': 952,
        './zh-hk': 953,
        './zh-hk.js': 953,
        './zh-tw': 954,
        './zh-tw.js': 954,
      };
      function webpackContext(req) {
        return __webpack_require__(webpackContextResolve(req));
      }
      function webpackContextResolve(req) {
        return (
          map[req] ||
          (function () {
            throw new Error("Cannot find module '" + req + "'.");
          })()
        );
      }
      webpackContext.keys = function webpackContextKeys() {
        return Object.keys(map);
      };
      webpackContext.resolve = webpackContextResolve;
      module.exports = webpackContext;
      webpackContext.id = 850;

      /***/
    },
    /* 851 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Afrikaans [af]
      //! author : Werner Mollentze : https://github.com/wernerm

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var af = moment.defineLocale('af', {
          months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split(
            '_',
          ),
          monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split(
            '_',
          ),
          weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split(
            '_',
          ),
          weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
          weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
          meridiemParse: /vm|nm/i,
          isPM: function (input) {
            return /^nm$/i.test(input);
          },
          meridiem: function (hours, minutes, isLower) {
            if (hours < 12) {
              return isLower ? 'vm' : 'VM';
            } else {
              return isLower ? 'nm' : 'NM';
            }
          },
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Vandag om] LT',
            nextDay: '[Môre om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[Gister om] LT',
            lastWeek: '[Laas] dddd [om] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'oor %s',
            past: '%s gelede',
            s: "'n paar sekondes",
            m: "'n minuut",
            mm: '%d minute',
            h: "'n uur",
            hh: '%d ure',
            d: "'n dag",
            dd: '%d dae',
            M: "'n maand",
            MM: '%d maande',
            y: "'n jaar",
            yy: '%d jaar',
          },
          ordinalParse: /\d{1,2}(ste|de)/,
          ordinal: function (number) {
            return (
              number +
              (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')
            ); // Thanks to Joris Röling : https://github.com/jjupiter
          },
          week: {
            dow: 1, // Maandag is die eerste dag van die week.
            doy: 4, // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
          },
        });

        return af;
      });

      /***/
    },
    /* 852 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic [ar]
      //! author : Abdel Said: https://github.com/abdelsaid
      //! author : Ahmed Elkhatib
      //! author : forabi https://github.com/forabi

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var symbolMap = {
            1: '١',
            2: '٢',
            3: '٣',
            4: '٤',
            5: '٥',
            6: '٦',
            7: '٧',
            8: '٨',
            9: '٩',
            0: '٠',
          },
          numberMap = {
            '١': '1',
            '٢': '2',
            '٣': '3',
            '٤': '4',
            '٥': '5',
            '٦': '6',
            '٧': '7',
            '٨': '8',
            '٩': '9',
            '٠': '0',
          },
          pluralForm = function (n) {
            return n === 0
              ? 0
              : n === 1
              ? 1
              : n === 2
              ? 2
              : n % 100 >= 3 && n % 100 <= 10
              ? 3
              : n % 100 >= 11
              ? 4
              : 5;
          },
          plurals = {
            s: [
              'أقل من ثانية',
              'ثانية واحدة',
              ['ثانيتان', 'ثانيتين'],
              '%d ثوان',
              '%d ثانية',
              '%d ثانية',
            ],
            m: [
              'أقل من دقيقة',
              'دقيقة واحدة',
              ['دقيقتان', 'دقيقتين'],
              '%d دقائق',
              '%d دقيقة',
              '%d دقيقة',
            ],
            h: [
              'أقل من ساعة',
              'ساعة واحدة',
              ['ساعتان', 'ساعتين'],
              '%d ساعات',
              '%d ساعة',
              '%d ساعة',
            ],
            d: [
              'أقل من يوم',
              'يوم واحد',
              ['يومان', 'يومين'],
              '%d أيام',
              '%d يومًا',
              '%d يوم',
            ],
            M: [
              'أقل من شهر',
              'شهر واحد',
              ['شهران', 'شهرين'],
              '%d أشهر',
              '%d شهرا',
              '%d شهر',
            ],
            y: [
              'أقل من عام',
              'عام واحد',
              ['عامان', 'عامين'],
              '%d أعوام',
              '%d عامًا',
              '%d عام',
            ],
          },
          pluralize = function (u) {
            return function (number, withoutSuffix, string, isFuture) {
              var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];
              if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
              }
              return str.replace(/%d/i, number);
            };
          },
          months = [
            'كانون الثاني يناير',
            'شباط فبراير',
            'آذار مارس',
            'نيسان أبريل',
            'أيار مايو',
            'حزيران يونيو',
            'تموز يوليو',
            'آب أغسطس',
            'أيلول سبتمبر',
            'تشرين الأول أكتوبر',
            'تشرين الثاني نوفمبر',
            'كانون الأول ديسمبر',
          ];

        var ar = moment.defineLocale('ar', {
          months: months,
          monthsShort: months,
          weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
            '_',
          ),
          weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/\u200FM/\u200FYYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          meridiemParse: /ص|م/,
          isPM: function (input) {
            return 'م' === input;
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
              return 'ص';
            } else {
              return 'م';
            }
          },
          calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: pluralize('s'),
            m: pluralize('m'),
            mm: pluralize('m'),
            h: pluralize('h'),
            hh: pluralize('h'),
            d: pluralize('d'),
            dd: pluralize('d'),
            M: pluralize('M'),
            MM: pluralize('M'),
            y: pluralize('y'),
            yy: pluralize('y'),
          },
          preparse: function (string) {
            return string
              .replace(/\u200f/g, '')
              .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
              })
              .replace(/،/g, ',');
          },
          postformat: function (string) {
            return string
              .replace(/\d/g, function (match) {
                return symbolMap[match];
              })
              .replace(/,/g, '،');
          },
          week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return ar;
      });

      /***/
    },
    /* 853 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic (Lybia) [ar-ly]
      //! author : Ali Hmer: https://github.com/kikoanis

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var symbolMap = {
            1: '1',
            2: '2',
            3: '3',
            4: '4',
            5: '5',
            6: '6',
            7: '7',
            8: '8',
            9: '9',
            0: '0',
          },
          pluralForm = function (n) {
            return n === 0
              ? 0
              : n === 1
              ? 1
              : n === 2
              ? 2
              : n % 100 >= 3 && n % 100 <= 10
              ? 3
              : n % 100 >= 11
              ? 4
              : 5;
          },
          plurals = {
            s: [
              'أقل من ثانية',
              'ثانية واحدة',
              ['ثانيتان', 'ثانيتين'],
              '%d ثوان',
              '%d ثانية',
              '%d ثانية',
            ],
            m: [
              'أقل من دقيقة',
              'دقيقة واحدة',
              ['دقيقتان', 'دقيقتين'],
              '%d دقائق',
              '%d دقيقة',
              '%d دقيقة',
            ],
            h: [
              'أقل من ساعة',
              'ساعة واحدة',
              ['ساعتان', 'ساعتين'],
              '%d ساعات',
              '%d ساعة',
              '%d ساعة',
            ],
            d: [
              'أقل من يوم',
              'يوم واحد',
              ['يومان', 'يومين'],
              '%d أيام',
              '%d يومًا',
              '%d يوم',
            ],
            M: [
              'أقل من شهر',
              'شهر واحد',
              ['شهران', 'شهرين'],
              '%d أشهر',
              '%d شهرا',
              '%d شهر',
            ],
            y: [
              'أقل من عام',
              'عام واحد',
              ['عامان', 'عامين'],
              '%d أعوام',
              '%d عامًا',
              '%d عام',
            ],
          },
          pluralize = function (u) {
            return function (number, withoutSuffix, string, isFuture) {
              var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];
              if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
              }
              return str.replace(/%d/i, number);
            };
          },
          months = [
            'يناير',
            'فبراير',
            'مارس',
            'أبريل',
            'مايو',
            'يونيو',
            'يوليو',
            'أغسطس',
            'سبتمبر',
            'أكتوبر',
            'نوفمبر',
            'ديسمبر',
          ];

        var ar_ly = moment.defineLocale('ar-ly', {
          months: months,
          monthsShort: months,
          weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
            '_',
          ),
          weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/\u200FM/\u200FYYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          meridiemParse: /ص|م/,
          isPM: function (input) {
            return 'م' === input;
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
              return 'ص';
            } else {
              return 'م';
            }
          },
          calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: pluralize('s'),
            m: pluralize('m'),
            mm: pluralize('m'),
            h: pluralize('h'),
            hh: pluralize('h'),
            d: pluralize('d'),
            dd: pluralize('d'),
            M: pluralize('M'),
            MM: pluralize('M'),
            y: pluralize('y'),
            yy: pluralize('y'),
          },
          preparse: function (string) {
            return string.replace(/\u200f/g, '').replace(/،/g, ',');
          },
          postformat: function (string) {
            return string
              .replace(/\d/g, function (match) {
                return symbolMap[match];
              })
              .replace(/,/g, '،');
          },
          week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return ar_ly;
      });

      /***/
    },
    /* 854 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic (Morocco) [ar-ma]
      //! author : ElFadili Yassine : https://github.com/ElFadiliY
      //! author : Abdel Said : https://github.com/abdelsaid

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var ar_ma = moment.defineLocale('ar-ma', {
          months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
            '_',
          ),
          monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
            '_',
          ),
          weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
            '_',
          ),
          weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات',
          },
          week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return ar_ma;
      });

      /***/
    },
    /* 855 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic (Saudi Arabia) [ar-sa]
      //! author : Suhail Alkowaileet : https://github.com/xsoh

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var symbolMap = {
            1: '١',
            2: '٢',
            3: '٣',
            4: '٤',
            5: '٥',
            6: '٦',
            7: '٧',
            8: '٨',
            9: '٩',
            0: '٠',
          },
          numberMap = {
            '١': '1',
            '٢': '2',
            '٣': '3',
            '٤': '4',
            '٥': '5',
            '٦': '6',
            '٧': '7',
            '٨': '8',
            '٩': '9',
            '٠': '0',
          };

        var ar_sa = moment.defineLocale('ar-sa', {
          months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
            '_',
          ),
          monthsShort: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
            '_',
          ),
          weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
            '_',
          ),
          weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          meridiemParse: /ص|م/,
          isPM: function (input) {
            return 'م' === input;
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
              return 'ص';
            } else {
              return 'م';
            }
          },
          calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات',
          },
          preparse: function (string) {
            return string
              .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
              })
              .replace(/،/g, ',');
          },
          postformat: function (string) {
            return string
              .replace(/\d/g, function (match) {
                return symbolMap[match];
              })
              .replace(/,/g, '،');
          },
          week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return ar_sa;
      });

      /***/
    },
    /* 856 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale  :  Arabic (Tunisia) [ar-tn]
      //! author : Nader Toukabri : https://github.com/naderio

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var ar_tn = moment.defineLocale('ar-tn', {
          months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
            '_',
          ),
          monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
            '_',
          ),
          weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split(
            '_',
          ),
          weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات',
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return ar_tn;
      });

      /***/
    },
    /* 857 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Azerbaijani [az]
      //! author : topchiyev : https://github.com/topchiyev

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var suffixes = {
          1: '-inci',
          5: '-inci',
          8: '-inci',
          70: '-inci',
          80: '-inci',
          2: '-nci',
          7: '-nci',
          20: '-nci',
          50: '-nci',
          3: '-üncü',
          4: '-üncü',
          100: '-üncü',
          6: '-ncı',
          9: '-uncu',
          10: '-uncu',
          30: '-uncu',
          60: '-ıncı',
          90: '-ıncı',
        };

        var az = moment.defineLocale('az', {
          months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split(
            '_',
          ),
          monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split(
            '_',
          ),
          weekdays: 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split(
            '_',
          ),
          weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
          weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[bugün saat] LT',
            nextDay: '[sabah saat] LT',
            nextWeek: '[gələn həftə] dddd [saat] LT',
            lastDay: '[dünən] LT',
            lastWeek: '[keçən həftə] dddd [saat] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s sonra',
            past: '%s əvvəl',
            s: 'birneçə saniyyə',
            m: 'bir dəqiqə',
            mm: '%d dəqiqə',
            h: 'bir saat',
            hh: '%d saat',
            d: 'bir gün',
            dd: '%d gün',
            M: 'bir ay',
            MM: '%d ay',
            y: 'bir il',
            yy: '%d il',
          },
          meridiemParse: /gecə|səhər|gündüz|axşam/,
          isPM: function (input) {
            return /^(gündüz|axşam)$/.test(input);
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
              return 'gecə';
            } else if (hour < 12) {
              return 'səhər';
            } else if (hour < 17) {
              return 'gündüz';
            } else {
              return 'axşam';
            }
          },
          ordinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
          ordinal: function (number) {
            if (number === 0) {
              // special case for zero
              return number + '-ıncı';
            }
            var a = number % 10,
              b = (number % 100) - a,
              c = number >= 100 ? 100 : null;
            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return az;
      });

      /***/
    },
    /* 858 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Belarusian [be]
      //! author : Dmitry Demidov : https://github.com/demidov91
      //! author: Praleska: http://praleska.pro/
      //! Author : Menelion Elensúle : https://github.com/Oire

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        function plural(word, num) {
          var forms = word.split('_');
          return num % 10 === 1 && num % 100 !== 11
            ? forms[0]
            : num % 10 >= 2 &&
              num % 10 <= 4 &&
              (num % 100 < 10 || num % 100 >= 20)
            ? forms[1]
            : forms[2];
        }
        function relativeTimeWithPlural(number, withoutSuffix, key) {
          var format = {
            mm: withoutSuffix
              ? 'хвіліна_хвіліны_хвілін'
              : 'хвіліну_хвіліны_хвілін',
            hh: withoutSuffix
              ? 'гадзіна_гадзіны_гадзін'
              : 'гадзіну_гадзіны_гадзін',
            dd: 'дзень_дні_дзён',
            MM: 'месяц_месяцы_месяцаў',
            yy: 'год_гады_гадоў',
          };
          if (key === 'm') {
            return withoutSuffix ? 'хвіліна' : 'хвіліну';
          } else if (key === 'h') {
            return withoutSuffix ? 'гадзіна' : 'гадзіну';
          } else {
            return number + ' ' + plural(format[key], +number);
          }
        }

        var be = moment.defineLocale('be', {
          months: {
            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split(
              '_',
            ),
            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split(
              '_',
            ),
          },
          monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split(
            '_',
          ),
          weekdays: {
            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split(
              '_',
            ),
            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split(
              '_',
            ),
            isFormat: /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/,
          },
          weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
          weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY г.',
            LLL: 'D MMMM YYYY г., HH:mm',
            LLLL: 'dddd, D MMMM YYYY г., HH:mm',
          },
          calendar: {
            sameDay: '[Сёння ў] LT',
            nextDay: '[Заўтра ў] LT',
            lastDay: '[Учора ў] LT',
            nextWeek: function () {
              return '[У] dddd [ў] LT';
            },
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                  return '[У мінулую] dddd [ў] LT';
                case 1:
                case 2:
                case 4:
                  return '[У мінулы] dddd [ў] LT';
              }
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'праз %s',
            past: '%s таму',
            s: 'некалькі секунд',
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: relativeTimeWithPlural,
            hh: relativeTimeWithPlural,
            d: 'дзень',
            dd: relativeTimeWithPlural,
            M: 'месяц',
            MM: relativeTimeWithPlural,
            y: 'год',
            yy: relativeTimeWithPlural,
          },
          meridiemParse: /ночы|раніцы|дня|вечара/,
          isPM: function (input) {
            return /^(дня|вечара)$/.test(input);
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
              return 'ночы';
            } else if (hour < 12) {
              return 'раніцы';
            } else if (hour < 17) {
              return 'дня';
            } else {
              return 'вечара';
            }
          },
          ordinalParse: /\d{1,2}-(і|ы|га)/,
          ordinal: function (number, period) {
            switch (period) {
              case 'M':
              case 'd':
              case 'DDD':
              case 'w':
              case 'W':
                return (number % 10 === 2 || number % 10 === 3) &&
                  number % 100 !== 12 &&
                  number % 100 !== 13
                  ? number + '-і'
                  : number + '-ы';
              case 'D':
                return number + '-га';
              default:
                return number;
            }
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return be;
      });

      /***/
    },
    /* 859 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Bulgarian [bg]
      //! author : Krasen Borisov : https://github.com/kraz

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var bg = moment.defineLocale('bg', {
          months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split(
            '_',
          ),
          monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split(
            '_',
          ),
          weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split(
            '_',
          ),
          weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
          weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd, D MMMM YYYY H:mm',
          },
          calendar: {
            sameDay: '[Днес в] LT',
            nextDay: '[Утре в] LT',
            nextWeek: 'dddd [в] LT',
            lastDay: '[Вчера в] LT',
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                case 3:
                case 6:
                  return '[В изминалата] dddd [в] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                  return '[В изминалия] dddd [в] LT';
              }
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'след %s',
            past: 'преди %s',
            s: 'няколко секунди',
            m: 'минута',
            mm: '%d минути',
            h: 'час',
            hh: '%d часа',
            d: 'ден',
            dd: '%d дни',
            M: 'месец',
            MM: '%d месеца',
            y: 'година',
            yy: '%d години',
          },
          ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
          ordinal: function (number) {
            var lastDigit = number % 10,
              last2Digits = number % 100;
            if (number === 0) {
              return number + '-ев';
            } else if (last2Digits === 0) {
              return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
              return number + '-ти';
            } else if (lastDigit === 1) {
              return number + '-ви';
            } else if (lastDigit === 2) {
              return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
              return number + '-ми';
            } else {
              return number + '-ти';
            }
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return bg;
      });

      /***/
    },
    /* 860 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Bengali [bn]
      //! author : Kaushik Gandhi : https://github.com/kaushikgandhi

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var symbolMap = {
            1: '১',
            2: '২',
            3: '৩',
            4: '৪',
            5: '৫',
            6: '৬',
            7: '৭',
            8: '৮',
            9: '৯',
            0: '০',
          },
          numberMap = {
            '১': '1',
            '২': '2',
            '৩': '3',
            '৪': '4',
            '৫': '5',
            '৬': '6',
            '৭': '7',
            '৮': '8',
            '৯': '9',
            '০': '0',
          };

        var bn = moment.defineLocale('bn', {
          months: 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(
            '_',
          ),
          monthsShort: 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split(
            '_',
          ),
          weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(
            '_',
          ),
          weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
          weekdaysMin: 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
          longDateFormat: {
            LT: 'A h:mm সময়',
            LTS: 'A h:mm:ss সময়',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm সময়',
            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',
          },
          calendar: {
            sameDay: '[আজ] LT',
            nextDay: '[আগামীকাল] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[গতকাল] LT',
            lastWeek: '[গত] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s পরে',
            past: '%s আগে',
            s: 'কয়েক সেকেন্ড',
            m: 'এক মিনিট',
            mm: '%d মিনিট',
            h: 'এক ঘন্টা',
            hh: '%d ঘন্টা',
            d: 'এক দিন',
            dd: '%d দিন',
            M: 'এক মাস',
            MM: '%d মাস',
            y: 'এক বছর',
            yy: '%d বছর',
          },
          preparse: function (string) {
            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function (string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (
              (meridiem === 'রাত' && hour >= 4) ||
              (meridiem === 'দুপুর' && hour < 5) ||
              meridiem === 'বিকাল'
            ) {
              return hour + 12;
            } else {
              return hour;
            }
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
              return 'রাত';
            } else if (hour < 10) {
              return 'সকাল';
            } else if (hour < 17) {
              return 'দুপুর';
            } else if (hour < 20) {
              return 'বিকাল';
            } else {
              return 'রাত';
            }
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return bn;
      });

      /***/
    },
    /* 861 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Tibetan [bo]
      //! author : Thupten N. Chakrishar : https://github.com/vajradog

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var symbolMap = {
            1: '༡',
            2: '༢',
            3: '༣',
            4: '༤',
            5: '༥',
            6: '༦',
            7: '༧',
            8: '༨',
            9: '༩',
            0: '༠',
          },
          numberMap = {
            '༡': '1',
            '༢': '2',
            '༣': '3',
            '༤': '4',
            '༥': '5',
            '༦': '6',
            '༧': '7',
            '༨': '8',
            '༩': '9',
            '༠': '0',
          };

        var bo = moment.defineLocale('bo', {
          months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split(
            '_',
          ),
          monthsShort: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split(
            '_',
          ),
          weekdays: 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split(
            '_',
          ),
          weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split(
            '_',
          ),
          weekdaysMin: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split(
            '_',
          ),
          longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm',
          },
          calendar: {
            sameDay: '[དི་རིང] LT',
            nextDay: '[སང་ཉིན] LT',
            nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',
            lastDay: '[ཁ་སང] LT',
            lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s ལ་',
            past: '%s སྔན་ལ',
            s: 'ལམ་སང',
            m: 'སྐར་མ་གཅིག',
            mm: '%d སྐར་མ',
            h: 'ཆུ་ཚོད་གཅིག',
            hh: '%d ཆུ་ཚོད',
            d: 'ཉིན་གཅིག',
            dd: '%d ཉིན་',
            M: 'ཟླ་བ་གཅིག',
            MM: '%d ཟླ་བ',
            y: 'ལོ་གཅིག',
            yy: '%d ལོ',
          },
          preparse: function (string) {
            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function (string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (
              (meridiem === 'མཚན་མོ' && hour >= 4) ||
              (meridiem === 'ཉིན་གུང' && hour < 5) ||
              meridiem === 'དགོང་དག'
            ) {
              return hour + 12;
            } else {
              return hour;
            }
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
              return 'མཚན་མོ';
            } else if (hour < 10) {
              return 'ཞོགས་ཀས';
            } else if (hour < 17) {
              return 'ཉིན་གུང';
            } else if (hour < 20) {
              return 'དགོང་དག';
            } else {
              return 'མཚན་མོ';
            }
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return bo;
      });

      /***/
    },
    /* 862 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Breton [br]
      //! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        function relativeTimeWithMutation(number, withoutSuffix, key) {
          var format = {
            mm: 'munutenn',
            MM: 'miz',
            dd: 'devezh',
          };
          return number + ' ' + mutation(format[key], number);
        }
        function specialMutationForYears(number) {
          switch (lastNumber(number)) {
            case 1:
            case 3:
            case 4:
            case 5:
            case 9:
              return number + ' bloaz';
            default:
              return number + ' vloaz';
          }
        }
        function lastNumber(number) {
          if (number > 9) {
            return lastNumber(number % 10);
          }
          return number;
        }
        function mutation(text, number) {
          if (number === 2) {
            return softMutation(text);
          }
          return text;
        }
        function softMutation(text) {
          var mutationTable = {
            m: 'v',
            b: 'v',
            d: 'z',
          };
          if (mutationTable[text.charAt(0)] === undefined) {
            return text;
          }
          return mutationTable[text.charAt(0)] + text.substring(1);
        }

        var br = moment.defineLocale('br', {
          months: "Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split(
            '_',
          ),
          monthsShort: "Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split(
            '_',
          ),
          weekdays: "Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn".split('_'),
          weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
          weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'h[e]mm A',
            LTS: 'h[e]mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D [a viz] MMMM YYYY',
            LLL: 'D [a viz] MMMM YYYY h[e]mm A',
            LLLL: 'dddd, D [a viz] MMMM YYYY h[e]mm A',
          },
          calendar: {
            sameDay: '[Hiziv da] LT',
            nextDay: "[Warc'hoazh da] LT",
            nextWeek: 'dddd [da] LT',
            lastDay: "[Dec'h da] LT",
            lastWeek: 'dddd [paset da] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'a-benn %s',
            past: "%s 'zo",
            s: 'un nebeud segondennoù',
            m: 'ur vunutenn',
            mm: relativeTimeWithMutation,
            h: 'un eur',
            hh: '%d eur',
            d: 'un devezh',
            dd: relativeTimeWithMutation,
            M: 'ur miz',
            MM: relativeTimeWithMutation,
            y: 'ur bloaz',
            yy: specialMutationForYears,
          },
          ordinalParse: /\d{1,2}(añ|vet)/,
          ordinal: function (number) {
            var output = number === 1 ? 'añ' : 'vet';
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return br;
      });

      /***/
    },
    /* 863 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Bosnian [bs]
      //! author : Nedim Cholich : https://github.com/frontyard
      //! based on (hr) translation by Bojan Marković

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        function translate(number, withoutSuffix, key) {
          var result = number + ' ';
          switch (key) {
            case 'm':
              return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
              if (number === 1) {
                result += 'minuta';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'minute';
              } else {
                result += 'minuta';
              }
              return result;
            case 'h':
              return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
              if (number === 1) {
                result += 'sat';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'sata';
              } else {
                result += 'sati';
              }
              return result;
            case 'dd':
              if (number === 1) {
                result += 'dan';
              } else {
                result += 'dana';
              }
              return result;
            case 'MM':
              if (number === 1) {
                result += 'mjesec';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'mjeseca';
              } else {
                result += 'mjeseci';
              }
              return result;
            case 'yy':
              if (number === 1) {
                result += 'godina';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'godine';
              } else {
                result += 'godina';
              }
              return result;
          }
        }

        var bs = moment.defineLocale('bs', {
          months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split(
            '_',
          ),
          monthsShort: 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
            '_',
          ),
          weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
          weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
          },
          calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[u] [nedjelju] [u] LT';
                case 3:
                  return '[u] [srijedu] [u] LT';
                case 6:
                  return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                  return '[u] dddd [u] LT';
              }
            },
            lastDay: '[jučer u] LT',
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                case 3:
                  return '[prošlu] dddd [u] LT';
                case 6:
                  return '[prošle] [subote] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                  return '[prošli] dddd [u] LT';
              }
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'par sekundi',
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: 'dan',
            dd: translate,
            M: 'mjesec',
            MM: translate,
            y: 'godinu',
            yy: translate,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return bs;
      });

      /***/
    },
    /* 864 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Catalan [ca]
      //! author : Juan G. Hurtado : https://github.com/juanghurtado

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var ca = moment.defineLocale('ca', {
          months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split(
            '_',
          ),
          monthsShort: 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split(
            '_',
          ),
          weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
          weekdaysMin: 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd D MMMM YYYY H:mm',
          },
          calendar: {
            sameDay: function () {
              return '[avui a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            nextDay: function () {
              return '[demà a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            nextWeek: function () {
              return 'dddd [a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            lastDay: function () {
              return '[ahir a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            lastWeek: function () {
              return (
                '[el] dddd [passat a ' +
                (this.hours() !== 1 ? 'les' : 'la') +
                '] LT'
              );
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'en %s',
            past: 'fa %s',
            s: 'uns segons',
            m: 'un minut',
            mm: '%d minuts',
            h: 'una hora',
            hh: '%d hores',
            d: 'un dia',
            dd: '%d dies',
            M: 'un mes',
            MM: '%d mesos',
            y: 'un any',
            yy: '%d anys',
          },
          ordinalParse: /\d{1,2}(r|n|t|è|a)/,
          ordinal: function (number, period) {
            var output =
              number === 1
                ? 'r'
                : number === 2
                ? 'n'
                : number === 3
                ? 'r'
                : number === 4
                ? 't'
                : 'è';
            if (period === 'w' || period === 'W') {
              output = 'a';
            }
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return ca;
      });

      /***/
    },
    /* 865 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Czech [cs]
      //! author : petrbela : https://github.com/petrbela

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split(
            '_',
          ),
          monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split(
            '_',
          );
        function plural(n) {
          return n > 1 && n < 5 && ~~(n / 10) !== 1;
        }
        function translate(number, withoutSuffix, key, isFuture) {
          var result = number + ' ';
          switch (key) {
            case 's': // a few seconds / in a few seconds / a few seconds ago
              return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';
            case 'm': // a minute / in a minute / a minute ago
              return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'minuty' : 'minut');
              } else {
                return result + 'minutami';
              }
              break;
            case 'h': // an hour / in an hour / an hour ago
              return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'hodiny' : 'hodin');
              } else {
                return result + 'hodinami';
              }
              break;
            case 'd': // a day / in a day / a day ago
              return withoutSuffix || isFuture ? 'den' : 'dnem';
            case 'dd': // 9 days / in 9 days / 9 days ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'dny' : 'dní');
              } else {
                return result + 'dny';
              }
              break;
            case 'M': // a month / in a month / a month ago
              return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';
            case 'MM': // 9 months / in 9 months / 9 months ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'měsíce' : 'měsíců');
              } else {
                return result + 'měsíci';
              }
              break;
            case 'y': // a year / in a year / a year ago
              return withoutSuffix || isFuture ? 'rok' : 'rokem';
            case 'yy': // 9 years / in 9 years / 9 years ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'roky' : 'let');
              } else {
                return result + 'lety';
              }
              break;
          }
        }

        var cs = moment.defineLocale('cs', {
          months: months,
          monthsShort: monthsShort,
          monthsParse: (function (months, monthsShort) {
            var i,
              _monthsParse = [];
            for (i = 0; i < 12; i++) {
              // use custom parser to solve problem with July (červenec)
              _monthsParse[i] = new RegExp(
                '^' + months[i] + '$|^' + monthsShort[i] + '$',
                'i',
              );
            }
            return _monthsParse;
          })(months, monthsShort),
          shortMonthsParse: (function (monthsShort) {
            var i,
              _shortMonthsParse = [];
            for (i = 0; i < 12; i++) {
              _shortMonthsParse[i] = new RegExp(
                '^' + monthsShort[i] + '$',
                'i',
              );
            }
            return _shortMonthsParse;
          })(monthsShort),
          longMonthsParse: (function (months) {
            var i,
              _longMonthsParse = [];
            for (i = 0; i < 12; i++) {
              _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
            }
            return _longMonthsParse;
          })(months),
          weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split(
            '_',
          ),
          weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),
          weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd D. MMMM YYYY H:mm',
            l: 'D. M. YYYY',
          },
          calendar: {
            sameDay: '[dnes v] LT',
            nextDay: '[zítra v] LT',
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[v neděli v] LT';
                case 1:
                case 2:
                  return '[v] dddd [v] LT';
                case 3:
                  return '[ve středu v] LT';
                case 4:
                  return '[ve čtvrtek v] LT';
                case 5:
                  return '[v pátek v] LT';
                case 6:
                  return '[v sobotu v] LT';
              }
            },
            lastDay: '[včera v] LT',
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[minulou neděli v] LT';
                case 1:
                case 2:
                  return '[minulé] dddd [v] LT';
                case 3:
                  return '[minulou středu v] LT';
                case 4:
                case 5:
                  return '[minulý] dddd [v] LT';
                case 6:
                  return '[minulou sobotu v] LT';
              }
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'za %s',
            past: 'před %s',
            s: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return cs;
      });

      /***/
    },
    /* 866 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Chuvash [cv]
      //! author : Anatoly Mironov : https://github.com/mirontoli

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var cv = moment.defineLocale('cv', {
          months: 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split(
            '_',
          ),
          monthsShort: 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split(
            '_',
          ),
          weekdays: 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split(
            '_',
          ),
          weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
          weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
            LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
            LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
          },
          calendar: {
            sameDay: '[Паян] LT [сехетре]',
            nextDay: '[Ыран] LT [сехетре]',
            lastDay: '[Ӗнер] LT [сехетре]',
            nextWeek: '[Ҫитес] dddd LT [сехетре]',
            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
            sameElse: 'L',
          },
          relativeTime: {
            future: function (output) {
              var affix = /сехет$/i.exec(output)
                ? 'рен'
                : /ҫул$/i.exec(output)
                ? 'тан'
                : 'ран';
              return output + affix;
            },
            past: '%s каялла',
            s: 'пӗр-ик ҫеккунт',
            m: 'пӗр минут',
            mm: '%d минут',
            h: 'пӗр сехет',
            hh: '%d сехет',
            d: 'пӗр кун',
            dd: '%d кун',
            M: 'пӗр уйӑх',
            MM: '%d уйӑх',
            y: 'пӗр ҫул',
            yy: '%d ҫул',
          },
          ordinalParse: /\d{1,2}-мӗш/,
          ordinal: '%d-мӗш',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return cv;
      });

      /***/
    },
    /* 867 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Welsh [cy]
      //! author : Robert Allen : https://github.com/robgallen
      //! author : https://github.com/ryangreaves

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var cy = moment.defineLocale('cy', {
          months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split(
            '_',
          ),
          monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split(
            '_',
          ),
          weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split(
            '_',
          ),
          weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
          weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
          weekdaysParseExact: true,
          // time formats are the same as en-gb
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Heddiw am] LT',
            nextDay: '[Yfory am] LT',
            nextWeek: 'dddd [am] LT',
            lastDay: '[Ddoe am] LT',
            lastWeek: 'dddd [diwethaf am] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'mewn %s',
            past: '%s yn ôl',
            s: 'ychydig eiliadau',
            m: 'munud',
            mm: '%d munud',
            h: 'awr',
            hh: '%d awr',
            d: 'diwrnod',
            dd: '%d diwrnod',
            M: 'mis',
            MM: '%d mis',
            y: 'blwyddyn',
            yy: '%d flynedd',
          },
          ordinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
          // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
          ordinal: function (number) {
            var b = number,
              output = '',
              lookup = [
                '',
                'af',
                'il',
                'ydd',
                'ydd',
                'ed',
                'ed',
                'ed',
                'fed',
                'fed',
                'fed', // 1af to 10fed
                'eg',
                'fed',
                'eg',
                'eg',
                'fed',
                'eg',
                'eg',
                'fed',
                'eg',
                'fed', // 11eg to 20fed
              ];
            if (b > 20) {
              if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                output = 'fed'; // not 30ain, 70ain or 90ain
              } else {
                output = 'ain';
              }
            } else if (b > 0) {
              output = lookup[b];
            }
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return cy;
      });

      /***/
    },
    /* 868 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Danish [da]
      //! author : Ulrik Nielsen : https://github.com/mrbase

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var da = moment.defineLocale('da', {
          months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split(
            '_',
          ),
          monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split(
            '_',
          ),
          weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split(
            '_',
          ),
          weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),
          weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd [d.] D. MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[I dag kl.] LT',
            nextDay: '[I morgen kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[I går kl.] LT',
            lastWeek: '[sidste] dddd [kl] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'om %s',
            past: '%s siden',
            s: 'få sekunder',
            m: 'et minut',
            mm: '%d minutter',
            h: 'en time',
            hh: '%d timer',
            d: 'en dag',
            dd: '%d dage',
            M: 'en måned',
            MM: '%d måneder',
            y: 'et år',
            yy: '%d år',
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return da;
      });

      /***/
    },
    /* 869 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : German [de]
      //! author : lluchs : https://github.com/lluchs
      //! author: Menelion Elensúle: https://github.com/Oire
      //! author : Mikolaj Dadela : https://github.com/mik01aj

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            m: ['eine Minute', 'einer Minute'],
            h: ['eine Stunde', 'einer Stunde'],
            d: ['ein Tag', 'einem Tag'],
            dd: [number + ' Tage', number + ' Tagen'],
            M: ['ein Monat', 'einem Monat'],
            MM: [number + ' Monate', number + ' Monaten'],
            y: ['ein Jahr', 'einem Jahr'],
            yy: [number + ' Jahre', number + ' Jahren'],
          };
          return withoutSuffix ? format[key][0] : format[key][1];
        }

        var de = moment.defineLocale('de', {
          months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
            '_',
          ),
          monthsShort: 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
            '_',
          ),
          weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
          weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd, D. MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]',
          },
          relativeTime: {
            future: 'in %s',
            past: 'vor %s',
            s: 'ein paar Sekunden',
            m: processRelativeTime,
            mm: '%d Minuten',
            h: processRelativeTime,
            hh: '%d Stunden',
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return de;
      });

      /***/
    },
    /* 870 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : German (Austria) [de-at]
      //! author : lluchs : https://github.com/lluchs
      //! author: Menelion Elensúle: https://github.com/Oire
      //! author : Martin Groller : https://github.com/MadMG
      //! author : Mikolaj Dadela : https://github.com/mik01aj

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            m: ['eine Minute', 'einer Minute'],
            h: ['eine Stunde', 'einer Stunde'],
            d: ['ein Tag', 'einem Tag'],
            dd: [number + ' Tage', number + ' Tagen'],
            M: ['ein Monat', 'einem Monat'],
            MM: [number + ' Monate', number + ' Monaten'],
            y: ['ein Jahr', 'einem Jahr'],
            yy: [number + ' Jahre', number + ' Jahren'],
          };
          return withoutSuffix ? format[key][0] : format[key][1];
        }

        var de_at = moment.defineLocale('de-at', {
          months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
            '_',
          ),
          monthsShort: 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
            '_',
          ),
          weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
          weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd, D. MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]',
          },
          relativeTime: {
            future: 'in %s',
            past: 'vor %s',
            s: 'ein paar Sekunden',
            m: processRelativeTime,
            mm: '%d Minuten',
            h: processRelativeTime,
            hh: '%d Stunden',
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return de_at;
      });

      /***/
    },
    /* 871 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Maldivian [dv]
      //! author : Jawish Hameed : https://github.com/jawish

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var months = [
            'ޖެނުއަރީ',
            'ފެބްރުއަރީ',
            'މާރިޗު',
            'އޭޕްރީލު',
            'މޭ',
            'ޖޫން',
            'ޖުލައި',
            'އޯގަސްޓު',
            'ސެޕްޓެމްބަރު',
            'އޮކްޓޯބަރު',
            'ނޮވެމްބަރު',
            'ޑިސެމްބަރު',
          ],
          weekdays = [
            'އާދިއްތަ',
            'ހޯމަ',
            'އަންގާރަ',
            'ބުދަ',
            'ބުރާސްފަތި',
            'ހުކުރު',
            'ހޮނިހިރު',
          ];

        var dv = moment.defineLocale('dv', {
          months: months,
          monthsShort: months,
          weekdays: weekdays,
          weekdaysShort: weekdays,
          weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/M/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          meridiemParse: /މކ|މފ/,
          isPM: function (input) {
            return 'މފ' === input;
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
              return 'މކ';
            } else {
              return 'މފ';
            }
          },
          calendar: {
            sameDay: '[މިއަދު] LT',
            nextDay: '[މާދަމާ] LT',
            nextWeek: 'dddd LT',
            lastDay: '[އިއްޔެ] LT',
            lastWeek: '[ފާއިތުވި] dddd LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'ތެރޭގައި %s',
            past: 'ކުރިން %s',
            s: 'ސިކުންތުކޮޅެއް',
            m: 'މިނިޓެއް',
            mm: 'މިނިޓު %d',
            h: 'ގަޑިއިރެއް',
            hh: 'ގަޑިއިރު %d',
            d: 'ދުވަހެއް',
            dd: 'ދުވަސް %d',
            M: 'މަހެއް',
            MM: 'މަސް %d',
            y: 'އަހަރެއް',
            yy: 'އަހަރު %d',
          },
          preparse: function (string) {
            return string.replace(/،/g, ',');
          },
          postformat: function (string) {
            return string.replace(/,/g, '،');
          },
          week: {
            dow: 7, // Sunday is the first day of the week.
            doy: 12, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return dv;
      });

      /***/
    },
    /* 872 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Greek [el]
      //! author : Aggelos Karalias : https://github.com/mehiel

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        function isFunction(input) {
          return (
            input instanceof Function ||
            Object.prototype.toString.call(input) === '[object Function]'
          );
        }

        var el = moment.defineLocale('el', {
          monthsNominativeEl: 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split(
            '_',
          ),
          monthsGenitiveEl: 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split(
            '_',
          ),
          months: function (momentToFormat, format) {
            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) {
              // if there is a day number before 'MMMM'
              return this._monthsGenitiveEl[momentToFormat.month()];
            } else {
              return this._monthsNominativeEl[momentToFormat.month()];
            }
          },
          monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split(
            '_',
          ),
          weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split(
            '_',
          ),
          weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
          weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
          meridiem: function (hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? 'μμ' : 'ΜΜ';
            } else {
              return isLower ? 'πμ' : 'ΠΜ';
            }
          },
          isPM: function (input) {
            return (input + '').toLowerCase()[0] === 'μ';
          },
          meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
          },
          calendarEl: {
            sameDay: '[Σήμερα {}] LT',
            nextDay: '[Αύριο {}] LT',
            nextWeek: 'dddd [{}] LT',
            lastDay: '[Χθες {}] LT',
            lastWeek: function () {
              switch (this.day()) {
                case 6:
                  return '[το προηγούμενο] dddd [{}] LT';
                default:
                  return '[την προηγούμενη] dddd [{}] LT';
              }
            },
            sameElse: 'L',
          },
          calendar: function (key, mom) {
            var output = this._calendarEl[key],
              hours = mom && mom.hours();
            if (isFunction(output)) {
              output = output.apply(mom);
            }
            return output.replace('{}', hours % 12 === 1 ? 'στη' : 'στις');
          },
          relativeTime: {
            future: 'σε %s',
            past: '%s πριν',
            s: 'λίγα δευτερόλεπτα',
            m: 'ένα λεπτό',
            mm: '%d λεπτά',
            h: 'μία ώρα',
            hh: '%d ώρες',
            d: 'μία μέρα',
            dd: '%d μέρες',
            M: 'ένας μήνας',
            MM: '%d μήνες',
            y: 'ένας χρόνος',
            yy: '%d χρόνια',
          },
          ordinalParse: /\d{1,2}η/,
          ordinal: '%dη',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4st is the first week of the year.
          },
        });

        return el;
      });

      /***/
    },
    /* 873 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (Australia) [en-au]
      //! author : Jared Morse : https://github.com/jarcoal

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var en_au = moment.defineLocale('en-au', {
          months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_',
          ),
          monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
            '_',
          ),
          weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_',
          ),
          weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
          weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
          },
          calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
          },
          ordinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function (number) {
            var b = number % 10,
              output =
                ~~((number % 100) / 10) === 1
                  ? 'th'
                  : b === 1
                  ? 'st'
                  : b === 2
                  ? 'nd'
                  : b === 3
                  ? 'rd'
                  : 'th';
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return en_au;
      });

      /***/
    },
    /* 874 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (Canada) [en-ca]
      //! author : Jonathan Abourbih : https://github.com/jonbca

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var en_ca = moment.defineLocale('en-ca', {
          months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_',
          ),
          monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
            '_',
          ),
          weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_',
          ),
          weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
          weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'YYYY-MM-DD',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY h:mm A',
            LLLL: 'dddd, MMMM D, YYYY h:mm A',
          },
          calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
          },
          ordinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function (number) {
            var b = number % 10,
              output =
                ~~((number % 100) / 10) === 1
                  ? 'th'
                  : b === 1
                  ? 'st'
                  : b === 2
                  ? 'nd'
                  : b === 3
                  ? 'rd'
                  : 'th';
            return number + output;
          },
        });

        return en_ca;
      });

      /***/
    },
    /* 875 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (United Kingdom) [en-gb]
      //! author : Chris Gedrim : https://github.com/chrisgedrim

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var en_gb = moment.defineLocale('en-gb', {
          months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_',
          ),
          monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
            '_',
          ),
          weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_',
          ),
          weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
          weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
          },
          ordinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function (number) {
            var b = number % 10,
              output =
                ~~((number % 100) / 10) === 1
                  ? 'th'
                  : b === 1
                  ? 'st'
                  : b === 2
                  ? 'nd'
                  : b === 3
                  ? 'rd'
                  : 'th';
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return en_gb;
      });

      /***/
    },
    /* 876 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (Ireland) [en-ie]
      //! author : Chris Cartlidge : https://github.com/chriscartlidge

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var en_ie = moment.defineLocale('en-ie', {
          months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_',
          ),
          monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
            '_',
          ),
          weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_',
          ),
          weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
          weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
          },
          ordinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function (number) {
            var b = number % 10,
              output =
                ~~((number % 100) / 10) === 1
                  ? 'th'
                  : b === 1
                  ? 'st'
                  : b === 2
                  ? 'nd'
                  : b === 3
                  ? 'rd'
                  : 'th';
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return en_ie;
      });

      /***/
    },
    /* 877 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (New Zealand) [en-nz]
      //! author : Luke McGregor : https://github.com/lukemcgregor

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var en_nz = moment.defineLocale('en-nz', {
          months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_',
          ),
          monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
            '_',
          ),
          weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_',
          ),
          weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
          weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
          },
          calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
          },
          ordinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function (number) {
            var b = number % 10,
              output =
                ~~((number % 100) / 10) === 1
                  ? 'th'
                  : b === 1
                  ? 'st'
                  : b === 2
                  ? 'nd'
                  : b === 3
                  ? 'rd'
                  : 'th';
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return en_nz;
      });

      /***/
    },
    /* 878 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Esperanto [eo]
      //! author : Colin Dean : https://github.com/colindean
      //! komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.
      //!          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var eo = moment.defineLocale('eo', {
          months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split(
            '_',
          ),
          monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split(
            '_',
          ),
          weekdays: 'Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato'.split(
            '_',
          ),
          weekdaysShort: 'Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab'.split('_'),
          weekdaysMin: 'Di_Lu_Ma_Me_Ĵa_Ve_Sa'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'D[-an de] MMMM, YYYY',
            LLL: 'D[-an de] MMMM, YYYY HH:mm',
            LLLL: 'dddd, [la] D[-an de] MMMM, YYYY HH:mm',
          },
          meridiemParse: /[ap]\.t\.m/i,
          isPM: function (input) {
            return input.charAt(0).toLowerCase() === 'p';
          },
          meridiem: function (hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? 'p.t.m.' : 'P.T.M.';
            } else {
              return isLower ? 'a.t.m.' : 'A.T.M.';
            }
          },
          calendar: {
            sameDay: '[Hodiaŭ je] LT',
            nextDay: '[Morgaŭ je] LT',
            nextWeek: 'dddd [je] LT',
            lastDay: '[Hieraŭ je] LT',
            lastWeek: '[pasinta] dddd [je] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'je %s',
            past: 'antaŭ %s',
            s: 'sekundoj',
            m: 'minuto',
            mm: '%d minutoj',
            h: 'horo',
            hh: '%d horoj',
            d: 'tago', //ne 'diurno', ĉar estas uzita por proksimumo
            dd: '%d tagoj',
            M: 'monato',
            MM: '%d monatoj',
            y: 'jaro',
            yy: '%d jaroj',
          },
          ordinalParse: /\d{1,2}a/,
          ordinal: '%da',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return eo;
      });

      /***/
    },
    /* 879 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Spanish [es]
      //! author : Julio Napurí : https://github.com/julionc

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
            '_',
          ),
          monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split(
            '_',
          );

        var es = moment.defineLocale('es', {
          months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
            '_',
          ),
          monthsShort: function (m, format) {
            if (/-MMM-/.test(format)) {
              return monthsShort[m.month()];
            } else {
              return monthsShortDot[m.month()];
            }
          },
          monthsParseExact: true,
          weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split(
            '_',
          ),
          weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
          weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY H:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
          },
          calendar: {
            sameDay: function () {
              return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function () {
              return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function () {
              return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function () {
              return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function () {
              return (
                '[el] dddd [pasado a la' +
                (this.hours() !== 1 ? 's' : '') +
                '] LT'
              );
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años',
          },
          ordinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return es;
      });

      /***/
    },
    /* 880 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Spanish (Dominican Republic) [es-do]

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
            '_',
          ),
          monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split(
            '_',
          );

        var es_do = moment.defineLocale('es-do', {
          months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
            '_',
          ),
          monthsShort: function (m, format) {
            if (/-MMM-/.test(format)) {
              return monthsShort[m.month()];
            } else {
              return monthsShortDot[m.month()];
            }
          },
          monthsParseExact: true,
          weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split(
            '_',
          ),
          weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
          weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY h:mm A',
            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',
          },
          calendar: {
            sameDay: function () {
              return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function () {
              return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function () {
              return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function () {
              return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function () {
              return (
                '[el] dddd [pasado a la' +
                (this.hours() !== 1 ? 's' : '') +
                '] LT'
              );
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años',
          },
          ordinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return es_do;
      });

      /***/
    },
    /* 881 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Estonian [et]
      //! author : Henry Kehlmann : https://github.com/madhenry
      //! improvements : Illimar Tambek : https://github.com/ragulka

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
            m: ['ühe minuti', 'üks minut'],
            mm: [number + ' minuti', number + ' minutit'],
            h: ['ühe tunni', 'tund aega', 'üks tund'],
            hh: [number + ' tunni', number + ' tundi'],
            d: ['ühe päeva', 'üks päev'],
            M: ['kuu aja', 'kuu aega', 'üks kuu'],
            MM: [number + ' kuu', number + ' kuud'],
            y: ['ühe aasta', 'aasta', 'üks aasta'],
            yy: [number + ' aasta', number + ' aastat'],
          };
          if (withoutSuffix) {
            return format[key][2] ? format[key][2] : format[key][1];
          }
          return isFuture ? format[key][0] : format[key][1];
        }

        var et = moment.defineLocale('et', {
          months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split(
            '_',
          ),
          monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split(
            '_',
          ),
          weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split(
            '_',
          ),
          weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),
          weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
          },
          calendar: {
            sameDay: '[Täna,] LT',
            nextDay: '[Homme,] LT',
            nextWeek: '[Järgmine] dddd LT',
            lastDay: '[Eile,] LT',
            lastWeek: '[Eelmine] dddd LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s pärast',
            past: '%s tagasi',
            s: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: '%d päeva',
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return et;
      });

      /***/
    },
    /* 882 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Basque [eu]
      //! author : Eneko Illarramendi : https://github.com/eillarra

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var eu = moment.defineLocale('eu', {
          months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split(
            '_',
          ),
          monthsShort: 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split(
            '_',
          ),
          weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),
          weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY[ko] MMMM[ren] D[a]',
            LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',
            LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
            l: 'YYYY-M-D',
            ll: 'YYYY[ko] MMM D[a]',
            lll: 'YYYY[ko] MMM D[a] HH:mm',
            llll: 'ddd, YYYY[ko] MMM D[a] HH:mm',
          },
          calendar: {
            sameDay: '[gaur] LT[etan]',
            nextDay: '[bihar] LT[etan]',
            nextWeek: 'dddd LT[etan]',
            lastDay: '[atzo] LT[etan]',
            lastWeek: '[aurreko] dddd LT[etan]',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s barru',
            past: 'duela %s',
            s: 'segundo batzuk',
            m: 'minutu bat',
            mm: '%d minutu',
            h: 'ordu bat',
            hh: '%d ordu',
            d: 'egun bat',
            dd: '%d egun',
            M: 'hilabete bat',
            MM: '%d hilabete',
            y: 'urte bat',
            yy: '%d urte',
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return eu;
      });

      /***/
    },
    /* 883 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Persian [fa]
      //! author : Ebrahim Byagowi : https://github.com/ebraminio

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var symbolMap = {
            1: '۱',
            2: '۲',
            3: '۳',
            4: '۴',
            5: '۵',
            6: '۶',
            7: '۷',
            8: '۸',
            9: '۹',
            0: '۰',
          },
          numberMap = {
            '۱': '1',
            '۲': '2',
            '۳': '3',
            '۴': '4',
            '۵': '5',
            '۶': '6',
            '۷': '7',
            '۸': '8',
            '۹': '9',
            '۰': '0',
          };

        var fa = moment.defineLocale('fa', {
          months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
            '_',
          ),
          monthsShort: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
            '_',
          ),
          weekdays: 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split(
            '_',
          ),
          weekdaysShort: 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split(
            '_',
          ),
          weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          meridiemParse: /قبل از ظهر|بعد از ظهر/,
          isPM: function (input) {
            return /بعد از ظهر/.test(input);
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
              return 'قبل از ظهر';
            } else {
              return 'بعد از ظهر';
            }
          },
          calendar: {
            sameDay: '[امروز ساعت] LT',
            nextDay: '[فردا ساعت] LT',
            nextWeek: 'dddd [ساعت] LT',
            lastDay: '[دیروز ساعت] LT',
            lastWeek: 'dddd [پیش] [ساعت] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'در %s',
            past: '%s پیش',
            s: 'چندین ثانیه',
            m: 'یک دقیقه',
            mm: '%d دقیقه',
            h: 'یک ساعت',
            hh: '%d ساعت',
            d: 'یک روز',
            dd: '%d روز',
            M: 'یک ماه',
            MM: '%d ماه',
            y: 'یک سال',
            yy: '%d سال',
          },
          preparse: function (string) {
            return string
              .replace(/[۰-۹]/g, function (match) {
                return numberMap[match];
              })
              .replace(/،/g, ',');
          },
          postformat: function (string) {
            return string
              .replace(/\d/g, function (match) {
                return symbolMap[match];
              })
              .replace(/,/g, '،');
          },
          ordinalParse: /\d{1,2}م/,
          ordinal: '%dم',
          week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return fa;
      });

      /***/
    },
    /* 884 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Finnish [fi]
      //! author : Tarmo Aidantausta : https://github.com/bleadof

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(
            ' ',
          ),
          numbersFuture = [
            'nolla',
            'yhden',
            'kahden',
            'kolmen',
            'neljän',
            'viiden',
            'kuuden',
            numbersPast[7],
            numbersPast[8],
            numbersPast[9],
          ];
        function translate(number, withoutSuffix, key, isFuture) {
          var result = '';
          switch (key) {
            case 's':
              return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
            case 'm':
              return isFuture ? 'minuutin' : 'minuutti';
            case 'mm':
              result = isFuture ? 'minuutin' : 'minuuttia';
              break;
            case 'h':
              return isFuture ? 'tunnin' : 'tunti';
            case 'hh':
              result = isFuture ? 'tunnin' : 'tuntia';
              break;
            case 'd':
              return isFuture ? 'päivän' : 'päivä';
            case 'dd':
              result = isFuture ? 'päivän' : 'päivää';
              break;
            case 'M':
              return isFuture ? 'kuukauden' : 'kuukausi';
            case 'MM':
              result = isFuture ? 'kuukauden' : 'kuukautta';
              break;
            case 'y':
              return isFuture ? 'vuoden' : 'vuosi';
            case 'yy':
              result = isFuture ? 'vuoden' : 'vuotta';
              break;
          }
          result = verbalNumber(number, isFuture) + ' ' + result;
          return result;
        }
        function verbalNumber(number, isFuture) {
          return number < 10
            ? isFuture
              ? numbersFuture[number]
              : numbersPast[number]
            : number;
        }

        var fi = moment.defineLocale('fi', {
          months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split(
            '_',
          ),
          monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split(
            '_',
          ),
          weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split(
            '_',
          ),
          weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),
          weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),
          longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD.MM.YYYY',
            LL: 'Do MMMM[ta] YYYY',
            LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',
            LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
            l: 'D.M.YYYY',
            ll: 'Do MMM YYYY',
            lll: 'Do MMM YYYY, [klo] HH.mm',
            llll: 'ddd, Do MMM YYYY, [klo] HH.mm',
          },
          calendar: {
            sameDay: '[tänään] [klo] LT',
            nextDay: '[huomenna] [klo] LT',
            nextWeek: 'dddd [klo] LT',
            lastDay: '[eilen] [klo] LT',
            lastWeek: '[viime] dddd[na] [klo] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s päästä',
            past: '%s sitten',
            s: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return fi;
      });

      /***/
    },
    /* 885 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Faroese [fo]
      //! author : Ragnar Johannesen : https://github.com/ragnar123

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var fo = moment.defineLocale('fo', {
          months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split(
            '_',
          ),
          monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split(
            '_',
          ),
          weekdays: 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split(
            '_',
          ),
          weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
          weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D. MMMM, YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Í dag kl.] LT',
            nextDay: '[Í morgin kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[Í gjár kl.] LT',
            lastWeek: '[síðstu] dddd [kl] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'um %s',
            past: '%s síðani',
            s: 'fá sekund',
            m: 'ein minutt',
            mm: '%d minuttir',
            h: 'ein tími',
            hh: '%d tímar',
            d: 'ein dagur',
            dd: '%d dagar',
            M: 'ein mánaði',
            MM: '%d mánaðir',
            y: 'eitt ár',
            yy: '%d ár',
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return fo;
      });

      /***/
    },
    /* 886 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : French [fr]
      //! author : John Fischer : https://github.com/jfroffice

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var fr = moment.defineLocale('fr', {
          months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
            '_',
          ),
          monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split(
            '_',
          ),
          weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
          weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: "[Aujourd'hui à] LT",
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans',
          },
          ordinalParse: /\d{1,2}(er|)/,
          ordinal: function (number) {
            return number + (number === 1 ? 'er' : '');
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return fr;
      });

      /***/
    },
    /* 887 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : French (Canada) [fr-ca]
      //! author : Jonathan Abourbih : https://github.com/jonbca

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var fr_ca = moment.defineLocale('fr-ca', {
          months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
            '_',
          ),
          monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split(
            '_',
          ),
          weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
          weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: "[Aujourd'hui à] LT",
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans',
          },
          ordinalParse: /\d{1,2}(er|e)/,
          ordinal: function (number) {
            return number + (number === 1 ? 'er' : 'e');
          },
        });

        return fr_ca;
      });

      /***/
    },
    /* 888 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : French (Switzerland) [fr-ch]
      //! author : Gaspard Bucher : https://github.com/gaspard

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var fr_ch = moment.defineLocale('fr-ch', {
          months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
            '_',
          ),
          monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split(
            '_',
          ),
          weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
          weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: "[Aujourd'hui à] LT",
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans',
          },
          ordinalParse: /\d{1,2}(er|e)/,
          ordinal: function (number) {
            return number + (number === 1 ? 'er' : 'e');
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return fr_ch;
      });

      /***/
    },
    /* 889 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Frisian [fy]
      //! author : Robin van der Vliet : https://github.com/robin0van0der0v

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split(
            '_',
          ),
          monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split(
            '_',
          );

        var fy = moment.defineLocale('fy', {
          months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split(
            '_',
          ),
          monthsShort: function (m, format) {
            if (/-MMM-/.test(format)) {
              return monthsShortWithoutDots[m.month()];
            } else {
              return monthsShortWithDots[m.month()];
            }
          },
          monthsParseExact: true,
          weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split(
            '_',
          ),
          weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),
          weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[hjoed om] LT',
            nextDay: '[moarn om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[juster om] LT',
            lastWeek: '[ôfrûne] dddd [om] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'oer %s',
            past: '%s lyn',
            s: 'in pear sekonden',
            m: 'ien minút',
            mm: '%d minuten',
            h: 'ien oere',
            hh: '%d oeren',
            d: 'ien dei',
            dd: '%d dagen',
            M: 'ien moanne',
            MM: '%d moannen',
            y: 'ien jier',
            yy: '%d jierren',
          },
          ordinalParse: /\d{1,2}(ste|de)/,
          ordinal: function (number) {
            return (
              number +
              (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')
            );
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return fy;
      });

      /***/
    },
    /* 890 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Scottish Gaelic [gd]
      //! author : Jon Ashdown : https://github.com/jonashdown

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var months = [
          'Am Faoilleach',
          'An Gearran',
          'Am Màrt',
          'An Giblean',
          'An Cèitean',
          'An t-Ògmhios',
          'An t-Iuchar',
          'An Lùnastal',
          'An t-Sultain',
          'An Dàmhair',
          'An t-Samhain',
          'An Dùbhlachd',
        ];

        var monthsShort = [
          'Faoi',
          'Gear',
          'Màrt',
          'Gibl',
          'Cèit',
          'Ògmh',
          'Iuch',
          'Lùn',
          'Sult',
          'Dàmh',
          'Samh',
          'Dùbh',
        ];

        var weekdays = [
          'Didòmhnaich',
          'Diluain',
          'Dimàirt',
          'Diciadain',
          'Diardaoin',
          'Dihaoine',
          'Disathairne',
        ];

        var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

        var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

        var gd = moment.defineLocale('gd', {
          months: months,
          monthsShort: monthsShort,
          monthsParseExact: true,
          weekdays: weekdays,
          weekdaysShort: weekdaysShort,
          weekdaysMin: weekdaysMin,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[An-diugh aig] LT',
            nextDay: '[A-màireach aig] LT',
            nextWeek: 'dddd [aig] LT',
            lastDay: '[An-dè aig] LT',
            lastWeek: 'dddd [seo chaidh] [aig] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'ann an %s',
            past: 'bho chionn %s',
            s: 'beagan diogan',
            m: 'mionaid',
            mm: '%d mionaidean',
            h: 'uair',
            hh: '%d uairean',
            d: 'latha',
            dd: '%d latha',
            M: 'mìos',
            MM: '%d mìosan',
            y: 'bliadhna',
            yy: '%d bliadhna',
          },
          ordinalParse: /\d{1,2}(d|na|mh)/,
          ordinal: function (number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return gd;
      });

      /***/
    },
    /* 891 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Galician [gl]
      //! author : Juan G. Hurtado : https://github.com/juanghurtado

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var gl = moment.defineLocale('gl', {
          months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split(
            '_',
          ),
          monthsShort: 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split(
            '_',
          ),
          weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
          weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY H:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
          },
          calendar: {
            sameDay: function () {
              return '[hoxe ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
            },
            nextDay: function () {
              return '[mañá ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
            },
            nextWeek: function () {
              return 'dddd [' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';
            },
            lastDay: function () {
              return '[onte ' + (this.hours() !== 1 ? 'á' : 'a') + '] LT';
            },
            lastWeek: function () {
              return (
                '[o] dddd [pasado ' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT'
              );
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: function (str) {
              if (str.indexOf('un') === 0) {
                return 'n' + str;
              }
              return 'en ' + str;
            },
            past: 'hai %s',
            s: 'uns segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'unha hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            M: 'un mes',
            MM: '%d meses',
            y: 'un ano',
            yy: '%d anos',
          },
          ordinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return gl;
      });

      /***/
    },
    /* 892 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Hebrew [he]
      //! author : Tomer Cohen : https://github.com/tomer
      //! author : Moshe Simantov : https://github.com/DevelopmentIL
      //! author : Tal Ater : https://github.com/TalAter

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var he = moment.defineLocale('he', {
          months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split(
            '_',
          ),
          monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split(
            '_',
          ),
          weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
          weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
          weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [ב]MMMM YYYY',
            LLL: 'D [ב]MMMM YYYY HH:mm',
            LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',
            l: 'D/M/YYYY',
            ll: 'D MMM YYYY',
            lll: 'D MMM YYYY HH:mm',
            llll: 'ddd, D MMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[היום ב־]LT',
            nextDay: '[מחר ב־]LT',
            nextWeek: 'dddd [בשעה] LT',
            lastDay: '[אתמול ב־]LT',
            lastWeek: '[ביום] dddd [האחרון בשעה] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'בעוד %s',
            past: 'לפני %s',
            s: 'מספר שניות',
            m: 'דקה',
            mm: '%d דקות',
            h: 'שעה',
            hh: function (number) {
              if (number === 2) {
                return 'שעתיים';
              }
              return number + ' שעות';
            },
            d: 'יום',
            dd: function (number) {
              if (number === 2) {
                return 'יומיים';
              }
              return number + ' ימים';
            },
            M: 'חודש',
            MM: function (number) {
              if (number === 2) {
                return 'חודשיים';
              }
              return number + ' חודשים';
            },
            y: 'שנה',
            yy: function (number) {
              if (number === 2) {
                return 'שנתיים';
              } else if (number % 10 === 0 && number !== 10) {
                return number + ' שנה';
              }
              return number + ' שנים';
            },
          },
          meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
          isPM: function (input) {
            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 5) {
              return 'לפנות בוקר';
            } else if (hour < 10) {
              return 'בבוקר';
            } else if (hour < 12) {
              return isLower ? 'לפנה"צ' : 'לפני הצהריים';
            } else if (hour < 18) {
              return isLower ? 'אחה"צ' : 'אחרי הצהריים';
            } else {
              return 'בערב';
            }
          },
        });

        return he;
      });

      /***/
    },
    /* 893 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Hindi [hi]
      //! author : Mayank Singhal : https://github.com/mayanksinghal

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var symbolMap = {
            1: '१',
            2: '२',
            3: '३',
            4: '४',
            5: '५',
            6: '६',
            7: '७',
            8: '८',
            9: '९',
            0: '०',
          },
          numberMap = {
            '१': '1',
            '२': '2',
            '३': '3',
            '४': '4',
            '५': '5',
            '६': '6',
            '७': '7',
            '८': '8',
            '९': '9',
            '०': '0',
          };

        var hi = moment.defineLocale('hi', {
          months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split(
            '_',
          ),
          monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split(
            '_',
          ),
          weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
          weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
          longDateFormat: {
            LT: 'A h:mm बजे',
            LTS: 'A h:mm:ss बजे',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm बजे',
            LLLL: 'dddd, D MMMM YYYY, A h:mm बजे',
          },
          calendar: {
            sameDay: '[आज] LT',
            nextDay: '[कल] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[कल] LT',
            lastWeek: '[पिछले] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s में',
            past: '%s पहले',
            s: 'कुछ ही क्षण',
            m: 'एक मिनट',
            mm: '%d मिनट',
            h: 'एक घंटा',
            hh: '%d घंटे',
            d: 'एक दिन',
            dd: '%d दिन',
            M: 'एक महीने',
            MM: '%d महीने',
            y: 'एक वर्ष',
            yy: '%d वर्ष',
          },
          preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function (string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          // Hindi notation for meridiems are quite fuzzy in practice. While there exists
          // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
          meridiemParse: /रात|सुबह|दोपहर|शाम/,
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === 'रात') {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सुबह') {
              return hour;
            } else if (meridiem === 'दोपहर') {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'शाम') {
              return hour + 12;
            }
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
              return 'रात';
            } else if (hour < 10) {
              return 'सुबह';
            } else if (hour < 17) {
              return 'दोपहर';
            } else if (hour < 20) {
              return 'शाम';
            } else {
              return 'रात';
            }
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return hi;
      });

      /***/
    },
    /* 894 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Croatian [hr]
      //! author : Bojan Marković : https://github.com/bmarkovic

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        function translate(number, withoutSuffix, key) {
          var result = number + ' ';
          switch (key) {
            case 'm':
              return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
              if (number === 1) {
                result += 'minuta';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'minute';
              } else {
                result += 'minuta';
              }
              return result;
            case 'h':
              return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
              if (number === 1) {
                result += 'sat';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'sata';
              } else {
                result += 'sati';
              }
              return result;
            case 'dd':
              if (number === 1) {
                result += 'dan';
              } else {
                result += 'dana';
              }
              return result;
            case 'MM':
              if (number === 1) {
                result += 'mjesec';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'mjeseca';
              } else {
                result += 'mjeseci';
              }
              return result;
            case 'yy':
              if (number === 1) {
                result += 'godina';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'godine';
              } else {
                result += 'godina';
              }
              return result;
          }
        }

        var hr = moment.defineLocale('hr', {
          months: {
            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split(
              '_',
            ),
            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split(
              '_',
            ),
          },
          monthsShort: 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
            '_',
          ),
          weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
          weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
          },
          calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[u] [nedjelju] [u] LT';
                case 3:
                  return '[u] [srijedu] [u] LT';
                case 6:
                  return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                  return '[u] dddd [u] LT';
              }
            },
            lastDay: '[jučer u] LT',
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                case 3:
                  return '[prošlu] dddd [u] LT';
                case 6:
                  return '[prošle] [subote] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                  return '[prošli] dddd [u] LT';
              }
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'par sekundi',
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: 'dan',
            dd: translate,
            M: 'mjesec',
            MM: translate,
            y: 'godinu',
            yy: translate,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return hr;
      });

      /***/
    },
    /* 895 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Hungarian [hu]
      //! author : Adam Brunner : https://github.com/adambrunner

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(
          ' ',
        );
        function translate(number, withoutSuffix, key, isFuture) {
          var num = number,
            suffix;
          switch (key) {
            case 's':
              return isFuture || withoutSuffix
                ? 'néhány másodperc'
                : 'néhány másodperce';
            case 'm':
              return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'mm':
              return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'h':
              return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'hh':
              return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'd':
              return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'dd':
              return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'M':
              return (
                'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja')
              );
            case 'MM':
              return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'y':
              return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
            case 'yy':
              return num + (isFuture || withoutSuffix ? ' év' : ' éve');
          }
          return '';
        }
        function week(isFuture) {
          return (
            (isFuture ? '' : '[múlt] ') +
            '[' +
            weekEndings[this.day()] +
            '] LT[-kor]'
          );
        }

        var hu = moment.defineLocale('hu', {
          months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split(
            '_',
          ),
          monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split(
            '_',
          ),
          weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split(
            '_',
          ),
          weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
          weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'YYYY.MM.DD.',
            LL: 'YYYY. MMMM D.',
            LLL: 'YYYY. MMMM D. H:mm',
            LLLL: 'YYYY. MMMM D., dddd H:mm',
          },
          meridiemParse: /de|du/i,
          isPM: function (input) {
            return input.charAt(1).toLowerCase() === 'u';
          },
          meridiem: function (hours, minutes, isLower) {
            if (hours < 12) {
              return isLower === true ? 'de' : 'DE';
            } else {
              return isLower === true ? 'du' : 'DU';
            }
          },
          calendar: {
            sameDay: '[ma] LT[-kor]',
            nextDay: '[holnap] LT[-kor]',
            nextWeek: function () {
              return week.call(this, true);
            },
            lastDay: '[tegnap] LT[-kor]',
            lastWeek: function () {
              return week.call(this, false);
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s múlva',
            past: '%s',
            s: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return hu;
      });

      /***/
    },
    /* 896 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Armenian [hy-am]
      //! author : Armendarabyan : https://github.com/armendarabyan

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var hy_am = moment.defineLocale('hy-am', {
          months: {
            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split(
              '_',
            ),
            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split(
              '_',
            ),
          },
          monthsShort: 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split(
            '_',
          ),
          weekdays: 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split(
            '_',
          ),
          weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
          weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY թ.',
            LLL: 'D MMMM YYYY թ., HH:mm',
            LLLL: 'dddd, D MMMM YYYY թ., HH:mm',
          },
          calendar: {
            sameDay: '[այսօր] LT',
            nextDay: '[վաղը] LT',
            lastDay: '[երեկ] LT',
            nextWeek: function () {
              return 'dddd [օրը ժամը] LT';
            },
            lastWeek: function () {
              return '[անցած] dddd [օրը ժամը] LT';
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s հետո',
            past: '%s առաջ',
            s: 'մի քանի վայրկյան',
            m: 'րոպե',
            mm: '%d րոպե',
            h: 'ժամ',
            hh: '%d ժամ',
            d: 'օր',
            dd: '%d օր',
            M: 'ամիս',
            MM: '%d ամիս',
            y: 'տարի',
            yy: '%d տարի',
          },
          meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
          isPM: function (input) {
            return /^(ցերեկվա|երեկոյան)$/.test(input);
          },
          meridiem: function (hour) {
            if (hour < 4) {
              return 'գիշերվա';
            } else if (hour < 12) {
              return 'առավոտվա';
            } else if (hour < 17) {
              return 'ցերեկվա';
            } else {
              return 'երեկոյան';
            }
          },
          ordinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
          ordinal: function (number, period) {
            switch (period) {
              case 'DDD':
              case 'w':
              case 'W':
              case 'DDDo':
                if (number === 1) {
                  return number + '-ին';
                }
                return number + '-րդ';
              default:
                return number;
            }
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return hy_am;
      });

      /***/
    },
    /* 897 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Indonesian [id]
      //! author : Mohammad Satrio Utomo : https://github.com/tyok
      //! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var id = moment.defineLocale('id', {
          months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split(
            '_',
          ),
          monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split(
            '_',
          ),
          weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
          weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
          weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
          longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
          },
          meridiemParse: /pagi|siang|sore|malam/,
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === 'pagi') {
              return hour;
            } else if (meridiem === 'siang') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sore' || meridiem === 'malam') {
              return hour + 12;
            }
          },
          meridiem: function (hours, minutes, isLower) {
            if (hours < 11) {
              return 'pagi';
            } else if (hours < 15) {
              return 'siang';
            } else if (hours < 19) {
              return 'sore';
            } else {
              return 'malam';
            }
          },
          calendar: {
            sameDay: '[Hari ini pukul] LT',
            nextDay: '[Besok pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kemarin pukul] LT',
            lastWeek: 'dddd [lalu pukul] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'dalam %s',
            past: '%s yang lalu',
            s: 'beberapa detik',
            m: 'semenit',
            mm: '%d menit',
            h: 'sejam',
            hh: '%d jam',
            d: 'sehari',
            dd: '%d hari',
            M: 'sebulan',
            MM: '%d bulan',
            y: 'setahun',
            yy: '%d tahun',
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return id;
      });

      /***/
    },
    /* 898 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Icelandic [is]
      //! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        function plural(n) {
          if (n % 100 === 11) {
            return true;
          } else if (n % 10 === 1) {
            return false;
          }
          return true;
        }
        function translate(number, withoutSuffix, key, isFuture) {
          var result = number + ' ';
          switch (key) {
            case 's':
              return withoutSuffix || isFuture
                ? 'nokkrar sekúndur'
                : 'nokkrum sekúndum';
            case 'm':
              return withoutSuffix ? 'mínúta' : 'mínútu';
            case 'mm':
              if (plural(number)) {
                return (
                  result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum')
                );
              } else if (withoutSuffix) {
                return result + 'mínúta';
              }
              return result + 'mínútu';
            case 'hh':
              if (plural(number)) {
                return (
                  result +
                  (withoutSuffix || isFuture
                    ? 'klukkustundir'
                    : 'klukkustundum')
                );
              }
              return result + 'klukkustund';
            case 'd':
              if (withoutSuffix) {
                return 'dagur';
              }
              return isFuture ? 'dag' : 'degi';
            case 'dd':
              if (plural(number)) {
                if (withoutSuffix) {
                  return result + 'dagar';
                }
                return result + (isFuture ? 'daga' : 'dögum');
              } else if (withoutSuffix) {
                return result + 'dagur';
              }
              return result + (isFuture ? 'dag' : 'degi');
            case 'M':
              if (withoutSuffix) {
                return 'mánuður';
              }
              return isFuture ? 'mánuð' : 'mánuði';
            case 'MM':
              if (plural(number)) {
                if (withoutSuffix) {
                  return result + 'mánuðir';
                }
                return result + (isFuture ? 'mánuði' : 'mánuðum');
              } else if (withoutSuffix) {
                return result + 'mánuður';
              }
              return result + (isFuture ? 'mánuð' : 'mánuði');
            case 'y':
              return withoutSuffix || isFuture ? 'ár' : 'ári';
            case 'yy':
              if (plural(number)) {
                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
              }
              return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
          }
        }

        var is = moment.defineLocale('is', {
          months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split(
            '_',
          ),
          monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split(
            '_',
          ),
          weekdays: 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split(
            '_',
          ),
          weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
          weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY [kl.] H:mm',
            LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm',
          },
          calendar: {
            sameDay: '[í dag kl.] LT',
            nextDay: '[á morgun kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[í gær kl.] LT',
            lastWeek: '[síðasta] dddd [kl.] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'eftir %s',
            past: 'fyrir %s síðan',
            s: translate,
            m: translate,
            mm: translate,
            h: 'klukkustund',
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return is;
      });

      /***/
    },
    /* 899 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Italian [it]
      //! author : Lorenzo : https://github.com/aliem
      //! author: Mattia Larentis: https://github.com/nostalgiaz

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var it = moment.defineLocale('it', {
          months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(
            '_',
          ),
          monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split(
            '_',
          ),
          weekdays: 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split(
            '_',
          ),
          weekdaysShort: 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),
          weekdaysMin: 'Do_Lu_Ma_Me_Gi_Ve_Sa'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Oggi alle] LT',
            nextDay: '[Domani alle] LT',
            nextWeek: 'dddd [alle] LT',
            lastDay: '[Ieri alle] LT',
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[la scorsa] dddd [alle] LT';
                default:
                  return '[lo scorso] dddd [alle] LT';
              }
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: function (s) {
              return (/^[0-9].+$/.test(s) ? 'tra' : 'in') + ' ' + s;
            },
            past: '%s fa',
            s: 'alcuni secondi',
            m: 'un minuto',
            mm: '%d minuti',
            h: "un'ora",
            hh: '%d ore',
            d: 'un giorno',
            dd: '%d giorni',
            M: 'un mese',
            MM: '%d mesi',
            y: 'un anno',
            yy: '%d anni',
          },
          ordinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return it;
      });

      /***/
    },
    /* 900 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Japanese [ja]
      //! author : LI Long : https://github.com/baryon

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var ja = moment.defineLocale('ja', {
          months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
            '_',
          ),
          monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
            '_',
          ),
          weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split(
            '_',
          ),
          weekdaysShort: '日_月_火_水_木_金_土'.split('_'),
          weekdaysMin: '日_月_火_水_木_金_土'.split('_'),
          longDateFormat: {
            LT: 'Ah時m分',
            LTS: 'Ah時m分s秒',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日Ah時m分',
            LLLL: 'YYYY年M月D日Ah時m分 dddd',
          },
          meridiemParse: /午前|午後/i,
          isPM: function (input) {
            return input === '午後';
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
              return '午前';
            } else {
              return '午後';
            }
          },
          calendar: {
            sameDay: '[今日] LT',
            nextDay: '[明日] LT',
            nextWeek: '[来週]dddd LT',
            lastDay: '[昨日] LT',
            lastWeek: '[前週]dddd LT',
            sameElse: 'L',
          },
          ordinalParse: /\d{1,2}日/,
          ordinal: function (number, period) {
            switch (period) {
              case 'd':
              case 'D':
              case 'DDD':
                return number + '日';
              default:
                return number;
            }
          },
          relativeTime: {
            future: '%s後',
            past: '%s前',
            s: '数秒',
            m: '1分',
            mm: '%d分',
            h: '1時間',
            hh: '%d時間',
            d: '1日',
            dd: '%d日',
            M: '1ヶ月',
            MM: '%dヶ月',
            y: '1年',
            yy: '%d年',
          },
        });

        return ja;
      });

      /***/
    },
    /* 901 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Javanese [jv]
      //! author : Rony Lantip : https://github.com/lantip
      //! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var jv = moment.defineLocale('jv', {
          months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split(
            '_',
          ),
          monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split(
            '_',
          ),
          weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
          weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
          weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
          longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
          },
          meridiemParse: /enjing|siyang|sonten|ndalu/,
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === 'enjing') {
              return hour;
            } else if (meridiem === 'siyang') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
              return hour + 12;
            }
          },
          meridiem: function (hours, minutes, isLower) {
            if (hours < 11) {
              return 'enjing';
            } else if (hours < 15) {
              return 'siyang';
            } else if (hours < 19) {
              return 'sonten';
            } else {
              return 'ndalu';
            }
          },
          calendar: {
            sameDay: '[Dinten puniko pukul] LT',
            nextDay: '[Mbenjang pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kala wingi pukul] LT',
            lastWeek: 'dddd [kepengker pukul] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'wonten ing %s',
            past: '%s ingkang kepengker',
            s: 'sawetawis detik',
            m: 'setunggal menit',
            mm: '%d menit',
            h: 'setunggal jam',
            hh: '%d jam',
            d: 'sedinten',
            dd: '%d dinten',
            M: 'sewulan',
            MM: '%d wulan',
            y: 'setaun',
            yy: '%d taun',
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return jv;
      });

      /***/
    },
    /* 902 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Georgian [ka]
      //! author : Irakli Janiashvili : https://github.com/irakli-janiashvili

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var ka = moment.defineLocale('ka', {
          months: {
            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split(
              '_',
            ),
            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split(
              '_',
            ),
          },
          monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split(
            '_',
          ),
          weekdays: {
            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split(
              '_',
            ),
            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split(
              '_',
            ),
            isFormat: /(წინა|შემდეგ)/,
          },
          weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
          weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
          },
          calendar: {
            sameDay: '[დღეს] LT[-ზე]',
            nextDay: '[ხვალ] LT[-ზე]',
            lastDay: '[გუშინ] LT[-ზე]',
            nextWeek: '[შემდეგ] dddd LT[-ზე]',
            lastWeek: '[წინა] dddd LT-ზე',
            sameElse: 'L',
          },
          relativeTime: {
            future: function (s) {
              return /(წამი|წუთი|საათი|წელი)/.test(s)
                ? s.replace(/ი$/, 'ში')
                : s + 'ში';
            },
            past: function (s) {
              if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {
                return s.replace(/(ი|ე)$/, 'ის წინ');
              }
              if (/წელი/.test(s)) {
                return s.replace(/წელი$/, 'წლის წინ');
              }
            },
            s: 'რამდენიმე წამი',
            m: 'წუთი',
            mm: '%d წუთი',
            h: 'საათი',
            hh: '%d საათი',
            d: 'დღე',
            dd: '%d დღე',
            M: 'თვე',
            MM: '%d თვე',
            y: 'წელი',
            yy: '%d წელი',
          },
          ordinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
          ordinal: function (number) {
            if (number === 0) {
              return number;
            }
            if (number === 1) {
              return number + '-ლი';
            }
            if (
              number < 20 ||
              (number <= 100 && number % 20 === 0) ||
              number % 100 === 0
            ) {
              return 'მე-' + number;
            }
            return number + '-ე';
          },
          week: {
            dow: 1,
            doy: 7,
          },
        });

        return ka;
      });

      /***/
    },
    /* 903 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Kazakh [kk]
      //! authors : Nurlan Rakhimzhanov : https://github.com/nurlan

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var suffixes = {
          0: '-ші',
          1: '-ші',
          2: '-ші',
          3: '-ші',
          4: '-ші',
          5: '-ші',
          6: '-шы',
          7: '-ші',
          8: '-ші',
          9: '-шы',
          10: '-шы',
          20: '-шы',
          30: '-шы',
          40: '-шы',
          50: '-ші',
          60: '-шы',
          70: '-ші',
          80: '-ші',
          90: '-шы',
          100: '-ші',
        };

        var kk = moment.defineLocale('kk', {
          months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split(
            '_',
          ),
          monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split(
            '_',
          ),
          weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split(
            '_',
          ),
          weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
          weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Бүгін сағат] LT',
            nextDay: '[Ертең сағат] LT',
            nextWeek: 'dddd [сағат] LT',
            lastDay: '[Кеше сағат] LT',
            lastWeek: '[Өткен аптаның] dddd [сағат] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s ішінде',
            past: '%s бұрын',
            s: 'бірнеше секунд',
            m: 'бір минут',
            mm: '%d минут',
            h: 'бір сағат',
            hh: '%d сағат',
            d: 'бір күн',
            dd: '%d күн',
            M: 'бір ай',
            MM: '%d ай',
            y: 'бір жыл',
            yy: '%d жыл',
          },
          ordinalParse: /\d{1,2}-(ші|шы)/,
          ordinal: function (number) {
            var a = number % 10,
              b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return kk;
      });

      /***/
    },
    /* 904 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Cambodian [km]
      //! author : Kruy Vanna : https://github.com/kruyvanna

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var km = moment.defineLocale('km', {
          months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_',
          ),
          monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_',
          ),
          weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
          weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split(
            '_',
          ),
          weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split(
            '_',
          ),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
            nextDay: '[ស្អែក ម៉ោង] LT',
            nextWeek: 'dddd [ម៉ោង] LT',
            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%sទៀត',
            past: '%sមុន',
            s: 'ប៉ុន្មានវិនាទី',
            m: 'មួយនាទី',
            mm: '%d នាទី',
            h: 'មួយម៉ោង',
            hh: '%d ម៉ោង',
            d: 'មួយថ្ងៃ',
            dd: '%d ថ្ងៃ',
            M: 'មួយខែ',
            MM: '%d ខែ',
            y: 'មួយឆ្នាំ',
            yy: '%d ឆ្នាំ',
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return km;
      });

      /***/
    },
    /* 905 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Korean [ko]
      //! author : Kyungwook, Park : https://github.com/kyungw00k
      //! author : Jeeeyul Lee <jeeeyul@gmail.com>

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var ko = moment.defineLocale('ko', {
          months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split(
            '_',
          ),
          monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split(
            '_',
          ),
          weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split(
            '_',
          ),
          weekdaysShort: '일_월_화_수_목_금_토'.split('_'),
          weekdaysMin: '일_월_화_수_목_금_토'.split('_'),
          longDateFormat: {
            LT: 'A h시 m분',
            LTS: 'A h시 m분 s초',
            L: 'YYYY.MM.DD',
            LL: 'YYYY년 MMMM D일',
            LLL: 'YYYY년 MMMM D일 A h시 m분',
            LLLL: 'YYYY년 MMMM D일 dddd A h시 m분',
          },
          calendar: {
            sameDay: '오늘 LT',
            nextDay: '내일 LT',
            nextWeek: 'dddd LT',
            lastDay: '어제 LT',
            lastWeek: '지난주 dddd LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s 후',
            past: '%s 전',
            s: '몇 초',
            ss: '%d초',
            m: '일분',
            mm: '%d분',
            h: '한 시간',
            hh: '%d시간',
            d: '하루',
            dd: '%d일',
            M: '한 달',
            MM: '%d달',
            y: '일 년',
            yy: '%d년',
          },
          ordinalParse: /\d{1,2}일/,
          ordinal: '%d일',
          meridiemParse: /오전|오후/,
          isPM: function (token) {
            return token === '오후';
          },
          meridiem: function (hour, minute, isUpper) {
            return hour < 12 ? '오전' : '오후';
          },
        });

        return ko;
      });

      /***/
    },
    /* 906 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Kyrgyz [ky]
      //! author : Chyngyz Arystan uulu : https://github.com/chyngyz

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var suffixes = {
          0: '-чү',
          1: '-чи',
          2: '-чи',
          3: '-чү',
          4: '-чү',
          5: '-чи',
          6: '-чы',
          7: '-чи',
          8: '-чи',
          9: '-чу',
          10: '-чу',
          20: '-чы',
          30: '-чу',
          40: '-чы',
          50: '-чү',
          60: '-чы',
          70: '-чи',
          80: '-чи',
          90: '-чу',
          100: '-чү',
        };

        var ky = moment.defineLocale('ky', {
          months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
            '_',
          ),
          monthsShort: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split(
            '_',
          ),
          weekdays: 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split(
            '_',
          ),
          weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
          weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Бүгүн саат] LT',
            nextDay: '[Эртең саат] LT',
            nextWeek: 'dddd [саат] LT',
            lastDay: '[Кече саат] LT',
            lastWeek: '[Өткен аптанын] dddd [күнү] [саат] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s ичинде',
            past: '%s мурун',
            s: 'бирнече секунд',
            m: 'бир мүнөт',
            mm: '%d мүнөт',
            h: 'бир саат',
            hh: '%d саат',
            d: 'бир күн',
            dd: '%d күн',
            M: 'бир ай',
            MM: '%d ай',
            y: 'бир жыл',
            yy: '%d жыл',
          },
          ordinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
          ordinal: function (number) {
            var a = number % 10,
              b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return ky;
      });

      /***/
    },
    /* 907 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Luxembourgish [lb]
      //! author : mweimerskirch : https://github.com/mweimerskirch
      //! author : David Raison : https://github.com/kwisatz

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            m: ['eng Minutt', 'enger Minutt'],
            h: ['eng Stonn', 'enger Stonn'],
            d: ['een Dag', 'engem Dag'],
            M: ['ee Mount', 'engem Mount'],
            y: ['ee Joer', 'engem Joer'],
          };
          return withoutSuffix ? format[key][0] : format[key][1];
        }
        function processFutureTime(string) {
          var number = string.substr(0, string.indexOf(' '));
          if (eifelerRegelAppliesToNumber(number)) {
            return 'a ' + string;
          }
          return 'an ' + string;
        }
        function processPastTime(string) {
          var number = string.substr(0, string.indexOf(' '));
          if (eifelerRegelAppliesToNumber(number)) {
            return 'viru ' + string;
          }
          return 'virun ' + string;
        }
        /**
         * Returns true if the word before the given number loses the '-n' ending.
         * e.g. 'an 10 Deeg' but 'a 5 Deeg'
         *
         * @param number {integer}
         * @returns {boolean}
         */
        function eifelerRegelAppliesToNumber(number) {
          number = parseInt(number, 10);
          if (isNaN(number)) {
            return false;
          }
          if (number < 0) {
            // Negative Number --> always true
            return true;
          } else if (number < 10) {
            // Only 1 digit
            if (4 <= number && number <= 7) {
              return true;
            }
            return false;
          } else if (number < 100) {
            // 2 digits
            var lastDigit = number % 10,
              firstDigit = number / 10;
            if (lastDigit === 0) {
              return eifelerRegelAppliesToNumber(firstDigit);
            }
            return eifelerRegelAppliesToNumber(lastDigit);
          } else if (number < 10000) {
            // 3 or 4 digits --> recursively check first digit
            while (number >= 10) {
              number = number / 10;
            }
            return eifelerRegelAppliesToNumber(number);
          } else {
            // Anything larger than 4 digits: recursively check first n-3 digits
            number = number / 1000;
            return eifelerRegelAppliesToNumber(number);
          }
        }

        var lb = moment.defineLocale('lb', {
          months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split(
            '_',
          ),
          monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split(
            '_',
          ),
          weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
          weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm [Auer]',
            LTS: 'H:mm:ss [Auer]',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm [Auer]',
            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]',
          },
          calendar: {
            sameDay: '[Haut um] LT',
            sameElse: 'L',
            nextDay: '[Muer um] LT',
            nextWeek: 'dddd [um] LT',
            lastDay: '[Gëschter um] LT',
            lastWeek: function () {
              // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
              switch (this.day()) {
                case 2:
                case 4:
                  return '[Leschten] dddd [um] LT';
                default:
                  return '[Leschte] dddd [um] LT';
              }
            },
          },
          relativeTime: {
            future: processFutureTime,
            past: processPastTime,
            s: 'e puer Sekonnen',
            m: processRelativeTime,
            mm: '%d Minutten',
            h: processRelativeTime,
            hh: '%d Stonnen',
            d: processRelativeTime,
            dd: '%d Deeg',
            M: processRelativeTime,
            MM: '%d Méint',
            y: processRelativeTime,
            yy: '%d Joer',
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return lb;
      });

      /***/
    },
    /* 908 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Lao [lo]
      //! author : Ryan Hart : https://github.com/ryanhart2

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var lo = moment.defineLocale('lo', {
          months: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
            '_',
          ),
          monthsShort: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
            '_',
          ),
          weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
          weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
          weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'ວັນdddd D MMMM YYYY HH:mm',
          },
          meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
          isPM: function (input) {
            return input === 'ຕອນແລງ';
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
              return 'ຕອນເຊົ້າ';
            } else {
              return 'ຕອນແລງ';
            }
          },
          calendar: {
            sameDay: '[ມື້ນີ້ເວລາ] LT',
            nextDay: '[ມື້ອື່ນເວລາ] LT',
            nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',
            lastDay: '[ມື້ວານນີ້ເວລາ] LT',
            lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'ອີກ %s',
            past: '%sຜ່ານມາ',
            s: 'ບໍ່ເທົ່າໃດວິນາທີ',
            m: '1 ນາທີ',
            mm: '%d ນາທີ',
            h: '1 ຊົ່ວໂມງ',
            hh: '%d ຊົ່ວໂມງ',
            d: '1 ມື້',
            dd: '%d ມື້',
            M: '1 ເດືອນ',
            MM: '%d ເດືອນ',
            y: '1 ປີ',
            yy: '%d ປີ',
          },
          ordinalParse: /(ທີ່)\d{1,2}/,
          ordinal: function (number) {
            return 'ທີ່' + number;
          },
        });

        return lo;
      });

      /***/
    },
    /* 909 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Lithuanian [lt]
      //! author : Mindaugas Mozūras : https://github.com/mmozuras

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var units = {
          m: 'minutė_minutės_minutę',
          mm: 'minutės_minučių_minutes',
          h: 'valanda_valandos_valandą',
          hh: 'valandos_valandų_valandas',
          d: 'diena_dienos_dieną',
          dd: 'dienos_dienų_dienas',
          M: 'mėnuo_mėnesio_mėnesį',
          MM: 'mėnesiai_mėnesių_mėnesius',
          y: 'metai_metų_metus',
          yy: 'metai_metų_metus',
        };
        function translateSeconds(number, withoutSuffix, key, isFuture) {
          if (withoutSuffix) {
            return 'kelios sekundės';
          } else {
            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
          }
        }
        function translateSingular(number, withoutSuffix, key, isFuture) {
          return withoutSuffix
            ? forms(key)[0]
            : isFuture
            ? forms(key)[1]
            : forms(key)[2];
        }
        function special(number) {
          return number % 10 === 0 || (number > 10 && number < 20);
        }
        function forms(key) {
          return units[key].split('_');
        }
        function translate(number, withoutSuffix, key, isFuture) {
          var result = number + ' ';
          if (number === 1) {
            return (
              result +
              translateSingular(number, withoutSuffix, key[0], isFuture)
            );
          } else if (withoutSuffix) {
            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
          } else {
            if (isFuture) {
              return result + forms(key)[1];
            } else {
              return result + (special(number) ? forms(key)[1] : forms(key)[2]);
            }
          }
        }
        var lt = moment.defineLocale('lt', {
          months: {
            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split(
              '_',
            ),
            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split(
              '_',
            ),
            isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/,
          },
          monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split(
            '_',
          ),
          weekdays: {
            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split(
              '_',
            ),
            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split(
              '_',
            ),
            isFormat: /dddd HH:mm/,
          },
          weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
          weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY [m.] MMMM D [d.]',
            LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
            l: 'YYYY-MM-DD',
            ll: 'YYYY [m.] MMMM D [d.]',
            lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]',
          },
          calendar: {
            sameDay: '[Šiandien] LT',
            nextDay: '[Rytoj] LT',
            nextWeek: 'dddd LT',
            lastDay: '[Vakar] LT',
            lastWeek: '[Praėjusį] dddd LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'po %s',
            past: 'prieš %s',
            s: translateSeconds,
            m: translateSingular,
            mm: translate,
            h: translateSingular,
            hh: translate,
            d: translateSingular,
            dd: translate,
            M: translateSingular,
            MM: translate,
            y: translateSingular,
            yy: translate,
          },
          ordinalParse: /\d{1,2}-oji/,
          ordinal: function (number) {
            return number + '-oji';
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return lt;
      });

      /***/
    },
    /* 910 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Latvian [lv]
      //! author : Kristaps Karlsons : https://github.com/skakri
      //! author : Jānis Elmeris : https://github.com/JanisE

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var units = {
          m: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
          mm: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
          h: 'stundas_stundām_stunda_stundas'.split('_'),
          hh: 'stundas_stundām_stunda_stundas'.split('_'),
          d: 'dienas_dienām_diena_dienas'.split('_'),
          dd: 'dienas_dienām_diena_dienas'.split('_'),
          M: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
          MM: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
          y: 'gada_gadiem_gads_gadi'.split('_'),
          yy: 'gada_gadiem_gads_gadi'.split('_'),
        };
        /**
         * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
         */
        function format(forms, number, withoutSuffix) {
          if (withoutSuffix) {
            // E.g. "21 minūte", "3 minūtes".
            return number % 10 === 1 && number % 100 !== 11
              ? forms[2]
              : forms[3];
          } else {
            // E.g. "21 minūtes" as in "pēc 21 minūtes".
            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
            return number % 10 === 1 && number % 100 !== 11
              ? forms[0]
              : forms[1];
          }
        }
        function relativeTimeWithPlural(number, withoutSuffix, key) {
          return number + ' ' + format(units[key], number, withoutSuffix);
        }
        function relativeTimeWithSingular(number, withoutSuffix, key) {
          return format(units[key], number, withoutSuffix);
        }
        function relativeSeconds(number, withoutSuffix) {
          return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
        }

        var lv = moment.defineLocale('lv', {
          months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split(
            '_',
          ),
          monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split(
            '_',
          ),
          weekdays: 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split(
            '_',
          ),
          weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),
          weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY.',
            LL: 'YYYY. [gada] D. MMMM',
            LLL: 'YYYY. [gada] D. MMMM, HH:mm',
            LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm',
          },
          calendar: {
            sameDay: '[Šodien pulksten] LT',
            nextDay: '[Rīt pulksten] LT',
            nextWeek: 'dddd [pulksten] LT',
            lastDay: '[Vakar pulksten] LT',
            lastWeek: '[Pagājušā] dddd [pulksten] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'pēc %s',
            past: 'pirms %s',
            s: relativeSeconds,
            m: relativeTimeWithSingular,
            mm: relativeTimeWithPlural,
            h: relativeTimeWithSingular,
            hh: relativeTimeWithPlural,
            d: relativeTimeWithSingular,
            dd: relativeTimeWithPlural,
            M: relativeTimeWithSingular,
            MM: relativeTimeWithPlural,
            y: relativeTimeWithSingular,
            yy: relativeTimeWithPlural,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return lv;
      });

      /***/
    },
    /* 911 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Montenegrin [me]
      //! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var translator = {
          words: {
            //Different grammatical cases
            m: ['jedan minut', 'jednog minuta'],
            mm: ['minut', 'minuta', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mjesec', 'mjeseca', 'mjeseci'],
            yy: ['godina', 'godine', 'godina'],
          },
          correctGrammaticalCase: function (number, wordKey) {
            return number === 1
              ? wordKey[0]
              : number >= 2 && number <= 4
              ? wordKey[1]
              : wordKey[2];
          },
          translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
              return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
              return (
                number +
                ' ' +
                translator.correctGrammaticalCase(number, wordKey)
              );
            }
          },
        };

        var me = moment.defineLocale('me', {
          months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
            '_',
          ),
          monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
            '_',
          ),
          weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
          weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
          },
          calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sjutra u] LT',

            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[u] [nedjelju] [u] LT';
                case 3:
                  return '[u] [srijedu] [u] LT';
                case 6:
                  return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                  return '[u] dddd [u] LT';
              }
            },
            lastDay: '[juče u] LT',
            lastWeek: function () {
              var lastWeekDays = [
                '[prošle] [nedjelje] [u] LT',
                '[prošlog] [ponedjeljka] [u] LT',
                '[prošlog] [utorka] [u] LT',
                '[prošle] [srijede] [u] LT',
                '[prošlog] [četvrtka] [u] LT',
                '[prošlog] [petka] [u] LT',
                '[prošle] [subote] [u] LT',
              ];
              return lastWeekDays[this.day()];
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'nekoliko sekundi',
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: 'dan',
            dd: translator.translate,
            M: 'mjesec',
            MM: translator.translate,
            y: 'godinu',
            yy: translator.translate,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return me;
      });

      /***/
    },
    /* 912 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Maori [mi]
      //! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var mi = moment.defineLocale('mi', {
          months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split(
            '_',
          ),
          monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split(
            '_',
          ),
          monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
          monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
          monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
          monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
          weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split(
            '_',
          ),
          weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
          weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [i] HH:mm',
            LLLL: 'dddd, D MMMM YYYY [i] HH:mm',
          },
          calendar: {
            sameDay: '[i teie mahana, i] LT',
            nextDay: '[apopo i] LT',
            nextWeek: 'dddd [i] LT',
            lastDay: '[inanahi i] LT',
            lastWeek: 'dddd [whakamutunga i] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'i roto i %s',
            past: '%s i mua',
            s: 'te hēkona ruarua',
            m: 'he meneti',
            mm: '%d meneti',
            h: 'te haora',
            hh: '%d haora',
            d: 'he ra',
            dd: '%d ra',
            M: 'he marama',
            MM: '%d marama',
            y: 'he tau',
            yy: '%d tau',
          },
          ordinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return mi;
      });

      /***/
    },
    /* 913 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Macedonian [mk]
      //! author : Borislav Mickov : https://github.com/B0k0

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var mk = moment.defineLocale('mk', {
          months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split(
            '_',
          ),
          monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split(
            '_',
          ),
          weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split(
            '_',
          ),
          weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
          weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd, D MMMM YYYY H:mm',
          },
          calendar: {
            sameDay: '[Денес во] LT',
            nextDay: '[Утре во] LT',
            nextWeek: '[Во] dddd [во] LT',
            lastDay: '[Вчера во] LT',
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                case 3:
                case 6:
                  return '[Изминатата] dddd [во] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                  return '[Изминатиот] dddd [во] LT';
              }
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'после %s',
            past: 'пред %s',
            s: 'неколку секунди',
            m: 'минута',
            mm: '%d минути',
            h: 'час',
            hh: '%d часа',
            d: 'ден',
            dd: '%d дена',
            M: 'месец',
            MM: '%d месеци',
            y: 'година',
            yy: '%d години',
          },
          ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
          ordinal: function (number) {
            var lastDigit = number % 10,
              last2Digits = number % 100;
            if (number === 0) {
              return number + '-ев';
            } else if (last2Digits === 0) {
              return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
              return number + '-ти';
            } else if (lastDigit === 1) {
              return number + '-ви';
            } else if (lastDigit === 2) {
              return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
              return number + '-ми';
            } else {
              return number + '-ти';
            }
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return mk;
      });

      /***/
    },
    /* 914 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Malayalam [ml]
      //! author : Floyd Pink : https://github.com/floydpink

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var ml = moment.defineLocale('ml', {
          months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split(
            '_',
          ),
          monthsShort: 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split(
            '_',
          ),
          weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
          weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
          longDateFormat: {
            LT: 'A h:mm -നു',
            LTS: 'A h:mm:ss -നു',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm -നു',
            LLLL: 'dddd, D MMMM YYYY, A h:mm -നു',
          },
          calendar: {
            sameDay: '[ഇന്ന്] LT',
            nextDay: '[നാളെ] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ഇന്നലെ] LT',
            lastWeek: '[കഴിഞ്ഞ] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s കഴിഞ്ഞ്',
            past: '%s മുൻപ്',
            s: 'അൽപ നിമിഷങ്ങൾ',
            m: 'ഒരു മിനിറ്റ്',
            mm: '%d മിനിറ്റ്',
            h: 'ഒരു മണിക്കൂർ',
            hh: '%d മണിക്കൂർ',
            d: 'ഒരു ദിവസം',
            dd: '%d ദിവസം',
            M: 'ഒരു മാസം',
            MM: '%d മാസം',
            y: 'ഒരു വർഷം',
            yy: '%d വർഷം',
          },
          meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (
              (meridiem === 'രാത്രി' && hour >= 4) ||
              meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
              meridiem === 'വൈകുന്നേരം'
            ) {
              return hour + 12;
            } else {
              return hour;
            }
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
              return 'രാത്രി';
            } else if (hour < 12) {
              return 'രാവിലെ';
            } else if (hour < 17) {
              return 'ഉച്ച കഴിഞ്ഞ്';
            } else if (hour < 20) {
              return 'വൈകുന്നേരം';
            } else {
              return 'രാത്രി';
            }
          },
        });

        return ml;
      });

      /***/
    },
    /* 915 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Marathi [mr]
      //! author : Harshad Kale : https://github.com/kalehv
      //! author : Vivek Athalye : https://github.com/vnathalye

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var symbolMap = {
            1: '१',
            2: '२',
            3: '३',
            4: '४',
            5: '५',
            6: '६',
            7: '७',
            8: '८',
            9: '९',
            0: '०',
          },
          numberMap = {
            '१': '1',
            '२': '2',
            '३': '3',
            '४': '4',
            '५': '5',
            '६': '6',
            '७': '7',
            '८': '8',
            '९': '9',
            '०': '0',
          };

        function relativeTimeMr(number, withoutSuffix, string, isFuture) {
          var output = '';
          if (withoutSuffix) {
            switch (string) {
              case 's':
                output = 'काही सेकंद';
                break;
              case 'm':
                output = 'एक मिनिट';
                break;
              case 'mm':
                output = '%d मिनिटे';
                break;
              case 'h':
                output = 'एक तास';
                break;
              case 'hh':
                output = '%d तास';
                break;
              case 'd':
                output = 'एक दिवस';
                break;
              case 'dd':
                output = '%d दिवस';
                break;
              case 'M':
                output = 'एक महिना';
                break;
              case 'MM':
                output = '%d महिने';
                break;
              case 'y':
                output = 'एक वर्ष';
                break;
              case 'yy':
                output = '%d वर्षे';
                break;
            }
          } else {
            switch (string) {
              case 's':
                output = 'काही सेकंदां';
                break;
              case 'm':
                output = 'एका मिनिटा';
                break;
              case 'mm':
                output = '%d मिनिटां';
                break;
              case 'h':
                output = 'एका तासा';
                break;
              case 'hh':
                output = '%d तासां';
                break;
              case 'd':
                output = 'एका दिवसा';
                break;
              case 'dd':
                output = '%d दिवसां';
                break;
              case 'M':
                output = 'एका महिन्या';
                break;
              case 'MM':
                output = '%d महिन्यां';
                break;
              case 'y':
                output = 'एका वर्षा';
                break;
              case 'yy':
                output = '%d वर्षां';
                break;
            }
          }
          return output.replace(/%d/i, number);
        }

        var mr = moment.defineLocale('mr', {
          months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(
            '_',
          ),
          monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split(
            '_',
          ),
          weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
          weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
          longDateFormat: {
            LT: 'A h:mm वाजता',
            LTS: 'A h:mm:ss वाजता',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm वाजता',
            LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता',
          },
          calendar: {
            sameDay: '[आज] LT',
            nextDay: '[उद्या] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[काल] LT',
            lastWeek: '[मागील] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%sमध्ये',
            past: '%sपूर्वी',
            s: relativeTimeMr,
            m: relativeTimeMr,
            mm: relativeTimeMr,
            h: relativeTimeMr,
            hh: relativeTimeMr,
            d: relativeTimeMr,
            dd: relativeTimeMr,
            M: relativeTimeMr,
            MM: relativeTimeMr,
            y: relativeTimeMr,
            yy: relativeTimeMr,
          },
          preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function (string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === 'रात्री') {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सकाळी') {
              return hour;
            } else if (meridiem === 'दुपारी') {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'सायंकाळी') {
              return hour + 12;
            }
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
              return 'रात्री';
            } else if (hour < 10) {
              return 'सकाळी';
            } else if (hour < 17) {
              return 'दुपारी';
            } else if (hour < 20) {
              return 'सायंकाळी';
            } else {
              return 'रात्री';
            }
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return mr;
      });

      /***/
    },
    /* 916 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Malay [ms]
      //! author : Weldan Jamili : https://github.com/weldan

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var ms = moment.defineLocale('ms', {
          months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
            '_',
          ),
          monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split(
            '_',
          ),
          weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
          weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
          weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
          longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
          },
          meridiemParse: /pagi|tengahari|petang|malam/,
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === 'pagi') {
              return hour;
            } else if (meridiem === 'tengahari') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
              return hour + 12;
            }
          },
          meridiem: function (hours, minutes, isLower) {
            if (hours < 11) {
              return 'pagi';
            } else if (hours < 15) {
              return 'tengahari';
            } else if (hours < 19) {
              return 'petang';
            } else {
              return 'malam';
            }
          },
          calendar: {
            sameDay: '[Hari ini pukul] LT',
            nextDay: '[Esok pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kelmarin pukul] LT',
            lastWeek: 'dddd [lepas pukul] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'dalam %s',
            past: '%s yang lepas',
            s: 'beberapa saat',
            m: 'seminit',
            mm: '%d minit',
            h: 'sejam',
            hh: '%d jam',
            d: 'sehari',
            dd: '%d hari',
            M: 'sebulan',
            MM: '%d bulan',
            y: 'setahun',
            yy: '%d tahun',
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return ms;
      });

      /***/
    },
    /* 917 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Malay [ms-my]
      //! note : DEPRECATED, the correct one is [ms]
      //! author : Weldan Jamili : https://github.com/weldan

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var ms_my = moment.defineLocale('ms-my', {
          months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
            '_',
          ),
          monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split(
            '_',
          ),
          weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
          weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
          weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
          longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
          },
          meridiemParse: /pagi|tengahari|petang|malam/,
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === 'pagi') {
              return hour;
            } else if (meridiem === 'tengahari') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
              return hour + 12;
            }
          },
          meridiem: function (hours, minutes, isLower) {
            if (hours < 11) {
              return 'pagi';
            } else if (hours < 15) {
              return 'tengahari';
            } else if (hours < 19) {
              return 'petang';
            } else {
              return 'malam';
            }
          },
          calendar: {
            sameDay: '[Hari ini pukul] LT',
            nextDay: '[Esok pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kelmarin pukul] LT',
            lastWeek: 'dddd [lepas pukul] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'dalam %s',
            past: '%s yang lepas',
            s: 'beberapa saat',
            m: 'seminit',
            mm: '%d minit',
            h: 'sejam',
            hh: '%d jam',
            d: 'sehari',
            dd: '%d hari',
            M: 'sebulan',
            MM: '%d bulan',
            y: 'setahun',
            yy: '%d tahun',
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return ms_my;
      });

      /***/
    },
    /* 918 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Burmese [my]
      //! author : Squar team, mysquar.com
      //! author : David Rossellat : https://github.com/gholadr
      //! author : Tin Aung Lin : https://github.com/thanyawzinmin

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var symbolMap = {
            1: '၁',
            2: '၂',
            3: '၃',
            4: '၄',
            5: '၅',
            6: '၆',
            7: '၇',
            8: '၈',
            9: '၉',
            0: '၀',
          },
          numberMap = {
            '၁': '1',
            '၂': '2',
            '၃': '3',
            '၄': '4',
            '၅': '5',
            '၆': '6',
            '၇': '7',
            '၈': '8',
            '၉': '9',
            '၀': '0',
          };

        var my = moment.defineLocale('my', {
          months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split(
            '_',
          ),
          monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split(
            '_',
          ),
          weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split(
            '_',
          ),
          weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
          weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[ယနေ.] LT [မှာ]',
            nextDay: '[မနက်ဖြန်] LT [မှာ]',
            nextWeek: 'dddd LT [မှာ]',
            lastDay: '[မနေ.က] LT [မှာ]',
            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'လာမည့် %s မှာ',
            past: 'လွန်ခဲ့သော %s က',
            s: 'စက္ကန်.အနည်းငယ်',
            m: 'တစ်မိနစ်',
            mm: '%d မိနစ်',
            h: 'တစ်နာရီ',
            hh: '%d နာရီ',
            d: 'တစ်ရက်',
            dd: '%d ရက်',
            M: 'တစ်လ',
            MM: '%d လ',
            y: 'တစ်နှစ်',
            yy: '%d နှစ်',
          },
          preparse: function (string) {
            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function (string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return my;
      });

      /***/
    },
    /* 919 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Norwegian Bokmål [nb]
      //! authors : Espen Hovlandsdal : https://github.com/rexxars
      //!           Sigurd Gartmann : https://github.com/sigurdga

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var nb = moment.defineLocale('nb', {
          months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
            '_',
          ),
          monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split(
            '_',
          ),
          weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),
          weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY [kl.] HH:mm',
            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',
          },
          calendar: {
            sameDay: '[i dag kl.] LT',
            nextDay: '[i morgen kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[i går kl.] LT',
            lastWeek: '[forrige] dddd [kl.] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'om %s',
            past: '%s siden',
            s: 'noen sekunder',
            m: 'ett minutt',
            mm: '%d minutter',
            h: 'en time',
            hh: '%d timer',
            d: 'en dag',
            dd: '%d dager',
            M: 'en måned',
            MM: '%d måneder',
            y: 'ett år',
            yy: '%d år',
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return nb;
      });

      /***/
    },
    /* 920 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Nepalese [ne]
      //! author : suvash : https://github.com/suvash

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var symbolMap = {
            1: '१',
            2: '२',
            3: '३',
            4: '४',
            5: '५',
            6: '६',
            7: '७',
            8: '८',
            9: '९',
            0: '०',
          },
          numberMap = {
            '१': '1',
            '२': '2',
            '३': '3',
            '४': '4',
            '५': '5',
            '६': '6',
            '७': '7',
            '८': '8',
            '९': '9',
            '०': '0',
          };

        var ne = moment.defineLocale('ne', {
          months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split(
            '_',
          ),
          monthsShort: 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split(
            '_',
          ),
          weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
          weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'Aको h:mm बजे',
            LTS: 'Aको h:mm:ss बजे',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, Aको h:mm बजे',
            LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे',
          },
          preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function (string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === 'राति') {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'बिहान') {
              return hour;
            } else if (meridiem === 'दिउँसो') {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'साँझ') {
              return hour + 12;
            }
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 3) {
              return 'राति';
            } else if (hour < 12) {
              return 'बिहान';
            } else if (hour < 16) {
              return 'दिउँसो';
            } else if (hour < 20) {
              return 'साँझ';
            } else {
              return 'राति';
            }
          },
          calendar: {
            sameDay: '[आज] LT',
            nextDay: '[भोलि] LT',
            nextWeek: '[आउँदो] dddd[,] LT',
            lastDay: '[हिजो] LT',
            lastWeek: '[गएको] dddd[,] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%sमा',
            past: '%s अगाडि',
            s: 'केही क्षण',
            m: 'एक मिनेट',
            mm: '%d मिनेट',
            h: 'एक घण्टा',
            hh: '%d घण्टा',
            d: 'एक दिन',
            dd: '%d दिन',
            M: 'एक महिना',
            MM: '%d महिना',
            y: 'एक बर्ष',
            yy: '%d बर्ष',
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return ne;
      });

      /***/
    },
    /* 921 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Dutch [nl]
      //! author : Joris Röling : https://github.com/jorisroling
      //! author : Jacob Middag : https://github.com/middagj

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split(
            '_',
          ),
          monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split(
            '_',
          );

        var monthsParse = [
          /^jan/i,
          /^feb/i,
          /^maart|mrt.?$/i,
          /^apr/i,
          /^mei$/i,
          /^jun[i.]?$/i,
          /^jul[i.]?$/i,
          /^aug/i,
          /^sep/i,
          /^okt/i,
          /^nov/i,
          /^dec/i,
        ];
        var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

        var nl = moment.defineLocale('nl', {
          months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(
            '_',
          ),
          monthsShort: function (m, format) {
            if (/-MMM-/.test(format)) {
              return monthsShortWithoutDots[m.month()];
            } else {
              return monthsShortWithDots[m.month()];
            }
          },

          monthsRegex: monthsRegex,
          monthsShortRegex: monthsRegex,
          monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
          monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,

          weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split(
            '_',
          ),
          weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
          weekdaysMin: 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'over %s',
            past: '%s geleden',
            s: 'een paar seconden',
            m: 'één minuut',
            mm: '%d minuten',
            h: 'één uur',
            hh: '%d uur',
            d: 'één dag',
            dd: '%d dagen',
            M: 'één maand',
            MM: '%d maanden',
            y: 'één jaar',
            yy: '%d jaar',
          },
          ordinalParse: /\d{1,2}(ste|de)/,
          ordinal: function (number) {
            return (
              number +
              (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')
            );
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return nl;
      });

      /***/
    },
    /* 922 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Nynorsk [nn]
      //! author : https://github.com/mechuwind

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var nn = moment.defineLocale('nn', {
          months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
            '_',
          ),
          monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split(
            '_',
          ),
          weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split(
            '_',
          ),
          weekdaysShort: 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
          weekdaysMin: 'su_må_ty_on_to_fr_lø'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY [kl.] H:mm',
            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',
          },
          calendar: {
            sameDay: '[I dag klokka] LT',
            nextDay: '[I morgon klokka] LT',
            nextWeek: 'dddd [klokka] LT',
            lastDay: '[I går klokka] LT',
            lastWeek: '[Føregåande] dddd [klokka] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'om %s',
            past: '%s sidan',
            s: 'nokre sekund',
            m: 'eit minutt',
            mm: '%d minutt',
            h: 'ein time',
            hh: '%d timar',
            d: 'ein dag',
            dd: '%d dagar',
            M: 'ein månad',
            MM: '%d månader',
            y: 'eit år',
            yy: '%d år',
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return nn;
      });

      /***/
    },
    /* 923 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Punjabi (India) [pa-in]
      //! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var symbolMap = {
            1: '੧',
            2: '੨',
            3: '੩',
            4: '੪',
            5: '੫',
            6: '੬',
            7: '੭',
            8: '੮',
            9: '੯',
            0: '੦',
          },
          numberMap = {
            '੧': '1',
            '੨': '2',
            '੩': '3',
            '੪': '4',
            '੫': '5',
            '੬': '6',
            '੭': '7',
            '੮': '8',
            '੯': '9',
            '੦': '0',
          };

        var pa_in = moment.defineLocale('pa-in', {
          // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
          months: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
            '_',
          ),
          monthsShort: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
            '_',
          ),
          weekdays: 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split(
            '_',
          ),
          weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
          weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
          longDateFormat: {
            LT: 'A h:mm ਵਜੇ',
            LTS: 'A h:mm:ss ਵਜੇ',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',
            LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ',
          },
          calendar: {
            sameDay: '[ਅਜ] LT',
            nextDay: '[ਕਲ] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ਕਲ] LT',
            lastWeek: '[ਪਿਛਲੇ] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s ਵਿੱਚ',
            past: '%s ਪਿਛਲੇ',
            s: 'ਕੁਝ ਸਕਿੰਟ',
            m: 'ਇਕ ਮਿੰਟ',
            mm: '%d ਮਿੰਟ',
            h: 'ਇੱਕ ਘੰਟਾ',
            hh: '%d ਘੰਟੇ',
            d: 'ਇੱਕ ਦਿਨ',
            dd: '%d ਦਿਨ',
            M: 'ਇੱਕ ਮਹੀਨਾ',
            MM: '%d ਮਹੀਨੇ',
            y: 'ਇੱਕ ਸਾਲ',
            yy: '%d ਸਾਲ',
          },
          preparse: function (string) {
            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function (string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
          // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
          meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === 'ਰਾਤ') {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ਸਵੇਰ') {
              return hour;
            } else if (meridiem === 'ਦੁਪਹਿਰ') {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ਸ਼ਾਮ') {
              return hour + 12;
            }
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
              return 'ਰਾਤ';
            } else if (hour < 10) {
              return 'ਸਵੇਰ';
            } else if (hour < 17) {
              return 'ਦੁਪਹਿਰ';
            } else if (hour < 20) {
              return 'ਸ਼ਾਮ';
            } else {
              return 'ਰਾਤ';
            }
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return pa_in;
      });

      /***/
    },
    /* 924 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Polish [pl]
      //! author : Rafal Hirsz : https://github.com/evoL

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split(
            '_',
          ),
          monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split(
            '_',
          );
        function plural(n) {
          return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;
        }
        function translate(number, withoutSuffix, key) {
          var result = number + ' ';
          switch (key) {
            case 'm':
              return withoutSuffix ? 'minuta' : 'minutę';
            case 'mm':
              return result + (plural(number) ? 'minuty' : 'minut');
            case 'h':
              return withoutSuffix ? 'godzina' : 'godzinę';
            case 'hh':
              return result + (plural(number) ? 'godziny' : 'godzin');
            case 'MM':
              return result + (plural(number) ? 'miesiące' : 'miesięcy');
            case 'yy':
              return result + (plural(number) ? 'lata' : 'lat');
          }
        }

        var pl = moment.defineLocale('pl', {
          months: function (momentToFormat, format) {
            if (format === '') {
              // Hack: if format empty we know this is used to generate
              // RegExp by moment. Give then back both valid forms of months
              // in RegExp ready format.
              return (
                '(' +
                monthsSubjective[momentToFormat.month()] +
                '|' +
                monthsNominative[momentToFormat.month()] +
                ')'
              );
            } else if (/D MMMM/.test(format)) {
              return monthsSubjective[momentToFormat.month()];
            } else {
              return monthsNominative[momentToFormat.month()];
            }
          },
          monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split(
            '_',
          ),
          weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split(
            '_',
          ),
          weekdaysShort: 'nie_pon_wt_śr_czw_pt_sb'.split('_'),
          weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Dziś o] LT',
            nextDay: '[Jutro o] LT',
            nextWeek: '[W] dddd [o] LT',
            lastDay: '[Wczoraj o] LT',
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[W zeszłą niedzielę o] LT';
                case 3:
                  return '[W zeszłą środę o] LT';
                case 6:
                  return '[W zeszłą sobotę o] LT';
                default:
                  return '[W zeszły] dddd [o] LT';
              }
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'za %s',
            past: '%s temu',
            s: 'kilka sekund',
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: '1 dzień',
            dd: '%d dni',
            M: 'miesiąc',
            MM: translate,
            y: 'rok',
            yy: translate,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return pl;
      });

      /***/
    },
    /* 925 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Portuguese [pt]
      //! author : Jefferson : https://github.com/jalex79

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var pt = moment.defineLocale('pt', {
          months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split(
            '_',
          ),
          monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split(
            '_',
          ),
          weekdays: 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split(
            '_',
          ),
          weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
          weekdaysMin: 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY HH:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
              return this.day() === 0 || this.day() === 6
                ? '[Último] dddd [às] LT' // Saturday + Sunday
                : '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'em %s',
            past: 'há %s',
            s: 'segundos',
            m: 'um minuto',
            mm: '%d minutos',
            h: 'uma hora',
            hh: '%d horas',
            d: 'um dia',
            dd: '%d dias',
            M: 'um mês',
            MM: '%d meses',
            y: 'um ano',
            yy: '%d anos',
          },
          ordinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return pt;
      });

      /***/
    },
    /* 926 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Portuguese (Brazil) [pt-br]
      //! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var pt_br = moment.defineLocale('pt-br', {
          months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split(
            '_',
          ),
          monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split(
            '_',
          ),
          weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split(
            '_',
          ),
          weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
          weekdaysMin: 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm',
          },
          calendar: {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
              return this.day() === 0 || this.day() === 6
                ? '[Último] dddd [às] LT' // Saturday + Sunday
                : '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'em %s',
            past: '%s atrás',
            s: 'poucos segundos',
            m: 'um minuto',
            mm: '%d minutos',
            h: 'uma hora',
            hh: '%d horas',
            d: 'um dia',
            dd: '%d dias',
            M: 'um mês',
            MM: '%d meses',
            y: 'um ano',
            yy: '%d anos',
          },
          ordinalParse: /\d{1,2}º/,
          ordinal: '%dº',
        });

        return pt_br;
      });

      /***/
    },
    /* 927 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Romanian [ro]
      //! author : Vlad Gurdiga : https://github.com/gurdiga
      //! author : Valentin Agachi : https://github.com/avaly

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        function relativeTimeWithPlural(number, withoutSuffix, key) {
          var format = {
              mm: 'minute',
              hh: 'ore',
              dd: 'zile',
              MM: 'luni',
              yy: 'ani',
            },
            separator = ' ';
          if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
            separator = ' de ';
          }
          return number + separator + format[key];
        }

        var ro = moment.defineLocale('ro', {
          months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split(
            '_',
          ),
          monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split(
            '_',
          ),
          weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
          weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd, D MMMM YYYY H:mm',
          },
          calendar: {
            sameDay: '[azi la] LT',
            nextDay: '[mâine la] LT',
            nextWeek: 'dddd [la] LT',
            lastDay: '[ieri la] LT',
            lastWeek: '[fosta] dddd [la] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'peste %s',
            past: '%s în urmă',
            s: 'câteva secunde',
            m: 'un minut',
            mm: relativeTimeWithPlural,
            h: 'o oră',
            hh: relativeTimeWithPlural,
            d: 'o zi',
            dd: relativeTimeWithPlural,
            M: 'o lună',
            MM: relativeTimeWithPlural,
            y: 'un an',
            yy: relativeTimeWithPlural,
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return ro;
      });

      /***/
    },
    /* 928 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Russian [ru]
      //! author : Viktorminator : https://github.com/Viktorminator
      //! Author : Menelion Elensúle : https://github.com/Oire
      //! author : Коренберг Марк : https://github.com/socketpair

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        function plural(word, num) {
          var forms = word.split('_');
          return num % 10 === 1 && num % 100 !== 11
            ? forms[0]
            : num % 10 >= 2 &&
              num % 10 <= 4 &&
              (num % 100 < 10 || num % 100 >= 20)
            ? forms[1]
            : forms[2];
        }
        function relativeTimeWithPlural(number, withoutSuffix, key) {
          var format = {
            mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
            hh: 'час_часа_часов',
            dd: 'день_дня_дней',
            MM: 'месяц_месяца_месяцев',
            yy: 'год_года_лет',
          };
          if (key === 'm') {
            return withoutSuffix ? 'минута' : 'минуту';
          } else {
            return number + ' ' + plural(format[key], +number);
          }
        }
        var monthsParse = [
          /^янв/i,
          /^фев/i,
          /^мар/i,
          /^апр/i,
          /^ма[йя]/i,
          /^июн/i,
          /^июл/i,
          /^авг/i,
          /^сен/i,
          /^окт/i,
          /^ноя/i,
          /^дек/i,
        ];

        // http://new.gramota.ru/spravka/rules/139-prop : § 103
        // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
        // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
        var ru = moment.defineLocale('ru', {
          months: {
            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split(
              '_',
            ),
            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
              '_',
            ),
          },
          monthsShort: {
            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split(
              '_',
            ),
            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split(
              '_',
            ),
          },
          weekdays: {
            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split(
              '_',
            ),
            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split(
              '_',
            ),
            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/,
          },
          weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
          weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,

          // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
          monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

          // копия предыдущего
          monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

          // полные названия с падежами
          monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

          // Выражение, которое соотвествует только сокращённым формам
          monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY г.',
            LLL: 'D MMMM YYYY г., HH:mm',
            LLLL: 'dddd, D MMMM YYYY г., HH:mm',
          },
          calendar: {
            sameDay: '[Сегодня в] LT',
            nextDay: '[Завтра в] LT',
            lastDay: '[Вчера в] LT',
            nextWeek: function (now) {
              if (now.week() !== this.week()) {
                switch (this.day()) {
                  case 0:
                    return '[В следующее] dddd [в] LT';
                  case 1:
                  case 2:
                  case 4:
                    return '[В следующий] dddd [в] LT';
                  case 3:
                  case 5:
                  case 6:
                    return '[В следующую] dddd [в] LT';
                }
              } else {
                if (this.day() === 2) {
                  return '[Во] dddd [в] LT';
                } else {
                  return '[В] dddd [в] LT';
                }
              }
            },
            lastWeek: function (now) {
              if (now.week() !== this.week()) {
                switch (this.day()) {
                  case 0:
                    return '[В прошлое] dddd [в] LT';
                  case 1:
                  case 2:
                  case 4:
                    return '[В прошлый] dddd [в] LT';
                  case 3:
                  case 5:
                  case 6:
                    return '[В прошлую] dddd [в] LT';
                }
              } else {
                if (this.day() === 2) {
                  return '[Во] dddd [в] LT';
                } else {
                  return '[В] dddd [в] LT';
                }
              }
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'через %s',
            past: '%s назад',
            s: 'несколько секунд',
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: 'час',
            hh: relativeTimeWithPlural,
            d: 'день',
            dd: relativeTimeWithPlural,
            M: 'месяц',
            MM: relativeTimeWithPlural,
            y: 'год',
            yy: relativeTimeWithPlural,
          },
          meridiemParse: /ночи|утра|дня|вечера/i,
          isPM: function (input) {
            return /^(дня|вечера)$/.test(input);
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
              return 'ночи';
            } else if (hour < 12) {
              return 'утра';
            } else if (hour < 17) {
              return 'дня';
            } else {
              return 'вечера';
            }
          },
          ordinalParse: /\d{1,2}-(й|го|я)/,
          ordinal: function (number, period) {
            switch (period) {
              case 'M':
              case 'd':
              case 'DDD':
                return number + '-й';
              case 'D':
                return number + '-го';
              case 'w':
              case 'W':
                return number + '-я';
              default:
                return number;
            }
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return ru;
      });

      /***/
    },
    /* 929 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Northern Sami [se]
      //! authors : Bård Rolstad Henriksen : https://github.com/karamell

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var se = moment.defineLocale('se', {
          months: 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split(
            '_',
          ),
          monthsShort: 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split(
            '_',
          ),
          weekdays: 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split(
            '_',
          ),
          weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
          weekdaysMin: 's_v_m_g_d_b_L'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'MMMM D. [b.] YYYY',
            LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',
            LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm',
          },
          calendar: {
            sameDay: '[otne ti] LT',
            nextDay: '[ihttin ti] LT',
            nextWeek: 'dddd [ti] LT',
            lastDay: '[ikte ti] LT',
            lastWeek: '[ovddit] dddd [ti] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s geažes',
            past: 'maŋit %s',
            s: 'moadde sekunddat',
            m: 'okta minuhta',
            mm: '%d minuhtat',
            h: 'okta diimmu',
            hh: '%d diimmut',
            d: 'okta beaivi',
            dd: '%d beaivvit',
            M: 'okta mánnu',
            MM: '%d mánut',
            y: 'okta jahki',
            yy: '%d jagit',
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return se;
      });

      /***/
    },
    /* 930 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Sinhalese [si]
      //! author : Sampath Sitinamaluwa : https://github.com/sampathsris

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        /*jshint -W100*/
        var si = moment.defineLocale('si', {
          months: 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split(
            '_',
          ),
          monthsShort: 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split(
            '_',
          ),
          weekdays: 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split(
            '_',
          ),
          weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
          weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'a h:mm',
            LTS: 'a h:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY MMMM D',
            LLL: 'YYYY MMMM D, a h:mm',
            LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss',
          },
          calendar: {
            sameDay: '[අද] LT[ට]',
            nextDay: '[හෙට] LT[ට]',
            nextWeek: 'dddd LT[ට]',
            lastDay: '[ඊයේ] LT[ට]',
            lastWeek: '[පසුගිය] dddd LT[ට]',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%sකින්',
            past: '%sකට පෙර',
            s: 'තත්පර කිහිපය',
            m: 'මිනිත්තුව',
            mm: 'මිනිත්තු %d',
            h: 'පැය',
            hh: 'පැය %d',
            d: 'දිනය',
            dd: 'දින %d',
            M: 'මාසය',
            MM: 'මාස %d',
            y: 'වසර',
            yy: 'වසර %d',
          },
          ordinalParse: /\d{1,2} වැනි/,
          ordinal: function (number) {
            return number + ' වැනි';
          },
          meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
          isPM: function (input) {
            return input === 'ප.ව.' || input === 'පස් වරු';
          },
          meridiem: function (hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? 'ප.ව.' : 'පස් වරු';
            } else {
              return isLower ? 'පෙ.ව.' : 'පෙර වරු';
            }
          },
        });

        return si;
      });

      /***/
    },
    /* 931 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Slovak [sk]
      //! author : Martin Minka : https://github.com/k2s
      //! based on work of petrbela : https://github.com/petrbela

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split(
            '_',
          ),
          monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split(
            '_',
          );
        function plural(n) {
          return n > 1 && n < 5;
        }
        function translate(number, withoutSuffix, key, isFuture) {
          var result = number + ' ';
          switch (key) {
            case 's': // a few seconds / in a few seconds / a few seconds ago
              return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';
            case 'm': // a minute / in a minute / a minute ago
              return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'minúty' : 'minút');
              } else {
                return result + 'minútami';
              }
              break;
            case 'h': // an hour / in an hour / an hour ago
              return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'hodiny' : 'hodín');
              } else {
                return result + 'hodinami';
              }
              break;
            case 'd': // a day / in a day / a day ago
              return withoutSuffix || isFuture ? 'deň' : 'dňom';
            case 'dd': // 9 days / in 9 days / 9 days ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'dni' : 'dní');
              } else {
                return result + 'dňami';
              }
              break;
            case 'M': // a month / in a month / a month ago
              return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';
            case 'MM': // 9 months / in 9 months / 9 months ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'mesiace' : 'mesiacov');
              } else {
                return result + 'mesiacmi';
              }
              break;
            case 'y': // a year / in a year / a year ago
              return withoutSuffix || isFuture ? 'rok' : 'rokom';
            case 'yy': // 9 years / in 9 years / 9 years ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'roky' : 'rokov');
              } else {
                return result + 'rokmi';
              }
              break;
          }
        }

        var sk = moment.defineLocale('sk', {
          months: months,
          monthsShort: monthsShort,
          weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split(
            '_',
          ),
          weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),
          weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd D. MMMM YYYY H:mm',
          },
          calendar: {
            sameDay: '[dnes o] LT',
            nextDay: '[zajtra o] LT',
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[v nedeľu o] LT';
                case 1:
                case 2:
                  return '[v] dddd [o] LT';
                case 3:
                  return '[v stredu o] LT';
                case 4:
                  return '[vo štvrtok o] LT';
                case 5:
                  return '[v piatok o] LT';
                case 6:
                  return '[v sobotu o] LT';
              }
            },
            lastDay: '[včera o] LT',
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[minulú nedeľu o] LT';
                case 1:
                case 2:
                  return '[minulý] dddd [o] LT';
                case 3:
                  return '[minulú stredu o] LT';
                case 4:
                case 5:
                  return '[minulý] dddd [o] LT';
                case 6:
                  return '[minulú sobotu o] LT';
              }
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'za %s',
            past: 'pred %s',
            s: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return sk;
      });

      /***/
    },
    /* 932 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Slovenian [sl]
      //! author : Robert Sedovšek : https://github.com/sedovsek

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var result = number + ' ';
          switch (key) {
            case 's':
              return withoutSuffix || isFuture
                ? 'nekaj sekund'
                : 'nekaj sekundami';
            case 'm':
              return withoutSuffix ? 'ena minuta' : 'eno minuto';
            case 'mm':
              if (number === 1) {
                result += withoutSuffix ? 'minuta' : 'minuto';
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
              } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'minute' : 'minutami';
              } else {
                result += withoutSuffix || isFuture ? 'minut' : 'minutami';
              }
              return result;
            case 'h':
              return withoutSuffix ? 'ena ura' : 'eno uro';
            case 'hh':
              if (number === 1) {
                result += withoutSuffix ? 'ura' : 'uro';
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'uri' : 'urama';
              } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'ure' : 'urami';
              } else {
                result += withoutSuffix || isFuture ? 'ur' : 'urami';
              }
              return result;
            case 'd':
              return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
            case 'dd':
              if (number === 1) {
                result += withoutSuffix || isFuture ? 'dan' : 'dnem';
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
              } else {
                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
              }
              return result;
            case 'M':
              return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
            case 'MM':
              if (number === 1) {
                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
              } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
              } else {
                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
              }
              return result;
            case 'y':
              return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
            case 'yy':
              if (number === 1) {
                result += withoutSuffix || isFuture ? 'leto' : 'letom';
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'leti' : 'letoma';
              } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'leta' : 'leti';
              } else {
                result += withoutSuffix || isFuture ? 'let' : 'leti';
              }
              return result;
          }
        }

        var sl = moment.defineLocale('sl', {
          months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split(
            '_',
          ),
          monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split(
            '_',
          ),
          weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
          weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
          },
          calendar: {
            sameDay: '[danes ob] LT',
            nextDay: '[jutri ob] LT',

            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[v] [nedeljo] [ob] LT';
                case 3:
                  return '[v] [sredo] [ob] LT';
                case 6:
                  return '[v] [soboto] [ob] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                  return '[v] dddd [ob] LT';
              }
            },
            lastDay: '[včeraj ob] LT',
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[prejšnjo] [nedeljo] [ob] LT';
                case 3:
                  return '[prejšnjo] [sredo] [ob] LT';
                case 6:
                  return '[prejšnjo] [soboto] [ob] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                  return '[prejšnji] dddd [ob] LT';
              }
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'čez %s',
            past: 'pred %s',
            s: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return sl;
      });

      /***/
    },
    /* 933 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Albanian [sq]
      //! author : Flakërim Ismani : https://github.com/flakerimi
      //! author : Menelion Elensúle : https://github.com/Oire
      //! author : Oerd Cukalla : https://github.com/oerd

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var sq = moment.defineLocale('sq', {
          months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split(
            '_',
          ),
          monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split(
            '_',
          ),
          weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split(
            '_',
          ),
          weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
          weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),
          weekdaysParseExact: true,
          meridiemParse: /PD|MD/,
          isPM: function (input) {
            return input.charAt(0) === 'M';
          },
          meridiem: function (hours, minutes, isLower) {
            return hours < 12 ? 'PD' : 'MD';
          },
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Sot në] LT',
            nextDay: '[Nesër në] LT',
            nextWeek: 'dddd [në] LT',
            lastDay: '[Dje në] LT',
            lastWeek: 'dddd [e kaluar në] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'në %s',
            past: '%s më parë',
            s: 'disa sekonda',
            m: 'një minutë',
            mm: '%d minuta',
            h: 'një orë',
            hh: '%d orë',
            d: 'një ditë',
            dd: '%d ditë',
            M: 'një muaj',
            MM: '%d muaj',
            y: 'një vit',
            yy: '%d vite',
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return sq;
      });

      /***/
    },
    /* 934 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Serbian [sr]
      //! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var translator = {
          words: {
            //Different grammatical cases
            m: ['jedan minut', 'jedne minute'],
            mm: ['minut', 'minute', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mesec', 'meseca', 'meseci'],
            yy: ['godina', 'godine', 'godina'],
          },
          correctGrammaticalCase: function (number, wordKey) {
            return number === 1
              ? wordKey[0]
              : number >= 2 && number <= 4
              ? wordKey[1]
              : wordKey[2];
          },
          translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
              return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
              return (
                number +
                ' ' +
                translator.correctGrammaticalCase(number, wordKey)
              );
            }
          },
        };

        var sr = moment.defineLocale('sr', {
          months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
            '_',
          ),
          monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split(
            '_',
          ),
          weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
          weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
          },
          calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[u] [nedelju] [u] LT';
                case 3:
                  return '[u] [sredu] [u] LT';
                case 6:
                  return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                  return '[u] dddd [u] LT';
              }
            },
            lastDay: '[juče u] LT',
            lastWeek: function () {
              var lastWeekDays = [
                '[prošle] [nedelje] [u] LT',
                '[prošlog] [ponedeljka] [u] LT',
                '[prošlog] [utorka] [u] LT',
                '[prošle] [srede] [u] LT',
                '[prošlog] [četvrtka] [u] LT',
                '[prošlog] [petka] [u] LT',
                '[prošle] [subote] [u] LT',
              ];
              return lastWeekDays[this.day()];
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'za %s',
            past: 'pre %s',
            s: 'nekoliko sekundi',
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: 'dan',
            dd: translator.translate,
            M: 'mesec',
            MM: translator.translate,
            y: 'godinu',
            yy: translator.translate,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return sr;
      });

      /***/
    },
    /* 935 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Serbian Cyrillic [sr-cyrl]
      //! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var translator = {
          words: {
            //Different grammatical cases
            m: ['један минут', 'једне минуте'],
            mm: ['минут', 'минуте', 'минута'],
            h: ['један сат', 'једног сата'],
            hh: ['сат', 'сата', 'сати'],
            dd: ['дан', 'дана', 'дана'],
            MM: ['месец', 'месеца', 'месеци'],
            yy: ['година', 'године', 'година'],
          },
          correctGrammaticalCase: function (number, wordKey) {
            return number === 1
              ? wordKey[0]
              : number >= 2 && number <= 4
              ? wordKey[1]
              : wordKey[2];
          },
          translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
              return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
              return (
                number +
                ' ' +
                translator.correctGrammaticalCase(number, wordKey)
              );
            }
          },
        };

        var sr_cyrl = moment.defineLocale('sr-cyrl', {
          months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split(
            '_',
          ),
          monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split(
            '_',
          ),
          weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
          weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
          },
          calendar: {
            sameDay: '[данас у] LT',
            nextDay: '[сутра у] LT',
            nextWeek: function () {
              switch (this.day()) {
                case 0:
                  return '[у] [недељу] [у] LT';
                case 3:
                  return '[у] [среду] [у] LT';
                case 6:
                  return '[у] [суботу] [у] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                  return '[у] dddd [у] LT';
              }
            },
            lastDay: '[јуче у] LT',
            lastWeek: function () {
              var lastWeekDays = [
                '[прошле] [недеље] [у] LT',
                '[прошлог] [понедељка] [у] LT',
                '[прошлог] [уторка] [у] LT',
                '[прошле] [среде] [у] LT',
                '[прошлог] [четвртка] [у] LT',
                '[прошлог] [петка] [у] LT',
                '[прошле] [суботе] [у] LT',
              ];
              return lastWeekDays[this.day()];
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'за %s',
            past: 'пре %s',
            s: 'неколико секунди',
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: 'дан',
            dd: translator.translate,
            M: 'месец',
            MM: translator.translate,
            y: 'годину',
            yy: translator.translate,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return sr_cyrl;
      });

      /***/
    },
    /* 936 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : siSwati [ss]
      //! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var ss = moment.defineLocale('ss', {
          months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split(
            '_',
          ),
          monthsShort: 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split(
            '_',
          ),
          weekdays: 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split(
            '_',
          ),
          weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
          weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
          },
          calendar: {
            sameDay: '[Namuhla nga] LT',
            nextDay: '[Kusasa nga] LT',
            nextWeek: 'dddd [nga] LT',
            lastDay: '[Itolo nga] LT',
            lastWeek: 'dddd [leliphelile] [nga] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'nga %s',
            past: 'wenteka nga %s',
            s: 'emizuzwana lomcane',
            m: 'umzuzu',
            mm: '%d emizuzu',
            h: 'lihora',
            hh: '%d emahora',
            d: 'lilanga',
            dd: '%d emalanga',
            M: 'inyanga',
            MM: '%d tinyanga',
            y: 'umnyaka',
            yy: '%d iminyaka',
          },
          meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
          meridiem: function (hours, minutes, isLower) {
            if (hours < 11) {
              return 'ekuseni';
            } else if (hours < 15) {
              return 'emini';
            } else if (hours < 19) {
              return 'entsambama';
            } else {
              return 'ebusuku';
            }
          },
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === 'ekuseni') {
              return hour;
            } else if (meridiem === 'emini') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
              if (hour === 0) {
                return 0;
              }
              return hour + 12;
            }
          },
          ordinalParse: /\d{1,2}/,
          ordinal: '%d',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return ss;
      });

      /***/
    },
    /* 937 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Swedish [sv]
      //! author : Jens Alm : https://github.com/ulmus

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var sv = moment.defineLocale('sv', {
          months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split(
            '_',
          ),
          monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split(
            '_',
          ),
          weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split(
            '_',
          ),
          weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
          weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [kl.] HH:mm',
            LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',
            lll: 'D MMM YYYY HH:mm',
            llll: 'ddd D MMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Idag] LT',
            nextDay: '[Imorgon] LT',
            lastDay: '[Igår] LT',
            nextWeek: '[På] dddd LT',
            lastWeek: '[I] dddd[s] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'om %s',
            past: 'för %s sedan',
            s: 'några sekunder',
            m: 'en minut',
            mm: '%d minuter',
            h: 'en timme',
            hh: '%d timmar',
            d: 'en dag',
            dd: '%d dagar',
            M: 'en månad',
            MM: '%d månader',
            y: 'ett år',
            yy: '%d år',
          },
          ordinalParse: /\d{1,2}(e|a)/,
          ordinal: function (number) {
            var b = number % 10,
              output =
                ~~((number % 100) / 10) === 1
                  ? 'e'
                  : b === 1
                  ? 'a'
                  : b === 2
                  ? 'a'
                  : b === 3
                  ? 'e'
                  : 'e';
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return sv;
      });

      /***/
    },
    /* 938 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Swahili [sw]
      //! author : Fahad Kassim : https://github.com/fadsel

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var sw = moment.defineLocale('sw', {
          months: 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split(
            '_',
          ),
          monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split(
            '_',
          ),
          weekdays: 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split(
            '_',
          ),
          weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
          weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[leo saa] LT',
            nextDay: '[kesho saa] LT',
            nextWeek: '[wiki ijayo] dddd [saat] LT',
            lastDay: '[jana] LT',
            lastWeek: '[wiki iliyopita] dddd [saat] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s baadaye',
            past: 'tokea %s',
            s: 'hivi punde',
            m: 'dakika moja',
            mm: 'dakika %d',
            h: 'saa limoja',
            hh: 'masaa %d',
            d: 'siku moja',
            dd: 'masiku %d',
            M: 'mwezi mmoja',
            MM: 'miezi %d',
            y: 'mwaka mmoja',
            yy: 'miaka %d',
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return sw;
      });

      /***/
    },
    /* 939 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Tamil [ta]
      //! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var symbolMap = {
            1: '௧',
            2: '௨',
            3: '௩',
            4: '௪',
            5: '௫',
            6: '௬',
            7: '௭',
            8: '௮',
            9: '௯',
            0: '௦',
          },
          numberMap = {
            '௧': '1',
            '௨': '2',
            '௩': '3',
            '௪': '4',
            '௫': '5',
            '௬': '6',
            '௭': '7',
            '௮': '8',
            '௯': '9',
            '௦': '0',
          };

        var ta = moment.defineLocale('ta', {
          months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
            '_',
          ),
          monthsShort: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
            '_',
          ),
          weekdays: 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split(
            '_',
          ),
          weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split(
            '_',
          ),
          weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, HH:mm',
            LLLL: 'dddd, D MMMM YYYY, HH:mm',
          },
          calendar: {
            sameDay: '[இன்று] LT',
            nextDay: '[நாளை] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[நேற்று] LT',
            lastWeek: '[கடந்த வாரம்] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s இல்',
            past: '%s முன்',
            s: 'ஒரு சில விநாடிகள்',
            m: 'ஒரு நிமிடம்',
            mm: '%d நிமிடங்கள்',
            h: 'ஒரு மணி நேரம்',
            hh: '%d மணி நேரம்',
            d: 'ஒரு நாள்',
            dd: '%d நாட்கள்',
            M: 'ஒரு மாதம்',
            MM: '%d மாதங்கள்',
            y: 'ஒரு வருடம்',
            yy: '%d ஆண்டுகள்',
          },
          ordinalParse: /\d{1,2}வது/,
          ordinal: function (number) {
            return number + 'வது';
          },
          preparse: function (string) {
            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function (string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          // refer http://ta.wikipedia.org/s/1er1
          meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
          meridiem: function (hour, minute, isLower) {
            if (hour < 2) {
              return ' யாமம்';
            } else if (hour < 6) {
              return ' வைகறை'; // வைகறை
            } else if (hour < 10) {
              return ' காலை'; // காலை
            } else if (hour < 14) {
              return ' நண்பகல்'; // நண்பகல்
            } else if (hour < 18) {
              return ' எற்பாடு'; // எற்பாடு
            } else if (hour < 22) {
              return ' மாலை'; // மாலை
            } else {
              return ' யாமம்';
            }
          },
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === 'யாமம்') {
              return hour < 2 ? hour : hour + 12;
            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
              return hour;
            } else if (meridiem === 'நண்பகல்') {
              return hour >= 10 ? hour : hour + 12;
            } else {
              return hour + 12;
            }
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return ta;
      });

      /***/
    },
    /* 940 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Telugu [te]
      //! author : Krishna Chaitanya Thota : https://github.com/kcthota

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var te = moment.defineLocale('te', {
          months: 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split(
            '_',
          ),
          monthsShort: 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split(
            '_',
          ),
          weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
          weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
          longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm',
          },
          calendar: {
            sameDay: '[నేడు] LT',
            nextDay: '[రేపు] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[నిన్న] LT',
            lastWeek: '[గత] dddd, LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s లో',
            past: '%s క్రితం',
            s: 'కొన్ని క్షణాలు',
            m: 'ఒక నిమిషం',
            mm: '%d నిమిషాలు',
            h: 'ఒక గంట',
            hh: '%d గంటలు',
            d: 'ఒక రోజు',
            dd: '%d రోజులు',
            M: 'ఒక నెల',
            MM: '%d నెలలు',
            y: 'ఒక సంవత్సరం',
            yy: '%d సంవత్సరాలు',
          },
          ordinalParse: /\d{1,2}వ/,
          ordinal: '%dవ',
          meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (meridiem === 'రాత్రి') {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ఉదయం') {
              return hour;
            } else if (meridiem === 'మధ్యాహ్నం') {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'సాయంత్రం') {
              return hour + 12;
            }
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
              return 'రాత్రి';
            } else if (hour < 10) {
              return 'ఉదయం';
            } else if (hour < 17) {
              return 'మధ్యాహ్నం';
            } else if (hour < 20) {
              return 'సాయంత్రం';
            } else {
              return 'రాత్రి';
            }
          },
          week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return te;
      });

      /***/
    },
    /* 941 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Thai [th]
      //! author : Kridsada Thanabulpong : https://github.com/sirn

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var th = moment.defineLocale('th', {
          months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split(
            '_',
          ),
          monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
          weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split(
            '_',
          ), // yes, three characters difference
          weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY เวลา H:mm',
            LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm',
          },
          meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
          isPM: function (input) {
            return input === 'หลังเที่ยง';
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
              return 'ก่อนเที่ยง';
            } else {
              return 'หลังเที่ยง';
            }
          },
          calendar: {
            sameDay: '[วันนี้ เวลา] LT',
            nextDay: '[พรุ่งนี้ เวลา] LT',
            nextWeek: 'dddd[หน้า เวลา] LT',
            lastDay: '[เมื่อวานนี้ เวลา] LT',
            lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'อีก %s',
            past: '%sที่แล้ว',
            s: 'ไม่กี่วินาที',
            m: '1 นาที',
            mm: '%d นาที',
            h: '1 ชั่วโมง',
            hh: '%d ชั่วโมง',
            d: '1 วัน',
            dd: '%d วัน',
            M: '1 เดือน',
            MM: '%d เดือน',
            y: '1 ปี',
            yy: '%d ปี',
          },
        });

        return th;
      });

      /***/
    },
    /* 942 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Tagalog (Philippines) [tl-ph]
      //! author : Dan Hagman : https://github.com/hagmandan

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var tl_ph = moment.defineLocale('tl-ph', {
          months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(
            '_',
          ),
          monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split(
            '_',
          ),
          weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(
            '_',
          ),
          weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
          weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'MM/D/YYYY',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY HH:mm',
            LLLL: 'dddd, MMMM DD, YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Ngayon sa] LT',
            nextDay: '[Bukas sa] LT',
            nextWeek: 'dddd [sa] LT',
            lastDay: '[Kahapon sa] LT',
            lastWeek: 'dddd [huling linggo] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'sa loob ng %s',
            past: '%s ang nakalipas',
            s: 'ilang segundo',
            m: 'isang minuto',
            mm: '%d minuto',
            h: 'isang oras',
            hh: '%d oras',
            d: 'isang araw',
            dd: '%d araw',
            M: 'isang buwan',
            MM: '%d buwan',
            y: 'isang taon',
            yy: '%d taon',
          },
          ordinalParse: /\d{1,2}/,
          ordinal: function (number) {
            return number;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return tl_ph;
      });

      /***/
    },
    /* 943 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Klingon [tlh]
      //! author : Dominika Kruk : https://github.com/amaranthrose

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split(
          '_',
        );

        function translateFuture(output) {
          var time = output;
          time =
            output.indexOf('jaj') !== -1
              ? time.slice(0, -3) + 'leS'
              : output.indexOf('jar') !== -1
              ? time.slice(0, -3) + 'waQ'
              : output.indexOf('DIS') !== -1
              ? time.slice(0, -3) + 'nem'
              : time + ' pIq';
          return time;
        }

        function translatePast(output) {
          var time = output;
          time =
            output.indexOf('jaj') !== -1
              ? time.slice(0, -3) + 'Hu’'
              : output.indexOf('jar') !== -1
              ? time.slice(0, -3) + 'wen'
              : output.indexOf('DIS') !== -1
              ? time.slice(0, -3) + 'ben'
              : time + ' ret';
          return time;
        }

        function translate(number, withoutSuffix, string, isFuture) {
          var numberNoun = numberAsNoun(number);
          switch (string) {
            case 'mm':
              return numberNoun + ' tup';
            case 'hh':
              return numberNoun + ' rep';
            case 'dd':
              return numberNoun + ' jaj';
            case 'MM':
              return numberNoun + ' jar';
            case 'yy':
              return numberNoun + ' DIS';
          }
        }

        function numberAsNoun(number) {
          var hundred = Math.floor((number % 1000) / 100),
            ten = Math.floor((number % 100) / 10),
            one = number % 10,
            word = '';
          if (hundred > 0) {
            word += numbersNouns[hundred] + 'vatlh';
          }
          if (ten > 0) {
            word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH';
          }
          if (one > 0) {
            word += (word !== '' ? ' ' : '') + numbersNouns[one];
          }
          return word === '' ? 'pagh' : word;
        }

        var tlh = moment.defineLocale('tlh', {
          months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split(
            '_',
          ),
          monthsShort: 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
            '_',
          ),
          weekdaysShort: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
            '_',
          ),
          weekdaysMin: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
            '_',
          ),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[DaHjaj] LT',
            nextDay: '[wa’leS] LT',
            nextWeek: 'LLL',
            lastDay: '[wa’Hu’] LT',
            lastWeek: 'LLL',
            sameElse: 'L',
          },
          relativeTime: {
            future: translateFuture,
            past: translatePast,
            s: 'puS lup',
            m: 'wa’ tup',
            mm: translate,
            h: 'wa’ rep',
            hh: translate,
            d: 'wa’ jaj',
            dd: translate,
            M: 'wa’ jar',
            MM: translate,
            y: 'wa’ DIS',
            yy: translate,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return tlh;
      });

      /***/
    },
    /* 944 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Turkish [tr]
      //! authors : Erhan Gundogan : https://github.com/erhangundogan,
      //!           Burak Yiğit Kaya: https://github.com/BYK

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var suffixes = {
          1: "'inci",
          5: "'inci",
          8: "'inci",
          70: "'inci",
          80: "'inci",
          2: "'nci",
          7: "'nci",
          20: "'nci",
          50: "'nci",
          3: "'üncü",
          4: "'üncü",
          100: "'üncü",
          6: "'ncı",
          9: "'uncu",
          10: "'uncu",
          30: "'uncu",
          60: "'ıncı",
          90: "'ıncı",
        };

        var tr = moment.defineLocale('tr', {
          months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split(
            '_',
          ),
          monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split(
            '_',
          ),
          weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split(
            '_',
          ),
          weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
          weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[bugün saat] LT',
            nextDay: '[yarın saat] LT',
            nextWeek: '[haftaya] dddd [saat] LT',
            lastDay: '[dün] LT',
            lastWeek: '[geçen hafta] dddd [saat] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s sonra',
            past: '%s önce',
            s: 'birkaç saniye',
            m: 'bir dakika',
            mm: '%d dakika',
            h: 'bir saat',
            hh: '%d saat',
            d: 'bir gün',
            dd: '%d gün',
            M: 'bir ay',
            MM: '%d ay',
            y: 'bir yıl',
            yy: '%d yıl',
          },
          ordinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
          ordinal: function (number) {
            if (number === 0) {
              // special case for zero
              return number + "'ıncı";
            }
            var a = number % 10,
              b = (number % 100) - a,
              c = number >= 100 ? 100 : null;
            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return tr;
      });

      /***/
    },
    /* 945 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Talossan [tzl]
      //! author : Robin van der Vliet : https://github.com/robin0van0der0v
      //! author : Iustì Canun

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
        // This is currently too difficult (maybe even impossible) to add.
        var tzl = moment.defineLocale('tzl', {
          months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split(
            '_',
          ),
          monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split(
            '_',
          ),
          weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split(
            '_',
          ),
          weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
          weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
          longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM [dallas] YYYY',
            LLL: 'D. MMMM [dallas] YYYY HH.mm',
            LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm',
          },
          meridiemParse: /d\'o|d\'a/i,
          isPM: function (input) {
            return "d'o" === input.toLowerCase();
          },
          meridiem: function (hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? "d'o" : "D'O";
            } else {
              return isLower ? "d'a" : "D'A";
            }
          },
          calendar: {
            sameDay: '[oxhi à] LT',
            nextDay: '[demà à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[ieiri à] LT',
            lastWeek: '[sür el] dddd [lasteu à] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'osprei %s',
            past: 'ja%s',
            s: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
          },
          ordinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            s: ['viensas secunds', "'iensas secunds"],
            m: ["'n míut", "'iens míut"],
            mm: [number + ' míuts', '' + number + ' míuts'],
            h: ["'n þora", "'iensa þora"],
            hh: [number + ' þoras', '' + number + ' þoras'],
            d: ["'n ziua", "'iensa ziua"],
            dd: [number + ' ziuas', '' + number + ' ziuas'],
            M: ["'n mes", "'iens mes"],
            MM: [number + ' mesen', '' + number + ' mesen'],
            y: ["'n ar", "'iens ar"],
            yy: [number + ' ars', '' + number + ' ars'],
          };
          return isFuture
            ? format[key][0]
            : withoutSuffix
            ? format[key][0]
            : format[key][1];
        }

        return tzl;
      });

      /***/
    },
    /* 946 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Central Atlas Tamazight [tzm]
      //! author : Abdel Said : https://github.com/abdelsaid

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var tzm = moment.defineLocale('tzm', {
          months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
            '_',
          ),
          monthsShort: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
            '_',
          ),
          weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split(
            '_',
          ),
          weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split(
            '_',
          ),
          weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split(
            '_',
          ),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
            nextWeek: 'dddd [ⴴ] LT',
            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
            lastWeek: 'dddd [ⴴ] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
            past: 'ⵢⴰⵏ %s',
            s: 'ⵉⵎⵉⴽ',
            m: 'ⵎⵉⵏⵓⴺ',
            mm: '%d ⵎⵉⵏⵓⴺ',
            h: 'ⵙⴰⵄⴰ',
            hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
            d: 'ⴰⵙⵙ',
            dd: '%d oⵙⵙⴰⵏ',
            M: 'ⴰⵢoⵓⵔ',
            MM: '%d ⵉⵢⵢⵉⵔⵏ',
            y: 'ⴰⵙⴳⴰⵙ',
            yy: '%d ⵉⵙⴳⴰⵙⵏ',
          },
          week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return tzm;
      });

      /***/
    },
    /* 947 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Central Atlas Tamazight Latin [tzm-latn]
      //! author : Abdel Said : https://github.com/abdelsaid

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var tzm_latn = moment.defineLocale('tzm-latn', {
          months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
            '_',
          ),
          monthsShort: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
            '_',
          ),
          weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split(
            '_',
          ),
          weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split(
            '_',
          ),
          weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split(
            '_',
          ),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[asdkh g] LT',
            nextDay: '[aska g] LT',
            nextWeek: 'dddd [g] LT',
            lastDay: '[assant g] LT',
            lastWeek: 'dddd [g] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'dadkh s yan %s',
            past: 'yan %s',
            s: 'imik',
            m: 'minuḍ',
            mm: '%d minuḍ',
            h: 'saɛa',
            hh: '%d tassaɛin',
            d: 'ass',
            dd: '%d ossan',
            M: 'ayowr',
            MM: '%d iyyirn',
            y: 'asgas',
            yy: '%d isgasn',
          },
          week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return tzm_latn;
      });

      /***/
    },
    /* 948 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Ukrainian [uk]
      //! author : zemlanin : https://github.com/zemlanin
      //! Author : Menelion Elensúle : https://github.com/Oire

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        function plural(word, num) {
          var forms = word.split('_');
          return num % 10 === 1 && num % 100 !== 11
            ? forms[0]
            : num % 10 >= 2 &&
              num % 10 <= 4 &&
              (num % 100 < 10 || num % 100 >= 20)
            ? forms[1]
            : forms[2];
        }
        function relativeTimeWithPlural(number, withoutSuffix, key) {
          var format = {
            mm: withoutSuffix
              ? 'хвилина_хвилини_хвилин'
              : 'хвилину_хвилини_хвилин',
            hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
            dd: 'день_дні_днів',
            MM: 'місяць_місяці_місяців',
            yy: 'рік_роки_років',
          };
          if (key === 'm') {
            return withoutSuffix ? 'хвилина' : 'хвилину';
          } else if (key === 'h') {
            return withoutSuffix ? 'година' : 'годину';
          } else {
            return number + ' ' + plural(format[key], +number);
          }
        }
        function weekdaysCaseReplace(m, format) {
          var weekdays = {
              nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(
                '_',
              ),
              accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(
                '_',
              ),
              genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(
                '_',
              ),
            },
            nounCase = /(\[[ВвУу]\]) ?dddd/.test(format)
              ? 'accusative'
              : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(format)
              ? 'genitive'
              : 'nominative';
          return weekdays[nounCase][m.day()];
        }
        function processHoursFunction(str) {
          return function () {
            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
          };
        }

        var uk = moment.defineLocale('uk', {
          months: {
            format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(
              '_',
            ),
            standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(
              '_',
            ),
          },
          monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(
            '_',
          ),
          weekdays: weekdaysCaseReplace,
          weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
          weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY р.',
            LLL: 'D MMMM YYYY р., HH:mm',
            LLLL: 'dddd, D MMMM YYYY р., HH:mm',
          },
          calendar: {
            sameDay: processHoursFunction('[Сьогодні '),
            nextDay: processHoursFunction('[Завтра '),
            lastDay: processHoursFunction('[Вчора '),
            nextWeek: processHoursFunction('[У] dddd ['),
            lastWeek: function () {
              switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                  return processHoursFunction('[Минулої] dddd [').call(this);
                case 1:
                case 2:
                case 4:
                  return processHoursFunction('[Минулого] dddd [').call(this);
              }
            },
            sameElse: 'L',
          },
          relativeTime: {
            future: 'за %s',
            past: '%s тому',
            s: 'декілька секунд',
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: 'годину',
            hh: relativeTimeWithPlural,
            d: 'день',
            dd: relativeTimeWithPlural,
            M: 'місяць',
            MM: relativeTimeWithPlural,
            y: 'рік',
            yy: relativeTimeWithPlural,
          },
          // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
          meridiemParse: /ночі|ранку|дня|вечора/,
          isPM: function (input) {
            return /^(дня|вечора)$/.test(input);
          },
          meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
              return 'ночі';
            } else if (hour < 12) {
              return 'ранку';
            } else if (hour < 17) {
              return 'дня';
            } else {
              return 'вечора';
            }
          },
          ordinalParse: /\d{1,2}-(й|го)/,
          ordinal: function (number, period) {
            switch (period) {
              case 'M':
              case 'd':
              case 'DDD':
              case 'w':
              case 'W':
                return number + '-й';
              case 'D':
                return number + '-го';
              default:
                return number;
            }
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
          },
        });

        return uk;
      });

      /***/
    },
    /* 949 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Uzbek [uz]
      //! author : Sardor Muminov : https://github.com/muminoff

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var uz = moment.defineLocale('uz', {
          months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(
            '_',
          ),
          monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split(
            '_',
          ),
          weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split(
            '_',
          ),
          weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
          weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'D MMMM YYYY, dddd HH:mm',
          },
          calendar: {
            sameDay: '[Бугун соат] LT [да]',
            nextDay: '[Эртага] LT [да]',
            nextWeek: 'dddd [куни соат] LT [да]',
            lastDay: '[Кеча соат] LT [да]',
            lastWeek: '[Утган] dddd [куни соат] LT [да]',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'Якин %s ичида',
            past: 'Бир неча %s олдин',
            s: 'фурсат',
            m: 'бир дакика',
            mm: '%d дакика',
            h: 'бир соат',
            hh: '%d соат',
            d: 'бир кун',
            dd: '%d кун',
            M: 'бир ой',
            MM: '%d ой',
            y: 'бир йил',
            yy: '%d йил',
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return uz;
      });

      /***/
    },
    /* 950 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Vietnamese [vi]
      //! author : Bang Nguyen : https://github.com/bangnk

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var vi = moment.defineLocale('vi', {
          months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split(
            '_',
          ),
          monthsShort: 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split(
            '_',
          ),
          weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
          weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
          weekdaysParseExact: true,
          meridiemParse: /sa|ch/i,
          isPM: function (input) {
            return /^ch$/i.test(input);
          },
          meridiem: function (hours, minutes, isLower) {
            if (hours < 12) {
              return isLower ? 'sa' : 'SA';
            } else {
              return isLower ? 'ch' : 'CH';
            }
          },
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM [năm] YYYY',
            LLL: 'D MMMM [năm] YYYY HH:mm',
            LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',
            l: 'DD/M/YYYY',
            ll: 'D MMM YYYY',
            lll: 'D MMM YYYY HH:mm',
            llll: 'ddd, D MMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[Hôm nay lúc] LT',
            nextDay: '[Ngày mai lúc] LT',
            nextWeek: 'dddd [tuần tới lúc] LT',
            lastDay: '[Hôm qua lúc] LT',
            lastWeek: 'dddd [tuần rồi lúc] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: '%s tới',
            past: '%s trước',
            s: 'vài giây',
            m: 'một phút',
            mm: '%d phút',
            h: 'một giờ',
            hh: '%d giờ',
            d: 'một ngày',
            dd: '%d ngày',
            M: 'một tháng',
            MM: '%d tháng',
            y: 'một năm',
            yy: '%d năm',
          },
          ordinalParse: /\d{1,2}/,
          ordinal: function (number) {
            return number;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return vi;
      });

      /***/
    },
    /* 951 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Pseudo [x-pseudo]
      //! author : Andrew Hood : https://github.com/andrewhood125

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var x_pseudo = moment.defineLocale('x-pseudo', {
          months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split(
            '_',
          ),
          monthsShort: 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split(
            '_',
          ),
          monthsParseExact: true,
          weekdays: 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split(
            '_',
          ),
          weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
          weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
          },
          calendar: {
            sameDay: '[T~ódá~ý át] LT',
            nextDay: '[T~ómó~rró~w át] LT',
            nextWeek: 'dddd [át] LT',
            lastDay: '[Ý~ést~érdá~ý át] LT',
            lastWeek: '[L~ást] dddd [át] LT',
            sameElse: 'L',
          },
          relativeTime: {
            future: 'í~ñ %s',
            past: '%s á~gó',
            s: 'á ~féw ~sécó~ñds',
            m: 'á ~míñ~úté',
            mm: '%d m~íñú~tés',
            h: 'á~ñ hó~úr',
            hh: '%d h~óúrs',
            d: 'á ~dáý',
            dd: '%d d~áýs',
            M: 'á ~móñ~th',
            MM: '%d m~óñt~hs',
            y: 'á ~ýéár',
            yy: '%d ý~éárs',
          },
          ordinalParse: /\d{1,2}(th|st|nd|rd)/,
          ordinal: function (number) {
            var b = number % 10,
              output =
                ~~((number % 100) / 10) === 1
                  ? 'th'
                  : b === 1
                  ? 'st'
                  : b === 2
                  ? 'nd'
                  : b === 3
                  ? 'rd'
                  : 'th';
            return number + output;
          },
          week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return x_pseudo;
      });

      /***/
    },
    /* 952 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Chinese (China) [zh-cn]
      //! author : suupic : https://github.com/suupic
      //! author : Zeno Zeng : https://github.com/zenozeng

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var zh_cn = moment.defineLocale('zh-cn', {
          months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
            '_',
          ),
          monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
            '_',
          ),
          weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split(
            '_',
          ),
          weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),
          weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
          longDateFormat: {
            LT: 'Ah点mm分',
            LTS: 'Ah点m分s秒',
            L: 'YYYY-MM-DD',
            LL: 'YYYY年MMMD日',
            LLL: 'YYYY年MMMD日Ah点mm分',
            LLLL: 'YYYY年MMMD日ddddAh点mm分',
            l: 'YYYY-MM-DD',
            ll: 'YYYY年MMMD日',
            lll: 'YYYY年MMMD日Ah点mm分',
            llll: 'YYYY年MMMD日ddddAh点mm分',
          },
          meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (
              meridiem === '凌晨' ||
              meridiem === '早上' ||
              meridiem === '上午'
            ) {
              return hour;
            } else if (meridiem === '下午' || meridiem === '晚上') {
              return hour + 12;
            } else {
              // '中午'
              return hour >= 11 ? hour : hour + 12;
            }
          },
          meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
              return '凌晨';
            } else if (hm < 900) {
              return '早上';
            } else if (hm < 1130) {
              return '上午';
            } else if (hm < 1230) {
              return '中午';
            } else if (hm < 1800) {
              return '下午';
            } else {
              return '晚上';
            }
          },
          calendar: {
            sameDay: function () {
              return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';
            },
            nextDay: function () {
              return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';
            },
            lastDay: function () {
              return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';
            },
            nextWeek: function () {
              var startOfWeek, prefix;
              startOfWeek = moment().startOf('week');
              prefix = this.diff(startOfWeek, 'days') >= 7 ? '[下]' : '[本]';
              return this.minutes() === 0
                ? prefix + 'dddAh点整'
                : prefix + 'dddAh点mm';
            },
            lastWeek: function () {
              var startOfWeek, prefix;
              startOfWeek = moment().startOf('week');
              prefix = this.unix() < startOfWeek.unix() ? '[上]' : '[本]';
              return this.minutes() === 0
                ? prefix + 'dddAh点整'
                : prefix + 'dddAh点mm';
            },
            sameElse: 'LL',
          },
          ordinalParse: /\d{1,2}(日|月|周)/,
          ordinal: function (number, period) {
            switch (period) {
              case 'd':
              case 'D':
              case 'DDD':
                return number + '日';
              case 'M':
                return number + '月';
              case 'w':
              case 'W':
                return number + '周';
              default:
                return number;
            }
          },
          relativeTime: {
            future: '%s内',
            past: '%s前',
            s: '几秒',
            m: '1 分钟',
            mm: '%d 分钟',
            h: '1 小时',
            hh: '%d 小时',
            d: '1 天',
            dd: '%d 天',
            M: '1 个月',
            MM: '%d 个月',
            y: '1 年',
            yy: '%d 年',
          },
          week: {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
          },
        });

        return zh_cn;
      });

      /***/
    },
    /* 953 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Chinese (Hong Kong) [zh-hk]
      //! author : Ben : https://github.com/ben-lin
      //! author : Chris Lam : https://github.com/hehachris
      //! author : Konstantin : https://github.com/skfd

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var zh_hk = moment.defineLocale('zh-hk', {
          months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
            '_',
          ),
          monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
            '_',
          ),
          weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split(
            '_',
          ),
          weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
          weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
          longDateFormat: {
            LT: 'Ah點mm分',
            LTS: 'Ah點m分s秒',
            L: 'YYYY年MMMD日',
            LL: 'YYYY年MMMD日',
            LLL: 'YYYY年MMMD日Ah點mm分',
            LLLL: 'YYYY年MMMD日ddddAh點mm分',
            l: 'YYYY年MMMD日',
            ll: 'YYYY年MMMD日',
            lll: 'YYYY年MMMD日Ah點mm分',
            llll: 'YYYY年MMMD日ddddAh點mm分',
          },
          meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (
              meridiem === '凌晨' ||
              meridiem === '早上' ||
              meridiem === '上午'
            ) {
              return hour;
            } else if (meridiem === '中午') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
              return hour + 12;
            }
          },
          meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
              return '凌晨';
            } else if (hm < 900) {
              return '早上';
            } else if (hm < 1130) {
              return '上午';
            } else if (hm < 1230) {
              return '中午';
            } else if (hm < 1800) {
              return '下午';
            } else {
              return '晚上';
            }
          },
          calendar: {
            sameDay: '[今天]LT',
            nextDay: '[明天]LT',
            nextWeek: '[下]ddddLT',
            lastDay: '[昨天]LT',
            lastWeek: '[上]ddddLT',
            sameElse: 'L',
          },
          ordinalParse: /\d{1,2}(日|月|週)/,
          ordinal: function (number, period) {
            switch (period) {
              case 'd':
              case 'D':
              case 'DDD':
                return number + '日';
              case 'M':
                return number + '月';
              case 'w':
              case 'W':
                return number + '週';
              default:
                return number;
            }
          },
          relativeTime: {
            future: '%s內',
            past: '%s前',
            s: '幾秒',
            m: '1 分鐘',
            mm: '%d 分鐘',
            h: '1 小時',
            hh: '%d 小時',
            d: '1 天',
            dd: '%d 天',
            M: '1 個月',
            MM: '%d 個月',
            y: '1 年',
            yy: '%d 年',
          },
        });

        return zh_hk;
      });

      /***/
    },
    /* 954 */
    /***/ function (module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Chinese (Taiwan) [zh-tw]
      //! author : Ben : https://github.com/ben-lin
      //! author : Chris Lam : https://github.com/hehachris

      (function (global, factory) {
        true
          ? factory(__webpack_require__(849))
          : typeof define === 'function' && define.amd
          ? define(['../moment'], factory)
          : factory(global.moment);
      })(this, function (moment) {
        'use strict';

        var zh_tw = moment.defineLocale('zh-tw', {
          months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
            '_',
          ),
          monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
            '_',
          ),
          weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split(
            '_',
          ),
          weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
          weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
          longDateFormat: {
            LT: 'Ah點mm分',
            LTS: 'Ah點m分s秒',
            L: 'YYYY年MMMD日',
            LL: 'YYYY年MMMD日',
            LLL: 'YYYY年MMMD日Ah點mm分',
            LLLL: 'YYYY年MMMD日ddddAh點mm分',
            l: 'YYYY年MMMD日',
            ll: 'YYYY年MMMD日',
            lll: 'YYYY年MMMD日Ah點mm分',
            llll: 'YYYY年MMMD日ddddAh點mm分',
          },
          meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
          meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }
            if (
              meridiem === '凌晨' ||
              meridiem === '早上' ||
              meridiem === '上午'
            ) {
              return hour;
            } else if (meridiem === '中午') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
              return hour + 12;
            }
          },
          meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
              return '凌晨';
            } else if (hm < 900) {
              return '早上';
            } else if (hm < 1130) {
              return '上午';
            } else if (hm < 1230) {
              return '中午';
            } else if (hm < 1800) {
              return '下午';
            } else {
              return '晚上';
            }
          },
          calendar: {
            sameDay: '[今天]LT',
            nextDay: '[明天]LT',
            nextWeek: '[下]ddddLT',
            lastDay: '[昨天]LT',
            lastWeek: '[上]ddddLT',
            sameElse: 'L',
          },
          ordinalParse: /\d{1,2}(日|月|週)/,
          ordinal: function (number, period) {
            switch (period) {
              case 'd':
              case 'D':
              case 'DDD':
                return number + '日';
              case 'M':
                return number + '月';
              case 'w':
              case 'W':
                return number + '週';
              default:
                return number;
            }
          },
          relativeTime: {
            future: '%s內',
            past: '%s前',
            s: '幾秒',
            m: '1 分鐘',
            mm: '%d 分鐘',
            h: '1 小時',
            hh: '%d 小時',
            d: '1 天',
            dd: '%d 天',
            M: '1 個月',
            MM: '%d 個月',
            y: '1 年',
            yy: '%d 年',
          },
        });

        return zh_tw;
      });

      /***/
    },
    /* 955 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;

        Chart.defaults.bar = {
          hover: {
            mode: 'label',
          },

          scales: {
            xAxes: [
              {
                type: 'category',

                // Specific to Bar Controller
                categoryPercentage: 0.8,
                barPercentage: 0.9,

                // grid line settings
                gridLines: {
                  offsetGridLines: true,
                },
              },
            ],
            yAxes: [
              {
                type: 'linear',
              },
            ],
          },
        };

        Chart.controllers.bar = Chart.DatasetController.extend({
          dataElementType: Chart.elements.Rectangle,

          initialize: function (chart, datasetIndex) {
            Chart.DatasetController.prototype.initialize.call(
              this,
              chart,
              datasetIndex,
            );

            // Use this to indicate that this is a bar dataset.
            this.getMeta().bar = true;
          },

          // Get the number of datasets that display bars. We use this to correctly calculate the bar width
          getBarCount: function () {
            var me = this;
            var barCount = 0;
            helpers.each(
              me.chart.data.datasets,
              function (dataset, datasetIndex) {
                var meta = me.chart.getDatasetMeta(datasetIndex);
                if (meta.bar && me.chart.isDatasetVisible(datasetIndex)) {
                  ++barCount;
                }
              },
              me,
            );
            return barCount;
          },

          update: function (reset) {
            var me = this;
            helpers.each(
              me.getMeta().data,
              function (rectangle, index) {
                me.updateElement(rectangle, index, reset);
              },
              me,
            );
          },

          updateElement: function (rectangle, index, reset) {
            var me = this;
            var meta = me.getMeta();
            var xScale = me.getScaleForId(meta.xAxisID);
            var yScale = me.getScaleForId(meta.yAxisID);
            var scaleBase = yScale.getBasePixel();
            var rectangleElementOptions = me.chart.options.elements.rectangle;
            var custom = rectangle.custom || {};
            var dataset = me.getDataset();

            helpers.extend(rectangle, {
              // Utility
              _xScale: xScale,
              _yScale: yScale,
              _datasetIndex: me.index,
              _index: index,

              // Desired view properties
              _model: {
                x: me.calculateBarX(index, me.index),
                y: reset ? scaleBase : me.calculateBarY(index, me.index),

                // Tooltip
                label: me.chart.data.labels[index],
                datasetLabel: dataset.label,

                // Appearance
                base: reset ? scaleBase : me.calculateBarBase(me.index, index),
                width: me.calculateBarWidth(index),
                backgroundColor: custom.backgroundColor
                  ? custom.backgroundColor
                  : helpers.getValueAtIndexOrDefault(
                      dataset.backgroundColor,
                      index,
                      rectangleElementOptions.backgroundColor,
                    ),
                borderSkipped: custom.borderSkipped
                  ? custom.borderSkipped
                  : rectangleElementOptions.borderSkipped,
                borderColor: custom.borderColor
                  ? custom.borderColor
                  : helpers.getValueAtIndexOrDefault(
                      dataset.borderColor,
                      index,
                      rectangleElementOptions.borderColor,
                    ),
                borderWidth: custom.borderWidth
                  ? custom.borderWidth
                  : helpers.getValueAtIndexOrDefault(
                      dataset.borderWidth,
                      index,
                      rectangleElementOptions.borderWidth,
                    ),
              },
            });
            rectangle.pivot();
          },

          calculateBarBase: function (datasetIndex, index) {
            var me = this;
            var meta = me.getMeta();
            var yScale = me.getScaleForId(meta.yAxisID);
            var base = 0;

            if (yScale.options.stacked) {
              var chart = me.chart;
              var datasets = chart.data.datasets;
              var value = Number(datasets[datasetIndex].data[index]);

              for (var i = 0; i < datasetIndex; i++) {
                var currentDs = datasets[i];
                var currentDsMeta = chart.getDatasetMeta(i);
                if (
                  currentDsMeta.bar &&
                  currentDsMeta.yAxisID === yScale.id &&
                  chart.isDatasetVisible(i)
                ) {
                  var currentVal = Number(currentDs.data[index]);
                  base +=
                    value < 0
                      ? Math.min(currentVal, 0)
                      : Math.max(currentVal, 0);
                }
              }

              return yScale.getPixelForValue(base);
            }

            return yScale.getBasePixel();
          },

          getRuler: function (index) {
            var me = this;
            var meta = me.getMeta();
            var xScale = me.getScaleForId(meta.xAxisID);
            var datasetCount = me.getBarCount();

            var tickWidth;

            if (xScale.options.type === 'category') {
              tickWidth =
                xScale.getPixelForTick(index + 1) -
                xScale.getPixelForTick(index);
            } else {
              // Average width
              tickWidth = xScale.width / xScale.ticks.length;
            }
            var categoryWidth = tickWidth * xScale.options.categoryPercentage;
            var categorySpacing =
              (tickWidth - tickWidth * xScale.options.categoryPercentage) / 2;
            var fullBarWidth = categoryWidth / datasetCount;

            if (xScale.ticks.length !== me.chart.data.labels.length) {
              var perc = xScale.ticks.length / me.chart.data.labels.length;
              fullBarWidth = fullBarWidth * perc;
            }

            var barWidth = fullBarWidth * xScale.options.barPercentage;
            var barSpacing =
              fullBarWidth - fullBarWidth * xScale.options.barPercentage;

            return {
              datasetCount: datasetCount,
              tickWidth: tickWidth,
              categoryWidth: categoryWidth,
              categorySpacing: categorySpacing,
              fullBarWidth: fullBarWidth,
              barWidth: barWidth,
              barSpacing: barSpacing,
            };
          },

          calculateBarWidth: function (index) {
            var xScale = this.getScaleForId(this.getMeta().xAxisID);
            if (xScale.options.barThickness) {
              return xScale.options.barThickness;
            }
            var ruler = this.getRuler(index);
            return xScale.options.stacked
              ? ruler.categoryWidth
              : ruler.barWidth;
          },

          // Get bar index from the given dataset index accounting for the fact that not all bars are visible
          getBarIndex: function (datasetIndex) {
            var barIndex = 0;
            var meta, j;

            for (j = 0; j < datasetIndex; ++j) {
              meta = this.chart.getDatasetMeta(j);
              if (meta.bar && this.chart.isDatasetVisible(j)) {
                ++barIndex;
              }
            }

            return barIndex;
          },

          calculateBarX: function (index, datasetIndex) {
            var me = this;
            var meta = me.getMeta();
            var xScale = me.getScaleForId(meta.xAxisID);
            var barIndex = me.getBarIndex(datasetIndex);

            var ruler = me.getRuler(index);
            var leftTick = xScale.getPixelForValue(
              null,
              index,
              datasetIndex,
              me.chart.isCombo,
            );
            leftTick -= me.chart.isCombo ? ruler.tickWidth / 2 : 0;

            if (xScale.options.stacked) {
              return leftTick + ruler.categoryWidth / 2 + ruler.categorySpacing;
            }

            return (
              leftTick +
              ruler.barWidth / 2 +
              ruler.categorySpacing +
              ruler.barWidth * barIndex +
              ruler.barSpacing / 2 +
              ruler.barSpacing * barIndex
            );
          },

          calculateBarY: function (index, datasetIndex) {
            var me = this;
            var meta = me.getMeta();
            var yScale = me.getScaleForId(meta.yAxisID);
            var value = Number(me.getDataset().data[index]);

            if (yScale.options.stacked) {
              var sumPos = 0,
                sumNeg = 0;

              for (var i = 0; i < datasetIndex; i++) {
                var ds = me.chart.data.datasets[i];
                var dsMeta = me.chart.getDatasetMeta(i);
                if (
                  dsMeta.bar &&
                  dsMeta.yAxisID === yScale.id &&
                  me.chart.isDatasetVisible(i)
                ) {
                  var stackedVal = Number(ds.data[index]);
                  if (stackedVal < 0) {
                    sumNeg += stackedVal || 0;
                  } else {
                    sumPos += stackedVal || 0;
                  }
                }
              }

              if (value < 0) {
                return yScale.getPixelForValue(sumNeg + value);
              }
              return yScale.getPixelForValue(sumPos + value);
            }

            return yScale.getPixelForValue(value);
          },

          draw: function (ease) {
            var me = this;
            var easingDecimal = ease || 1;
            helpers.each(
              me.getMeta().data,
              function (rectangle, index) {
                var d = me.getDataset().data[index];
                if (d !== null && d !== undefined && !isNaN(d)) {
                  rectangle.transition(easingDecimal).draw();
                }
              },
              me,
            );
          },

          setHoverStyle: function (rectangle) {
            var dataset = this.chart.data.datasets[rectangle._datasetIndex];
            var index = rectangle._index;

            var custom = rectangle.custom || {};
            var model = rectangle._model;
            model.backgroundColor = custom.hoverBackgroundColor
              ? custom.hoverBackgroundColor
              : helpers.getValueAtIndexOrDefault(
                  dataset.hoverBackgroundColor,
                  index,
                  helpers.getHoverColor(model.backgroundColor),
                );
            model.borderColor = custom.hoverBorderColor
              ? custom.hoverBorderColor
              : helpers.getValueAtIndexOrDefault(
                  dataset.hoverBorderColor,
                  index,
                  helpers.getHoverColor(model.borderColor),
                );
            model.borderWidth = custom.hoverBorderWidth
              ? custom.hoverBorderWidth
              : helpers.getValueAtIndexOrDefault(
                  dataset.hoverBorderWidth,
                  index,
                  model.borderWidth,
                );
          },

          removeHoverStyle: function (rectangle) {
            var dataset = this.chart.data.datasets[rectangle._datasetIndex];
            var index = rectangle._index;
            var custom = rectangle.custom || {};
            var model = rectangle._model;
            var rectangleElementOptions = this.chart.options.elements.rectangle;

            model.backgroundColor = custom.backgroundColor
              ? custom.backgroundColor
              : helpers.getValueAtIndexOrDefault(
                  dataset.backgroundColor,
                  index,
                  rectangleElementOptions.backgroundColor,
                );
            model.borderColor = custom.borderColor
              ? custom.borderColor
              : helpers.getValueAtIndexOrDefault(
                  dataset.borderColor,
                  index,
                  rectangleElementOptions.borderColor,
                );
            model.borderWidth = custom.borderWidth
              ? custom.borderWidth
              : helpers.getValueAtIndexOrDefault(
                  dataset.borderWidth,
                  index,
                  rectangleElementOptions.borderWidth,
                );
          },
        });

        // including horizontalBar in the bar file, instead of a file of its own
        // it extends bar (like pie extends doughnut)
        Chart.defaults.horizontalBar = {
          hover: {
            mode: 'label',
          },

          scales: {
            xAxes: [
              {
                type: 'linear',
                position: 'bottom',
              },
            ],
            yAxes: [
              {
                position: 'left',
                type: 'category',

                // Specific to Horizontal Bar Controller
                categoryPercentage: 0.8,
                barPercentage: 0.9,

                // grid line settings
                gridLines: {
                  offsetGridLines: true,
                },
              },
            ],
          },
          elements: {
            rectangle: {
              borderSkipped: 'left',
            },
          },
          tooltips: {
            callbacks: {
              title: function (tooltipItems, data) {
                // Pick first xLabel for now
                var title = '';

                if (tooltipItems.length > 0) {
                  if (tooltipItems[0].yLabel) {
                    title = tooltipItems[0].yLabel;
                  } else if (
                    data.labels.length > 0 &&
                    tooltipItems[0].index < data.labels.length
                  ) {
                    title = data.labels[tooltipItems[0].index];
                  }
                }

                return title;
              },
              label: function (tooltipItem, data) {
                var datasetLabel =
                  data.datasets[tooltipItem.datasetIndex].label || '';
                return datasetLabel + ': ' + tooltipItem.xLabel;
              },
            },
          },
        };

        Chart.controllers.horizontalBar = Chart.controllers.bar.extend({
          updateElement: function (rectangle, index, reset) {
            var me = this;
            var meta = me.getMeta();
            var xScale = me.getScaleForId(meta.xAxisID);
            var yScale = me.getScaleForId(meta.yAxisID);
            var scaleBase = xScale.getBasePixel();
            var custom = rectangle.custom || {};
            var dataset = me.getDataset();
            var rectangleElementOptions = me.chart.options.elements.rectangle;

            helpers.extend(rectangle, {
              // Utility
              _xScale: xScale,
              _yScale: yScale,
              _datasetIndex: me.index,
              _index: index,

              // Desired view properties
              _model: {
                x: reset ? scaleBase : me.calculateBarX(index, me.index),
                y: me.calculateBarY(index, me.index),

                // Tooltip
                label: me.chart.data.labels[index],
                datasetLabel: dataset.label,

                // Appearance
                base: reset ? scaleBase : me.calculateBarBase(me.index, index),
                height: me.calculateBarHeight(index),
                backgroundColor: custom.backgroundColor
                  ? custom.backgroundColor
                  : helpers.getValueAtIndexOrDefault(
                      dataset.backgroundColor,
                      index,
                      rectangleElementOptions.backgroundColor,
                    ),
                borderSkipped: custom.borderSkipped
                  ? custom.borderSkipped
                  : rectangleElementOptions.borderSkipped,
                borderColor: custom.borderColor
                  ? custom.borderColor
                  : helpers.getValueAtIndexOrDefault(
                      dataset.borderColor,
                      index,
                      rectangleElementOptions.borderColor,
                    ),
                borderWidth: custom.borderWidth
                  ? custom.borderWidth
                  : helpers.getValueAtIndexOrDefault(
                      dataset.borderWidth,
                      index,
                      rectangleElementOptions.borderWidth,
                    ),
              },

              draw: function () {
                var ctx = this._chart.ctx;
                var vm = this._view;

                var halfHeight = vm.height / 2,
                  topY = vm.y - halfHeight,
                  bottomY = vm.y + halfHeight,
                  right = vm.base - (vm.base - vm.x),
                  halfStroke = vm.borderWidth / 2;

                // Canvas doesn't allow us to stroke inside the width so we can
                // adjust the sizes to fit if we're setting a stroke on the line
                if (vm.borderWidth) {
                  topY += halfStroke;
                  bottomY -= halfStroke;
                  right += halfStroke;
                }

                ctx.beginPath();

                ctx.fillStyle = vm.backgroundColor;
                ctx.strokeStyle = vm.borderColor;
                ctx.lineWidth = vm.borderWidth;

                // Corner points, from bottom-left to bottom-right clockwise
                // | 1 2 |
                // | 0 3 |
                var corners = [
                  [vm.base, bottomY],
                  [vm.base, topY],
                  [right, topY],
                  [right, bottomY],
                ];

                // Find first (starting) corner with fallback to 'bottom'
                var borders = ['bottom', 'left', 'top', 'right'];
                var startCorner = borders.indexOf(vm.borderSkipped, 0);
                if (startCorner === -1) {
                  startCorner = 0;
                }

                function cornerAt(cornerIndex) {
                  return corners[(startCorner + cornerIndex) % 4];
                }

                // Draw rectangle from 'startCorner'
                ctx.moveTo.apply(ctx, cornerAt(0));
                for (var i = 1; i < 4; i++) {
                  ctx.lineTo.apply(ctx, cornerAt(i));
                }

                ctx.fill();
                if (vm.borderWidth) {
                  ctx.stroke();
                }
              },

              inRange: function (mouseX, mouseY) {
                var vm = this._view;
                var inRange = false;

                if (vm) {
                  if (vm.x < vm.base) {
                    inRange =
                      mouseY >= vm.y - vm.height / 2 &&
                      mouseY <= vm.y + vm.height / 2 &&
                      mouseX >= vm.x &&
                      mouseX <= vm.base;
                  } else {
                    inRange =
                      mouseY >= vm.y - vm.height / 2 &&
                      mouseY <= vm.y + vm.height / 2 &&
                      mouseX >= vm.base &&
                      mouseX <= vm.x;
                  }
                }

                return inRange;
              },
            });

            rectangle.pivot();
          },

          calculateBarBase: function (datasetIndex, index) {
            var me = this;
            var meta = me.getMeta();
            var xScale = me.getScaleForId(meta.xAxisID);
            var base = 0;

            if (xScale.options.stacked) {
              var chart = me.chart;
              var datasets = chart.data.datasets;
              var value = Number(datasets[datasetIndex].data[index]);

              for (var i = 0; i < datasetIndex; i++) {
                var currentDs = datasets[i];
                var currentDsMeta = chart.getDatasetMeta(i);
                if (
                  currentDsMeta.bar &&
                  currentDsMeta.xAxisID === xScale.id &&
                  chart.isDatasetVisible(i)
                ) {
                  var currentVal = Number(currentDs.data[index]);
                  base +=
                    value < 0
                      ? Math.min(currentVal, 0)
                      : Math.max(currentVal, 0);
                }
              }

              return xScale.getPixelForValue(base);
            }

            return xScale.getBasePixel();
          },

          getRuler: function (index) {
            var me = this;
            var meta = me.getMeta();
            var yScale = me.getScaleForId(meta.yAxisID);
            var datasetCount = me.getBarCount();

            var tickHeight;
            if (yScale.options.type === 'category') {
              tickHeight =
                yScale.getPixelForTick(index + 1) -
                yScale.getPixelForTick(index);
            } else {
              // Average width
              tickHeight = yScale.width / yScale.ticks.length;
            }
            var categoryHeight = tickHeight * yScale.options.categoryPercentage;
            var categorySpacing =
              (tickHeight - tickHeight * yScale.options.categoryPercentage) / 2;
            var fullBarHeight = categoryHeight / datasetCount;

            if (yScale.ticks.length !== me.chart.data.labels.length) {
              var perc = yScale.ticks.length / me.chart.data.labels.length;
              fullBarHeight = fullBarHeight * perc;
            }

            var barHeight = fullBarHeight * yScale.options.barPercentage;
            var barSpacing =
              fullBarHeight - fullBarHeight * yScale.options.barPercentage;

            return {
              datasetCount: datasetCount,
              tickHeight: tickHeight,
              categoryHeight: categoryHeight,
              categorySpacing: categorySpacing,
              fullBarHeight: fullBarHeight,
              barHeight: barHeight,
              barSpacing: barSpacing,
            };
          },

          calculateBarHeight: function (index) {
            var me = this;
            var yScale = me.getScaleForId(me.getMeta().yAxisID);
            if (yScale.options.barThickness) {
              return yScale.options.barThickness;
            }
            var ruler = me.getRuler(index);
            return yScale.options.stacked
              ? ruler.categoryHeight
              : ruler.barHeight;
          },

          calculateBarX: function (index, datasetIndex) {
            var me = this;
            var meta = me.getMeta();
            var xScale = me.getScaleForId(meta.xAxisID);
            var value = Number(me.getDataset().data[index]);

            if (xScale.options.stacked) {
              var sumPos = 0,
                sumNeg = 0;

              for (var i = 0; i < datasetIndex; i++) {
                var ds = me.chart.data.datasets[i];
                var dsMeta = me.chart.getDatasetMeta(i);
                if (
                  dsMeta.bar &&
                  dsMeta.xAxisID === xScale.id &&
                  me.chart.isDatasetVisible(i)
                ) {
                  var stackedVal = Number(ds.data[index]);
                  if (stackedVal < 0) {
                    sumNeg += stackedVal || 0;
                  } else {
                    sumPos += stackedVal || 0;
                  }
                }
              }

              if (value < 0) {
                return xScale.getPixelForValue(sumNeg + value);
              }
              return xScale.getPixelForValue(sumPos + value);
            }

            return xScale.getPixelForValue(value);
          },

          calculateBarY: function (index, datasetIndex) {
            var me = this;
            var meta = me.getMeta();
            var yScale = me.getScaleForId(meta.yAxisID);
            var barIndex = me.getBarIndex(datasetIndex);

            var ruler = me.getRuler(index);
            var topTick = yScale.getPixelForValue(
              null,
              index,
              datasetIndex,
              me.chart.isCombo,
            );
            topTick -= me.chart.isCombo ? ruler.tickHeight / 2 : 0;

            if (yScale.options.stacked) {
              return topTick + ruler.categoryHeight / 2 + ruler.categorySpacing;
            }

            return (
              topTick +
              ruler.barHeight / 2 +
              ruler.categorySpacing +
              ruler.barHeight * barIndex +
              ruler.barSpacing / 2 +
              ruler.barSpacing * barIndex
            );
          },
        });
      };

      /***/
    },
    /* 956 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;

        Chart.defaults.bubble = {
          hover: {
            mode: 'single',
          },

          scales: {
            xAxes: [
              {
                type: 'linear', // bubble should probably use a linear scale by default
                position: 'bottom',
                id: 'x-axis-0', // need an ID so datasets can reference the scale
              },
            ],
            yAxes: [
              {
                type: 'linear',
                position: 'left',
                id: 'y-axis-0',
              },
            ],
          },

          tooltips: {
            callbacks: {
              title: function () {
                // Title doesn't make sense for scatter since we format the data as a point
                return '';
              },
              label: function (tooltipItem, data) {
                var datasetLabel =
                  data.datasets[tooltipItem.datasetIndex].label || '';
                var dataPoint =
                  data.datasets[tooltipItem.datasetIndex].data[
                    tooltipItem.index
                  ];
                return (
                  datasetLabel +
                  ': (' +
                  dataPoint.x +
                  ', ' +
                  dataPoint.y +
                  ', ' +
                  dataPoint.r +
                  ')'
                );
              },
            },
          },
        };

        Chart.controllers.bubble = Chart.DatasetController.extend({
          dataElementType: Chart.elements.Point,

          update: function (reset) {
            var me = this;
            var meta = me.getMeta();
            var points = meta.data;

            // Update Points
            helpers.each(points, function (point, index) {
              me.updateElement(point, index, reset);
            });
          },

          updateElement: function (point, index, reset) {
            var me = this;
            var meta = me.getMeta();
            var xScale = me.getScaleForId(meta.xAxisID);
            var yScale = me.getScaleForId(meta.yAxisID);

            var custom = point.custom || {};
            var dataset = me.getDataset();
            var data = dataset.data[index];
            var pointElementOptions = me.chart.options.elements.point;
            var dsIndex = me.index;

            helpers.extend(point, {
              // Utility
              _xScale: xScale,
              _yScale: yScale,
              _datasetIndex: dsIndex,
              _index: index,

              // Desired view properties
              _model: {
                x: reset
                  ? xScale.getPixelForDecimal(0.5)
                  : xScale.getPixelForValue(
                      typeof data === 'object' ? data : NaN,
                      index,
                      dsIndex,
                      me.chart.isCombo,
                    ),
                y: reset
                  ? yScale.getBasePixel()
                  : yScale.getPixelForValue(data, index, dsIndex),
                // Appearance
                radius: reset
                  ? 0
                  : custom.radius
                  ? custom.radius
                  : me.getRadius(data),

                // Tooltip
                hitRadius: custom.hitRadius
                  ? custom.hitRadius
                  : helpers.getValueAtIndexOrDefault(
                      dataset.hitRadius,
                      index,
                      pointElementOptions.hitRadius,
                    ),
              },
            });

            // Trick to reset the styles of the point
            Chart.DatasetController.prototype.removeHoverStyle.call(
              me,
              point,
              pointElementOptions,
            );

            var model = point._model;
            model.skip = custom.skip
              ? custom.skip
              : isNaN(model.x) || isNaN(model.y);

            point.pivot();
          },

          getRadius: function (value) {
            return value.r || this.chart.options.elements.point.radius;
          },

          setHoverStyle: function (point) {
            var me = this;
            Chart.DatasetController.prototype.setHoverStyle.call(me, point);

            // Radius
            var dataset = me.chart.data.datasets[point._datasetIndex];
            var index = point._index;
            var custom = point.custom || {};
            var model = point._model;
            model.radius = custom.hoverRadius
              ? custom.hoverRadius
              : helpers.getValueAtIndexOrDefault(
                  dataset.hoverRadius,
                  index,
                  me.chart.options.elements.point.hoverRadius,
                ) + me.getRadius(dataset.data[index]);
          },

          removeHoverStyle: function (point) {
            var me = this;
            Chart.DatasetController.prototype.removeHoverStyle.call(
              me,
              point,
              me.chart.options.elements.point,
            );

            var dataVal =
              me.chart.data.datasets[point._datasetIndex].data[point._index];
            var custom = point.custom || {};
            var model = point._model;

            model.radius = custom.radius
              ? custom.radius
              : me.getRadius(dataVal);
          },
        });
      };

      /***/
    },
    /* 957 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers,
          defaults = Chart.defaults;

        defaults.doughnut = {
          animation: {
            // Boolean - Whether we animate the rotation of the Doughnut
            animateRotate: true,
            // Boolean - Whether we animate scaling the Doughnut from the centre
            animateScale: false,
          },
          aspectRatio: 1,
          hover: {
            mode: 'single',
          },
          legendCallback: function (chart) {
            var text = [];
            text.push('<ul class="' + chart.id + '-legend">');

            var data = chart.data;
            var datasets = data.datasets;
            var labels = data.labels;

            if (datasets.length) {
              for (var i = 0; i < datasets[0].data.length; ++i) {
                text.push(
                  '<li><span style="background-color:' +
                    datasets[0].backgroundColor[i] +
                    '"></span>',
                );
                if (labels[i]) {
                  text.push(labels[i]);
                }
                text.push('</li>');
              }
            }

            text.push('</ul>');
            return text.join('');
          },
          legend: {
            labels: {
              generateLabels: function (chart) {
                var data = chart.data;
                if (data.labels.length && data.datasets.length) {
                  return data.labels.map(function (label, i) {
                    var meta = chart.getDatasetMeta(0);
                    var ds = data.datasets[0];
                    var arc = meta.data[i];
                    var custom = (arc && arc.custom) || {};
                    var getValueAtIndexOrDefault =
                      helpers.getValueAtIndexOrDefault;
                    var arcOpts = chart.options.elements.arc;
                    var fill = custom.backgroundColor
                      ? custom.backgroundColor
                      : getValueAtIndexOrDefault(
                          ds.backgroundColor,
                          i,
                          arcOpts.backgroundColor,
                        );
                    var stroke = custom.borderColor
                      ? custom.borderColor
                      : getValueAtIndexOrDefault(
                          ds.borderColor,
                          i,
                          arcOpts.borderColor,
                        );
                    var bw = custom.borderWidth
                      ? custom.borderWidth
                      : getValueAtIndexOrDefault(
                          ds.borderWidth,
                          i,
                          arcOpts.borderWidth,
                        );

                    return {
                      text: label,
                      fillStyle: fill,
                      strokeStyle: stroke,
                      lineWidth: bw,
                      hidden: isNaN(ds.data[i]) || meta.data[i].hidden,

                      // Extra data used for toggling the correct item
                      index: i,
                    };
                  });
                }
                return [];
              },
            },

            onClick: function (e, legendItem) {
              var index = legendItem.index;
              var chart = this.chart;
              var i, ilen, meta;

              for (
                i = 0, ilen = (chart.data.datasets || []).length;
                i < ilen;
                ++i
              ) {
                meta = chart.getDatasetMeta(i);
                // toggle visibility of index if exists
                if (meta.data[index]) {
                  meta.data[index].hidden = !meta.data[index].hidden;
                }
              }

              chart.update();
            },
          },

          // The percentage of the chart that we cut out of the middle.
          cutoutPercentage: 50,

          // The rotation of the chart, where the first data arc begins.
          rotation: Math.PI * -0.5,

          // The total circumference of the chart.
          circumference: Math.PI * 2.0,

          // Need to override these to give a nice default
          tooltips: {
            callbacks: {
              title: function () {
                return '';
              },
              label: function (tooltipItem, data) {
                return (
                  data.labels[tooltipItem.index] +
                  ': ' +
                  data.datasets[tooltipItem.datasetIndex].data[
                    tooltipItem.index
                  ]
                );
              },
            },
          },
        };

        defaults.pie = helpers.clone(defaults.doughnut);
        helpers.extend(defaults.pie, {
          cutoutPercentage: 0,
        });

        Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend(
          {
            dataElementType: Chart.elements.Arc,

            linkScales: helpers.noop,

            // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly
            getRingIndex: function (datasetIndex) {
              var ringIndex = 0;

              for (var j = 0; j < datasetIndex; ++j) {
                if (this.chart.isDatasetVisible(j)) {
                  ++ringIndex;
                }
              }

              return ringIndex;
            },

            update: function (reset) {
              var me = this;
              var chart = me.chart,
                chartArea = chart.chartArea,
                opts = chart.options,
                arcOpts = opts.elements.arc,
                availableWidth =
                  chartArea.right - chartArea.left - arcOpts.borderWidth,
                availableHeight =
                  chartArea.bottom - chartArea.top - arcOpts.borderWidth,
                minSize = Math.min(availableWidth, availableHeight),
                offset = {
                  x: 0,
                  y: 0,
                },
                meta = me.getMeta(),
                cutoutPercentage = opts.cutoutPercentage,
                circumference = opts.circumference;

              // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc
              if (circumference < Math.PI * 2.0) {
                var startAngle = opts.rotation % (Math.PI * 2.0);
                startAngle +=
                  Math.PI *
                  2.0 *
                  (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);
                var endAngle = startAngle + circumference;
                var start = {
                  x: Math.cos(startAngle),
                  y: Math.sin(startAngle),
                };
                var end = { x: Math.cos(endAngle), y: Math.sin(endAngle) };
                var contains0 =
                  (startAngle <= 0 && 0 <= endAngle) ||
                  (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);
                var contains90 =
                  (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) ||
                  (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);
                var contains180 =
                  (startAngle <= -Math.PI && -Math.PI <= endAngle) ||
                  (startAngle <= Math.PI && Math.PI <= endAngle);
                var contains270 =
                  (startAngle <= -Math.PI * 0.5 &&
                    -Math.PI * 0.5 <= endAngle) ||
                  (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);
                var cutout = cutoutPercentage / 100.0;
                var min = {
                  x: contains180
                    ? -1
                    : Math.min(
                        start.x * (start.x < 0 ? 1 : cutout),
                        end.x * (end.x < 0 ? 1 : cutout),
                      ),
                  y: contains270
                    ? -1
                    : Math.min(
                        start.y * (start.y < 0 ? 1 : cutout),
                        end.y * (end.y < 0 ? 1 : cutout),
                      ),
                };
                var max = {
                  x: contains0
                    ? 1
                    : Math.max(
                        start.x * (start.x > 0 ? 1 : cutout),
                        end.x * (end.x > 0 ? 1 : cutout),
                      ),
                  y: contains90
                    ? 1
                    : Math.max(
                        start.y * (start.y > 0 ? 1 : cutout),
                        end.y * (end.y > 0 ? 1 : cutout),
                      ),
                };
                var size = {
                  width: (max.x - min.x) * 0.5,
                  height: (max.y - min.y) * 0.5,
                };
                minSize = Math.min(
                  availableWidth / size.width,
                  availableHeight / size.height,
                );
                offset = {
                  x: (max.x + min.x) * -0.5,
                  y: (max.y + min.y) * -0.5,
                };
              }

              chart.borderWidth = me.getMaxBorderWidth(meta.data);
              chart.outerRadius = Math.max(
                (minSize - chart.borderWidth) / 2,
                0,
              );
              chart.innerRadius = Math.max(
                cutoutPercentage
                  ? (chart.outerRadius / 100) * cutoutPercentage
                  : 1,
                0,
              );
              chart.radiusLength =
                (chart.outerRadius - chart.innerRadius) /
                chart.getVisibleDatasetCount();
              chart.offsetX = offset.x * chart.outerRadius;
              chart.offsetY = offset.y * chart.outerRadius;

              meta.total = me.calculateTotal();

              me.outerRadius =
                chart.outerRadius -
                chart.radiusLength * me.getRingIndex(me.index);
              me.innerRadius = me.outerRadius - chart.radiusLength;

              helpers.each(meta.data, function (arc, index) {
                me.updateElement(arc, index, reset);
              });
            },

            updateElement: function (arc, index, reset) {
              var me = this;
              var chart = me.chart,
                chartArea = chart.chartArea,
                opts = chart.options,
                animationOpts = opts.animation,
                centerX = (chartArea.left + chartArea.right) / 2,
                centerY = (chartArea.top + chartArea.bottom) / 2,
                startAngle = opts.rotation, // non reset case handled later
                endAngle = opts.rotation, // non reset case handled later
                dataset = me.getDataset(),
                circumference =
                  reset && animationOpts.animateRotate
                    ? 0
                    : arc.hidden
                    ? 0
                    : me.calculateCircumference(dataset.data[index]) *
                      (opts.circumference / (2.0 * Math.PI)),
                innerRadius =
                  reset && animationOpts.animateScale ? 0 : me.innerRadius,
                outerRadius =
                  reset && animationOpts.animateScale ? 0 : me.outerRadius,
                valueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;

              helpers.extend(arc, {
                // Utility
                _datasetIndex: me.index,
                _index: index,

                // Desired view properties
                _model: {
                  x: centerX + chart.offsetX,
                  y: centerY + chart.offsetY,
                  startAngle: startAngle,
                  endAngle: endAngle,
                  circumference: circumference,
                  outerRadius: outerRadius,
                  innerRadius: innerRadius,
                  label: valueAtIndexOrDefault(
                    dataset.label,
                    index,
                    chart.data.labels[index],
                  ),
                },
              });

              var model = arc._model;
              // Resets the visual styles
              this.removeHoverStyle(arc);

              // Set correct angles if not resetting
              if (!reset || !animationOpts.animateRotate) {
                if (index === 0) {
                  model.startAngle = opts.rotation;
                } else {
                  model.startAngle = me.getMeta().data[
                    index - 1
                  ]._model.endAngle;
                }

                model.endAngle = model.startAngle + model.circumference;
              }

              arc.pivot();
            },

            removeHoverStyle: function (arc) {
              Chart.DatasetController.prototype.removeHoverStyle.call(
                this,
                arc,
                this.chart.options.elements.arc,
              );
            },

            calculateTotal: function () {
              var dataset = this.getDataset();
              var meta = this.getMeta();
              var total = 0;
              var value;

              helpers.each(meta.data, function (element, index) {
                value = dataset.data[index];
                if (!isNaN(value) && !element.hidden) {
                  total += Math.abs(value);
                }
              });

              /* if (total === 0) {
					total = NaN;
				}*/

              return total;
            },

            calculateCircumference: function (value) {
              var total = this.getMeta().total;
              if (total > 0 && !isNaN(value)) {
                return Math.PI * 2.0 * (value / total);
              }
              return 0;
            },

            // gets the max border or hover width to properly scale pie charts
            getMaxBorderWidth: function (elements) {
              var max = 0,
                index = this.index,
                length = elements.length,
                borderWidth,
                hoverWidth;

              for (var i = 0; i < length; i++) {
                borderWidth = elements[i]._model
                  ? elements[i]._model.borderWidth
                  : 0;
                hoverWidth = elements[i]._chart
                  ? elements[i]._chart.config.data.datasets[index]
                      .hoverBorderWidth
                  : 0;

                max = borderWidth > max ? borderWidth : max;
                max = hoverWidth > max ? hoverWidth : max;
              }
              return max;
            },
          },
        );
      };

      /***/
    },
    /* 958 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;

        Chart.defaults.line = {
          showLines: true,
          spanGaps: false,

          hover: {
            mode: 'label',
          },

          scales: {
            xAxes: [
              {
                type: 'category',
                id: 'x-axis-0',
              },
            ],
            yAxes: [
              {
                type: 'linear',
                id: 'y-axis-0',
              },
            ],
          },
        };

        function lineEnabled(dataset, options) {
          return helpers.getValueOrDefault(dataset.showLine, options.showLines);
        }

        Chart.controllers.line = Chart.DatasetController.extend({
          datasetElementType: Chart.elements.Line,

          dataElementType: Chart.elements.Point,

          addElementAndReset: function (index) {
            var me = this;
            var options = me.chart.options;
            var meta = me.getMeta();

            Chart.DatasetController.prototype.addElementAndReset.call(
              me,
              index,
            );

            // Make sure bezier control points are updated
            if (
              lineEnabled(me.getDataset(), options) &&
              meta.dataset._model.tension !== 0
            ) {
              me.updateBezierControlPoints();
            }
          },

          update: function (reset) {
            var me = this;
            var meta = me.getMeta();
            var line = meta.dataset;
            var points = meta.data || [];
            var options = me.chart.options;
            var lineElementOptions = options.elements.line;
            var scale = me.getScaleForId(meta.yAxisID);
            var i, ilen, custom;
            var dataset = me.getDataset();
            var showLine = lineEnabled(dataset, options);

            // Update Line
            if (showLine) {
              custom = line.custom || {};

              // Compatibility: If the properties are defined with only the old name, use those values
              if (
                dataset.tension !== undefined &&
                dataset.lineTension === undefined
              ) {
                dataset.lineTension = dataset.tension;
              }

              // Utility
              line._scale = scale;
              line._datasetIndex = me.index;
              // Data
              line._children = points;
              // Model
              line._model = {
                // Appearance
                // The default behavior of lines is to break at null values, according
                // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158
                // This option gives linse the ability to span gaps
                spanGaps: dataset.spanGaps
                  ? dataset.spanGaps
                  : options.spanGaps,
                tension: custom.tension
                  ? custom.tension
                  : helpers.getValueOrDefault(
                      dataset.lineTension,
                      lineElementOptions.tension,
                    ),
                backgroundColor: custom.backgroundColor
                  ? custom.backgroundColor
                  : dataset.backgroundColor ||
                    lineElementOptions.backgroundColor,
                borderWidth: custom.borderWidth
                  ? custom.borderWidth
                  : dataset.borderWidth || lineElementOptions.borderWidth,
                borderColor: custom.borderColor
                  ? custom.borderColor
                  : dataset.borderColor || lineElementOptions.borderColor,
                borderCapStyle: custom.borderCapStyle
                  ? custom.borderCapStyle
                  : dataset.borderCapStyle || lineElementOptions.borderCapStyle,
                borderDash: custom.borderDash
                  ? custom.borderDash
                  : dataset.borderDash || lineElementOptions.borderDash,
                borderDashOffset: custom.borderDashOffset
                  ? custom.borderDashOffset
                  : dataset.borderDashOffset ||
                    lineElementOptions.borderDashOffset,
                borderJoinStyle: custom.borderJoinStyle
                  ? custom.borderJoinStyle
                  : dataset.borderJoinStyle ||
                    lineElementOptions.borderJoinStyle,
                fill: custom.fill
                  ? custom.fill
                  : dataset.fill !== undefined
                  ? dataset.fill
                  : lineElementOptions.fill,
                steppedLine: custom.steppedLine
                  ? custom.steppedLine
                  : helpers.getValueOrDefault(
                      dataset.steppedLine,
                      lineElementOptions.stepped,
                    ),
                cubicInterpolationMode: custom.cubicInterpolationMode
                  ? custom.cubicInterpolationMode
                  : helpers.getValueOrDefault(
                      dataset.cubicInterpolationMode,
                      lineElementOptions.cubicInterpolationMode,
                    ),
                // Scale
                scaleTop: scale.top,
                scaleBottom: scale.bottom,
                scaleZero: scale.getBasePixel(),
              };

              line.pivot();
            }

            // Update Points
            for (i = 0, ilen = points.length; i < ilen; ++i) {
              me.updateElement(points[i], i, reset);
            }

            if (showLine && line._model.tension !== 0) {
              me.updateBezierControlPoints();
            }

            // Now pivot the point for animation
            for (i = 0, ilen = points.length; i < ilen; ++i) {
              points[i].pivot();
            }
          },

          getPointBackgroundColor: function (point, index) {
            var backgroundColor = this.chart.options.elements.point
              .backgroundColor;
            var dataset = this.getDataset();
            var custom = point.custom || {};

            if (custom.backgroundColor) {
              backgroundColor = custom.backgroundColor;
            } else if (dataset.pointBackgroundColor) {
              backgroundColor = helpers.getValueAtIndexOrDefault(
                dataset.pointBackgroundColor,
                index,
                backgroundColor,
              );
            } else if (dataset.backgroundColor) {
              backgroundColor = dataset.backgroundColor;
            }

            return backgroundColor;
          },

          getPointBorderColor: function (point, index) {
            var borderColor = this.chart.options.elements.point.borderColor;
            var dataset = this.getDataset();
            var custom = point.custom || {};

            if (custom.borderColor) {
              borderColor = custom.borderColor;
            } else if (dataset.pointBorderColor) {
              borderColor = helpers.getValueAtIndexOrDefault(
                dataset.pointBorderColor,
                index,
                borderColor,
              );
            } else if (dataset.borderColor) {
              borderColor = dataset.borderColor;
            }

            return borderColor;
          },

          getPointBorderWidth: function (point, index) {
            var borderWidth = this.chart.options.elements.point.borderWidth;
            var dataset = this.getDataset();
            var custom = point.custom || {};

            if (custom.borderWidth) {
              borderWidth = custom.borderWidth;
            } else if (dataset.pointBorderWidth) {
              borderWidth = helpers.getValueAtIndexOrDefault(
                dataset.pointBorderWidth,
                index,
                borderWidth,
              );
            } else if (dataset.borderWidth) {
              borderWidth = dataset.borderWidth;
            }

            return borderWidth;
          },

          updateElement: function (point, index, reset) {
            var me = this;
            var meta = me.getMeta();
            var custom = point.custom || {};
            var dataset = me.getDataset();
            var datasetIndex = me.index;
            var value = dataset.data[index];
            var yScale = me.getScaleForId(meta.yAxisID);
            var xScale = me.getScaleForId(meta.xAxisID);
            var pointOptions = me.chart.options.elements.point;
            var x, y;
            var labels = me.chart.data.labels || [];
            var includeOffset =
              labels.length === 1 ||
              dataset.data.length === 1 ||
              me.chart.isCombo;

            // Compatibility: If the properties are defined with only the old name, use those values
            if (
              dataset.radius !== undefined &&
              dataset.pointRadius === undefined
            ) {
              dataset.pointRadius = dataset.radius;
            }
            if (
              dataset.hitRadius !== undefined &&
              dataset.pointHitRadius === undefined
            ) {
              dataset.pointHitRadius = dataset.hitRadius;
            }

            x = xScale.getPixelForValue(
              typeof value === 'object' ? value : NaN,
              index,
              datasetIndex,
              includeOffset,
            );
            y = reset
              ? yScale.getBasePixel()
              : me.calculatePointY(value, index, datasetIndex);

            // Utility
            point._xScale = xScale;
            point._yScale = yScale;
            point._datasetIndex = datasetIndex;
            point._index = index;

            // Desired view properties
            point._model = {
              x: x,
              y: y,
              skip: custom.skip || isNaN(x) || isNaN(y),
              // Appearance
              radius:
                custom.radius ||
                helpers.getValueAtIndexOrDefault(
                  dataset.pointRadius,
                  index,
                  pointOptions.radius,
                ),
              pointStyle:
                custom.pointStyle ||
                helpers.getValueAtIndexOrDefault(
                  dataset.pointStyle,
                  index,
                  pointOptions.pointStyle,
                ),
              backgroundColor: me.getPointBackgroundColor(point, index),
              borderColor: me.getPointBorderColor(point, index),
              borderWidth: me.getPointBorderWidth(point, index),
              tension: meta.dataset._model ? meta.dataset._model.tension : 0,
              steppedLine: meta.dataset._model
                ? meta.dataset._model.steppedLine
                : false,
              // Tooltip
              hitRadius:
                custom.hitRadius ||
                helpers.getValueAtIndexOrDefault(
                  dataset.pointHitRadius,
                  index,
                  pointOptions.hitRadius,
                ),
            };
          },

          calculatePointY: function (value, index, datasetIndex) {
            var me = this;
            var chart = me.chart;
            var meta = me.getMeta();
            var yScale = me.getScaleForId(meta.yAxisID);
            var sumPos = 0;
            var sumNeg = 0;
            var i, ds, dsMeta;

            if (yScale.options.stacked) {
              for (i = 0; i < datasetIndex; i++) {
                ds = chart.data.datasets[i];
                dsMeta = chart.getDatasetMeta(i);
                if (
                  dsMeta.type === 'line' &&
                  dsMeta.yAxisID === yScale.id &&
                  chart.isDatasetVisible(i)
                ) {
                  var stackedRightValue = Number(
                    yScale.getRightValue(ds.data[index]),
                  );
                  if (stackedRightValue < 0) {
                    sumNeg += stackedRightValue || 0;
                  } else {
                    sumPos += stackedRightValue || 0;
                  }
                }
              }

              var rightValue = Number(yScale.getRightValue(value));
              if (rightValue < 0) {
                return yScale.getPixelForValue(sumNeg + rightValue);
              }
              return yScale.getPixelForValue(sumPos + rightValue);
            }

            return yScale.getPixelForValue(value);
          },

          updateBezierControlPoints: function () {
            var me = this;
            var meta = me.getMeta();
            var area = me.chart.chartArea;
            var points = meta.data || [];
            var i, ilen, point, model, controlPoints;

            // Only consider points that are drawn in case the spanGaps option is used
            if (meta.dataset._model.spanGaps) {
              points = points.filter(function (pt) {
                return !pt._model.skip;
              });
            }

            function capControlPoint(pt, min, max) {
              return Math.max(Math.min(pt, max), min);
            }

            if (meta.dataset._model.cubicInterpolationMode === 'monotone') {
              helpers.splineCurveMonotone(points);
            } else {
              for (i = 0, ilen = points.length; i < ilen; ++i) {
                point = points[i];
                model = point._model;
                controlPoints = helpers.splineCurve(
                  helpers.previousItem(points, i)._model,
                  model,
                  helpers.nextItem(points, i)._model,
                  meta.dataset._model.tension,
                );
                model.controlPointPreviousX = controlPoints.previous.x;
                model.controlPointPreviousY = controlPoints.previous.y;
                model.controlPointNextX = controlPoints.next.x;
                model.controlPointNextY = controlPoints.next.y;
              }
            }

            if (me.chart.options.elements.line.capBezierPoints) {
              for (i = 0, ilen = points.length; i < ilen; ++i) {
                model = points[i]._model;
                model.controlPointPreviousX = capControlPoint(
                  model.controlPointPreviousX,
                  area.left,
                  area.right,
                );
                model.controlPointPreviousY = capControlPoint(
                  model.controlPointPreviousY,
                  area.top,
                  area.bottom,
                );
                model.controlPointNextX = capControlPoint(
                  model.controlPointNextX,
                  area.left,
                  area.right,
                );
                model.controlPointNextY = capControlPoint(
                  model.controlPointNextY,
                  area.top,
                  area.bottom,
                );
              }
            }
          },

          draw: function (ease) {
            var me = this;
            var meta = me.getMeta();
            var points = meta.data || [];
            var easingDecimal = ease || 1;
            var i, ilen;

            // Transition Point Locations
            for (i = 0, ilen = points.length; i < ilen; ++i) {
              points[i].transition(easingDecimal);
            }

            // Transition and Draw the line
            if (lineEnabled(me.getDataset(), me.chart.options)) {
              meta.dataset.transition(easingDecimal).draw();
            }

            // Draw the points
            for (i = 0, ilen = points.length; i < ilen; ++i) {
              points[i].draw();
            }
          },

          setHoverStyle: function (point) {
            // Point
            var dataset = this.chart.data.datasets[point._datasetIndex];
            var index = point._index;
            var custom = point.custom || {};
            var model = point._model;

            model.radius =
              custom.hoverRadius ||
              helpers.getValueAtIndexOrDefault(
                dataset.pointHoverRadius,
                index,
                this.chart.options.elements.point.hoverRadius,
              );
            model.backgroundColor =
              custom.hoverBackgroundColor ||
              helpers.getValueAtIndexOrDefault(
                dataset.pointHoverBackgroundColor,
                index,
                helpers.getHoverColor(model.backgroundColor),
              );
            model.borderColor =
              custom.hoverBorderColor ||
              helpers.getValueAtIndexOrDefault(
                dataset.pointHoverBorderColor,
                index,
                helpers.getHoverColor(model.borderColor),
              );
            model.borderWidth =
              custom.hoverBorderWidth ||
              helpers.getValueAtIndexOrDefault(
                dataset.pointHoverBorderWidth,
                index,
                model.borderWidth,
              );
          },

          removeHoverStyle: function (point) {
            var me = this;
            var dataset = me.chart.data.datasets[point._datasetIndex];
            var index = point._index;
            var custom = point.custom || {};
            var model = point._model;

            // Compatibility: If the properties are defined with only the old name, use those values
            if (
              dataset.radius !== undefined &&
              dataset.pointRadius === undefined
            ) {
              dataset.pointRadius = dataset.radius;
            }

            model.radius =
              custom.radius ||
              helpers.getValueAtIndexOrDefault(
                dataset.pointRadius,
                index,
                me.chart.options.elements.point.radius,
              );
            model.backgroundColor = me.getPointBackgroundColor(point, index);
            model.borderColor = me.getPointBorderColor(point, index);
            model.borderWidth = me.getPointBorderWidth(point, index);
          },
        });
      };

      /***/
    },
    /* 959 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;

        Chart.defaults.polarArea = {
          scale: {
            type: 'radialLinear',
            lineArc: true, // so that lines are circular
            ticks: {
              beginAtZero: true,
            },
          },

          // Boolean - Whether to animate the rotation of the chart
          animation: {
            animateRotate: true,
            animateScale: true,
          },

          startAngle: -0.5 * Math.PI,
          aspectRatio: 1,
          legendCallback: function (chart) {
            var text = [];
            text.push('<ul class="' + chart.id + '-legend">');

            var data = chart.data;
            var datasets = data.datasets;
            var labels = data.labels;

            if (datasets.length) {
              for (var i = 0; i < datasets[0].data.length; ++i) {
                text.push(
                  '<li><span style="background-color:' +
                    datasets[0].backgroundColor[i] +
                    '">',
                );
                if (labels[i]) {
                  text.push(labels[i]);
                }
                text.push('</span></li>');
              }
            }

            text.push('</ul>');
            return text.join('');
          },
          legend: {
            labels: {
              generateLabels: function (chart) {
                var data = chart.data;
                if (data.labels.length && data.datasets.length) {
                  return data.labels.map(function (label, i) {
                    var meta = chart.getDatasetMeta(0);
                    var ds = data.datasets[0];
                    var arc = meta.data[i];
                    var custom = arc.custom || {};
                    var getValueAtIndexOrDefault =
                      helpers.getValueAtIndexOrDefault;
                    var arcOpts = chart.options.elements.arc;
                    var fill = custom.backgroundColor
                      ? custom.backgroundColor
                      : getValueAtIndexOrDefault(
                          ds.backgroundColor,
                          i,
                          arcOpts.backgroundColor,
                        );
                    var stroke = custom.borderColor
                      ? custom.borderColor
                      : getValueAtIndexOrDefault(
                          ds.borderColor,
                          i,
                          arcOpts.borderColor,
                        );
                    var bw = custom.borderWidth
                      ? custom.borderWidth
                      : getValueAtIndexOrDefault(
                          ds.borderWidth,
                          i,
                          arcOpts.borderWidth,
                        );

                    return {
                      text: label,
                      fillStyle: fill,
                      strokeStyle: stroke,
                      lineWidth: bw,
                      hidden: isNaN(ds.data[i]) || meta.data[i].hidden,

                      // Extra data used for toggling the correct item
                      index: i,
                    };
                  });
                }
                return [];
              },
            },

            onClick: function (e, legendItem) {
              var index = legendItem.index;
              var chart = this.chart;
              var i, ilen, meta;

              for (
                i = 0, ilen = (chart.data.datasets || []).length;
                i < ilen;
                ++i
              ) {
                meta = chart.getDatasetMeta(i);
                meta.data[index].hidden = !meta.data[index].hidden;
              }

              chart.update();
            },
          },

          // Need to override these to give a nice default
          tooltips: {
            callbacks: {
              title: function () {
                return '';
              },
              label: function (tooltipItem, data) {
                return (
                  data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel
                );
              },
            },
          },
        };

        Chart.controllers.polarArea = Chart.DatasetController.extend({
          dataElementType: Chart.elements.Arc,

          linkScales: helpers.noop,

          update: function (reset) {
            var me = this;
            var chart = me.chart;
            var chartArea = chart.chartArea;
            var meta = me.getMeta();
            var opts = chart.options;
            var arcOpts = opts.elements.arc;
            var minSize = Math.min(
              chartArea.right - chartArea.left,
              chartArea.bottom - chartArea.top,
            );
            chart.outerRadius = Math.max(
              (minSize - arcOpts.borderWidth / 2) / 2,
              0,
            );
            chart.innerRadius = Math.max(
              opts.cutoutPercentage
                ? (chart.outerRadius / 100) * opts.cutoutPercentage
                : 1,
              0,
            );
            chart.radiusLength =
              (chart.outerRadius - chart.innerRadius) /
              chart.getVisibleDatasetCount();

            me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;
            me.innerRadius = me.outerRadius - chart.radiusLength;

            meta.count = me.countVisibleElements();

            helpers.each(meta.data, function (arc, index) {
              me.updateElement(arc, index, reset);
            });
          },

          updateElement: function (arc, index, reset) {
            var me = this;
            var chart = me.chart;
            var dataset = me.getDataset();
            var opts = chart.options;
            var animationOpts = opts.animation;
            var scale = chart.scale;
            var getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;
            var labels = chart.data.labels;

            var circumference = me.calculateCircumference(dataset.data[index]);
            var centerX = scale.xCenter;
            var centerY = scale.yCenter;

            // If there is NaN data before us, we need to calculate the starting angle correctly.
            // We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data
            var visibleCount = 0;
            var meta = me.getMeta();
            for (var i = 0; i < index; ++i) {
              if (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {
                ++visibleCount;
              }
            }

            // var negHalfPI = -0.5 * Math.PI;
            var datasetStartAngle = opts.startAngle;
            var distance = arc.hidden
              ? 0
              : scale.getDistanceFromCenterForValue(dataset.data[index]);
            var startAngle = datasetStartAngle + circumference * visibleCount;
            var endAngle = startAngle + (arc.hidden ? 0 : circumference);

            var resetRadius = animationOpts.animateScale
              ? 0
              : scale.getDistanceFromCenterForValue(dataset.data[index]);

            helpers.extend(arc, {
              // Utility
              _datasetIndex: me.index,
              _index: index,
              _scale: scale,

              // Desired view properties
              _model: {
                x: centerX,
                y: centerY,
                innerRadius: 0,
                outerRadius: reset ? resetRadius : distance,
                startAngle:
                  reset && animationOpts.animateRotate
                    ? datasetStartAngle
                    : startAngle,
                endAngle:
                  reset && animationOpts.animateRotate
                    ? datasetStartAngle
                    : endAngle,
                label: getValueAtIndexOrDefault(labels, index, labels[index]),
              },
            });

            // Apply border and fill style
            me.removeHoverStyle(arc);

            arc.pivot();
          },

          removeHoverStyle: function (arc) {
            Chart.DatasetController.prototype.removeHoverStyle.call(
              this,
              arc,
              this.chart.options.elements.arc,
            );
          },

          countVisibleElements: function () {
            var dataset = this.getDataset();
            var meta = this.getMeta();
            var count = 0;

            helpers.each(meta.data, function (element, index) {
              if (!isNaN(dataset.data[index]) && !element.hidden) {
                count++;
              }
            });

            return count;
          },

          calculateCircumference: function (value) {
            var count = this.getMeta().count;
            if (count > 0 && !isNaN(value)) {
              return (2 * Math.PI) / count;
            }
            return 0;
          },
        });
      };

      /***/
    },
    /* 960 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var helpers = Chart.helpers;

        Chart.defaults.radar = {
          scale: {
            type: 'radialLinear',
          },
          elements: {
            line: {
              tension: 0, // no bezier in radar
            },
          },
        };

        Chart.controllers.radar = Chart.DatasetController.extend({
          datasetElementType: Chart.elements.Line,

          dataElementType: Chart.elements.Point,

          linkScales: helpers.noop,

          addElementAndReset: function (index) {
            Chart.DatasetController.prototype.addElementAndReset.call(
              this,
              index,
            );

            // Make sure bezier control points are updated
            this.updateBezierControlPoints();
          },

          update: function (reset) {
            var me = this;
            var meta = me.getMeta();
            var line = meta.dataset;
            var points = meta.data;
            var custom = line.custom || {};
            var dataset = me.getDataset();
            var lineElementOptions = me.chart.options.elements.line;
            var scale = me.chart.scale;

            // Compatibility: If the properties are defined with only the old name, use those values
            if (
              dataset.tension !== undefined &&
              dataset.lineTension === undefined
            ) {
              dataset.lineTension = dataset.tension;
            }

            helpers.extend(meta.dataset, {
              // Utility
              _datasetIndex: me.index,
              // Data
              _children: points,
              _loop: true,
              // Model
              _model: {
                // Appearance
                tension: custom.tension
                  ? custom.tension
                  : helpers.getValueOrDefault(
                      dataset.lineTension,
                      lineElementOptions.tension,
                    ),
                backgroundColor: custom.backgroundColor
                  ? custom.backgroundColor
                  : dataset.backgroundColor ||
                    lineElementOptions.backgroundColor,
                borderWidth: custom.borderWidth
                  ? custom.borderWidth
                  : dataset.borderWidth || lineElementOptions.borderWidth,
                borderColor: custom.borderColor
                  ? custom.borderColor
                  : dataset.borderColor || lineElementOptions.borderColor,
                fill: custom.fill
                  ? custom.fill
                  : dataset.fill !== undefined
                  ? dataset.fill
                  : lineElementOptions.fill,
                borderCapStyle: custom.borderCapStyle
                  ? custom.borderCapStyle
                  : dataset.borderCapStyle || lineElementOptions.borderCapStyle,
                borderDash: custom.borderDash
                  ? custom.borderDash
                  : dataset.borderDash || lineElementOptions.borderDash,
                borderDashOffset: custom.borderDashOffset
                  ? custom.borderDashOffset
                  : dataset.borderDashOffset ||
                    lineElementOptions.borderDashOffset,
                borderJoinStyle: custom.borderJoinStyle
                  ? custom.borderJoinStyle
                  : dataset.borderJoinStyle ||
                    lineElementOptions.borderJoinStyle,

                // Scale
                scaleTop: scale.top,
                scaleBottom: scale.bottom,
                scaleZero: scale.getBasePosition(),
              },
            });

            meta.dataset.pivot();

            // Update Points
            helpers.each(
              points,
              function (point, index) {
                me.updateElement(point, index, reset);
              },
              me,
            );

            // Update bezier control points
            me.updateBezierControlPoints();
          },
          updateElement: function (point, index, reset) {
            var me = this;
            var custom = point.custom || {};
            var dataset = me.getDataset();
            var scale = me.chart.scale;
            var pointElementOptions = me.chart.options.elements.point;
            var pointPosition = scale.getPointPositionForValue(
              index,
              dataset.data[index],
            );

            helpers.extend(point, {
              // Utility
              _datasetIndex: me.index,
              _index: index,
              _scale: scale,

              // Desired view properties
              _model: {
                x: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales
                y: reset ? scale.yCenter : pointPosition.y,

                // Appearance
                tension: custom.tension
                  ? custom.tension
                  : helpers.getValueOrDefault(
                      dataset.tension,
                      me.chart.options.elements.line.tension,
                    ),
                radius: custom.radius
                  ? custom.radius
                  : helpers.getValueAtIndexOrDefault(
                      dataset.pointRadius,
                      index,
                      pointElementOptions.radius,
                    ),
                backgroundColor: custom.backgroundColor
                  ? custom.backgroundColor
                  : helpers.getValueAtIndexOrDefault(
                      dataset.pointBackgroundColor,
                      index,
                      pointElementOptions.backgroundColor,
                    ),
                borderColor: custom.borderColor
                  ? custom.borderColor
                  : helpers.getValueAtIndexOrDefault(
                      dataset.pointBorderColor,
                      index,
                      pointElementOptions.borderColor,
                    ),
                borderWidth: custom.borderWidth
                  ? custom.borderWidth
                  : helpers.getValueAtIndexOrDefault(
                      dataset.pointBorderWidth,
                      index,
                      pointElementOptions.borderWidth,
                    ),
                pointStyle: custom.pointStyle
                  ? custom.pointStyle
                  : helpers.getValueAtIndexOrDefault(
                      dataset.pointStyle,
                      index,
                      pointElementOptions.pointStyle,
                    ),

                // Tooltip
                hitRadius: custom.hitRadius
                  ? custom.hitRadius
                  : helpers.getValueAtIndexOrDefault(
                      dataset.hitRadius,
                      index,
                      pointElementOptions.hitRadius,
                    ),
              },
            });

            point._model.skip = custom.skip
              ? custom.skip
              : isNaN(point._model.x) || isNaN(point._model.y);
          },
          updateBezierControlPoints: function () {
            var chartArea = this.chart.chartArea;
            var meta = this.getMeta();

            helpers.each(meta.data, function (point, index) {
              var model = point._model;
              var controlPoints = helpers.splineCurve(
                helpers.previousItem(meta.data, index, true)._model,
                model,
                helpers.nextItem(meta.data, index, true)._model,
                model.tension,
              );

              // Prevent the bezier going outside of the bounds of the graph
              model.controlPointPreviousX = Math.max(
                Math.min(controlPoints.previous.x, chartArea.right),
                chartArea.left,
              );
              model.controlPointPreviousY = Math.max(
                Math.min(controlPoints.previous.y, chartArea.bottom),
                chartArea.top,
              );

              model.controlPointNextX = Math.max(
                Math.min(controlPoints.next.x, chartArea.right),
                chartArea.left,
              );
              model.controlPointNextY = Math.max(
                Math.min(controlPoints.next.y, chartArea.bottom),
                chartArea.top,
              );

              // Now pivot the point for animation
              point.pivot();
            });
          },

          draw: function (ease) {
            var meta = this.getMeta();
            var easingDecimal = ease || 1;

            // Transition Point Locations
            helpers.each(meta.data, function (point) {
              point.transition(easingDecimal);
            });

            // Transition and Draw the line
            meta.dataset.transition(easingDecimal).draw();

            // Draw the points
            helpers.each(meta.data, function (point) {
              point.draw();
            });
          },

          setHoverStyle: function (point) {
            // Point
            var dataset = this.chart.data.datasets[point._datasetIndex];
            var custom = point.custom || {};
            var index = point._index;
            var model = point._model;

            model.radius = custom.hoverRadius
              ? custom.hoverRadius
              : helpers.getValueAtIndexOrDefault(
                  dataset.pointHoverRadius,
                  index,
                  this.chart.options.elements.point.hoverRadius,
                );
            model.backgroundColor = custom.hoverBackgroundColor
              ? custom.hoverBackgroundColor
              : helpers.getValueAtIndexOrDefault(
                  dataset.pointHoverBackgroundColor,
                  index,
                  helpers.getHoverColor(model.backgroundColor),
                );
            model.borderColor = custom.hoverBorderColor
              ? custom.hoverBorderColor
              : helpers.getValueAtIndexOrDefault(
                  dataset.pointHoverBorderColor,
                  index,
                  helpers.getHoverColor(model.borderColor),
                );
            model.borderWidth = custom.hoverBorderWidth
              ? custom.hoverBorderWidth
              : helpers.getValueAtIndexOrDefault(
                  dataset.pointHoverBorderWidth,
                  index,
                  model.borderWidth,
                );
          },

          removeHoverStyle: function (point) {
            var dataset = this.chart.data.datasets[point._datasetIndex];
            var custom = point.custom || {};
            var index = point._index;
            var model = point._model;
            var pointElementOptions = this.chart.options.elements.point;

            model.radius = custom.radius
              ? custom.radius
              : helpers.getValueAtIndexOrDefault(
                  dataset.radius,
                  index,
                  pointElementOptions.radius,
                );
            model.backgroundColor = custom.backgroundColor
              ? custom.backgroundColor
              : helpers.getValueAtIndexOrDefault(
                  dataset.pointBackgroundColor,
                  index,
                  pointElementOptions.backgroundColor,
                );
            model.borderColor = custom.borderColor
              ? custom.borderColor
              : helpers.getValueAtIndexOrDefault(
                  dataset.pointBorderColor,
                  index,
                  pointElementOptions.borderColor,
                );
            model.borderWidth = custom.borderWidth
              ? custom.borderWidth
              : helpers.getValueAtIndexOrDefault(
                  dataset.pointBorderWidth,
                  index,
                  pointElementOptions.borderWidth,
                );
          },
        });
      };

      /***/
    },
    /* 961 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        Chart.Bar = function (context, config) {
          config.type = 'bar';

          return new Chart(context, config);
        };
      };

      /***/
    },
    /* 962 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        Chart.Bubble = function (context, config) {
          config.type = 'bubble';
          return new Chart(context, config);
        };
      };

      /***/
    },
    /* 963 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        Chart.Doughnut = function (context, config) {
          config.type = 'doughnut';

          return new Chart(context, config);
        };
      };

      /***/
    },
    /* 964 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        Chart.Line = function (context, config) {
          config.type = 'line';

          return new Chart(context, config);
        };
      };

      /***/
    },
    /* 965 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        Chart.PolarArea = function (context, config) {
          config.type = 'polarArea';

          return new Chart(context, config);
        };
      };

      /***/
    },
    /* 966 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        Chart.Radar = function (context, config) {
          config.options = Chart.helpers.configMerge(
            { aspectRatio: 1 },
            config.options,
          );
          config.type = 'radar';

          return new Chart(context, config);
        };
      };

      /***/
    },
    /* 967 */
    /***/ function (module, exports) {
      'use strict';

      module.exports = function (Chart) {
        var defaultConfig = {
          hover: {
            mode: 'single',
          },

          scales: {
            xAxes: [
              {
                type: 'linear', // scatter should not use a category axis
                position: 'bottom',
                id: 'x-axis-1', // need an ID so datasets can reference the scale
              },
            ],
            yAxes: [
              {
                type: 'linear',
                position: 'left',
                id: 'y-axis-1',
              },
            ],
          },

          tooltips: {
            callbacks: {
              title: function () {
                // Title doesn't make sense for scatter since we format the data as a point
                return '';
              },
              label: function (tooltipItem) {
                return (
                  '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')'
                );
              },
            },
          },
        };

        // Register the default config for this type
        Chart.defaults.scatter = defaultConfig;

        // Scatter charts use line controllers
        Chart.controllers.scatter = Chart.controllers.line;

        Chart.Scatter = function (context, config) {
          config.type = 'scatter';
          return new Chart(context, config);
        };
      };

      /***/
    },
    /* 968 */
    /***/ function (module, exports, __webpack_require__) {
      var vars = __webpack_require__(818);

      module.exports = vars.createClass('Bubble', ['getPointsAtEvent']);

      /***/
    },
    /* 969 */
    /***/ function (module, exports, __webpack_require__) {
      var vars = __webpack_require__(818);

      module.exports = vars.createClass('Doughnut', ['getSegmentsAtEvent']);

      /***/
    },
    /* 970 */
    /***/ function (module, exports, __webpack_require__) {
      var vars = __webpack_require__(818);

      module.exports = vars.createClass('Line', ['getPointsAtEvent']);

      /***/
    },
    /* 971 */
    /***/ function (module, exports, __webpack_require__) {
      var vars = __webpack_require__(818);

      module.exports = vars.createClass('Pie', ['getSegmentsAtEvent']);

      /***/
    },
    /* 972 */
    /***/ function (module, exports, __webpack_require__) {
      var vars = __webpack_require__(818);

      module.exports = vars.createClass('PolarArea', ['getSegmentsAtEvent']);

      /***/
    },
    /* 973 */
    /***/ function (module, exports, __webpack_require__) {
      var vars = __webpack_require__(818);

      module.exports = vars.createClass('Radar', ['getPointsAtEvent']);

      /***/
    },
    /* 974 */
    /***/ function (module, exports, __webpack_require__) {
      var vars = __webpack_require__(818);

      module.exports = vars.createClass('Scatter', ['getPointsAtEvent']);

      /***/
    },
    /******/
  ],
);
